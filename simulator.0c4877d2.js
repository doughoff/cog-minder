// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"json/bots.json":[function(require,module,exports) {
module.exports = {
  "Drone": {
    "Name": "Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "7",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "18",
    "Energy Generation": "10",
    "Heat Dissipation": "12",
    "Core Integrity": "10",
    "Core Exposure": "171",
    "Core Exposure %": "50",
    "Salvage Potential": "5~15",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Hover Unit", "Hover Unit", "Visual Processing Unit"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, 2x Hover Unit, Visual Processing Unit"
  },
  "Target Drone": {
    "Name": "Target Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "9",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "16",
    "Energy Generation": "10",
    "Heat Dissipation": "12",
    "Core Integrity": "12",
    "Core Exposure": "175",
    "Core Exposure %": "50",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Airjet", "Reaction Control System"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, Airjet, Reaction Control System"
  },
  "Mini Drone": {
    "Name": "Mini Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "6",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "40",
    "Sight Range": "20",
    "Energy Generation": "10",
    "Heat Dissipation": "12",
    "Core Integrity": "8",
    "Core Exposure": "91",
    "Core Exposure %": "50",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Flight Unit", "Adv. Visual Processing Unit"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, Flight Unit, Adv. Visual Processing Unit"
  },
  "Mapping Drone": {
    "Name": "Mapping Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "14",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "40",
    "Sight Range": "16",
    "Energy Generation": "10",
    "Heat Dissipation": "12",
    "Core Integrity": "8",
    "Core Exposure": "106",
    "Core Exposure %": "50",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Flight Unit", "Mak. Terrain Scanner", "Mak. Terrain Scan Processor"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, Flight Unit, Mak. Terrain Scanner, Mak. Terrain Scan Processor"
  },
  "Sensor Drone": {
    "Name": "Sensor Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "24",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "55",
    "Sight Range": "16",
    "Energy Generation": "10",
    "Heat Dissipation": "12",
    "Core Integrity": "20",
    "Core Exposure": "41",
    "Core Exposure %": "29",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Mak. Flight Unit", "Mak. Sensor Array", "Exp. Signal Interpreter"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, Mak. Flight Unit, Mak. Sensor Array, Exp. Signal Interpreter"
  },
  "Hacking Drone": {
    "Name": "Hacking Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "28",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "55",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "13",
    "Core Integrity": "40",
    "Core Exposure": "50",
    "Core Exposure %": "39",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["Mak. Power Source", "Mak. Flight Unit", "Mak. Hacking Suite", "Mak. Hacking Suite", "Mak. System Shield"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Mak. Power Source, Mak. Flight Unit, 2x Mak. Hacking Suite, Mak. System Shield"
  },
  "Minesniffer Drone": {
    "Name": "Minesniffer Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "33",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "12",
    "Core Integrity": "50",
    "Core Exposure": "102",
    "Core Exposure %": "40",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Armament": ["Adv. Datajack"],
    "Components": ["Mak. Power Source", "Com. Wheel", "Com. Wheel", "Mak. Trap Scanner", "Imp. Trap Extractor"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Adv. Datajack",
    "Components String": "Mak. Power Source, 2x Com. Wheel, Mak. Trap Scanner, Imp. Trap Extractor"
  },
  "Decoy Drone": {
    "Name": "Decoy Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "34",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "20",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "12",
    "Core Integrity": "30",
    "Core Exposure": "60",
    "Core Exposure %": "40",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["Mak. Power Source", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Mak. Power Source, 4x Mak. Microthruster"
  },
  "Splice Drone": {
    "Name": "Splice Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "44",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "20",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "12",
    "Core Integrity": "30",
    "Core Exposure": "70",
    "Core Exposure %": "40",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Armament": ["Splice Injector"],
    "Components": ["Mak. Power Source", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Splice Injector",
    "Components String": "Mak. Power Source, 5x Mak. Microthruster"
  },
  "Advanced Drone": {
    "Name": "Advanced Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "49",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "42",
    "Sight Range": "22",
    "Energy Generation": "31",
    "Heat Dissipation": "31",
    "Core Integrity": "50",
    "Core Exposure": "187",
    "Core Exposure %": "39",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Fission Core", "Lgt. Fission Core", "Field Propulsion Drive", "Field Propulsion Drive", "Adv. Heat Sink", "Enh. Optical Array", "Imp. Phase Shifter"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "2x Lgt. Fission Core, 2x Field Propulsion Drive, Adv. Heat Sink, Enh. Optical Array, Imp. Phase Shifter"
  },
  "Stealth Drone": {
    "Name": "Stealth Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "69",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "37",
    "Sight Range": "23",
    "Energy Generation": "43",
    "Heat Dissipation": "38",
    "Core Integrity": "50",
    "Core Exposure": "180",
    "Core Exposure %": "39",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Neutrino Core", "Lgt. Neutrino Core", "Cld. Field Propulsion Drive", "Cld. Field Propulsion Drive", "Exp. Heat Sink", "Exp. Optical Array", "Imp. Cloaking Device", "Imp. Phase Shifter"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "2x Lgt. Neutrino Core, 2x Cld. Field Propulsion Drive, Exp. Heat Sink, Exp. Optical Array, Imp. Cloaking Device, Imp. Phase Shifter"
  },
  "Trailblazer": {
    "Name": "Trailblazer",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "17",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "3",
    "Sight Range": "23",
    "Energy Generation": "50",
    "Heat Dissipation": "5",
    "Core Integrity": "8",
    "Core Exposure": "6",
    "Core Exposure %": "50",
    "Salvage Potential": "5~10",
    "Immunities": ["Hacking"],
    "Components": ["T-thruster", "Exp. Optical Array"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "T-thruster, Exp. Optical Array"
  },
  "Thief Drone": {
    "Name": "Thief Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "3",
    "Rating": "77",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "20",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "20",
    "Core Integrity": "40",
    "Core Exposure": "146",
    "Core Exposure %": "39",
    "Salvage Potential": "20~30",
    "Immunities": ["Hacking"],
    "Armament": ["Mni. Tearclaws"],
    "Components": ["Mak. Power Source", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Microthruster", "Mak. Cloaking Device"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Mni. Tearclaws",
    "Components String": "Mak. Power Source, 9x Mak. Microthruster, Mak. Cloaking Device"
  },
  "Army Drone": {
    "Name": "Army Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "3",
    "Rating": "24",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "48",
    "Core Integrity": "30",
    "Core Exposure": "352",
    "Core Exposure %": "50",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"],
    "Armament": [[{
      "name": "Grenade Launcher"
    }, {
      "name": "Rocket Launcher"
    }, {
      "name": "EM Shotgun"
    }, {
      "name": "Riot Gun"
    }, {
      "name": "Lightning Gun"
    }, {
      "name": "Spread Laser"
    }, {
      "name": "Med. Laser"
    }, {
      "name": "Mak. Laser"
    }, {
      "name": "Gatling Laser"
    }, {
      "name": "Hvy. Ion Cannon"
    }, {
      "name": "Battle Rifle"
    }, {
      "name": "Barrage Gun"
    }, {
      "name": "Autogun"
    }, {
      "name": "Hpw. Shotgun"
    }, {
      "name": "Slug Cannon"
    }]],
    "Components": ["Mak. Power Source", "Wheel", "Wheel", "Wheel", "Wheel", "Imp. Heat Sink", "Imp. Heat Sink", [{
      "name": "Med. Armor Plating"
    }, {
      "name": "Reactive Plating"
    }, {
      "name": "Reflective Plating"
    }, {
      "name": "Insulated Plating"
    }, {
      "name": "Imp. Targeting Computer"
    }, {
      "name": "Adv. Targeting Computer"
    }, {
      "name": "Target Analyzer"
    }, {
      "name": "Core Analyzer"
    }, {
      "name": "Armor Integrity Analyzer"
    }, {
      "name": "Weapon Cycler"
    }, {
      "name": "Weapon Shielding"
    }]],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Grenade Launcher OR Rocket Launcher OR EM Shotgun OR Riot Gun OR Lightning Gun OR Spread Laser OR Med. Laser OR Mak. Laser OR Gatling Laser OR Hvy. Ion Cannon OR Battle Rifle OR Barrage Gun OR Autogun OR Hpw. Shotgun OR Slug Cannon",
    "Components String": "Mak. Power Source, 4x Wheel, 2x Imp. Heat Sink, Med. Armor Plating OR Reactive Plating OR Reflective Plating OR Insulated Plating OR Imp. Targeting Computer OR Adv. Targeting Computer OR Target Analyzer OR Core Analyzer OR Armor Integrity Analyzer OR Weapon Cycler OR Weapon Shielding"
  },
  "Swarm Drone": {
    "Name": "Swarm Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "3",
    "Rating": "37",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "22",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "39",
    "Core Integrity": "20",
    "Core Exposure": "66",
    "Core Exposure %": "40",
    "Salvage Potential": "20~30",
    "Immunities": ["Hacking"],
    "Armament": ["Com. Gauss Rifle"],
    "Components": ["Mic. Nuclear Core", "Mni. Nuclear Pulse Thruster", "Mni. Nuclear Pulse Thruster", "Adv. Heat Sink", "Adv. Targeting Computer", "Adv. Targeting Computer"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Com. Gauss Rifle",
    "Components String": "Mic. Nuclear Core, 2x Mni. Nuclear Pulse Thruster, Adv. Heat Sink, 2x Adv. Targeting Computer"
  },
  "Combat Drone": {
    "Name": "Combat Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "3",
    "Rating": "66",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "34",
    "Sight Range": "22",
    "Energy Generation": "42",
    "Heat Dissipation": "39",
    "Core Integrity": "50",
    "Core Exposure": "160",
    "Core Exposure %": "39",
    "Salvage Potential": "20~30",
    "Immunities": ["Hacking"],
    "Armament": ["Com. Coil Gun"],
    "Components": ["Mic. Neutrino Core", "Mic. Neutrino Core", "Nuclear Pulse Array", "Imp. VTOL Module", "Adv. Heat Sink", "Enh. Optical Array", "Imp. Phase Shifter"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Com. Coil Gun",
    "Components String": "2x Mic. Neutrino Core, Nuclear Pulse Array, Imp. VTOL Module, Adv. Heat Sink, Enh. Optical Array, Imp. Phase Shifter"
  },
  "Assault Drone": {
    "Name": "Assault Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "4",
    "Rating": "74",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "39",
    "Sight Range": "22",
    "Energy Generation": "42",
    "Heat Dissipation": "46",
    "Core Integrity": "50",
    "Core Exposure": "109",
    "Core Exposure %": "29",
    "Salvage Potential": "30~40",
    "Immunities": ["Hacking"],
    "Armament": ["Com. Railgun"],
    "Components": ["Mic. Neutrino Core", "Mic. Neutrino Core", "Nuclear Pulse Array", "Field Propulsion Drive", "Exp. Heat Sink", "Enh. Optical Array", "Adv. Phase Shifter"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Armament String": "Com. Railgun",
    "Components String": "2x Mic. Neutrino Core, Nuclear Pulse Array, Field Propulsion Drive, Exp. Heat Sink, Enh. Optical Array, Adv. Phase Shifter"
  },
  "Bomb Drone": {
    "Name": "Bomb Drone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "4",
    "Rating": "27",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "20",
    "Sight Range": "16",
    "Energy Generation": "10",
    "Heat Dissipation": "20",
    "Core Integrity": "75",
    "Core Exposure": "110",
    "Core Exposure %": "50",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"],
    "Armament": ["Detonator"],
    "Components": ["Mak. Microthruster"],
    "Resistances": {
      "Explosive": "75",
      "Electromagnetic": "-100"
    },
    "Armament String": "Detonator",
    "Components String": "Mak. Microthruster"
  },
  "Wardrone": {
    "Name": "Wardrone",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "5",
    "Rating": "172",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Movement": "Flying",
    "Speed": "26",
    "Sight Range": "16",
    "Energy Generation": "45",
    "Heat Dissipation": "68",
    "Core Integrity": "150",
    "Core Exposure": "160",
    "Core Exposure %": "25",
    "Salvage Potential": "90~120",
    "Immunities": ["Coring", "Hacking", "Meltdown"],
    "Armament": ["Nanosword", "Nanosword", "Nanosword", "Nanosword"],
    "Components": ["Quantum Reactor", "Cld. Impulse Thruster", "Cld. Impulse Thruster", "Cld. Impulse Thruster", "Cld. Impulse Thruster", "Adv. Gravity Neutralizer", "Exp. Cooling System", "Centrium Medium Armor Plating", "Exp. Melee Analysis Suite", "Exp. Melee Analysis Suite", "Femtoactuators", "Exp. Actuator Array"],
    "Armament String": "4x Nanosword",
    "Components String": "Quantum Reactor, 4x Cld. Impulse Thruster, Adv. Gravity Neutralizer, Exp. Cooling System, Centrium Medium Armor Plating, 2x Exp. Melee Analysis Suite, Femtoactuators, Exp. Actuator Array"
  },
  "DAS Turret": {
    "Name": "DAS Turret",
    "Class": "Turret",
    "Tier": "7",
    "Threat": "4",
    "Rating": "36",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "1",
    "Movement": "Core",
    "Speed": "500",
    "Sight Range": "22",
    "Energy Generation": "10",
    "Heat Dissipation": "30",
    "Core Integrity": "100",
    "Core Exposure": "94",
    "Core Exposure %": "29",
    "Salvage Potential": "40~50",
    "Immunities": ["Hacking"],
    "Armament": ["DAS Cannon"],
    "Resistances": {
      "Kinetic": "25"
    },
    "Armament String": "DAS Cannon"
  },
  "K-01 Serf": {
    "Name": "K-01 Serf",
    "Class": "Worker",
    "Tier": "1",
    "Threat": "1",
    "Rating": "6",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "10",
    "Core Exposure": "168",
    "Core Exposure %": "50",
    "Salvage Potential": "10~30",
    "Fabrication Count": "1",
    "Fabrication Time": "81/40/27",
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", [{
      "name": "Sml. Matter Pod"
    }, {
      "name": "Med. Matter Pod"
    }]],
    "Analysis": "K-class workers perform menial tasks such as clearing debris to facilitate work by other robots. Their built-in compact recycling unit can break down almost any form of debris into reusable matter. As K-01 Serfs are extremely cheap to produce and perform no vital function, despite their size they are among the weakest robot designs with the most exposed core.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Lgt. Ion Engine, 2x Wheel, Sml. Matter Pod OR Med. Matter Pod"
  },
  "U-05 Engineer": {
    "Name": "U-05 Engineer",
    "Class": "Builder",
    "Tier": "1",
    "Threat": "1",
    "Rating": "10",
    "Value": "5",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "10",
    "Core Exposure": "189",
    "Core Exposure %": "39",
    "Salvage Potential": "10~30",
    "Armament": ["Welding Torch"],
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Terrain Scanner", "Terrain Scan Processor", "Structural Scanner"],
    "Analysis": "U-class builders lay floors, assemble new machines, and reinforce and analyze the structural integrity of walls. They travel alone, but all those within a certain vicinity will work together to complete a task. ",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Welding Torch",
    "Components String": "Lgt. Ion Engine, 2x Wheel, Terrain Scanner, Terrain Scan Processor, Structural Scanner"
  },
  "T-07 Excavator": {
    "Name": "T-07 Excavator",
    "Class": "Tunneler",
    "Tier": "1",
    "Threat": "1",
    "Rating": "10",
    "Value": "7",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "10",
    "Core Exposure": "193",
    "Core Exposure %": "39",
    "Salvage Potential": "10~30",
    "Fabrication Count": "1",
    "Fabrication Time": "81/40/27",
    "Armament": ["Mining Laser"],
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Imp. Terrain Scanner", "Seismic Detector"],
    "Analysis": "T-class tunnelers analyze subsurface integrity and open new areas for expansion.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Mining Laser",
    "Components String": "Lgt. Ion Engine, 2x Wheel, Imp. Terrain Scanner, Seismic Detector"
  },
  "A-02 Transporter": {
    "Name": "A-02 Transporter",
    "Class": "Hauler",
    "Tier": "1",
    "Threat": "1",
    "Rating": "10",
    "Value": "2",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "15",
    "Core Exposure": "143",
    "Core Exposure %": "29",
    "Salvage Potential": "40~60",
    "Fabrication Count": "1",
    "Fabrication Time": "81/40/27",
    "Components": ["Ion Engine", "Lgt. Treads", "Lgt. Treads", "Weight Redist. System", "Transport Network Coupler", "Med. Storage Unit"],
    "Analysis": "A-series haulers transport matter and parts vital to construction and manufacturing. To minimize losses during derelict incursions, like most other maintenance robots they are of relatively sturdy construction, but remain somewhat susceptible to electromagnetic damage as such weaponry is not prevalent enough to warrant specialized defenses.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Ion Engine, 2x Lgt. Treads, Weight Redist. System, Transport Network Coupler, Med. Storage Unit"
  },
  "A-15 Conveyor": {
    "Name": "A-15 Conveyor",
    "Class": "Hauler",
    "Tier": "5",
    "Threat": "1",
    "Rating": "23",
    "Value": "15",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ9X9",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "14",
    "Energy Generation": "12",
    "Heat Dissipation": "10",
    "Core Integrity": "40",
    "Core Exposure": "143",
    "Core Exposure %": "29",
    "Salvage Potential": "80~120",
    "Fabrication Count": "1",
    "Fabrication Time": "152/76/50",
    "Components": ["Imp. Ion Engine", "Med. Treads", "Med. Treads", "Adv. Weight Redist. System", "Transport Network Coupler", "Lrg. Storage Unit"],
    "Analysis": "A larger version of the A-02, with 67% greater storage capacity and advanced weight redistribution technology.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Imp. Ion Engine, 2x Med. Treads, Adv. Weight Redist. System, Transport Network Coupler, Lrg. Storage Unit"
  },
  "A-27 Freighter": {
    "Name": "A-27 Freighter",
    "Class": "Hauler",
    "Tier": "7",
    "Threat": "1",
    "Rating": "93",
    "Value": "27",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ9X9",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "14",
    "Energy Generation": "29",
    "Heat Dissipation": "39",
    "Core Integrity": "100",
    "Core Exposure": "544",
    "Core Exposure %": "39",
    "Salvage Potential": "90~150",
    "Fabrication Count": "1",
    "Fabrication Time": "187/93/62",
    "Armament": ["PD Laser"],
    "Components": ["Deuterium Engine", "Imp. Heavy Treads", "Imp. Heavy Treads", "Gravity Neutralizer", "Transport Network Coupler", "Com. Battery", "Adv. Heat Sink", "Coolant Injector", "Cargo Storage Unit"],
    "Analysis": "A-27 Freighters are only dispatched to carry the most important of payloads, and as such are equipped with a repurposed laser-based missile defense system to ward off smaller derelicts. Although prone to overheating if engaged in prolonged solo combat, their defenses are augmented by powerful escorts to ensure they arrive at their destination.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "PD Laser",
    "Components String": "Deuterium Engine, 2x Imp. Heavy Treads, Gravity Neutralizer, Transport Network Coupler, Com. Battery, Adv. Heat Sink, Coolant Injector, Cargo Storage Unit"
  },
  "R-06 Scavenger": {
    "Name": "R-06 Scavenger",
    "Class": "Recycler",
    "Tier": "1",
    "Threat": "1",
    "Rating": "8",
    "Value": "6",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "15",
    "Core Exposure": "116",
    "Core Exposure %": "39",
    "Salvage Potential": "50~100",
    "Fabrication Count": "1",
    "Fabrication Time": "81/40/27",
    "Components": ["Lgt. Ion Engine", "Com. Wheel", "Com. Wheel", "Tractor Beam", "Sml. Storage Unit"],
    "Analysis": "R-series recyclers collect used, damaged, or unregistered components for recycling and repurposing. To minimize losses during derelict incursions, like most other maintenance robots they are of relatively sturdy construction, but remain somewhat susceptible to electromagnetic damage as such weaponry is not prevalent enough to warrant specialized defenses.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Lgt. Ion Engine, 2x Com. Wheel, Tractor Beam, Sml. Storage Unit"
  },
  "R-10 Processor": {
    "Name": "R-10 Processor",
    "Class": "Recycler",
    "Tier": "5",
    "Threat": "2",
    "Rating": "19",
    "Value": "10",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ9X9",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "14",
    "Energy Generation": "12",
    "Heat Dissipation": "15",
    "Core Integrity": "40",
    "Core Exposure": "166",
    "Core Exposure %": "39",
    "Salvage Potential": "100~160",
    "Fabrication Count": "1",
    "Fabrication Time": "152/76/50",
    "Components": ["Imp. Ion Engine", "Com. Wheel", "Com. Wheel", "Com. Wheel", "Com. Wheel", "Hpw. Tractor Beam", "Med. Storage Unit", "Field Recycling Unit"],
    "Analysis": "A larger version of the R-06, with twice the storage capacity as well as the ability to begin the recycling process while en route to the recycling unit.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Imp. Ion Engine, 4x Com. Wheel, Hpw. Tractor Beam, Med. Storage Unit, Field Recycling Unit"
  },
  "C-30 ARC": {
    "Name": "C-30 ARC",
    "Class": "Carrier",
    "Tier": "2",
    "Threat": "3",
    "Rating": "27",
    "Value": "30",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ9X9",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "90",
    "Sight Range": "14",
    "Energy Generation": "12",
    "Heat Dissipation": "10",
    "Core Integrity": "80",
    "Core Exposure": "139",
    "Core Exposure %": "29",
    "Salvage Potential": "80~120",
    "Components": ["Imp. Ion Engine", "Arm. Wheel", "Arm. Wheel", "Arm. Wheel", "Arm. Wheel", "Lrg. Storage Unit"],
    "Analysis": "C-class Armored Robot Carriers are disposable transports designed to rapidly deploy an assault force to a flash point. ARCs are hardened against kinetic attacks that might otherwise penetrate the shell and damage one or more of the robots compacted within.",
    "Resistances": {
      "Kinetic": "50",
      "Electromagnetic": "-25",
      "Impact": "25",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Components String": "Imp. Ion Engine, 4x Arm. Wheel, Lrg. Storage Unit"
  },
  "M-14 Sweeper": {
    "Name": "M-14 Sweeper",
    "Class": "Minesweeper",
    "Tier": "3",
    "Threat": "1",
    "Rating": "15",
    "Value": "14",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "20",
    "Core Integrity": "30",
    "Core Exposure": "67",
    "Core Exposure %": "24",
    "Salvage Potential": "20~40",
    "Fabrication Count": "1",
    "Fabrication Time": "116/58/38",
    "Armament": ["Datajack"],
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Trap Scanner", "Trap Extractor"],
    "Analysis": "Minesweepers are a new class derived from the mechanic, though built around a more secure core than normally found among non-combat robots, for added protection while carrying out their primary duty. Sweeper deployment only recently became necessary as a result of increasing derelict use of traps in the caves to impede patrol efforts.",
    "Resistances": {
      "Explosive": "50"
    },
    "Armament String": "Datajack",
    "Components String": "Lgt. Ion Engine, 2x Wheel, Trap Scanner, Trap Extractor"
  },
  "M-22 Extractor": {
    "Name": "M-22 Extractor",
    "Class": "Minesweeper",
    "Tier": "5",
    "Threat": "1",
    "Rating": "23",
    "Value": "22",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "15",
    "Heat Dissipation": "20",
    "Core Integrity": "40",
    "Core Exposure": "67",
    "Core Exposure %": "24",
    "Salvage Potential": "20~40",
    "Fabrication Count": "1",
    "Fabrication Time": "152/76/50",
    "Armament": ["Imp. Datajack"],
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Imp. Trap Scanner", "Imp. Trap Extractor"],
    "Analysis": "M-22 Extractors are outfitted with better datajacking and extraction technology than their predecessors, and are currently assigned to mid-level cave networks.",
    "Resistances": {
      "Explosive": "50"
    },
    "Armament String": "Imp. Datajack",
    "Components String": "Lgt. Ion Engine, 2x Wheel, Imp. Trap Scanner, Imp. Trap Extractor"
  },
  "M-30 Cleanser": {
    "Name": "M-30 Cleanser",
    "Class": "Minesweeper",
    "Tier": "7",
    "Threat": "1",
    "Rating": "33",
    "Value": "30",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "15",
    "Heat Dissipation": "20",
    "Core Integrity": "50",
    "Core Exposure": "67",
    "Core Exposure %": "24",
    "Salvage Potential": "20~40",
    "Fabrication Count": "1",
    "Fabrication Time": "187/93/62",
    "Armament": ["Adv. Datajack"],
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Adv. Trap Scanner", "Adv. Trap Extractor"],
    "Analysis": "M-30 Cleansers are the most effective minesweeper variant, utilizing the latest in datajacking and extraction technology.",
    "Resistances": {
      "Explosive": "50"
    },
    "Armament String": "Adv. Datajack",
    "Components String": "Lgt. Ion Engine, 2x Wheel, Adv. Trap Scanner, Adv. Trap Extractor"
  },
  "M-13 Machinist": {
    "Name": "M-13 Machinist",
    "Class": "Mechanic",
    "Tier": "1",
    "Threat": "1",
    "Rating": "14",
    "Value": "13",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "15",
    "Heat Dissipation": "20",
    "Core Integrity": "15",
    "Core Exposure": "117",
    "Core Exposure %": "39",
    "Salvage Potential": "20~40",
    "Fabrication Count": "1",
    "Fabrication Time": "81/40/27",
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Machine Analyzer", "Recalibrator"],
    "Analysis": "M-series mechanics are valued in dangerous areas for their ability to rebuild components, repair simple core integrity, and restore missing functionality by attaching temporary backup components. Despite their well-rounded protective armor, M-13 Machinists in particular are less often used as front line units, instead operating from a designated repair station.",
    "Components String": "Lgt. Ion Engine, 2x Wheel, Machine Analyzer, Recalibrator"
  },
  "M-28 Smith": {
    "Name": "M-28 Smith",
    "Class": "Mechanic",
    "Tier": "3",
    "Threat": "2",
    "Rating": "23",
    "Value": "28",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "19",
    "Heat Dissipation": "20",
    "Core Integrity": "30",
    "Core Exposure": "117",
    "Core Exposure %": "39",
    "Salvage Potential": "40~60",
    "Fabrication Count": "1",
    "Fabrication Time": "116/58/38",
    "Components": ["Lgt. Deuterium Engine", "Wheel", "Wheel", "Machine Analyzer", "Imp. Recalibrator"],
    "Analysis": "M-series mechanics are valued in dangerous areas for their ability to rebuild components, repair simple core integrity, and restore missing functionality by attaching temporary backup components. M-28 Smiths are sometimes dispatched to support an assault force, or are otherwise assigned to a designated repair station.",
    "Components String": "Lgt. Deuterium Engine, 2x Wheel, Machine Analyzer, Imp. Recalibrator"
  },
  "M-36 Artificer": {
    "Name": "M-36 Artificer",
    "Class": "Mechanic",
    "Tier": "7",
    "Threat": "3",
    "Rating": "35",
    "Value": "36",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "23",
    "Heat Dissipation": "20",
    "Core Integrity": "50",
    "Core Exposure": "117",
    "Core Exposure %": "39",
    "Salvage Potential": "60~80",
    "Fabrication Count": "1",
    "Fabrication Time": "187/93/62",
    "Components": ["Lgt. Angular Momentum Engine", "Wheel", "Wheel", "Machine Analyzer", "Adv. Recalibrator"],
    "Analysis": "M-series mechanics are valued in dangerous areas for their ability to rebuild components, repair simple core integrity, and restore missing functionality by attaching temporary backup components. M-36 Artificers are sometimes dispatched to support an assault force, or are otherwise assigned to a designated repair station.",
    "Components String": "Lgt. Angular Momentum Engine, 2x Wheel, Machine Analyzer, Adv. Recalibrator"
  },
  "O-16 Technician": {
    "Name": "O-16 Technician",
    "Class": "Operator",
    "Tier": "1",
    "Threat": "1",
    "Rating": "10",
    "Value": "16",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Spot %": "50",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "15",
    "Core Integrity": "15",
    "Core Exposure": "128",
    "Core Exposure %": "40",
    "Salvage Potential": "10~20",
    "Fabrication Count": "1",
    "Fabrication Time": "81/40/27",
    "Armament": ["Datajack"],
    "Components": ["Lgt. Ion Engine", "Hover Unit", "Hover Unit", "Hacking Suite"],
    "Analysis": "O-series operators manage local robot activity and machine processes via dedicated terminals. They are also capable of hacking and repurposing errant Derelicts, but faced with an armed threat will instead call for reinforcements, lock their terminal to protect it, and attempt to escape before their unique data core can be poached by hostiles. O-16 Technicians are not built for combat, thus their sensitive systems are especially susceptible to electromagnetic damage.",
    "Resistances": {
      "Electromagnetic": "-50",
      "Slashing": "-25"
    },
    "Armament String": "Datajack",
    "Components String": "Lgt. Ion Engine, 2x Hover Unit, Hacking Suite"
  },
  "O-24 Administrator": {
    "Name": "O-24 Administrator",
    "Class": "Operator",
    "Tier": "3",
    "Threat": "2",
    "Rating": "26",
    "Value": "24",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Spot %": "50",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "14",
    "Energy Generation": "14",
    "Heat Dissipation": "15",
    "Core Integrity": "30",
    "Core Exposure": "139",
    "Core Exposure %": "39",
    "Salvage Potential": "20~30",
    "Fabrication Count": "1",
    "Fabrication Time": "116/58/38",
    "Armament": ["Imp. Datajack"],
    "Components": ["Lgt. Deuterium Engine", "Imp. Hover Unit", "Imp. Hover Unit", "System Restoration Module", "Hacking Suite", "System Shield"],
    "Analysis": "O-24 Administrators share many similarities with low-level O-16 Technicians, but despite the class' highly sensitive electronics they can somewhat mitigate the long-term negative effects of electromagnetic attacks via their backup module.",
    "Resistances": {
      "Electromagnetic": "-50",
      "Slashing": "-25"
    },
    "Armament String": "Imp. Datajack",
    "Components String": "Lgt. Deuterium Engine, 2x Imp. Hover Unit, System Restoration Module, Hacking Suite, System Shield"
  },
  "O-32 Director": {
    "Name": "O-32 Director",
    "Class": "Operator",
    "Tier": "7",
    "Threat": "3",
    "Rating": "45",
    "Value": "32",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Spot %": "50",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "14",
    "Energy Generation": "18",
    "Heat Dissipation": "15",
    "Core Integrity": "50",
    "Core Exposure": "139",
    "Core Exposure %": "39",
    "Salvage Potential": "30~40",
    "Fabrication Count": "1",
    "Fabrication Time": "187/93/62",
    "Armament": ["Adv. Datajack"],
    "Components": ["Lgt. Angular Momentum Engine", "Gravmag System", "Gravmag System", "Imp. System Restoration Module", "Imp. Hacking Suite", "Imp. System Shield"],
    "Analysis": "O-32 Directors are the leading O-class robot, managing the most advanced terminals and protected by armor close to that of similarly rated front-line combat units. Director armor is not, however, specialized enough to prevent penetrating electromagnetic attacks, the long-term effects of which can be mitigated by their dedicated system restoration module.",
    "Resistances": {
      "Electromagnetic": "-50",
      "Slashing": "-25"
    },
    "Armament String": "Adv. Datajack",
    "Components String": "Lgt. Angular Momentum Engine, 2x Gravmag System, Imp. System Restoration Module, Imp. Hacking Suite, Imp. System Shield"
  },
  "N-00 Fly": {
    "Name": "N-00 Fly",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "2",
    "Rating": "7",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Spot %": "75",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "18",
    "Energy Generation": "10",
    "Heat Dissipation": "15",
    "Core Integrity": "10",
    "Core Exposure": "171",
    "Core Exposure %": "50",
    "Salvage Potential": "5~15",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Hover Unit", "Hover Unit", "Visual Processing Unit"],
    "Analysis": "Drones are a miniature version of the W-class Scout, launched by H-series robots to hunt down and report target positions. Like the watcher series they are extremely susceptible to electromagnetic attacks, while their tiny size also leaves them prone to being disabled by concussive blasts.",
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, 2x Hover Unit, Visual Processing Unit"
  },
  "N-01 Spotter": {
    "Name": "N-01 Spotter",
    "Class": "Drone",
    "Tier": "1",
    "Threat": "3",
    "Rating": "8",
    "Value": "1",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "48",
    "Spot %": "75",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "20",
    "Energy Generation": "10",
    "Heat Dissipation": "15",
    "Core Integrity": "10",
    "Core Exposure": "171",
    "Core Exposure %": "50",
    "Salvage Potential": "5~15",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Hover Unit", "Hover Unit", "Adv. Visual Processing Unit"],
    "Analysis": "N-01 Spotter-variant drones are expendable watcher alternatives stationed in areas that themselves hold little importance, but are connected to other more vital zones. There they scan for potential threats and relay information to distant garrisons to enable advance preparations. Like the watcher series they are extremely susceptible to electromagnetic attacks, while their tiny size also leaves them prone to being disabled by concussive blasts.",
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, 2x Hover Unit, Adv. Visual Processing Unit"
  },
  "W-16 Scout": {
    "Name": "W-16 Scout",
    "Class": "Watcher",
    "Tier": "1",
    "Threat": "1",
    "Rating": "9",
    "Value": "16",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "18",
    "Energy Generation": "15",
    "Heat Dissipation": "15",
    "Core Integrity": "12",
    "Core Exposure": "124",
    "Core Exposure %": "39",
    "Salvage Potential": "10~30",
    "Traits": ["Sensor Jamming: Prevents Sensor Arrays within range from pinpointing signals, but gives away its position in the process."],
    "Fabrication Count": "2",
    "Fabrication Time": "81/40/27",
    "Components": ["Lgt. Ion Engine", "Hover Unit", "Hover Unit", "Visual Processing Unit", "Sensor Array", "Signal Interpreter"],
    "Analysis": "W-series watchers are equipped with a wide variety of sensors to excel at surveillance. However, their heavy reliance on highly-exposed advanced electronic systems means they are extremely susceptible to electromagnetic attacks. On detecting intruders, a W-16 Scout will alert all nearby combat units and continue to provide position updates as long as the hostile is visible.",
    "Resistances": {
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, 2x Hover Unit, Visual Processing Unit, Sensor Array, Signal Interpreter"
  },
  "W-25 Informer": {
    "Name": "W-25 Informer",
    "Class": "Watcher",
    "Tier": "3",
    "Threat": "2",
    "Rating": "19",
    "Value": "25",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "18",
    "Energy Generation": "19",
    "Heat Dissipation": "15",
    "Core Integrity": "23",
    "Core Exposure": "124",
    "Core Exposure %": "39",
    "Salvage Potential": "20~40",
    "Traits": ["Sensor Jamming: Prevents Sensor Arrays within range from pinpointing signals, but gives away its position in the process."],
    "Fabrication Count": "2",
    "Fabrication Time": "116/58/38",
    "Components": ["Lgt. Deuterium Engine", "Imp. Hover Unit", "Imp. Hover Unit", "Visual Processing Unit", "Imp. Sensor Array", "Imp. Signal Interpreter"],
    "Analysis": "An upgrade to the W-16 Scout, Informers double the Scout's sensor range, and have access to even more specific signal interpretation data. They are also capable of jamming weaker sensors within their area of influence, though as unarmed surveillance units rather than front-line combatants, agility is preferred over additional armor to protect their systems from electromagnetic damage.",
    "Resistances": {
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Deuterium Engine, 2x Imp. Hover Unit, Visual Processing Unit, Imp. Sensor Array, Imp. Signal Interpreter"
  },
  "W-44 Eye": {
    "Name": "W-44 Eye",
    "Class": "Watcher",
    "Tier": "7",
    "Threat": "3",
    "Rating": "41",
    "Value": "44",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "20",
    "Energy Generation": "26",
    "Heat Dissipation": "25",
    "Core Integrity": "45",
    "Core Exposure": "124",
    "Core Exposure %": "39",
    "Salvage Potential": "30~50",
    "Traits": ["Sensor Jamming: Prevents Sensor Arrays within range from pinpointing signals, but gives away its position in the process."],
    "Fabrication Count": "2",
    "Fabrication Time": "187/93/62",
    "Components": ["Lgt. Antimatter Reactor", "Antigrav System", "Antigrav System", "Adv. Visual Processing Unit", "Adv. Sensor Array", "Adv. Signal Interpreter"],
    "Analysis": "The W-44 Eye is the ultimate surveillance robot, with a greater visual range than any other class and the most powerful non-experimental sensors available. They can cloak all robots within their area of influence from hostile scans.",
    "Resistances": {
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Antimatter Reactor, 2x Antigrav System, Adv. Visual Processing Unit, Adv. Sensor Array, Adv. Signal Interpreter"
  },
  "S-10 Pest": {
    "Name": "S-10 Pest",
    "Class": "Swarmer",
    "Tier": "1",
    "Threat": "1",
    "Rating": "5",
    "Value": "10",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "37",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "18",
    "Core Integrity": "8",
    "Core Exposure": "180",
    "Core Exposure %": "50",
    "Salvage Potential": "10~20",
    "Fabrication Count": "4",
    "Fabrication Time": "81/40/27",
    "Armament": ["Lgt. Assault Rifle"],
    "Components": ["Lgt. Ion Engine", "Flight Unit", "Flight Unit"],
    "Analysis": "S-series swarmers are small with a weak and exposed core, but as such are quick to manufacture and can quickly overwhelm targets with greater numbers and superior speed. The light assault rifle was designed specifically for the S-10 Pest, giving it respectable firepower at a low weight for maintaining high flight speeds. Swarmer squads are particularly susceptible to explosives.",
    "Resistances": {
      "Explosive": "-25"
    },
    "Armament String": "Lgt. Assault Rifle",
    "Components String": "Lgt. Ion Engine, 2x Flight Unit"
  },
  "S-27 Virus": {
    "Name": "S-27 Virus",
    "Class": "Swarmer",
    "Tier": "4",
    "Threat": "2",
    "Rating": "12",
    "Value": "27",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "32",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "22",
    "Core Integrity": "18",
    "Core Exposure": "220",
    "Core Exposure %": "50",
    "Salvage Potential": "20~30",
    "Fabrication Count": "4",
    "Fabrication Time": "134/67/44",
    "Armament": ["Autogun"],
    "Components": ["Lgt. Nuclear Core", "VTOL Module", "VTOL Module"],
    "Analysis": "The S-27 Virus replaces the S-10's light armament with a much more effective autogun, giving the swarmer a faster firing rate that complements its movement speed. Better propulsion provides sufficient support for additional armor, enough for the core to sustain a direct hit under some circumstances.",
    "Resistances": {
      "Explosive": "-25"
    },
    "Armament String": "Autogun",
    "Components String": "Lgt. Nuclear Core, 2x VTOL Module"
  },
  "S-43 Plague": {
    "Name": "S-43 Plague",
    "Class": "Swarmer",
    "Tier": "8",
    "Threat": "3",
    "Rating": "30",
    "Value": "43",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "34",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "30",
    "Core Integrity": "30",
    "Core Exposure": "250",
    "Core Exposure %": "50",
    "Salvage Potential": "30~40",
    "Fabrication Count": "4",
    "Fabrication Time": "204/102/68",
    "Armament": ["Hvy. Machine Gun"],
    "Components": ["Lgt. Antimatter Reactor", "Xenon Bombardment Thruster", "Xenon Bombardment Thruster", "Xenon Bombardment Thruster"],
    "Analysis": "S-43 Plague design is completely centered around its heavy machine gun. With a good chance to sustain at least one direct hit to the core, a group of S-43s can perforate most targets before suffering heavy losses. Powerful explosives are the only way to easily overcome an S-43 squad.",
    "Resistances": {
      "Explosive": "-25"
    },
    "Armament String": "Hvy. Machine Gun",
    "Components String": "Lgt. Antimatter Reactor, 3x Xenon Bombardment Thruster"
  },
  "C-17 Slicer": {
    "Name": "C-17 Slicer",
    "Class": "Cutter",
    "Tier": "3",
    "Threat": "2",
    "Rating": "25",
    "Value": "17",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "29",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "55",
    "Core Integrity": "20",
    "Core Exposure": "400",
    "Core Exposure %": "50",
    "Salvage Potential": "15~25",
    "Fabrication Count": "3",
    "Fabrication Time": "116/58/38",
    "Armament": ["Concussive RPG", "Blade Saw"],
    "Components": ["Lgt. Nuclear Core", "Surge Thruster", "Surge Thruster", "Surge Thruster", "Reaction Control System"],
    "Analysis": "C-series cutters are most often dispatched to areas where they are more likely to encounter fast hostiles, firing a lightweight single-shot RPG to disorient targets before moving in at full speed on overloaded thrusters. By quickly closing the distance, as a group they have a good chance of using their saws to sever multiple parts from an opponent in order to quickly disable it.",
    "Armament String": "Concussive RPG, Blade Saw",
    "Components String": "Lgt. Nuclear Core, 3x Surge Thruster, Reaction Control System",
    "Overload Speed": 20
  },
  "C-35 Carver": {
    "Name": "C-35 Carver",
    "Class": "Cutter",
    "Tier": "6",
    "Threat": "3",
    "Rating": "42",
    "Value": "35",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "24",
    "Sight Range": "16",
    "Energy Generation": "25",
    "Heat Dissipation": "75",
    "Core Integrity": "27",
    "Core Exposure": "372",
    "Core Exposure %": "50",
    "Salvage Potential": "25~35",
    "Fabrication Count": "3",
    "Fabrication Time": "169/84/56",
    "Armament": ["Imp. Concussive RPG", "Carbide Saw"],
    "Components": ["Mic. Nuclear Core", "Imp. Surge Thruster", "Imp. Surge Thruster", "Imp. Surge Thruster", "Imp. Reaction Control System", "Melee Analysis Suite"],
    "Analysis": "In addition to better components across the board, the C-35 Carver also improves on the C-17 by adding melee analysis capabilities.",
    "Armament String": "Imp. Concussive RPG, Carbide Saw",
    "Components String": "Mic. Nuclear Core, 3x Imp. Surge Thruster, Imp. Reaction Control System, Melee Analysis Suite",
    "Overload Speed": 15
  },
  "C-57 Dissector": {
    "Name": "C-57 Dissector",
    "Class": "Cutter",
    "Tier": "9",
    "Threat": "4",
    "Rating": "59",
    "Value": "57",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "19",
    "Sight Range": "16",
    "Energy Generation": "55",
    "Heat Dissipation": "150",
    "Core Integrity": "35",
    "Core Exposure": "372",
    "Core Exposure %": "50",
    "Salvage Potential": "35~45",
    "Fabrication Count": "3",
    "Fabrication Time": "222/111/74",
    "Armament": ["Adv. Concussive RPG", "Dual-blade Saw"],
    "Components": ["Mic. Fission Core", "Adv. Surge Thruster", "Adv. Surge Thruster", "Adv. Surge Thruster", "Adv. Reaction Control System", "Imp. Melee Analysis Suite"],
    "Analysis": "C-57 Dissectors are even deadlier than their predecessors, armed with a second saw blade for extra cutting power as well as being both harder to hit and capable of reaching high enough speeds that few known derelict builds can outrun them.",
    "Armament String": "Adv. Concussive RPG, Dual-blade Saw",
    "Components String": "Mic. Fission Core, 3x Adv. Surge Thruster, Adv. Reaction Control System, Imp. Melee Analysis Suite",
    "Overload Speed": 7
  },
  "E-15 Imp": {
    "Name": "E-15 Imp",
    "Class": "Saboteur",
    "Tier": "5",
    "Threat": "2",
    "Rating": "14",
    "Value": "15",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "50",
    "Movement": "Flying",
    "Speed": "32",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "20",
    "Core Integrity": "8",
    "Core Exposure": "160",
    "Core Exposure %": "50",
    "Salvage Potential": "10~20",
    "Fabrication Count": "2",
    "Fabrication Time": "152/76/50",
    "Armament": ["Segregator"],
    "Components": ["Lgt. Ion Engine", "Cesium-ion Thruster", "Cesium-ion Thruster", "Propulsion Shielding"],
    "Analysis": "Only dispatched to support an assault force, the Imp is designed to quickly rush targets, latch on, then overload their own power source to create a directed charge that blasts pieces clean off the target. While their armor has no particular weakness, E-15 cores are relatively exposed and low on integrity, keeping them light enough to rapidly close on threats.",
    "Armament String": "Segregator",
    "Components String": "Lgt. Ion Engine, 2x Cesium-ion Thruster, Propulsion Shielding"
  },
  "G-34 Mercenary": {
    "Name": "G-34 Mercenary",
    "Class": "Grunt",
    "Tier": "1",
    "Threat": "1",
    "Rating": "8",
    "Value": "34",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "15",
    "Heat Dissipation": "25",
    "Core Integrity": "15",
    "Core Exposure": "200",
    "Core Exposure %": "40",
    "Salvage Potential": "30~50",
    "Fabrication Count": "3",
    "Fabrication Time": "81/40/27",
    "Armament": ["Sml. Laser"],
    "Components": ["Ion Engine", "Aluminum Leg", "Aluminum Leg", "Heat Sink"],
    "Analysis": "G-series grunts serve as low-level front-line combat units, of sturdy construction but with fairly weak armament. Internal systems are not as protected as they could be, to enable rapid repair in the field, but this also makes them somewhat susceptible to additional damage from electromagnetic attacks. Grunts patrol in groups, or sometimes operate alone as hauler escorts to protect those with more valuable cargo.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Sml. Laser",
    "Components String": "Ion Engine, 2x Aluminum Leg, Heat Sink"
  },
  "G-47 Trooper": {
    "Name": "G-47 Trooper",
    "Class": "Grunt",
    "Tier": "3",
    "Threat": "2",
    "Rating": "16",
    "Value": "47",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "40",
    "Core Integrity": "30",
    "Core Exposure": "200",
    "Core Exposure %": "40",
    "Salvage Potential": "40~60",
    "Fabrication Count": "3",
    "Fabrication Time": "116/58/38",
    "Armament": ["Particle Gun"],
    "Components": ["Lgt. Nuclear Core", "Aluminum Leg", "Aluminum Leg", "Imp. Heat Sink"],
    "Analysis": "The G-47 Trooper replaces the G-34's laser with a more effective particle gun. However, during prolonged confrontations the G-47 is prone to overheating as its upgraded weaponry produces more heat than the design can fully dissipate.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Particle Gun",
    "Components String": "Lgt. Nuclear Core, 2x Aluminum Leg, Imp. Heat Sink"
  },
  "G-50 Soldier": {
    "Name": "G-50 Soldier",
    "Class": "Grunt",
    "Tier": "5",
    "Threat": "3",
    "Rating": "29",
    "Value": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "42",
    "Core Integrity": "45",
    "Core Exposure": "200",
    "Core Exposure %": "40",
    "Salvage Potential": "50~70",
    "Fabrication Count": "3",
    "Fabrication Time": "152/76/50",
    "Armament": ["Hvy. Laser"],
    "Components": ["Lgt. Angular Momentum Engine", "Carbon-fiber Leg", "Carbon-fiber Leg", "Adv. Heat Sink"],
    "Analysis": "G-50 Soldiers are each equipped with a heavy laser, a significant upgrade from its predecessor the G-47, but like the G-47 are prone to overheating. Also still somewhat weak against electromagnetic attacks.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Hvy. Laser",
    "Components String": "Lgt. Angular Momentum Engine, 2x Carbon-fiber Leg, Adv. Heat Sink"
  },
  "G-67 Veteran": {
    "Name": "G-67 Veteran",
    "Class": "Grunt",
    "Tier": "7",
    "Threat": "4",
    "Rating": "47",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "55",
    "Core Integrity": "60",
    "Core Exposure": "253",
    "Core Exposure %": "39",
    "Salvage Potential": "60~85",
    "Fabrication Count": "3",
    "Fabrication Time": "187/93/62",
    "Armament": ["Plasma Rifle", "Field Laser"],
    "Components": ["Lgt. Antimatter Reactor", "Flexi-carbon Leg", "Flexi-carbon Leg", "Adv. Heat Sink", "Adv. Heat Sink"],
    "Analysis": "The first G-series robot armed with two thermal weapons, while integrating enough advanced heat sinks to fire them non-stop.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Plasma Rifle, Field Laser",
    "Components String": "Lgt. Antimatter Reactor, 2x Flexi-carbon Leg, 2x Adv. Heat Sink"
  },
  "G-73 Enforcer": {
    "Name": "G-73 Enforcer",
    "Class": "Grunt",
    "Tier": "9",
    "Threat": "5",
    "Rating": "58",
    "Value": "73",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "63",
    "Core Integrity": "70",
    "Core Exposure": "253",
    "Core Exposure %": "39",
    "Salvage Potential": "70~100",
    "Fabrication Count": "3",
    "Fabrication Time": "222/111/74",
    "Armament": ["Phase Gun", "Hvy. Laser"],
    "Components": ["Lgt. Quantum Reactor", "Myomer Leg", "Myomer Leg", "Adv. Heat Sink", "Adv. Heat Sink"],
    "Analysis": "The latest G-series implementation, armed with a powerful phase gun supported by a secondary heavy laser. While not exceptionally effective in single combat, the G-73 is much more formidable in groups, as they normally operate.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Phase Gun, Hvy. Laser",
    "Components String": "Lgt. Quantum Reactor, 2x Myomer Leg, 2x Adv. Heat Sink"
  },
  "B-36 Bruiser": {
    "Name": "B-36 Bruiser",
    "Class": "Brawler",
    "Tier": "2",
    "Threat": "1",
    "Rating": "10",
    "Value": "36",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "17",
    "Heat Dissipation": "15",
    "Core Integrity": "20",
    "Core Exposure": "258",
    "Core Exposure %": "34",
    "Salvage Potential": "50~60",
    "Fabrication Count": "3",
    "Fabrication Time": "99/49/33",
    "Armament": ["Hammer"],
    "Components": ["Rnf. Ion Engine", "Lgt. Treads", "Lgt. Treads", "Lgt. Armor Plating"],
    "Analysis": "B-series brawlers are a melee variant of the grunt class, engaging targets at close range with the support of ranged combat units. They are protected by additional armor to increase their chances of survival while closing distance with a target, after which their hammer can quickly crush vital components and diminish the target's ability to operate.",
    "Resistances": {
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "Hammer",
    "Components String": "Rnf. Ion Engine, 2x Lgt. Treads, Lgt. Armor Plating"
  },
  "B-48 Gladiator": {
    "Name": "B-48 Gladiator",
    "Class": "Brawler",
    "Tier": "4",
    "Threat": "2",
    "Rating": "20",
    "Value": "48",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "21",
    "Heat Dissipation": "15",
    "Core Integrity": "45",
    "Core Exposure": "258",
    "Core Exposure %": "34",
    "Salvage Potential": "60~75",
    "Fabrication Count": "3",
    "Fabrication Time": "134/67/44",
    "Armament": ["Mace"],
    "Components": ["Rnf. Deuterium Engine", "Lgt. Treads", "Lgt. Treads", "Imp. Light Armor Plating"],
    "Analysis": "B-48 Gladiators are better armored than the B-36, replace the hammer with a slightly more damaging mace, and like other B-series brawlers are only dispatched in coordination with grunts.",
    "Resistances": {
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "Mace",
    "Components String": "Rnf. Deuterium Engine, 2x Lgt. Treads, Imp. Light Armor Plating"
  },
  "B-60 Warrior": {
    "Name": "B-60 Warrior",
    "Class": "Brawler",
    "Tier": "6",
    "Threat": "3",
    "Rating": "30",
    "Value": "60",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "15",
    "Core Integrity": "65",
    "Core Exposure": "298",
    "Core Exposure %": "34",
    "Salvage Potential": "70~90",
    "Fabrication Count": "3",
    "Fabrication Time": "169/84/56",
    "Armament": ["Hvy. Mace"],
    "Components": ["Rnf. Fission Core", "Imp. Treads", "Imp. Treads", "Imp. Medium Armor Plating"],
    "Analysis": "B-60 Warriors carry a heavier version of the B-48's mace, and additional armor. Like other B-series robots, the B-60's armor structure is reinforced against the slashes and broad impacts of melee damage.",
    "Resistances": {
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "Hvy. Mace",
    "Components String": "Rnf. Fission Core, 2x Imp. Treads, Imp. Medium Armor Plating"
  },
  "B-74 Champion": {
    "Name": "B-74 Champion",
    "Class": "Brawler",
    "Tier": "8",
    "Threat": "4",
    "Rating": "42",
    "Value": "74",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "20",
    "Core Integrity": "85",
    "Core Exposure": "500",
    "Core Exposure %": "34",
    "Salvage Potential": "80~105",
    "Fabrication Count": "3",
    "Fabrication Time": "204/102/68",
    "Armament": ["Powered Hammer"],
    "Components": ["Rnf. Antimatter Reactor", "Med. Treads", "Med. Treads", "Hvy. Armor Plating"],
    "Analysis": "The heaviest and most heavily armored brawler, highly likely to reach a target even under sustained fire, and highly likely to wreak havoc with its powered hammer.",
    "Resistances": {
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "Powered Hammer",
    "Components String": "Rnf. Antimatter Reactor, 2x Med. Treads, Hvy. Armor Plating"
  },
  "L-31 Rogue": {
    "Name": "L-31 Rogue",
    "Class": "Duelist",
    "Tier": "2",
    "Threat": "1",
    "Rating": "18",
    "Value": "47",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "17",
    "Heat Dissipation": "15",
    "Core Integrity": "25",
    "Core Exposure": "127",
    "Core Exposure %": "34",
    "Salvage Potential": "40~60",
    "Fabrication Count": "3",
    "Fabrication Time": "99/49/33",
    "Armament": ["Katana"],
    "Components": ["Imp. Ion Engine", "Imp. Aluminum Leg", "Imp. Aluminum Leg", "Core Shielding", "Melee Analysis Suite"],
    "Analysis": "L-series duelists are a melee variant of the grunt class, engaging targets at close range with the support of ranged combat units. They lack the broad protection of the brawler class' armor, but feature an extra layer of dedicated core armor. They are highly accurate with their katana and capable of quickly reducing an opponent's effectiveness by slashing exposed components clean off.",
    "Resistances": {
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Katana",
    "Components String": "Imp. Ion Engine, 2x Imp. Aluminum Leg, Core Shielding, Melee Analysis Suite"
  },
  "L-41 Fighter": {
    "Name": "L-41 Fighter",
    "Class": "Duelist",
    "Tier": "4",
    "Threat": "2",
    "Rating": "30",
    "Value": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "21",
    "Heat Dissipation": "15",
    "Core Integrity": "40",
    "Core Exposure": "135",
    "Core Exposure %": "34",
    "Salvage Potential": "50~70",
    "Fabrication Count": "3",
    "Fabrication Time": "134/67/44",
    "Armament": ["Axe"],
    "Components": ["Imp. Deuterium Engine", "Carbon-fiber Leg", "Carbon-fiber Leg", "Core Shielding", "Microactuators", "Imp. Melee Analysis Suite"],
    "Analysis": "L-41 Fighters are even more accurate than the L-31, and use an axe for slightly improved slashing force. Like other L-series robots, the L-41 is only dispatched in coordination with grunts. Like other L-series robots, the L-41's armor structure is reinforced against the slashes of melee damage, as well as piercing attacks.",
    "Resistances": {
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Axe",
    "Components String": "Imp. Deuterium Engine, 2x Carbon-fiber Leg, Core Shielding, Microactuators, Imp. Melee Analysis Suite"
  },
  "L-61 Swordsman": {
    "Name": "L-61 Swordsman",
    "Class": "Duelist",
    "Tier": "7",
    "Threat": "3",
    "Rating": "48",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "15",
    "Core Integrity": "60",
    "Core Exposure": "135",
    "Core Exposure %": "34",
    "Salvage Potential": "60~85",
    "Fabrication Count": "3",
    "Fabrication Time": "187/93/62",
    "Armament": ["Power Sword"],
    "Components": ["Lgt. Antimatter Reactor", "Flexi-carbon Leg", "Flexi-carbon Leg", "Imp. Core Shielding", "Microactuators", "Adv. Melee Analysis Suite"],
    "Analysis": "The most accurate front-line melee combat unit, the L-61 Swordsman also has a well-shielded core and a powered sword very effective at slicing off target components.",
    "Resistances": {
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Power Sword",
    "Components String": "Lgt. Antimatter Reactor, 2x Flexi-carbon Leg, Imp. Core Shielding, Microactuators, Adv. Melee Analysis Suite"
  },
  "I-25 Savior": {
    "Name": "I-25 Savior",
    "Class": "Protector",
    "Tier": "2",
    "Threat": "1",
    "Rating": "27",
    "Value": "25",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "15",
    "Core Integrity": "20",
    "Core Exposure": "294",
    "Core Exposure %": "50",
    "Salvage Potential": "20~40",
    "Fabrication Count": "1",
    "Fabrication Time": "99/49/33",
    "Components": ["Imp. Ion Engine", "Imp. Ion Engine", "Com. Wheel", "Com. Wheel", "Power Amplifier", "Lrg. Battery", "Com. Battery", "Com. Battery", "Remote Shield"],
    "Analysis": "I-series protectors are one of very few dual-engine robots, necessary to both move and power their remote shield generator. Additional power is stored in batteries for burst use during heavy confrontations, and a power amplifier increases the rate of power generation to replenish energy in an ongoing combat scenario.",
    "Resistances": {
      "Thermal": "25"
    },
    "Components String": "2x Imp. Ion Engine, 2x Com. Wheel, Power Amplifier, Lrg. Battery, 2x Com. Battery, Remote Shield"
  },
  "I-36 Angel": {
    "Name": "I-36 Angel",
    "Class": "Protector",
    "Tier": "4",
    "Threat": "2",
    "Rating": "40",
    "Value": "36",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "36",
    "Heat Dissipation": "15",
    "Core Integrity": "40",
    "Core Exposure": "332",
    "Core Exposure %": "50",
    "Salvage Potential": "40~60",
    "Fabrication Count": "1",
    "Fabrication Time": "134/67/44",
    "Components": ["Imp. Deuterium Engine", "Imp. Deuterium Engine", "Com. Wheel", "Com. Wheel", "Com. Wheel", "Power Amplifier", "Hcp. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Remote Force Field"],
    "Analysis": "The I-36 Angel's remote force field is 33% more effective than the I-25's shield generator, shielding targets from half of all damage where there is enough energy to support the field. Protector class robots are not especially well armored, but in addition to their shield are also strong against more common thermal weaponry, as well as always working in concert with a larger assault force.",
    "Resistances": {
      "Thermal": "25"
    },
    "Components String": "2x Imp. Deuterium Engine, 3x Com. Wheel, Power Amplifier, Hcp. Battery, 3x Com. Battery, Remote Force Field"
  },
  "I-47 Archangel": {
    "Name": "I-47 Archangel",
    "Class": "Protector",
    "Tier": "6",
    "Threat": "3",
    "Rating": "65",
    "Value": "47",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "48",
    "Heat Dissipation": "20",
    "Core Integrity": "60",
    "Core Exposure": "392",
    "Core Exposure %": "50",
    "Salvage Potential": "60~80",
    "Fabrication Count": "1",
    "Fabrication Time": "169/84/56",
    "Components": ["Antimatter Reactor", "Antimatter Reactor", "Com. Wheel", "Com. Wheel", "Com. Wheel", "Com. Wheel", "Power Amplifier", "Energy Well", "Energy Well", "Com. Battery", "Com. Battery", "Imp. Remote Force Field", "Point Defense System"],
    "Analysis": "I-47 Archangels are equipped with a more efficient force field than the I-36, and greater battery storage to support its use. Their point defense system further conserves energy by intercepting explosive projectiles prior to detonation.",
    "Resistances": {
      "Thermal": "25"
    },
    "Components String": "2x Antimatter Reactor, 4x Com. Wheel, Power Amplifier, 2x Energy Well, 2x Com. Battery, Imp. Remote Force Field, Point Defense System"
  },
  "C-55 Analyst": {
    "Name": "C-55 Analyst",
    "Class": "Researcher",
    "Tier": "8",
    "Threat": "2",
    "Rating": "49",
    "Value": "55",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "40",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "25",
    "Core Integrity": "40",
    "Core Exposure": "200",
    "Core Exposure %": "39",
    "Salvage Potential": "40~60",
    "Immunities": ["Jamming"],
    "Fabrication Count": "1",
    "Fabrication Time": "204/102/68",
    "Armament": ["Stasis Beam"],
    "Components": ["Lgt. Fission Core", "Antigrav System", "Antigrav System", "Sml. Storage Unit", "System Guard", "Imp. Corruption Screen", "Component Analysis Suite"],
    "Analysis": "C-series researchers operate labs in which they independently develop and test new technologies. As non-combat units assigned to secure areas, their core is weak against many forms of damage. However, due to the periodic need to operate in high-temperature areas they are somewhat resistant to damage of a thermal nature. The C-55 is also equipped with a stasis beam to contain derelict specimens for study.",
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "-50",
      "Impact": "-25",
      "Slashing": "-25",
      "Piercing": "-25"
    },
    "Armament String": "Stasis Beam",
    "Components String": "Lgt. Fission Core, 2x Antigrav System, Sml. Storage Unit, System Guard, Imp. Corruption Screen, Component Analysis Suite"
  },
  "C-65 Expert": {
    "Name": "C-65 Expert",
    "Class": "Researcher",
    "Tier": "9",
    "Threat": "3",
    "Rating": "62",
    "Value": "65",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "40",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "25",
    "Core Integrity": "50",
    "Core Exposure": "194",
    "Core Exposure %": "40",
    "Salvage Potential": "60~80",
    "Immunities": ["Jamming"],
    "Fabrication Count": "1",
    "Fabrication Time": "222/111/74",
    "Armament": ["Stasis Projector"],
    "Components": ["Lgt. Neutrino Core", "Imp. Antigrav System", "Imp. Antigrav System", "Sml. Storage Unit", "Imp. System Guard", "Adv. Corruption Screen", "Imp. Component Analysis Suite"],
    "Analysis": "An upgrade to the C-55 Analyst, Experts possess improved analytical capabilities and a more powerful stasis projector.",
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "-50",
      "Impact": "-25",
      "Slashing": "-25",
      "Piercing": "-25"
    },
    "Armament String": "Stasis Projector",
    "Components String": "Lgt. Neutrino Core, 2x Imp. Antigrav System, Sml. Storage Unit, Imp. System Guard, Adv. Corruption Screen, Imp. Component Analysis Suite"
  },
  "Y-45 Defender": {
    "Name": "Y-45 Defender",
    "Class": "Sentry",
    "Tier": "2",
    "Threat": "1",
    "Rating": "15",
    "Value": "45",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "17",
    "Heat Dissipation": "36",
    "Core Integrity": "20",
    "Core Exposure": "350",
    "Core Exposure %": "35",
    "Salvage Potential": "50~60",
    "Fabrication Count": "2",
    "Fabrication Time": "99/49/33",
    "Armament": ["Beam Rifle", "Hvy. Assault Rifle"],
    "Components": ["Imp. Ion Engine", "Lgt. Treads", "Lgt. Treads", "Lgt. Armor Plating", "Heat Sink", "Heat Sink"],
    "Analysis": "Y-series armored sentries are equipped with a mix of thermal and kinetic weaponry. The Y-45 guards important locations and vital machinery, and remains at its station unless they identify a hostile robot or are alerted to the presence of one nearby.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Beam Rifle, Hvy. Assault Rifle",
    "Components String": "Imp. Ion Engine, 2x Lgt. Treads, Lgt. Armor Plating, 2x Heat Sink"
  },
  "Y-54 Guardian": {
    "Name": "Y-54 Guardian",
    "Class": "Sentry",
    "Tier": "4",
    "Threat": "2",
    "Rating": "32",
    "Value": "54",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "21",
    "Heat Dissipation": "43",
    "Core Integrity": "45",
    "Core Exposure": "350",
    "Core Exposure %": "35",
    "Salvage Potential": "60~75",
    "Fabrication Count": "2",
    "Fabrication Time": "134/67/44",
    "Armament": ["Gatling Laser", "Flak Gun"],
    "Components": ["Imp. Deuterium Engine", "Lgt. Treads", "Lgt. Treads", "Imp. Light Armor Plating", "Imp. Heat Sink", "Imp. Heat Sink"],
    "Analysis": "Y-54 Defenders improve on the Y-45 with better armor and greater effectiveness against both single and multiple targets, swapping out the beam rifle and heavy assault rifle for a gatling laser and flak gun. Like all Y-series sentries, their armor is hardened against impact damage and explosive blasts.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Gatling Laser, Flak Gun",
    "Components String": "Imp. Deuterium Engine, 2x Lgt. Treads, Imp. Light Armor Plating, 2x Imp. Heat Sink"
  },
  "Y-64 Sentinel": {
    "Name": "Y-64 Sentinel",
    "Class": "Sentry",
    "Tier": "6",
    "Threat": "3",
    "Rating": "49",
    "Value": "64",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "51",
    "Core Integrity": "65",
    "Core Exposure": "390",
    "Core Exposure %": "34",
    "Salvage Potential": "70~90",
    "Fabrication Count": "2",
    "Fabrication Time": "169/84/56",
    "Armament": ["Wave Gun", "KE Penetrator"],
    "Components": ["Neutrino Core", "Imp. Treads", "Imp. Treads", "Imp. Medium Armor Plating", "Adv. Heat Sink", "Adv. Heat Sink"],
    "Analysis": "A better-armored version of the Y-54, with upgraded weaponry. Like other Y-class robots, their large size is a primary drawback, as it makes them easier to hit both when targeted and by stray projectiles.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Wave Gun, KE Penetrator",
    "Components String": "Neutrino Core, 2x Imp. Treads, Imp. Medium Armor Plating, 2x Adv. Heat Sink"
  },
  "Y-72 Warden": {
    "Name": "Y-72 Warden",
    "Class": "Sentry",
    "Tier": "8",
    "Threat": "4",
    "Rating": "64",
    "Value": "72",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "28",
    "Heat Dissipation": "58",
    "Core Integrity": "85",
    "Core Exposure": "592",
    "Core Exposure %": "34",
    "Salvage Potential": "80~105",
    "Fabrication Count": "2",
    "Fabrication Time": "204/102/68",
    "Armament": ["Quantum Rifle", "Railgun"],
    "Components": ["Particle Reactor", "Med. Treads", "Med. Treads", "Hvy. Armor Plating", "Adv. Heat Sink", "Adv. Heat Sink"],
    "Analysis": "The most heavily armored Y-series sentry, and the only current robot class to carry the quantum rifle as standard armament.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Quantum Rifle, Railgun",
    "Components String": "Particle Reactor, 2x Med. Treads, Hvy. Armor Plating, 2x Adv. Heat Sink"
  },
  "D-53 Grenadier": {
    "Name": "D-53 Grenadier",
    "Class": "Demolisher",
    "Tier": "3",
    "Threat": "3",
    "Rating": "34",
    "Value": "53",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "76",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "25",
    "Core Integrity": "40",
    "Core Exposure": "254",
    "Core Exposure %": "40",
    "Salvage Potential": "40~60",
    "Fabrication Count": "1",
    "Fabrication Time": "116/58/38",
    "Armament": ["Mni. Grenade Launcher"],
    "Components": ["Lgt. Deuterium Engine", "Cmb. Airjet", "Cmb. Airjet", "Imp. Light Armor Plating", "Shock Absorption System", "Launcher Guidance Computer"],
    "Analysis": "D-series demolishers are the only class to carry explosive weaponry, and due to the high potential for collateral damage are only assigned to support assault forces dispatched to deal with groups of high-threat intruders. The D-53 itself is highly resistant against explosive damage, however, and is therefore willing to catch targets in an explosion even while within that blast radius.",
    "Resistances": {
      "Explosive": "75",
      "Impact": "25"
    },
    "Armament String": "Mni. Grenade Launcher",
    "Components String": "Lgt. Deuterium Engine, 2x Cmb. Airjet, Imp. Light Armor Plating, Shock Absorption System, Launcher Guidance Computer"
  },
  "D-63 Destroyer": {
    "Name": "D-63 Destroyer",
    "Class": "Demolisher",
    "Tier": "6",
    "Threat": "4",
    "Rating": "49",
    "Value": "63",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "76",
    "Sight Range": "16",
    "Energy Generation": "25",
    "Heat Dissipation": "37",
    "Core Integrity": "65",
    "Core Exposure": "287",
    "Core Exposure %": "39",
    "Salvage Potential": "55~80",
    "Fabrication Count": "1",
    "Fabrication Time": "169/84/56",
    "Armament": ["Hvy. Rocket Launcher"],
    "Components": ["Mic. Fission Core", "Cmb. Gravmag System", "Cmb. Gravmag System", "Lyr. Light Armor Plating", "Shock Absorption System", "Imp. Launcher Guidance Computer"],
    "Analysis": "D-63 Destroyers improve on the D-53 with a better guidance system and more powerful heavy rocket launcher. Like all demolishers, the D-63 will hold fire if too many friendlies are within the area of effect.",
    "Resistances": {
      "Explosive": "75",
      "Impact": "25"
    },
    "Armament String": "Hvy. Rocket Launcher",
    "Components String": "Mic. Fission Core, 2x Cmb. Gravmag System, Lyr. Light Armor Plating, Shock Absorption System, Imp. Launcher Guidance Computer"
  },
  "D-83 Annihilator": {
    "Name": "D-83 Annihilator",
    "Class": "Demolisher",
    "Tier": "9",
    "Threat": "5",
    "Rating": "67",
    "Value": "83",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "76",
    "Sight Range": "16",
    "Energy Generation": "31",
    "Heat Dissipation": "40",
    "Core Integrity": "90",
    "Core Exposure": "350",
    "Core Exposure %": "39",
    "Salvage Potential": "70~100",
    "Fabrication Count": "1",
    "Fabrication Time": "222/111/74",
    "Armament": ["Micro-nuke Launcher"],
    "Components": ["Mni. Fusion Reactor", "Cmb. Antigrav System", "Cmb. Antigrav System", "Imp. Medium Armor Plating", "Imp. Shock Absorption System", "Adv. Launcher Guidance Computer"],
    "Analysis": "The most powerful demolisher, the D-83 Annihilator is built around a single micro-nuke launcher. Its advanced guidance computer is extremely accurate, and excellent defense against explosives reduce damage from such sources to almost insignificant levels, whether caused by its own micro-nuke or those of an enemy.",
    "Resistances": {
      "Explosive": "100",
      "Impact": "25"
    },
    "Armament String": "Micro-nuke Launcher",
    "Components String": "Mni. Fusion Reactor, 2x Cmb. Antigrav System, Imp. Medium Armor Plating, Imp. Shock Absorption System, Adv. Launcher Guidance Computer"
  },
  "X-57 Shotgunner": {
    "Name": "X-57 Shotgunner",
    "Class": "Specialist",
    "Tier": "3",
    "Threat": "1",
    "Rating": "24",
    "Value": "57",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "29",
    "Core Integrity": "20",
    "Core Exposure": "267",
    "Core Exposure %": "29",
    "Salvage Potential": "40~70",
    "Fabrication Count": "2",
    "Fabrication Time": "116/58/38",
    "Armament": ["Hpw. Shotgun", "Shotgun"],
    "Components": ["Nuclear Core", "VSS Leg", "VSS Leg", "Hrd. Medium Armor Plating", "Imp. Heat Sink"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. With remarkable sprinting speed made possible by legs built around a system of variable stiffness springs, the limited range of the X-57 Shotgunner's armament is little disadvantage in combat. Despite the relative range gap between their two shotguns, this works to their advantage by pinning less aggressive targets not eager to enter the X-57's optimal range, giving other units an opportunity to flank them.",
    "Armament String": "Hpw. Shotgun, Shotgun",
    "Components String": "Nuclear Core, 2x VSS Leg, Hrd. Medium Armor Plating, Imp. Heat Sink"
  },
  "X-62 Marksman": {
    "Name": "X-62 Marksman",
    "Class": "Specialist",
    "Tier": "4",
    "Threat": "2",
    "Rating": "40",
    "Value": "62",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "20",
    "Energy Generation": "21",
    "Heat Dissipation": "42",
    "Core Integrity": "25",
    "Core Exposure": "178",
    "Core Exposure %": "29",
    "Salvage Potential": "45~75",
    "Fabrication Count": "2",
    "Fabrication Time": "134/67/44",
    "Armament": ["Gauss Rifle", "Pulse Rifle"],
    "Components": ["Imp. Deuterium Engine", "Imp. Carbon-fiber Leg", "Imp. Carbon-fiber Leg", "Imp. Cooling System", "Adv. Visual Processing Unit", "Targeting Computer", "Core Analyzer", "Armor Integrity Analyzer"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. The X-62 Marksman combines exceptional visual detection range and superior targeting abilities with a long-range gauss rifle. It is also armed with a pulse rifle as a secondary weapon for close encounters, and is more likely to hit a target's core, even penetrating armor to do so.",
    "Armament String": "Gauss Rifle, Pulse Rifle",
    "Components String": "Imp. Deuterium Engine, 2x Imp. Carbon-fiber Leg, Imp. Cooling System, Adv. Visual Processing Unit, Targeting Computer, Core Analyzer, Armor Integrity Analyzer"
  },
  "X-67 Chaingunner": {
    "Name": "X-67 Chaingunner",
    "Class": "Specialist",
    "Tier": "5",
    "Threat": "3",
    "Rating": "43",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "34",
    "Core Integrity": "32",
    "Core Exposure": "217",
    "Core Exposure %": "29",
    "Salvage Potential": "50~80",
    "Fabrication Count": "2",
    "Fabrication Time": "152/76/50",
    "Armament": ["Hvy. Machine Gun", "Minigun"],
    "Components": ["Angular Momentum Engine", "Flexi-carbon Leg", "Flexi-carbon Leg", "Adv. Heat Sink", "Lrg. Matter Pod", "Weapon Cycler", "Kinecellerator"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. The X-67 Chaingunner focuses on high kinetic damage output over a short period, and would make a formidable front line attacker if not for their tendency to cause excessive collateral damage.",
    "Armament String": "Hvy. Machine Gun, Minigun",
    "Components String": "Angular Momentum Engine, 2x Flexi-carbon Leg, Adv. Heat Sink, Lrg. Matter Pod, Weapon Cycler, Kinecellerator"
  },
  "X-72 Disruptor": {
    "Name": "X-72 Disruptor",
    "Class": "Specialist",
    "Tier": "6",
    "Threat": "3",
    "Rating": "46",
    "Value": "72",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "25",
    "Heat Dissipation": "69",
    "Core Integrity": "40",
    "Core Exposure": "243",
    "Core Exposure %": "29",
    "Salvage Potential": "55~85",
    "Fabrication Count": "2",
    "Fabrication Time": "169/84/56",
    "Armament": ["Imp. Arc Projector", "Arc Projector"],
    "Components": ["Mic. Fission Core", "Imp. VSS Leg", "Imp. VSS Leg", "Insulated Plating", "Lrg. Battery", "Imp. Cooling System", "Imp. Cooling System"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. While less likely to deal significant damage to a target, the X-72 Disruptor excels at incapacitating robots and their components, making them easier to capture for analysis.",
    "Resistances": {
      "Electromagnetic": "15"
    },
    "Armament String": "Imp. Arc Projector, Arc Projector",
    "Components String": "Mic. Fission Core, 2x Imp. VSS Leg, Insulated Plating, Lrg. Battery, 2x Imp. Cooling System"
  },
  "X-77 Beamer": {
    "Name": "X-77 Beamer",
    "Class": "Specialist",
    "Tier": "7",
    "Threat": "4",
    "Rating": "68",
    "Value": "77",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "36",
    "Heat Dissipation": "77",
    "Core Integrity": "47",
    "Core Exposure": "205",
    "Core Exposure %": "29",
    "Salvage Potential": "60~90",
    "Fabrication Count": "2",
    "Fabrication Time": "187/93/62",
    "Armament": ["Gatling Laser", "Gatling Laser", "Gatling Laser"],
    "Components": ["Antimatter Reactor", "Adv. VSS Leg", "Adv. VSS Leg", "Adv. Cooling System", "Adv. Cooling System", "Adv. Coolant Injector", "Adv. Particle Charger"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. Although relatively slow to attack, X-77 Beamers are capable of inflicting significant thermal damage, often enough to melt any targets with insufficient cooling. Time lost during attacking is also made up for by quicker repositioning enabled by VSS legs.",
    "Armament String": "3x Gatling Laser",
    "Components String": "Antimatter Reactor, 2x Adv. VSS Leg, 2x Adv. Cooling System, Adv. Coolant Injector, Adv. Particle Charger"
  },
  "X-82 Rainmaker": {
    "Name": "X-82 Rainmaker",
    "Class": "Specialist",
    "Tier": "8",
    "Threat": "4",
    "Rating": "50",
    "Value": "82",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "28",
    "Heat Dissipation": "46",
    "Core Integrity": "55",
    "Core Exposure": "204",
    "Core Exposure %": "29",
    "Salvage Potential": "65~95",
    "Fabrication Count": "2",
    "Fabrication Time": "204/102/68",
    "Armament": ["Hvy. Flak Cannon", "Hvy. Flak Cannon"],
    "Components": ["Lgt. Particle Reactor", "Myomer Leg", "Myomer Leg", "Hcp. Matter Pod", "Adv. Cooling System"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. The X-82 Rainmaker's twin heavy flak cannons are deadly against either lightly armored or numerous clustered targets. It carries a high-capacity Matter Pod to supply them with enough ammunition for continuous firing in prolonged confrontations.",
    "Armament String": "2x Hvy. Flak Cannon",
    "Components String": "Lgt. Particle Reactor, 2x Myomer Leg, Hcp. Matter Pod, Adv. Cooling System"
  },
  "X-87 Electro": {
    "Name": "X-87 Electro",
    "Class": "Specialist",
    "Tier": "9",
    "Threat": "5",
    "Rating": "89",
    "Value": "87",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "36",
    "Heat Dissipation": "46",
    "Core Integrity": "62",
    "Core Exposure": "148",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Fabrication Count": "2",
    "Fabrication Time": "222/111/74",
    "Armament": ["Com. HERF Cannon"],
    "Components": ["Quantum Reactor", "Biometal Leg", "Biometal Leg", "Adv. Power Amplifier", "Energy Well", "Energy Well", "Adv. Cooling System", "Adv. Coolant Injector", "Quantum Capacitor"],
    "Analysis": "X-series specialists each possess unique loadouts for a specific purpose. The X-87 Electro is built around a single compact HERF cannon, equipped with enough energy to sustain firing for a time that generally exceeds the duration of most encounters, frequently cut short because targets are likely to flee rather than risk the debilitating effects of so much electromagnetic corruption at once.",
    "Armament String": "Com. HERF Cannon",
    "Components String": "Quantum Reactor, 2x Biometal Leg, Adv. Power Amplifier, 2x Energy Well, Adv. Cooling System, Adv. Coolant Injector, Quantum Capacitor"
  },
  "H-55 Commando": {
    "Name": "H-55 Commando",
    "Class": "Hunter",
    "Tier": "3",
    "Threat": "1",
    "Rating": "21",
    "Value": "55",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "25",
    "Core Integrity": "30",
    "Core Exposure": "227",
    "Core Exposure %": "34",
    "Salvage Potential": "40~60",
    "Traits": ["Scan Cloak (1): Hides this robot from sensors without a Signal Interpreter of at least strength 1."],
    "Fabrication Count": "2",
    "Fabrication Time": "116/58/38",
    "Armament": ["Gauss Rifle", "Assault Rifle"],
    "Components": ["Lgt. Nuclear Core", "Carbon-fiber Leg", "Carbon-fiber Leg", "Targeting Computer"],
    "Analysis": "H-series hunters aggressively track down intruders, and have multiple means of ensuring they can complete that task. Their advanced probability systems are capable of predicting target positions for some time after contact is lost. When necessary, hunter squad leaders also launch an autonomous drone from their built-in drone bay to help find escaped targets. The H-55 cannot be remotely detected by low-level sensor arrays.",
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "Gauss Rifle, Assault Rifle",
    "Components String": "Lgt. Nuclear Core, 2x Carbon-fiber Leg, Targeting Computer"
  },
  "H-66 Slayer": {
    "Name": "H-66 Slayer",
    "Class": "Hunter",
    "Tier": "5",
    "Threat": "2",
    "Rating": "41",
    "Value": "66",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "33",
    "Core Integrity": "45",
    "Core Exposure": "325",
    "Core Exposure %": "34",
    "Salvage Potential": "50~70",
    "Traits": ["Scan Cloak (2): Hides this robot from sensors without a Signal Interpreter of at least strength 2."],
    "Fabrication Count": "2",
    "Fabrication Time": "152/76/50",
    "Armament": ["Gauss Rifle", "Gauss Rifle", "Hvy. Assault Rifle"],
    "Components": ["Lgt. Fission Core", "Flexi-carbon Leg", "Flexi-carbon Leg", "Targeting Computer", "Targeting Computer", "Phase Shifter"],
    "Analysis": "H-66 Slayers are armed with a supplementary dual gauss rifles, which combined with the H-66's embedded close-range scanners can be used to penetrate walls to strike targets on the opposite side. The H-66 also uses two targeting computers in parallel for greater accuracy. The H-66 can only be remotely detected by mid-level sensor arrays.",
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "2x Gauss Rifle, Hvy. Assault Rifle",
    "Components String": "Lgt. Fission Core, 2x Flexi-carbon Leg, 2x Targeting Computer, Phase Shifter"
  },
  "H-77 Assassin": {
    "Name": "H-77 Assassin",
    "Class": "Hunter",
    "Tier": "7",
    "Threat": "3",
    "Rating": "56",
    "Value": "77",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "37",
    "Core Integrity": "65",
    "Core Exposure": "324",
    "Core Exposure %": "34",
    "Salvage Potential": "60~85",
    "Traits": ["Scan Cloak (3): Hides this robot from sensors without a Signal Interpreter of at least strength 3."],
    "Fabrication Count": "2",
    "Fabrication Time": "187/93/62",
    "Armament": ["Coil Gun", "Coil Gun", "Hpw. Shotgun"],
    "Components": ["Lgt. Antimatter Reactor", "Myomer Leg", "Myomer Leg", "Imp. Targeting Computer", "Imp. Phase Shifter"],
    "Analysis": "The H-77 Assassin swaps out the H-66's gauss rifles for dual coilguns. The Assassin's position is somewhat masked by an improved Phase Shifter, making it more difficult to accurately target. The H-77 can only be remotely detected by high-level sensor arrays.",
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "2x Coil Gun, Hpw. Shotgun",
    "Components String": "Lgt. Antimatter Reactor, 2x Myomer Leg, Imp. Targeting Computer, Imp. Phase Shifter"
  },
  "H-88 Terminator": {
    "Name": "H-88 Terminator",
    "Class": "Hunter",
    "Tier": "9",
    "Threat": "4",
    "Rating": "69",
    "Value": "88",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "40",
    "Core Integrity": "75",
    "Core Exposure": "324",
    "Core Exposure %": "34",
    "Salvage Potential": "70~100",
    "Traits": ["Scan Cloak (4): Hides this robot from sensors without a Signal Interpreter of at least strength 4."],
    "Fabrication Count": "2",
    "Fabrication Time": "222/111/74",
    "Armament": ["KE Penetrator", "KE Penetrator", "Hvy. Machine Gun"],
    "Components": ["Lgt. Quantum Reactor", "Biometal Leg", "Biometal Leg", "Adv. Targeting Computer", "Adv. Phase Shifter"],
    "Analysis": "The deadliest hunter class robot, armed with both a heavy machine gun and two KE penetrators, is well-cloaked and very difficult to hit, while possessing advanced targeting capabilities itself. The H-88 Terminator cannot be remotely detected by standard sensor array technology, though recent prototype sensors have shown some promise at penetrating even the best cloaking techniques.",
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "2x KE Penetrator, Hvy. Machine Gun",
    "Components String": "Lgt. Quantum Reactor, 2x Biometal Leg, Adv. Targeting Computer, Adv. Phase Shifter"
  },
  "P-60 Hacker": {
    "Name": "P-60 Hacker",
    "Class": "Programmer",
    "Tier": "4",
    "Threat": "1",
    "Rating": "37",
    "Value": "60",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "43",
    "Core Integrity": "30",
    "Core Exposure": "185",
    "Core Exposure %": "29",
    "Salvage Potential": "40~50",
    "Immunities": ["Hacking"],
    "Fabrication Count": "2",
    "Fabrication Time": "134/67/44",
    "Armament": ["Remote Datajack", "Shock Rifle", "Shock Rifle"],
    "Components": ["Mic. Nuclear Core", "Gravmag System", "Gravmag System", "Target Analyzer", "Imp. Heat Sink", "Imp. Heat Sink"],
    "Analysis": "P-series programmers are the primary means of asserting control over areas of unwanted derelict activity. As they are often dispatched to combat environments, programmers are equipped with both electromagnetic weaponry and dedicated target analysis components enabling them to quickly incapacitate hostiles.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "-25",
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Remote Datajack, 2x Shock Rifle",
    "Components String": "Mic. Nuclear Core, 2x Gravmag System, Target Analyzer, 2x Imp. Heat Sink"
  },
  "P-70 Sage": {
    "Name": "P-70 Sage",
    "Class": "Programmer",
    "Tier": "6",
    "Threat": "2",
    "Rating": "54",
    "Value": "70",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "25",
    "Heat Dissipation": "54",
    "Core Integrity": "40",
    "Core Exposure": "185",
    "Core Exposure %": "29",
    "Salvage Potential": "50~60",
    "Immunities": ["Hacking"],
    "Fabrication Count": "2",
    "Fabrication Time": "169/84/56",
    "Armament": ["Imp. Remote Datajack", "Hpw. Shock Rifle", "Tesla Rifle"],
    "Components": ["Mic. Fission Core", "Antigrav System", "Antigrav System", "Imp. Target Analyzer", "Imp. Heat Sink", "Imp. Heat Sink"],
    "Analysis": "The P-70 Sage replaces one P-60 shock rifle with a high-powered version, and swaps the other one out for a tesla rifle. Like all programmers, the P-70 can engage in both defensive and offensive remote hacking.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "-25",
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Imp. Remote Datajack, Hpw. Shock Rifle, Tesla Rifle",
    "Components String": "Mic. Fission Core, 2x Antigrav System, Imp. Target Analyzer, 2x Imp. Heat Sink"
  },
  "P-80 Master": {
    "Name": "P-80 Master",
    "Class": "Programmer",
    "Tier": "8",
    "Threat": "3",
    "Rating": "82",
    "Value": "80",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "52",
    "Sight Range": "16",
    "Energy Generation": "34",
    "Heat Dissipation": "73",
    "Core Integrity": "50",
    "Core Exposure": "215",
    "Core Exposure %": "29",
    "Salvage Potential": "60~70",
    "Immunities": ["Hacking"],
    "Fabrication Count": "2",
    "Fabrication Time": "204/102/68",
    "Armament": ["Adv. Remote Datajack", "Gamma Rifle", "Gamma Rifle"],
    "Components": ["Mic. Antimatter Reactor", "Imp. Antigrav System", "Imp. Antigrav System", "Imp. Antigrav System", "Adv. Target Analyzer", "Adv. Heat Sink", "Adv. Heat Sink", "Sml. Battery", "Sml. Battery"],
    "Analysis": "The P-80 Master is armed with dual gamma rifles, the most powerful type of standard electromagnetic gun. Like other P-series robots, the P-80 uses specialized armor insulated against electromagnetic damage, though compromises in design leave it slightly weak against kinetic attacks.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "-25",
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Adv. Remote Datajack, 2x Gamma Rifle",
    "Components String": "Mic. Antimatter Reactor, 3x Imp. Antigrav System, Adv. Target Analyzer, 2x Adv. Heat Sink, 2x Sml. Battery"
  },
  "H-61 Shepherd": {
    "Name": "H-61 Shepherd",
    "Class": "Heavy",
    "Tier": "3",
    "Threat": "3",
    "Rating": "90",
    "Value": "61",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "18",
    "Energy Generation": "21",
    "Heat Dissipation": "52",
    "Core Integrity": "60",
    "Core Exposure": "490",
    "Core Exposure %": "24",
    "Salvage Potential": "60~75",
    "Armament": ["Hvy. Assault Cannon"],
    "Components": ["Rnf. Deuterium Engine", "Arm. Treads", "Arm. Treads", "Arm. Treads", "Cooling System", "Hrd. Heavy Armor Plating", "Graphene Brace", "Dynamic Insulation System", "Active Sensor Suite", "Transmission Jammer", "Visual Processing Unit", "Weapon Cycler", "Targeting Computer"],
    "Analysis": "While it's unlikely intruders would underestimate a heavy on seeing their impressive offensive loadout, this line is even more formidable than it first appears given their ability to selectively mask nearby allies from standard sensor systems, and their authority to call in multiple reinforcements on suspected targets detected via active scanning. Normally assigned to defend choke points, heavies also intermittently relocate to increase coverage and make it less likely intruders will slip through unnoticed.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "50",
      "Slashing": "50",
      "Piercing": "50"
    },
    "Armament String": "Hvy. Assault Cannon",
    "Components String": "Rnf. Deuterium Engine, 3x Arm. Treads, Cooling System, Hrd. Heavy Armor Plating, Graphene Brace, Dynamic Insulation System, Active Sensor Suite, Transmission Jammer, Visual Processing Unit, Weapon Cycler, Targeting Computer"
  },
  "H-71 Marshal": {
    "Name": "H-71 Marshal",
    "Class": "Heavy",
    "Tier": "6",
    "Threat": "4",
    "Rating": "137",
    "Value": "71",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "20",
    "Energy Generation": "34",
    "Heat Dissipation": "71",
    "Core Integrity": "90",
    "Core Exposure": "519",
    "Core Exposure %": "25",
    "Salvage Potential": "80~100",
    "Armament": ["Hvy. Mass Driver"],
    "Components": ["Rnf. Fission Core", "Arm. Medium Treads", "Arm. Medium Treads", "Arm. Medium Treads", "Imp. Cooling System", "Imp. Heat Sink", "Imp. Heavy Armor Plating", "Graphene Brace", "Imp. Dynamic Insulation System", "EM Disruption Field", "Active Sensor Suite", "Imp. Transmission Jammer", "Adv. Visual Processing Unit", "Imp. Weapon Cycler", "Kinecellerator", "Imp. Targeting Computer"],
    "Analysis": "The H-71 Marshal improves on the H-61 in almost every way, most notably with an even more powerful heavy cannon paired with a Kinecellerator, and better protection against electromagnetic damage.",
    "Resistances": {
      "Explosive": "50",
      "Electromagnetic": "25",
      "Impact": "50",
      "Slashing": "50",
      "Piercing": "50"
    },
    "Armament String": "Hvy. Mass Driver",
    "Components String": "Rnf. Fission Core, 3x Arm. Medium Treads, Imp. Cooling System, Imp. Heat Sink, Imp. Heavy Armor Plating, Graphene Brace, Imp. Dynamic Insulation System, EM Disruption Field, Active Sensor Suite, Imp. Transmission Jammer, Adv. Visual Processing Unit, Imp. Weapon Cycler, Kinecellerator, Imp. Targeting Computer"
  },
  "H-81 Overseer": {
    "Name": "H-81 Overseer",
    "Class": "Heavy",
    "Tier": "9",
    "Threat": "5",
    "Rating": "178",
    "Value": "81",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "22",
    "Energy Generation": "40",
    "Heat Dissipation": "80",
    "Core Integrity": "120",
    "Core Exposure": "572",
    "Core Exposure %": "24",
    "Salvage Potential": "100~125",
    "Armament": ["Hvy. Linear Accelerator"],
    "Components": ["Rnf. Quantum Reactor", "Arm. Heavy Treads", "Arm. Heavy Treads", "Adv. Cooling System", "Adv. Heat Sink", "Lyr. Heavy Armor Plating", "Graphene Brace", "Imp. Dynamic Insulation System", "EM Disruption Field", "Active Sensor Suite", "Adv. Transmission Jammer", "Enh. Optical Array", "Adv. Weapon Cycler", "Imp. Kinecellerator", "Adv. Targeting Computer"],
    "Analysis": "H-81 Overseers are equipped with the heaviest Linear Accelerator variant and the utilities to back it up, able to hit harder and further, all while managing nearby combat robots in order to concentrate defensive efforts and quickly subdue hostile forces.",
    "Resistances": {
      "Explosive": "50",
      "Electromagnetic": "25",
      "Impact": "50",
      "Slashing": "50",
      "Piercing": "50"
    },
    "Armament String": "Hvy. Linear Accelerator",
    "Components String": "Rnf. Quantum Reactor, 2x Arm. Heavy Treads, Adv. Cooling System, Adv. Heat Sink, Lyr. Heavy Armor Plating, Graphene Brace, Imp. Dynamic Insulation System, EM Disruption Field, Active Sensor Suite, Adv. Transmission Jammer, Enh. Optical Array, Adv. Weapon Cycler, Imp. Kinecellerator, Adv. Targeting Computer"
  },
  "Q-Series": {
    "Name": "Q-Series",
    "Class": "Q-Series",
    "Tier": "8",
    "Threat": "5",
    "Rating": "83",
    "Value": "90",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "54",
    "Heat Dissipation": "90",
    "Core Integrity": "75",
    "Core Exposure": "275",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Immunities": ["Hacking", "Jamming"],
    "Components": ["Lgt. Particle Reactor", "Lgt. Antimatter Reactor", "Biometal Leg", "Biometal Leg", "Biometal Leg", "Lyr. Medium Armor Plating", "Imp. Core Shielding", "Adv. Cooling System", "Adv. Heat Sink", "Adv. Dynamic Insulation System"],
    "Analysis": "Q-Series robots are a new modular design built to deal with specific threats as they are encountered. The base form is an armored walker with a strong well-concealed core and numerous additional slots available for both utilities and armament.",
    "Components String": "Lgt. Particle Reactor, Lgt. Antimatter Reactor, 3x Biometal Leg, Lyr. Medium Armor Plating, Imp. Core Shielding, Adv. Cooling System, Adv. Heat Sink, Adv. Dynamic Insulation System"
  },
  "B-75 Beast": {
    "Name": "B-75 Beast",
    "Class": "Behemoth",
    "Tier": "5",
    "Threat": "1",
    "Rating": "85",
    "Value": "75",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "32",
    "Heat Dissipation": "84",
    "Core Integrity": "110",
    "Core Exposure": "324",
    "Core Exposure %": "19",
    "Salvage Potential": "70~100",
    "Immunities": ["Coring"],
    "Armament": ["Hvy. Plasma Cannon", "Magnetic Acceleration Cannon", "Hvy. Machine Gun"],
    "Components": ["Rnf. Deuterium Engine", "Rnf. Deuterium Engine", "Imp. Medium Treads", "Imp. Medium Treads", "Imp. Medium Treads", "Lyr. Medium Armor Plating", "Med. Reflective Plating", "Dynamic Insulation System", "Imp. Cooling System", "Imp. Cooling System", "Coolant Injector"],
    "Analysis": "B-series behemoths are heavy weapons platforms stationed in open areas, often constructed directly in the very areas they defend for lack of sufficiently large access corridors. While their components could have been designed to fit a smaller frame, much of the redundant internal structure is devoted to preventing critical system failures. The B-75 Beast carries two cannons and a backup light weapon, making it especially effective against singular hardened targets.",
    "Resistances": {
      "Thermal": "-10",
      "Electromagnetic": "25"
    },
    "Armament String": "Hvy. Plasma Cannon, Magnetic Acceleration Cannon, Hvy. Machine Gun",
    "Components String": "2x Rnf. Deuterium Engine, 3x Imp. Medium Treads, Lyr. Medium Armor Plating, Med. Reflective Plating, Dynamic Insulation System, 2x Imp. Cooling System, Coolant Injector"
  },
  "B-86 Titan": {
    "Name": "B-86 Titan",
    "Class": "Behemoth",
    "Tier": "7",
    "Threat": "2",
    "Rating": "116",
    "Value": "86",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "92",
    "Core Integrity": "125",
    "Core Exposure": "527",
    "Core Exposure %": "20",
    "Salvage Potential": "90~130",
    "Immunities": ["Coring"],
    "Armament": ["Matter Neutralizer", "Hardcell Cannon", "Railgun"],
    "Components": ["Rnf. Fission Core", "Hvy. Treads", "Hvy. Treads", "Hrd. Heavy Armor Plating", "Hvy. Reflective Plating", "Dynamic Insulation System", "Adv. Cooling System", "Adv. Cooling System", "Imp. Coolant Injector"],
    "Analysis": "B-86 Titans upgrade the B-75's cannons to a matter neutralizer and hardcell cannon, pairing them with a secondary railgun. Like other behemoths, the B-86 is equipped with both reflective armor and an insulated core to mitigate the negative effects of most electromagnetic weapons, which would otherwise render high-coverage heavy armor pointless.",
    "Resistances": {
      "Electromagnetic": "25"
    },
    "Armament String": "Matter Neutralizer, Hardcell Cannon, Railgun",
    "Components String": "Rnf. Fission Core, 2x Hvy. Treads, Hrd. Heavy Armor Plating, Hvy. Reflective Plating, Dynamic Insulation System, 2x Adv. Cooling System, Imp. Coolant Injector"
  },
  "B-90 Cyclops": {
    "Name": "B-90 Cyclops",
    "Class": "Behemoth",
    "Tier": "9",
    "Threat": "4",
    "Rating": "148",
    "Value": "90",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "16",
    "Energy Generation": "40",
    "Heat Dissipation": "148",
    "Core Integrity": "140",
    "Core Exposure": "494",
    "Core Exposure %": "19",
    "Salvage Potential": "110~160",
    "Immunities": ["Coring"],
    "Armament": ["Nova Cannon"],
    "Components": ["Rnf. Antimatter Reactor", "Arm. Heavy Treads", "Arm. Heavy Treads", "Adv. Power Amplifier", "Imp. Heavy Armor Plating", "Med. Reflective Plating", "Med. Insulated Plating", "Imp. Weapon Shielding", "Imp. Dynamic Insulation System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Coolant Injector", "Quantum Capacitor"],
    "Analysis": "The B-90 Cyclops is built around a single massive nova cannon, a design decision I originally regretted as they were relatively easy to disarm. Newer versions implement dedicated weapon shielding for the cannon itself, and improved firing rates made possible by a new capacitor design. Like all behemoth class robots, the B-90's overall structure is slightly weak against kinetic attacks, but is protected by sufficient armor to make up for it.",
    "Resistances": {
      "Thermal": "-10",
      "Electromagnetic": "45"
    },
    "Armament String": "Nova Cannon",
    "Components String": "Rnf. Antimatter Reactor, 2x Arm. Heavy Treads, Adv. Power Amplifier, Imp. Heavy Armor Plating, Med. Reflective Plating, Med. Insulated Plating, Imp. Weapon Shielding, Imp. Dynamic Insulation System, 3x Adv. Cooling System, Adv. Coolant Injector, Quantum Capacitor"
  },
  "B-99 Colossus": {
    "Name": "B-99 Colossus",
    "Class": "Behemoth",
    "Tier": "10",
    "Threat": "5",
    "Rating": "219",
    "Value": "99",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "16",
    "Energy Generation": "50",
    "Heat Dissipation": "118",
    "Core Integrity": "160",
    "Core Exposure": "864",
    "Core Exposure %": "19",
    "Salvage Potential": "130~200",
    "Immunities": ["Coring"],
    "Armament": ["Linear Accelerator", "Linear Accelerator", "Multirail", "Multirail"],
    "Components": ["Rnf. Quantum Reactor", "Rnf. Quantum Reactor", "Arm. Heavy Treads", "Arm. Heavy Treads", "Arm. Heavy Treads", "Lyr. Heavy Armor Plating", "Hvy. Reflective Plating", "Hvy. Insulated Plating", "Imp. Dynamic Insulation System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Coolant Injector", "Adv. Force Field", "Imp. Utility Shielding", "Imp. Core Shielding"],
    "Analysis": "As the most powerful standard-line combat robot, a B-99 Colossus will only be stationed in areas with a confirmed significant threat. In addition to armor effective against both thermal and electromagnetic damage, the B-99 is equipped to withstand a sustained attack of almost any kind with its advanced force field. Only the most hardened target can withstand its volley of eight simultaneous slugs.",
    "Resistances": {
      "Electromagnetic": "55"
    },
    "Armament String": "2x Linear Accelerator, 2x Multirail",
    "Components String": "2x Rnf. Quantum Reactor, 3x Arm. Heavy Treads, Lyr. Heavy Armor Plating, Hvy. Reflective Plating, Hvy. Insulated Plating, Imp. Dynamic Insulation System, 3x Adv. Cooling System, Adv. Coolant Injector, Adv. Force Field, Imp. Utility Shielding, Imp. Core Shielding"
  },
  "C-40 Crusher": {
    "Name": "C-40 Crusher",
    "Class": "Compactor",
    "Tier": "6",
    "Threat": "4",
    "Rating": "141",
    "Value": "40",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "12",
    "Energy Generation": "42",
    "Heat Dissipation": "104",
    "Core Integrity": "80",
    "Core Exposure": "753",
    "Core Exposure %": "14",
    "Salvage Potential": "200~350",
    "Armament": ["Compactor"],
    "Components": ["Antimatter Reactor", "Antimatter Reactor", "Hvy. Treads", "Hvy. Treads", "Imp. Cooling System", "Imp. Cooling System", "Damper Plating", "Damper Plating", "Dynamic Insulation System", "Imp. Propulsion Shielding"],
    "Analysis": "Compactors break down obsolete robot models, and the occasional intruder sucked down a chute hatch. They are slow, but built to withstand both damage from the rugged environment of waste processing areas and dangerous shocks caused by electromagnetic radiation during robot deconstruction.",
    "Resistances": {
      "Explosive": "-100",
      "Electromagnetic": "90",
      "Slashing": "50",
      "Piercing": "50"
    },
    "Armament String": "Compactor",
    "Components String": "2x Antimatter Reactor, 2x Hvy. Treads, 2x Imp. Cooling System, 2x Damper Plating, Dynamic Insulation System, Imp. Propulsion Shielding"
  },
  "Cetus Guard": {
    "Name": "Cetus Guard",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "82",
    "Value": "125",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "53",
    "Core Integrity": "100",
    "Core Exposure": "390",
    "Core Exposure %": "34",
    "Salvage Potential": "60~80",
    "Immunities": ["Jamming"],
    "Armament": ["Adv. Variable Charge Gun", "Adv. KE Penetrator"],
    "Components": ["Quantum Reactor", "Centrium Heavy Treads", "Centrium Medium Armor Plating", "Adv. Heat Sink", "Adv. Heat Sink"],
    "Analysis": "Cetus Guards are a variant of the Y-72 outfitted with prototype technology, the first of many such experiments aimed at testing new designs in the field, albeit in this case located in an area that generally sees little to no hostile activity.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Adv. Variable Charge Gun, Adv. KE Penetrator",
    "Components String": "Quantum Reactor, Centrium Heavy Treads, Centrium Medium Armor Plating, 2x Adv. Heat Sink"
  },
  "Quarantine Guard": {
    "Name": "Quarantine Guard",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "145",
    "Value": "200",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "145",
    "Sight Range": "16",
    "Energy Generation": "40",
    "Heat Dissipation": "77",
    "Core Integrity": "150",
    "Core Exposure": "543",
    "Core Exposure %": "34",
    "Salvage Potential": "60~80",
    "Immunities": ["Jamming"],
    "Armament": ["Hcl. Linear Accelerator", "Hcl. Linear Accelerator"],
    "Components": ["Quantum Reactor", "Mic. Nuclear Core", "Adv. Medium Treads", "Adv. Medium Treads", "Adv. Medium Treads", "Centrium Medium Armor Plating", "Adv. Matter Compressor", "Adv. Cryofiber Web", "Exp. Thermal Generator", "Adv. Cryofiber Web", "Adv. Cooling System", "Adv. Cooling System", "Exp. Coolant Injector"],
    "Analysis": "Designed for the sole purpose of maintaining maximum operating efficiency in high-heat environments, Quarantine Guards are the most powerful and advanced Y-72 variant to date, supporting dual hypercooled linear accelerators with extra matter storage and a backup power source in combination with an array of heat management utilities.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "2x Hcl. Linear Accelerator",
    "Components String": "Quantum Reactor, Mic. Nuclear Core, 3x Adv. Medium Treads, Centrium Medium Armor Plating, Adv. Matter Compressor, Adv. Cryofiber Web, Exp. Thermal Generator, Adv. Cryofiber Web, 2x Adv. Cooling System, Exp. Coolant Injector"
  },
  "S7 Guard": {
    "Name": "S7 Guard",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "115",
    "Value": "200",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "135",
    "Sight Range": "23",
    "Energy Generation": "44",
    "Heat Dissipation": "106",
    "Core Integrity": "150",
    "Core Exposure": "510",
    "Core Exposure %": "29",
    "Salvage Potential": "80~100",
    "Immunities": ["Coring", "Disruption", "Jamming"],
    "Armament": ["Hardcell Cannon", "Lrn. Phase Cannon"],
    "Components": ["Imp. Quantum Reactor", "Exp. Biometal Heavy Treads", "Hvy. Regenerative Plating", "Exp. Optical Array", "Exp. Cooling System", "Exp. Cooling System"],
    "Analysis": "S7 Guards are the first variant in a new line of sentry frames, better fulfilling their purpose with built-in resistance to most forms of damage, and self-regenerating armor to ensure long-term defense of a position until reinforcements can arrive.",
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "25",
      "Explosive": "50",
      "Electromagnetic": "50",
      "Impact": "25"
    },
    "Armament String": "Hardcell Cannon, Lrn. Phase Cannon",
    "Components String": "Imp. Quantum Reactor, Exp. Biometal Heavy Treads, Hvy. Regenerative Plating, Exp. Optical Array, 2x Exp. Cooling System"
  },
  "M Guard": {
    "Name": "M Guard",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "215",
    "Value": "300",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "135",
    "Sight Range": "16",
    "Energy Generation": "76",
    "Heat Dissipation": "68",
    "Core Integrity": "200",
    "Core Exposure": "423",
    "Core Exposure %": "24",
    "Salvage Potential": "80~100",
    "Immunities": ["Coring", "Disruption", "Jamming"],
    "Armament": [[{
      "name": "Graviton Cannon"
    }, {
      "name": "Cld. Nova Cannon"
    }], [{
      "name": "Hellfire Missile Launcher"
    }, {
      "name": "Adv. Micro-nuke Launcher"
    }, {
      "name": "Ragnarok Missile Launcher"
    }]],
    "Components": ["Zero-point Reactor", "Zero-point Reactor", "Exp. Biometal Heavy Treads", "Quantum Shading Machine", "Hvy. Regenerative Plating", "AEGIS Remote Shield", "Thermal Barrier", "Exp. Energy Well", "Exp. Energy Well", "Exp. Energy Well", "Exp. Energy Well", "Exp. Matter Compressor", "Exp. Cooling System", "Exp. Coolant Injector", "Exp. Targeting Computer"],
    "Analysis": "The first application of prototype AEGIS shielding is naturally found in the most important of designs, my own guards. With enough energy to power it through extended confrontations even while protecting nearby allies, it would almost be enough to justify accompanying M Guards with additional squads of front-line robots, if not for their powerful AOE weaponry making close-quarters combat with allied forces problematic.",
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "75",
      "Explosive": "50",
      "Electromagnetic": "50",
      "Impact": "25"
    },
    "Armament String": "Graviton Cannon OR Cld. Nova Cannon, Hellfire Missile Launcher OR Adv. Micro-nuke Launcher OR Ragnarok Missile Launcher",
    "Components String": "2x Zero-point Reactor, Exp. Biometal Heavy Treads, Quantum Shading Machine, Hvy. Regenerative Plating, AEGIS Remote Shield, Thermal Barrier, 4x Exp. Energy Well, Exp. Matter Compressor, Exp. Cooling System, Exp. Coolant Injector, Exp. Targeting Computer"
  },
  "M Shell/Atk": {
    "Name": "M Shell/Atk",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "177",
    "Value": "300",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "50",
    "Heat Dissipation": "68",
    "Core Integrity": "200",
    "Core Exposure": "412",
    "Core Exposure %": "25",
    "Salvage Potential": "80~100",
    "Immunities": ["Coring", "Disruption", "Jamming"],
    "Armament": [[{
      "name": "Hvy. Hardcell Cannon"
    }, {
      "name": "Enh. Nova Cannon"
    }]],
    "Components": ["Rnf. Quantum Reactor", "Enh. Armored Heavy Treads", "Med. Regenerative Plating", "Med. Regenerative Plating", "Exp. Weapon Shielding", "Exp. Energy Well", "Exp. Matter Compressor", "Exp. Cooling System", "Exp. Coolant Injector", "Exp. Weapon Cycler", "Adv. Particle Accelerator", "Adv. Kinecellerator", "Exp. Targeting Computer"],
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "25",
      "Explosive": "50",
      "Electromagnetic": "50",
      "Impact": "25"
    },
    "Armament String": "Hvy. Hardcell Cannon OR Enh. Nova Cannon",
    "Components String": "Rnf. Quantum Reactor, Enh. Armored Heavy Treads, 2x Med. Regenerative Plating, Exp. Weapon Shielding, Exp. Energy Well, Exp. Matter Compressor, Exp. Cooling System, Exp. Coolant Injector, Exp. Weapon Cycler, Adv. Particle Accelerator, Adv. Kinecellerator, Exp. Targeting Computer"
  },
  "M Shell/Def": {
    "Name": "M Shell/Def",
    "Class": "Protector (Prototype)",
    "Tier": "10",
    "Threat": "4",
    "Rating": "120",
    "Value": "60",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Movement": "Rolling",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "32",
    "Heat Dissipation": "20",
    "Core Integrity": "100",
    "Core Exposure": "814",
    "Core Exposure %": "50",
    "Salvage Potential": "60~80",
    "Components": ["Hyb. Antimatter Reactor", "Hyb. Antimatter Reactor", "Hdn. Centrium Wheel", "Hdn. Centrium Wheel", "Hdn. Centrium Wheel", "Exp. Power Amplifier", "Exp. Energy Well", "Exp. Energy Well", "Adv. Powered Armor", "Graphene Brace", "Imp. Energy Mantle", "Antimissile System"],
    "Resistances": {
      "Thermal": "25"
    },
    "Components String": "2x Hyb. Antimatter Reactor, 3x Hdn. Centrium Wheel, Exp. Power Amplifier, 2x Exp. Energy Well, Adv. Powered Armor, Graphene Brace, Imp. Energy Mantle, Antimissile System"
  },
  "Enhanced Grunt": {
    "Name": "Enhanced Grunt",
    "Class": "Grunt (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "96",
    "Value": "100",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "100",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "31",
    "Heat Dissipation": "72",
    "Core Integrity": "120",
    "Core Exposure": "398",
    "Core Exposure %": "39",
    "Salvage Potential": "80~110",
    "Armament": ["Neutron Cannon"],
    "Components": ["Antimatter Reactor", "Enh. Flexi-carbon Leg", "Enh. Flexi-carbon Leg", "Lyr. Medium Armor Plating", "Adv. Heat Sink", "Adv. Heat Sink", "Adv. Heat Sink", "Exp. Thermal Shield", "Adv. Energy Well", "Adv. Particle Charger"],
    "Resistances": {
      "Thermal": "30",
      "Electromagnetic": "25"
    },
    "Armament String": "Neutron Cannon",
    "Components String": "Antimatter Reactor, 2x Enh. Flexi-carbon Leg, Lyr. Medium Armor Plating, 3x Adv. Heat Sink, Exp. Thermal Shield, Adv. Energy Well, Adv. Particle Charger"
  },
  "Enhanced Sentry": {
    "Name": "Enhanced Sentry",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "150",
    "Value": "200",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "145",
    "Sight Range": "16",
    "Energy Generation": "39",
    "Heat Dissipation": "106",
    "Core Integrity": "150",
    "Core Exposure": "724",
    "Core Exposure %": "29",
    "Salvage Potential": "100~140",
    "Immunities": ["Coring", "Disruption"],
    "Armament": ["Hvy. Hardcell Cannon", "Lrn. Gatling Laser", "Lrn. Gatling Laser"],
    "Components": ["Imp. Quantum Reactor", "Adv. Heavy Treads", "Adv. Medium Treads", "Exp. Core Shielding", "Exp. Powered Armor", "Exp. Powered Armor", "Antimissile System", "Exp. Cooling System", "Exp. Cooling System"],
    "Resistances": {
      "Explosive": "50",
      "Electromagnetic": "50"
    },
    "Armament String": "Hvy. Hardcell Cannon, 2x Lrn. Gatling Laser",
    "Components String": "Imp. Quantum Reactor, Adv. Heavy Treads, Adv. Medium Treads, Exp. Core Shielding, 2x Exp. Powered Armor, Antimissile System, 2x Exp. Cooling System"
  },
  "Enhanced Demolisher": {
    "Name": "Enhanced Demolisher",
    "Class": "Demolisher (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "129",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "120",
    "Spot %": "50",
    "Movement": "Hovering",
    "Speed": "52",
    "Sight Range": "16",
    "Energy Generation": "31",
    "Heat Dissipation": "105",
    "Core Integrity": "120",
    "Core Exposure": "534",
    "Core Exposure %": "39",
    "Salvage Potential": "80~110",
    "Armament": ["Chain Missile Launcher"],
    "Components": ["Cld. Fission Core", "Cmb. Linear Gravjet", "Cmb. Linear Gravjet", "Cmb. Linear Gravjet", "Centrium Medium Armor Plating", "Exp. Shock Absorption System", "Coolant Network", "Adv. Launcher Guidance Computer", "Adv. Launcher Guidance Computer"],
    "Resistances": {
      "Explosive": "100",
      "Electromagnetic": "25",
      "Impact": "25"
    },
    "Armament String": "Chain Missile Launcher",
    "Components String": "Cld. Fission Core, 3x Cmb. Linear Gravjet, Centrium Medium Armor Plating, Exp. Shock Absorption System, Coolant Network, Adv. Launcher Guidance Computer, Adv. Launcher Guidance Computer"
  },
  "Enhanced Hunter": {
    "Name": "Enhanced Hunter",
    "Class": "Hunter (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "164",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "120",
    "Spot %": "75",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "43",
    "Heat Dissipation": "120",
    "Core Integrity": "120",
    "Core Exposure": "341",
    "Core Exposure %": "29",
    "Salvage Potential": "80~110",
    "Traits": ["Scan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["Hyp. Linear Accelerator", "Hyp. Linear Accelerator"],
    "Components": ["Quantum Reactor", "Exp. Biometal Leg", "Exp. Biometal Leg", "Exp. Biometal Leg", "Gravity Neutralizer", "Coolant Network", "Exp. Power Amplifier", "Desublimator", "Exp. Targeting Computer", "Exp. Phase Shifter", "Exp. Matter Compressor", "Exp. Weapon Cycler"],
    "Resistances": {
      "Electromagnetic": "50"
    },
    "Armament String": "2x Hyp. Linear Accelerator",
    "Components String": "Quantum Reactor, 3x Exp. Biometal Leg, Gravity Neutralizer, Coolant Network, Exp. Power Amplifier, Desublimator, Exp. Targeting Computer, Exp. Phase Shifter, Exp. Matter Compressor, Exp. Weapon Cycler"
  },
  "Enhanced Programmer": {
    "Name": "Enhanced Programmer",
    "Class": "Programmer (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "162",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "120",
    "Spot %": "75",
    "Movement": "Hovering",
    "Speed": "28",
    "Sight Range": "16",
    "Energy Generation": "74",
    "Heat Dissipation": "63",
    "Core Integrity": "120",
    "Core Exposure": "289",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Immunities": ["Hacking"],
    "Armament": ["Enh. Gamma Rifle", "Enh. Gamma Rifle"],
    "Components": ["Imp. Quantum Reactor", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Exp. Cooling System", "Exp. Target Analyzer", "Exp. Focal Shield", "Thermal Barrier", "Antimissile System", "Exp. Energy Well", "Imp. Energy Mantle"],
    "Resistances": {
      "Kinetic": "30",
      "Thermal": "50",
      "Explosive": "75",
      "Electromagnetic": "90"
    },
    "Armament String": "2x Enh. Gamma Rifle",
    "Components String": "Imp. Quantum Reactor, 4x Cld. Linear Gravjet, Exp. Cooling System, Exp. Target Analyzer, Exp. Focal Shield, Thermal Barrier, Antimissile System, Exp. Energy Well, Imp. Energy Mantle"
  },
  "Enhanced Q-Series": {
    "Name": "Enhanced Q-Series",
    "Class": "Q-Series (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "124",
    "Value": "300",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "120",
    "Spot %": "75",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "74",
    "Heat Dissipation": "114",
    "Core Integrity": "120",
    "Core Exposure": "285",
    "Core Exposure %": "30",
    "Salvage Potential": "90~150",
    "Immunities": ["Hacking", "Jamming"],
    "Components": ["Imp. Quantum Reactor", "Lgt. Quantum Reactor", "Exp. Biometal Leg", "Exp. Biometal Leg", "Exp. Biometal Leg", "Centrium Medium Armor Plating", "Exp. Core Shielding", "Exp. Cooling System", "Exp. Heat Sink", "Adv. Dynamic Insulation System", "Exp. Core Analyzer"],
    "Components String": "Imp. Quantum Reactor, Lgt. Quantum Reactor, 3x Exp. Biometal Leg, Centrium Medium Armor Plating, Exp. Core Shielding, Exp. Cooling System, Exp. Heat Sink, Adv. Dynamic Insulation System, Exp. Core Analyzer"
  },
  "Lightning": {
    "Name": "Lightning",
    "Class": "Hunter (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "109",
    "Value": "125",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "90",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "56",
    "Heat Dissipation": "51",
    "Core Integrity": "100",
    "Core Exposure": "281",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Immunities": ["Jamming"],
    "Traits": ["Scan Cloak (4): Hides this robot from sensors without a Signal Interpreter of at least strength 4."],
    "Armament": ["EMDS"],
    "Components": ["Quantum Reactor", "Enh. Biometal Leg", "Enh. Biometal Leg", "Exp. Heat Sink", "Adv. Power Amplifier", "Exp. Targeting Computer", "Exp. Phase Shifter", "Exp. EM Disruption Field", "Imp. Weapon Shielding"],
    "Analysis": "A specialized hunter prototype not yet in wide deployment, currently only used to defend sensitive areas in more maze-like environments where it can quickly dispatch of intruders through walls with its experimental EMDS. It also remains completely undetectable by any known non-visual sensor, and can even survive direct engagements against multiple hostiles with the aid of the most advanced cloaking technology to date.",
    "Resistances": {
      "Kinetic": "25",
      "Explosive": "25",
      "Electromagnetic": "100",
      "Impact": "-25"
    },
    "Armament String": "EMDS",
    "Components String": "Quantum Reactor, 2x Enh. Biometal Leg, Exp. Heat Sink, Adv. Power Amplifier, Exp. Targeting Computer, Exp. Phase Shifter, Exp. EM Disruption Field, Imp. Weapon Shielding"
  },
  "Tracker": {
    "Name": "Tracker",
    "Class": "Swarmer (Prototype)",
    "Tier": "10",
    "Threat": "4",
    "Rating": "84",
    "Value": "100",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "120",
    "Spot %": "100",
    "Movement": "Flying",
    "Speed": "15",
    "Sight Range": "22",
    "Energy Generation": "50",
    "Heat Dissipation": "66",
    "Core Integrity": "80",
    "Core Exposure": "285",
    "Core Exposure %": "39",
    "Salvage Potential": "50~80",
    "Immunities": ["Coring", "Jamming"],
    "Traits": ["Scan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["Linked Autogun", "Immobilizer"],
    "Components": ["Integrated Tracker Drive", "Exp. Heat Sink", "Exp. Phase Shifter", "Enh. Optical Array", "Lrn. Sensor Array", "Exp. Targeting Computer"],
    "Analysis": "Trackers are still new designs that may need more updates, but will no doubt become vital in the effort to protect my most important assets. Their built-in drive enables them to catch up to anything ever spotted coming out of the caves so far, and although they're equipped with valuable technology themselves, rather than harden them with armor and slow them down, Trackers have improved evasive capabilities to help avoid getting hit in the first place. The combination of rapid-fire Linked Autogun and Immobilizer for slowing fast targets will make Derelicts think twice before raiding upper 0b10 for spare parts.",
    "Resistances": {
      "Electromagnetic": "50"
    },
    "Armament String": "Linked Autogun, Immobilizer",
    "Components String": "Integrated Tracker Drive, Exp. Heat Sink, Exp. Phase Shifter, Enh. Optical Array, Lrn. Sensor Array, Exp. Targeting Computer"
  },
  "Combat Programmer": {
    "Name": "Combat Programmer",
    "Class": "Programmer (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "160",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "32",
    "Sight Range": "16",
    "Energy Generation": "66",
    "Heat Dissipation": "63",
    "Core Integrity": "120",
    "Core Exposure": "378",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Traits": ["Self-destructing: Leaves no parts on destruction, unless self-destruct mechanism fails due to system corruption."],
    "Armament": ["Exp. Remote Datajack", "EMDS"],
    "Components": ["Com. Particle Reactor", "Com. Particle Reactor", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Quantum Shading Machine", "Exp. Cooling System", "Exp. Target Analyzer", "Exp. Focal Shield", "Adv. Dynamic Insulation System", "Centrium Medium Armor Plating", "Exp. Weapon Shielding"],
    "Analysis": "As the first real front-line hacking bot, Combat Programmers are both shielded and armored to effectively face off against a variety of threats. While they possess significant hacking capabilities to make the most of time-critical situations, they also borrow the Lightning's EMDS and targeting systems, making them formidable even when outnumbered in combat. The latest model takes advantage of improved integrated shock resistance methods recently suggested by my researchers. Eventually a majority of programmers should be replaced with these combat variants.",
    "Resistances": {
      "Kinetic": "5",
      "Thermal": "-25",
      "Explosive": "90",
      "Electromagnetic": "75",
      "Impact": "-25"
    },
    "Armament String": "Exp. Remote Datajack, EMDS",
    "Components String": "2x Com. Particle Reactor, 3x Cld. Linear Gravjet, Quantum Shading Machine, Exp. Cooling System, Exp. Target Analyzer, Exp. Focal Shield, Adv. Dynamic Insulation System, Centrium Medium Armor Plating, Exp. Weapon Shielding"
  },
  "Investigator": {
    "Name": "Investigator",
    "Class": "Researcher (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "80",
    "Value": "70",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "46",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "25",
    "Core Integrity": "60",
    "Core Exposure": "282",
    "Core Exposure %": "39",
    "Salvage Potential": "60~80",
    "Immunities": ["Jamming"],
    "Armament": ["Exp. Stasis Projector", "Containment Facilitator"],
    "Components": ["Lgt. Quantum Reactor", "Antigrav Array", "Imp. Linear Gravjet", "Sml. Storage Unit", "Imp. System Guard", "Adv. Component Analysis Suite"],
    "Analysis": "Investigators are built specifically to oversee the testing of dangerous prototypes, and are therefore capable of holding multiple threats in place while supporting units deal with them.",
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "-50",
      "Impact": "-25",
      "Slashing": "-25",
      "Piercing": "-25"
    },
    "Armament String": "Exp. Stasis Projector, Containment Facilitator",
    "Components String": "Lgt. Quantum Reactor, Antigrav Array, Imp. Linear Gravjet, Sml. Storage Unit, Imp. System Guard, Adv. Component Analysis Suite"
  },
  "Striker": {
    "Name": "Striker",
    "Class": "Striker (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "99",
    "Value": "110",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Spot %": "50",
    "Movement": "Flying",
    "Speed": "42",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "54",
    "Core Integrity": "80",
    "Core Exposure": "105",
    "Core Exposure %": "20",
    "Salvage Potential": "60~80",
    "Armament": ["Com. Linear Accelerator", "Plasma Lance"],
    "Components": ["Lgt. Quantum Reactor", "Impulse Thruster Array", "Impulse Thruster Array", "Centrium Light Armor Plating", "Adv. Heat Sink", "Exp. Reaction Control System"],
    "Analysis": "The Striker is a prototype for a new class of combat robot, a large yet fast flier that fires its primary linear accelerator while approaching a target before engaging in melee with a plasma lance. An advanced reaction system makes the Striker more difficult to hit on approach despite its large size. The plasma lance is highly effective at skewering target cores.",
    "Resistances": {
      "Slashing": "20",
      "Piercing": "20"
    },
    "Armament String": "Com. Linear Accelerator, Plasma Lance",
    "Components String": "Lgt. Quantum Reactor, 2x Impulse Thruster Array, Centrium Light Armor Plating, Adv. Heat Sink, Exp. Reaction Control System"
  },
  "Executioner": {
    "Name": "Executioner",
    "Class": "Executioner (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "119",
    "Value": "120",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "23",
    "Energy Generation": "34",
    "Heat Dissipation": "36",
    "Core Integrity": "80",
    "Core Exposure": "166",
    "Core Exposure %": "24",
    "Salvage Potential": "70~100",
    "Armament": ["Helical Railgun", "Helical Railgun"],
    "Components": ["Imp. Quantum Reactor", "Enh. Biometal Leg", "Enh. Biometal Leg", "Exp. Heat Sink", "Exp. Optical Array", "Exp. Targeting Computer", "Exp. Core Analyzer", "Exp. Core Analyzer", "Adv. Kinecellerator", "Imp. Armor Integrity Analyzer"],
    "Analysis": "The Executioner is a prototype for a new class of combat robot armed with dual helical railgun prototypes, capable of piercing targets at extreme range with extreme accuracy, often bypassing any and all armor to strike the target's core directly.",
    "Armament String": "2x Helical Railgun",
    "Components String": "Imp. Quantum Reactor, 2x Enh. Biometal Leg, Exp. Heat Sink, Exp. Optical Array, Exp. Targeting Computer, 2x Exp. Core Analyzer, Adv. Kinecellerator, Imp. Armor Integrity Analyzer"
  },
  "Superbehemoth": {
    "Name": "Superbehemoth",
    "Class": "Behemoth (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "251",
    "Value": "300",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "50",
    "Heat Dissipation": "154",
    "Core Integrity": "250",
    "Core Exposure": "729",
    "Core Exposure %": "20",
    "Salvage Potential": "130~200",
    "Immunities": ["Coring"],
    "Armament": ["Helical Railgun", "Com. Linear Accelerator", "Prc. Phase Gun", "Prc. Phase Gun", "Com. Tesla Bomb Launcher"],
    "Components": ["Rnf. Quantum Reactor", "Rnf. Quantum Reactor", "Centrium Heavy Treads", "Centrium Heavy Treads", "Lyr. Heavy Armor Plating", "Hvy. Reflective Plating", "Hvy. Insulated Plating", "Adv. Dynamic Insulation System", "Exp. Cooling System", "Exp. Cooling System", "Exp. Cooling System", "Exp. Coolant Injector", "Exp. Force Field", "Exp. Utility Shielding", "Imp. Core Shielding", "Adv. Energy Well"],
    "Analysis": "Superbehemoth prototypes, now in their third revision, are the answer to increasingly powerful yet maneuverable derelict robots, which can attack guerrilla style then retreat into a network of narrow caves to avoid pursuit by the heaviest assault forces. Future efforts to completely clear and protect the Proximity Caves will require a more versatile heavy attacker capable of quickly burrowing through rock. To that end, Superbehemoth frames are embedded with a weaker version of the Sigix Matter Drive, while also carrying enough different weaponry to deal with a variety of threats without supporting units.",
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "55"
    },
    "Armament String": "Helical Railgun, Com. Linear Accelerator, 2x Prc. Phase Gun, Com. Tesla Bomb Launcher",
    "Components String": "2x Rnf. Quantum Reactor, 2x Centrium Heavy Treads, Lyr. Heavy Armor Plating, Hvy. Reflective Plating, Hvy. Insulated Plating, Adv. Dynamic Insulation System, 3x Exp. Cooling System, Exp. Coolant Injector, Exp. Force Field, Exp. Utility Shielding, Imp. Core Shielding, Adv. Energy Well"
  },
  "Alpha 7": {
    "Name": "Alpha 7",
    "Class": "Alpha 7 (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "152",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "100",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "64",
    "Heat Dissipation": "63",
    "Core Integrity": "200",
    "Core Exposure": "235",
    "Core Exposure %": "25",
    "Salvage Potential": "60~80",
    "Immunities": ["Coring", "Disruption", "Jamming"],
    "Armament": ["Multirail", [{
      "name": "Hvy. Quantum Rifle"
    }, {
      "name": "Enh. Gamma Rifle"
    }]],
    "Components": ["Imp. Quantum Reactor", "Hdn. Centrium Leg", "Hdn. Centrium Leg", "Centrium Medium Armor Plating", "Antimissile System", "Exp. ECM Suite", "Adv. Dynamic Insulation System", "Exp. Cooling System", "Exp. Targeting Computer", "Exp. Target Analyzer"],
    "Analysis": "The Alpha 7 is a prototype for a new class of combat robot, very accurate with its multirail and heavy quantum rifle. Some experimental variants instead use an enhanced gamma rifle. Alpha 7s are built with strong defensive capabilities and triple-encased core technology, enabling them to easily take on multiple opponents simultaneously, while a more advanced version of the behemoth-style critical failure prevention system provides the same advantages in a smaller frame.",
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "25",
      "Electromagnetic": "25",
      "Piercing": "-50"
    },
    "Armament String": "Multirail, Hvy. Quantum Rifle OR Enh. Gamma Rifle",
    "Components String": "Imp. Quantum Reactor, 2x Hdn. Centrium Leg, Centrium Medium Armor Plating, Antimissile System, Exp. ECM Suite, Adv. Dynamic Insulation System, Exp. Cooling System, Exp. Targeting Computer, Exp. Target Analyzer"
  },
  "Fortress": {
    "Name": "Fortress",
    "Class": "Fortress (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "343",
    "Value": "500",
    "Size Class": "Huge",
    "Size": "3",
    "Profile": "SQ9X9",
    "Memory": "20",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "120",
    "Heat Dissipation": "130",
    "Core Integrity": "500",
    "Core Exposure": "941",
    "Core Exposure %": "25",
    "Salvage Potential": "200~500",
    "Immunities": ["Coring", "Disruption"],
    "Armament": ["Enh. Nova Cannon", "Graviton Cannon"],
    "Components": ["Vortex Chain Reactor", "Vortex Chain Reactor", "Hdn. Centrium Heavy Treads", "Hdn. Centrium Heavy Treads", "Hdn. Centrium Heavy Treads", "Hdn. Centrium Heavy Treads", "Centrium Heavy Armor Plating", "Hvy. Insulated Plating", "Exp. EM Disruption Field", "Thermal Barrier", "Antimissile System", "Exp. Force Field", "Adv. Dynamic Insulation System", "Coolant Network", "Adv. Coolant Injector", "Exp. Weapon Shielding"],
    "Analysis": "Only two Fortress prototypes have been built to garrison vital locations, utilizing the latest centrium armor technology and a wide array of other defensive components to render them nearly immune to all forms of damage. While their offensive capabilities are limited to two powerful cannons, even a small army would have difficulty overcoming a Fortress before it picks them off one by one.",
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "75",
      "Explosive": "50",
      "Electromagnetic": "100"
    },
    "Armament String": "Enh. Nova Cannon, Graviton Cannon",
    "Components String": "2x Vortex Chain Reactor, 4x Hdn. Centrium Heavy Treads, Centrium Heavy Armor Plating, Hvy. Insulated Plating, Exp. EM Disruption Field, Thermal Barrier, Antimissile System, Exp. Force Field, Adv. Dynamic Insulation System, Coolant Network, Adv. Coolant Injector, Exp. Weapon Shielding"
  },
  "LRC-V4": {
    "Name": "LRC-V4",
    "Class": "LRC (Prototype)",
    "Tier": "10",
    "Threat": "1",
    "Rating": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Movement": "Core",
    "Speed": "50",
    "Sight Range": "16",
    "Energy Generation": "5",
    "Heat Dissipation": "25",
    "Core Integrity": "250",
    "Core Exposure": "100",
    "Core Exposure %": "100",
    "Salvage Potential": "0",
    "Immunities": ["Hacking"]
  },
  "LRC-V5": {
    "Name": "LRC-V5",
    "Class": "LRC (Prototype)",
    "Tier": "10",
    "Threat": "1",
    "Rating": "80",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Movement": "Core",
    "Speed": "50",
    "Sight Range": "18",
    "Energy Generation": "10",
    "Heat Dissipation": "35",
    "Core Integrity": "400",
    "Core Exposure": "100",
    "Core Exposure %": "100",
    "Salvage Potential": "0",
    "Immunities": ["Hacking"]
  },
  "LRC-V6": {
    "Name": "LRC-V6",
    "Class": "LRC (Prototype)",
    "Tier": "10",
    "Threat": "1",
    "Rating": "160",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Movement": "Core",
    "Speed": "50",
    "Sight Range": "20",
    "Energy Generation": "30",
    "Heat Dissipation": "50",
    "Core Integrity": "800",
    "Core Exposure": "100",
    "Core Exposure %": "100",
    "Salvage Potential": "0",
    "Immunities": ["Hacking"]
  },
  "Protovariant G": {
    "Name": "Protovariant G",
    "Class": "Grunt (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "142",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "40",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "68",
    "Heat Dissipation": "118",
    "Core Integrity": "140",
    "Core Exposure": "152",
    "Core Exposure %": "19",
    "Salvage Potential": "80~110",
    "Armament": [[{
      "name": "Prc. Phase Gun"
    }, {
      "name": "Hvy. Dispersion Rifle"
    }], [{
      "name": "Adv. Plasma Rifle"
    }, {
      "name": "Hvy. Wave Gun"
    }, {
      "name": "Adv. Variable Charge Gun"
    }, {
      "name": "Cld. Phase Gun"
    }], [{
      "name": "Cld. Plasma Rifle"
    }, {
      "name": "Enh. Force Rifle"
    }, {
      "name": "Hvy. Gatling Laser"
    }]],
    "Components": ["Imp. Quantum Reactor", "Imp. Quantum Reactor", [{
      "name": "Enh. Biometal Leg",
      "number": 3
    }, {
      "name": "Hdn. Centrium Leg",
      "number": 3
    }], [{
      "name": "Imp. Armor Integrity Analyzer"
    }, {
      "name": "Exp. Weapon Cycler"
    }], [{
      "name": "Exp. Targeting Computer"
    }, {
      "name": "Adv. Particle Charger"
    }], [{
      "name": "Exp. Heat Sink",
      "number": 3
    }, {
      "name": "Exp. Cooling System",
      "number": 3
    }], [{
      "name": "Exp. Utility Shielding"
    }, {
      "name": "Exp. Thermal Shield"
    }]],
    "Resistances": {
      "Kinetic": "-25",
      "Electromagnetic": "-25"
    },
    "Armament String": "Prc. Phase Gun OR Hvy. Dispersion Rifle, Adv. Plasma Rifle OR Hvy. Wave Gun OR Adv. Variable Charge Gun OR Cld. Phase Gun, Cld. Plasma Rifle OR Enh. Force Rifle OR Hvy. Gatling Laser",
    "Components String": "2x Imp. Quantum Reactor, 3x Enh. Biometal Leg OR 3x Hdn. Centrium Leg, Imp. Armor Integrity Analyzer OR Exp. Weapon Cycler, Exp. Targeting Computer OR Adv. Particle Charger, 3x Exp. Heat Sink OR 3x Exp. Cooling System, Exp. Utility Shielding OR Exp. Thermal Shield"
  },
  "Protovariant L": {
    "Name": "Protovariant L",
    "Class": "Duelist (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "114",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "44",
    "Heat Dissipation": "40",
    "Core Integrity": "140",
    "Core Exposure": "72",
    "Core Exposure %": "16",
    "Salvage Potential": "60~85",
    "Armament": [[{
      "name": "Vibroblade"
    }, {
      "name": "Molecular Scythe"
    }, {
      "name": "Nanosword"
    }], [{
      "name": "Vibroblade"
    }, {
      "name": "Molecular Scythe"
    }, {
      "name": "Nanosword"
    }]],
    "Components": [[{
      "name": "Com. Particle Reactor",
      "number": 2
    }, {
      "name": "Graviton Reactor"
    }], [{
      "name": "Adv. Myomer Leg",
      "number": 2
    }, {
      "name": "Enh. Biometal Leg",
      "number": 2
    }], "Stasis Canceller", [{
      "name": "Exp. Core Shielding"
    }, {
      "name": "Exp. Reaction Control System"
    }], "Exp. Melee Analysis Suite", "Exp. Core Analyzer", "Femtoactuators"],
    "Resistances": {
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Vibroblade OR Molecular Scythe OR Nanosword, Vibroblade OR Molecular Scythe OR Nanosword",
    "Components String": "2x Com. Particle Reactor OR Graviton Reactor, 2x Adv. Myomer Leg OR 2x Enh. Biometal Leg, Stasis Canceller, Exp. Core Shielding OR Exp. Reaction Control System, Exp. Melee Analysis Suite, Exp. Core Analyzer, Femtoactuators"
  },
  "Protovariant Y": {
    "Name": "Protovariant Y",
    "Class": "Sentry (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "153",
    "Value": "200",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "80",
    "Spot %": "50",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "38",
    "Heat Dissipation": "144",
    "Core Integrity": "170",
    "Core Exposure": "264",
    "Core Exposure %": "16",
    "Salvage Potential": "80~105",
    "Armament": [[{
      "name": "Imp. Matter Neutralizer"
    }, {
      "name": "Lrn. Phase Cannon"
    }, {
      "name": "Cld. Phase Cannon"
    }], [{
      "name": "Adv. KE Penetrator"
    }, {
      "name": "Helical Railgun"
    }], [{
      "name": "Quantum Rifle"
    }, {
      "name": "Prc. Phase Gun"
    }]],
    "Components": [[{
      "name": "Imp. Quantum Reactor",
      "number": 2
    }, {
      "name": "Com. Particle Reactor"
    }], [{
      "name": "Exp. Biometal Heavy Treads"
    }, {
      "name": "Enh. Armored Heavy Treads"
    }], [{
      "name": "Centrium Heavy Armor Plating"
    }, {
      "name": "Lyr. Heavy Armor Plating"
    }], [{
      "name": "Hvy. Reflective Plating"
    }, {
      "name": "Thermal Barrier"
    }], [{
      "name": "Exp. Target Analyzer"
    }, {
      "name": "Prc. Energy Filter"
    }], [{
      "name": "Exp. Heat Sink",
      "number": 4
    }, {
      "name": "Exp. Cooling System",
      "number": 3
    }]],
    "Resistances": {
      "Thermal": "50",
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Imp. Matter Neutralizer OR Lrn. Phase Cannon OR Cld. Phase Cannon, Adv. KE Penetrator OR Helical Railgun, Quantum Rifle OR Prc. Phase Gun",
    "Components String": "2x Imp. Quantum Reactor OR Com. Particle Reactor, Exp. Biometal Heavy Treads OR Enh. Armored Heavy Treads, Centrium Heavy Armor Plating OR Lyr. Heavy Armor Plating, Hvy. Reflective Plating OR Thermal Barrier, Exp. Target Analyzer OR Prc. Energy Filter, 4x Exp. Heat Sink OR 3x Exp. Cooling System"
  },
  "Protovariant D": {
    "Name": "Protovariant D",
    "Class": "Demolisher (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "122",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Hovering",
    "Speed": "72",
    "Sight Range": "16",
    "Energy Generation": "56",
    "Heat Dissipation": "55",
    "Core Integrity": "180",
    "Core Exposure": "133",
    "Core Exposure %": "20",
    "Salvage Potential": "70~100",
    "Armament": [[{
      "name": "Hellfire Missile Launcher"
    }, {
      "name": "Adv. Micro-nuke Launcher"
    }, {
      "name": "Ragnarok Missile Launcher"
    }]],
    "Components": ["Com. Particle Reactor", "Com. Particle Reactor", "Cmb. Antigrav System", "Cmb. Antigrav System", "Cmb. Antigrav System", "Centrium Medium Armor Plating", [{
      "name": "Antimissile System"
    }, {
      "name": "Exp. Shock Absorption System"
    }], [{
      "name": "Adv. Launcher Guidance Computer"
    }, {
      "name": "Imp. Launcher Guidance Computer",
      "number": 2
    }], "Exp. Weapon Shielding"],
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Hellfire Missile Launcher OR Adv. Micro-nuke Launcher OR Ragnarok Missile Launcher",
    "Components String": "2x Com. Particle Reactor, 3x Cmb. Antigrav System, Centrium Medium Armor Plating, Antimissile System OR Exp. Shock Absorption System, Adv. Launcher Guidance Computer OR 2x Imp. Launcher Guidance Computer, Exp. Weapon Shielding"
  },
  "Protovariant X": {
    "Name": "Protovariant X",
    "Class": "Specialist (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "159",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "100",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "24",
    "Energy Generation": "68",
    "Heat Dissipation": "116",
    "Core Integrity": "140",
    "Core Exposure": "115",
    "Core Exposure %": "14",
    "Salvage Potential": "60~90",
    "Armament": [[{
      "name": "Com. Linear Accelerator",
      "number": 3
    }, {
      "name": "Com. Mass Driver",
      "number": 3
    }]],
    "Components": [[{
      "name": "Com. Particle Reactor",
      "number": 2
    }, {
      "name": "Imp. Quantum Reactor",
      "number": 2
    }], [{
      "name": "Enh. Biometal Leg",
      "number": 3
    }, {
      "name": "Hdn. Centrium Leg",
      "number": 3
    }, {
      "name": "Exp. Biometal Leg",
      "number": 3
    }], "Exp. Cooling System", "Exp. Cooling System", [{
      "name": "Exp. Optical Array"
    }, {
      "name": "Spectral Analyzer"
    }], [{
      "name": "Exp. Thermal Shield"
    }, {
      "name": "Exp. Utility Shielding"
    }], [{
      "name": "Exp. Matter Compressor"
    }, {
      "name": "Prc. Matter Filter"
    }], "Exp. Transmission Jammer", "Exp. Targeting Computer"],
    "Resistances": {
      "Thermal": "30"
    },
    "Armament String": "3x Com. Linear Accelerator OR 3x Com. Mass Driver",
    "Components String": "2x Com. Particle Reactor OR 2x Imp. Quantum Reactor, 3x Enh. Biometal Leg OR 3x Hdn. Centrium Leg OR 3x Exp. Biometal Leg, 2x Exp. Cooling System, Exp. Optical Array OR Spectral Analyzer, Exp. Thermal Shield OR Exp. Utility Shielding, Exp. Matter Compressor OR Prc. Matter Filter, Exp. Transmission Jammer, Exp. Targeting Computer"
  },
  "Protovariant H": {
    "Name": "Protovariant H",
    "Class": "Hunter (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "147",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "120",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "68",
    "Heat Dissipation": "126",
    "Core Integrity": "150",
    "Core Exposure": "190",
    "Core Exposure %": "16",
    "Salvage Potential": "70~100",
    "Traits": ["Scan Cloak (4): Hides this robot from sensors without a Signal Interpreter of at least strength 4."],
    "Armament": [[{
      "name": "Helical Railgun",
      "number": 3
    }, {
      "name": "Adv. KE Penetrator",
      "number": 3
    }]],
    "Components": [[{
      "name": "Zero-point Reactor",
      "number": 2
    }, {
      "name": "Graviton Reactor",
      "number": 2
    }], [{
      "name": "Enh. Biometal Leg",
      "number": 3
    }, {
      "name": "Hdn. Centrium Leg",
      "number": 3
    }, {
      "name": "Exp. Biometal Leg",
      "number": 3
    }], [{
      "name": "Exp. Heat Sink",
      "number": 2
    }, {
      "name": "Exp. Cooling System",
      "number": 2
    }], [{
      "name": "Exp. ECM Suite"
    }, {
      "name": "Exp. Reaction Control System"
    }], [{
      "name": "Recoil Nullifier"
    }, {
      "name": "Exp. Weapon Cycler"
    }], "Exp. Targeting Computer", "Exp. Phase Shifter"],
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "3x Helical Railgun OR 3x Adv. KE Penetrator",
    "Components String": "2x Zero-point Reactor OR 2x Graviton Reactor, 3x Enh. Biometal Leg OR 3x Hdn. Centrium Leg OR 3x Exp. Biometal Leg, 2x Exp. Heat Sink OR 2x Exp. Cooling System, Exp. ECM Suite OR Exp. Reaction Control System, Recoil Nullifier OR Exp. Weapon Cycler, Exp. Targeting Computer, Exp. Phase Shifter"
  },
  "Protovariant P": {
    "Name": "Protovariant P",
    "Class": "Programmer (Prototype)",
    "Tier": "10",
    "Threat": "5",
    "Rating": "208",
    "Value": "200",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "160",
    "Spot %": "50",
    "Movement": "Hovering",
    "Speed": "92",
    "Sight Range": "16",
    "Energy Generation": "113",
    "Heat Dissipation": "174",
    "Core Integrity": "150",
    "Core Exposure": "154",
    "Core Exposure %": "14",
    "Salvage Potential": "60~70",
    "Immunities": ["Hacking"],
    "Armament": ["Gui. Remote Datajack", [{
      "name": "Enh. Gamma Rifle",
      "number": 2
    }, {
      "name": "Hvy. Tesla Rifle",
      "number": 3
    }]],
    "Components": [[{
      "name": "Zero-point Reactor",
      "number": 2
    }, {
      "name": "Graviton Reactor",
      "number": 2
    }], "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "Quantum Shading Machine", "Quantum Shading Machine", "Exp. Target Analyzer", [{
      "name": "Exp. Heat Sink",
      "number": 4
    }, {
      "name": "Exp. Cooling System",
      "number": 3
    }], "Imp. Energy Mantle", "Exp. Power Amplifier", "Exp. Energy Well", "Exp. Energy Well", [{
      "name": "Exp. Weapon Cycler"
    }, {
      "name": "Adv. Weapon Cycler",
      "number": 2
    }]],
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "-25",
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Gui. Remote Datajack, 2x Enh. Gamma Rifle OR 3x Hvy. Tesla Rifle",
    "Components String": "2x Zero-point Reactor OR 2x Graviton Reactor, 3x Cld. Antigrav System, 2x Quantum Shading Machine, Exp. Target Analyzer, 4x Exp. Heat Sink OR 3x Exp. Cooling System, Imp. Energy Mantle, Exp. Power Amplifier, 2x Exp. Energy Well, Exp. Weapon Cycler OR 2x Adv. Weapon Cycler"
  },
  "Zionite": {
    "Name": "Zionite",
    "Class": "Zionite (Derelict)",
    "Tier": "1",
    "Threat": "1",
    "Rating": "19",
    "Value": "10",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "130",
    "Sight Range": "14",
    "Energy Generation": "20",
    "Heat Dissipation": "15",
    "Core Integrity": "10",
    "Core Exposure": "208",
    "Core Exposure %": "40",
    "Salvage Potential": "10~30"
  },
  "Z-Technician": {
    "Name": "Z-Technician",
    "Class": "Z-Technician (Derelict)",
    "Tier": "1",
    "Threat": "1",
    "Rating": "11",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "15",
    "Core Integrity": "15",
    "Core Exposure": "128",
    "Core Exposure %": "40",
    "Salvage Potential": "10~20",
    "Armament": ["Datajack"],
    "Components": ["Lgt. Ion Engine", "Hover Unit", "Hover Unit", "Mak. Hacking Suite"],
    "Resistances": {
      "Electromagnetic": "-50",
      "Slashing": "-25"
    },
    "Armament String": "Datajack",
    "Components String": "Lgt. Ion Engine, 2x Hover Unit, Mak. Hacking Suite"
  },
  "Z-Courier": {
    "Name": "Z-Courier",
    "Class": "Z-Courier (Derelict)",
    "Tier": "5",
    "Threat": "2",
    "Rating": "27",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ9X9",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "320",
    "Sight Range": "16",
    "Energy Generation": "14",
    "Heat Dissipation": "10",
    "Core Integrity": "40",
    "Core Exposure": "249",
    "Core Exposure %": "30",
    "Salvage Potential": "80~120",
    "Components": ["Nuclear Core", "Med. Treads", "Med. Treads", "Med. Treads", "Visual Processing Unit", "Humpback"],
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Nuclear Core, 3x Med. Treads, Visual Processing Unit, Humpback"
  },
  "Z-Drone": {
    "Name": "Z-Drone",
    "Class": "Z-Drone",
    "Tier": "1",
    "Threat": "3",
    "Rating": "16",
    "Size Class": "Tiny",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Spot %": "75",
    "Movement": "Flying",
    "Speed": "37",
    "Sight Range": "20",
    "Energy Generation": "20",
    "Heat Dissipation": "15",
    "Core Integrity": "25",
    "Core Exposure": "181",
    "Core Exposure %": "50",
    "Salvage Potential": "5~15",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Ion Engine", "Flight Unit", "Flight Unit", "Adv. Visual Processing Unit", "Mak. Cloaking Device"],
    "Resistances": {
      "Explosive": "-25",
      "Electromagnetic": "-100"
    },
    "Components String": "Lgt. Ion Engine, 2x Flight Unit, Adv. Visual Processing Unit, Mak. Cloaking Device"
  },
  "Z-Light (5)": {
    "Name": "Z-Light (5)",
    "Class": "Z-Light (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "70",
    "Value": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "32",
    "Heat Dissipation": "51",
    "Core Integrity": "45",
    "Core Exposure": "536",
    "Core Exposure %": "39",
    "Salvage Potential": "50~70",
    "Armament": ["Zio. Laser-S"],
    "Components": ["Zio. Light DM Reactor", "Zio. Glidesys I", "Zio. Glidesys I", "Zio. Light Carapace", "Zio. Biocell", "Phase Shifter", "Imp. Reaction Control System", "Exp. Heat Sink", "Zio. Weapon Casing"],
    "Armament String": "Zio. Laser-S",
    "Components String": "Zio. Light DM Reactor, 2x Zio. Glidesys I, Zio. Light Carapace, Zio. Biocell, Phase Shifter, Imp. Reaction Control System, Exp. Heat Sink, Zio. Weapon Casing"
  },
  "Z-Light (7)": {
    "Name": "Z-Light (7)",
    "Class": "Z-Light (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "96",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "32",
    "Heat Dissipation": "72",
    "Core Integrity": "60",
    "Core Exposure": "590",
    "Core Exposure %": "40",
    "Salvage Potential": "60~85",
    "Armament": ["Zio. Laser-M", "Zio. Laser-S"],
    "Components": ["Zio. Light DM Reactor", "Zio. Glidesys II", "Zio. Glidesys II", "Zio. Light Carapace", "Zio. Biocell", "Imp. Phase Shifter", "Adv. Reaction Control System", "Exp. Heat Sink", "Exp. Heat Sink", "Zio. Weapon Casing"],
    "Armament String": "Zio. Laser-M, Zio. Laser-S",
    "Components String": "Zio. Light DM Reactor, 2x Zio. Glidesys II, Zio. Light Carapace, Zio. Biocell, Imp. Phase Shifter, Adv. Reaction Control System, 2x Exp. Heat Sink, Zio. Weapon Casing"
  },
  "Z-Light (9)": {
    "Name": "Z-Light (9)",
    "Class": "Z-Light (Derelict)",
    "Tier": "9",
    "Threat": "5",
    "Rating": "115",
    "Value": "73",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Hovering",
    "Speed": "52",
    "Sight Range": "16",
    "Energy Generation": "42",
    "Heat Dissipation": "72",
    "Core Integrity": "70",
    "Core Exposure": "626",
    "Core Exposure %": "39",
    "Salvage Potential": "70~100",
    "Armament": ["Zio. Laser-H", "Zio. Laser-M"],
    "Components": ["Zio. Light DM Reactor", "Zio. Glidesys II", "Zio. Glidesys II", "Zio. Glidesys II", "Zio. Light Carapace", "Zio. Biocell", "Adv. Phase Shifter", "Exp. Reaction Control System", "Exp. Heat Sink", "Exp. Heat Sink", "Zio. Weapon Casing"],
    "Armament String": "Zio. Laser-H, Zio. Laser-M",
    "Components String": "Zio. Light DM Reactor, 3x Zio. Glidesys II, Zio. Light Carapace, Zio. Biocell, Adv. Phase Shifter, Exp. Reaction Control System, 2x Exp. Heat Sink, Zio. Weapon Casing"
  },
  "Z-Heavy (5)": {
    "Name": "Z-Heavy (5)",
    "Class": "Z-Heavy (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "85",
    "Value": "66",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "40",
    "Heat Dissipation": "89",
    "Core Integrity": "55",
    "Core Exposure": "702",
    "Core Exposure %": "29",
    "Salvage Potential": "50~70",
    "Armament": ["Zio. Phaser-S", "Zio. Phaser-S", "Zio. Laser-S"],
    "Components": ["Zio. Heavy DM Reactor", "Zio. Composite Leg I", "Zio. Composite Leg I", "Zio. Heavy Carapace", "Zio. Biocell", "Targeting Computer", "Targeting Computer", "Imp. Cooling System", "Imp. Cooling System", "Zio. Weapon Casing"],
    "Armament String": "2x Zio. Phaser-S, Zio. Laser-S",
    "Components String": "Zio. Heavy DM Reactor, 2x Zio. Composite Leg I, Zio. Heavy Carapace, Zio. Biocell, 2x Targeting Computer, 2x Imp. Cooling System, Zio. Weapon Casing"
  },
  "Z-Heavy (7)": {
    "Name": "Z-Heavy (7)",
    "Class": "Z-Heavy (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "103",
    "Value": "77",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "40",
    "Heat Dissipation": "99",
    "Core Integrity": "75",
    "Core Exposure": "701",
    "Core Exposure %": "29",
    "Salvage Potential": "60~85",
    "Armament": ["Zio. Phaser-M", "Zio. Phaser-M", "Zio. Laser-M"],
    "Components": ["Zio. Heavy DM Reactor", "Zio. Composite Leg II", "Zio. Composite Leg II", "Zio. Heavy Carapace", "Zio. Biocell", "Imp. Targeting Computer", "Adv. Cooling System", "Adv. Cooling System", "Zio. Weapon Casing"],
    "Armament String": "2x Zio. Phaser-M, Zio. Laser-M",
    "Components String": "Zio. Heavy DM Reactor, 2x Zio. Composite Leg II, Zio. Heavy Carapace, Zio. Biocell, Imp. Targeting Computer, 2x Adv. Cooling System, Zio. Weapon Casing"
  },
  "Z-Heavy (9)": {
    "Name": "Z-Heavy (9)",
    "Class": "Z-Heavy (Derelict)",
    "Tier": "9",
    "Threat": "5",
    "Rating": "122",
    "Value": "88",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "40",
    "Heat Dissipation": "111",
    "Core Integrity": "95",
    "Core Exposure": "718",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Armament": ["Zio. Phaser-H", "Zio. Phaser-H", "Zio. Laser-H"],
    "Components": ["Zio. Heavy DM Reactor", "Zio. Composite Leg II", "Zio. Composite Leg II", "Zio. Heavy Carapace", "Zio. Biocell", "Adv. Targeting Computer", "Exp. Cooling System", "Exp. Cooling System", "Zio. Weapon Casing"],
    "Armament String": "2x Zio. Phaser-H, Zio. Laser-H",
    "Components String": "Zio. Heavy DM Reactor, 2x Zio. Composite Leg II, Zio. Heavy Carapace, Zio. Biocell, Adv. Targeting Computer, 2x Exp. Cooling System, Zio. Weapon Casing"
  },
  "Z-Experimental (8)": {
    "Name": "Z-Experimental (8)",
    "Class": "Z-EX",
    "Tier": "8",
    "Threat": "5",
    "Rating": "192",
    "Value": "200",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "23",
    "Energy Generation": "80",
    "Heat Dissipation": "220",
    "Core Integrity": "150",
    "Core Exposure": "394",
    "Core Exposure %": "19",
    "Salvage Potential": "80~105",
    "Immunities": ["Coring"],
    "Armament": ["Zio. Alpha Cannon", "Zio. Alpha Cannon"],
    "Components": ["Zio. Heavy DM Reactor", "Zio. Heavy DM Reactor", "Zio. Supercomposite Leg", "Zio. Supercomposite Leg", "Zio. Supercomposite Leg", "Zio. Shade Carapace", "Zio. Shade Carapace", "Zio. Biocell Array", "Exp. Optical Array", "Prc. Energy Filter", "Particle Accelerator", "Exp. Targeting Computer", "Coolant Network", "Coolant Network", "Zio. Weapon Casing"],
    "Resistances": {
      "Kinetic": "20",
      "Thermal": "20",
      "Explosive": "20",
      "Electromagnetic": "20",
      "Impact": "20",
      "Slashing": "20",
      "Piercing": "20"
    },
    "Armament String": "2x Zio. Alpha Cannon",
    "Components String": "2x Zio. Heavy DM Reactor, 3x Zio. Supercomposite Leg, 2x Zio. Shade Carapace, Zio. Biocell Array, Exp. Optical Array, Prc. Energy Filter, Particle Accelerator, Exp. Targeting Computer, 2x Coolant Network, Zio. Weapon Casing"
  },
  "Z-Experimental (10)": {
    "Name": "Z-Experimental (10)",
    "Class": "Z-EX",
    "Tier": "10",
    "Threat": "5",
    "Rating": "269",
    "Value": "200",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "23",
    "Energy Generation": "80",
    "Heat Dissipation": "220",
    "Core Integrity": "150",
    "Core Exposure": "440",
    "Core Exposure %": "19",
    "Salvage Potential": "80~105",
    "Immunities": ["Coring"],
    "Armament": ["Zio. Alpha Cannon Mk. II", "Zio. Alpha Cannon Mk. II"],
    "Components": ["Zio. Heavy DM Reactor", "Zio. Heavy DM Reactor", "Zio. Supercomposite Leg", "Zio. Supercomposite Leg", "Zio. Supercomposite Leg", "Zio. Supercomposite Leg", "Zio. Shade Armor", "Zio. Shade Armor", "Zio. Shade Armor", "Zio. Shade Armor", "Zio. Biocell Array", "Zio. Biocell Array", "Exp. Optical Array", "Prc. Energy Filter", "Particle Accelerator", "Exp. Weapon Cycler", "Exp. Targeting Computer", "Coolant Network", "Coolant Network", "Zio. Weapon Casing", "Zio. Weapon Casing"],
    "Resistances": {
      "Kinetic": "30",
      "Thermal": "30",
      "Explosive": "30",
      "Electromagnetic": "30",
      "Impact": "30",
      "Slashing": "30",
      "Piercing": "30"
    },
    "Armament String": "2x Zio. Alpha Cannon Mk. II",
    "Components String": "2x Zio. Heavy DM Reactor, 4x Zio. Supercomposite Leg, 4x Zio. Shade Armor, 2x Zio. Biocell Array, Exp. Optical Array, Prc. Energy Filter, Particle Accelerator, Exp. Weapon Cycler, Exp. Targeting Computer, 2x Coolant Network, 2x Zio. Weapon Casing"
  },
  "Decomposer": {
    "Name": "Decomposer",
    "Class": "Decomposer (Derelict)",
    "Tier": "1",
    "Threat": "1",
    "Rating": "7",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "10",
    "Core Exposure": "198",
    "Core Exposure %": "50",
    "Salvage Potential": "10~30",
    "Components": ["Lgt. Ion Engine", "Wheel", "Wheel", "Tractor Beam", "Sml. Matter Pod"],
    "Analysis": "Decomposers are the precursor to K-class workers, converting debris to matter they leave behind for other robots to then collect and utilize. This was before the matter collection and redistribution process was centralized in Complex 0b10. Derelicts seem to have modified decomposers to break down even whole components.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Lgt. Ion Engine, 2x Wheel, Tractor Beam, Sml. Matter Pod"
  },
  "Packrat": {
    "Name": "Packrat",
    "Class": "Packrat (Derelict)",
    "Tier": "4",
    "Threat": "1",
    "Rating": "12",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "14",
    "Energy Generation": "14",
    "Heat Dissipation": "10",
    "Core Integrity": "30",
    "Core Exposure": "96",
    "Core Exposure %": "39",
    "Salvage Potential": "50~100",
    "Components": ["Lgt. Deuterium Engine", "Com. Wheel", "Com. Wheel", "Med. Storage Unit"],
    "Analysis": "Packrats are sent out by their derelict owners to collect useful components for later reuse, especially those that Derelicts are incapable of manufacturing locally. They are especially weak against electromagnetic attacks, and are disabled by programmers on sight.",
    "Resistances": {
      "Electromagnetic": "-50"
    },
    "Components String": "Lgt. Deuterium Engine, 2x Com. Wheel, Med. Storage Unit"
  },
  "Samaritan": {
    "Name": "Samaritan",
    "Class": "Samaritan (Derelict)",
    "Tier": "4",
    "Threat": "1",
    "Rating": "64",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "14",
    "Energy Generation": "33",
    "Heat Dissipation": "20",
    "Core Integrity": "40",
    "Core Exposure": "304",
    "Core Exposure %": "40",
    "Salvage Potential": "30~60",
    "Traits": ["Energy Emission (30): Each turn transfers [30-range] energy to each robot in view and within a range of 15."],
    "Components": ["Neutrino Core", "Neutrino Core", "Med. Treads", "Med. Treads", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery", "Com. Battery"],
    "Analysis": "As a number of Derelicts have insufficient or unreliable power supplies, some crafty derelict came up with the idea to create mobile recharging stations that generate and transmit energy to all nearby robot systems.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "2x Neutrino Core, 2x Med. Treads, 12x Com. Battery"
  },
  "Tinkerer": {
    "Name": "Tinkerer",
    "Class": "Tinkerer (Derelict)",
    "Tier": "5",
    "Threat": "1",
    "Rating": "21",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "14",
    "Energy Generation": "19",
    "Heat Dissipation": "10",
    "Core Integrity": "30",
    "Core Exposure": "88",
    "Core Exposure %": "40",
    "Salvage Potential": "10~30",
    "Components": ["Lgt. Nuclear Core", "Gravmag System", "Recalibrator", "Component Analysis Suite"],
    "Analysis": "I have minimal data on their capabilities, but the tinkerer design seems to be an evolution of C-series researchers.",
    "Resistances": {
      "Electromagnetic": "-50"
    },
    "Components String": "Lgt. Nuclear Core, Gravmag System, Recalibrator, Component Analysis Suite"
  },
  "Demented": {
    "Name": "Demented",
    "Class": "Demented (Derelict)",
    "Tier": "4",
    "Threat": "2",
    "Rating": "18",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "14",
    "Heat Dissipation": "10",
    "Core Integrity": "40",
    "Core Exposure": "108",
    "Core Exposure %": "40",
    "Salvage Potential": "30~60",
    "Traits": ["Corruption Emission (10): 10% chance each turn to cause anywhere from 0-50% corruption in each robot in view and within a range of 10. (Cogmind is less susceptible to the effect and only suffers 0-1% corruption.)"],
    "Components": ["Lgt. Deuterium Engine", "Wheel", "Wheel", "System Guard"],
    "Analysis": "A relatively recent design, the so-called demented wander the caves corrupting nearby electronic systems. I suspect this one was devised by Warlord as an experiment in how to cause as much chaos as possible, or perhaps as a passive way to prevent Complex 0b10 patrols from venturing too deep into the caves.",
    "Resistances": {
      "Electromagnetic": "50"
    },
    "Components String": "Lgt. Deuterium Engine, 2x Wheel, System Guard"
  },
  "Furnace": {
    "Name": "Furnace",
    "Class": "Furnace (Derelict)",
    "Tier": "4",
    "Threat": "2",
    "Rating": "28",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "23",
    "Heat Dissipation": "91",
    "Core Integrity": "40",
    "Core Exposure": "206",
    "Core Exposure %": "39",
    "Salvage Potential": "30~60",
    "Traits": ["Heat Emission (150): Each turn transfers [150-(range*10)] heat to each robot in view and within a range of 10."],
    "Components": ["Lgt. Deuterium Engine", "Lgt. Deuterium Engine", "Wheel", "Wheel", "Imp. Cooling System", "Imp. Cooling System", "Imp. Cooling System"],
    "Analysis": "Furnace bots emit massive amounts of heat, causing nearby robots to overheat and become useless. I assume the design's aim is similar to that of the demented class derelict, built as a deterrent.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "2x Lgt. Deuterium Engine, 2x Wheel, 3x Imp. Cooling System"
  },
  "Parasite": {
    "Name": "Parasite",
    "Class": "Parasite (Derelict)",
    "Tier": "4",
    "Threat": "2",
    "Rating": "27",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "14",
    "Energy Generation": "14",
    "Heat Dissipation": "15",
    "Core Integrity": "40",
    "Core Exposure": "124",
    "Core Exposure %": "40",
    "Salvage Potential": "30~60",
    "Traits": ["Energy Drain (50): Each turn drains [50-(range*2)] energy from each robot in view and within a range of 10. Also drains an equivalent amount of heat."],
    "Components": ["Lgt. Deuterium Engine", "Airjet", "Airjet", "Energy Well", "Energy Well"],
    "Analysis": "Parasites remotely drain energy from all nearby robots for an unknown purpose. This can temporarily incapacitate the victims, but also cools them significantly.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Components String": "Lgt. Deuterium Engine, 2x Airjet, 2x Energy Well"
  },
  "Thief": {
    "Name": "Thief",
    "Class": "Thief (Derelict)",
    "Tier": "5",
    "Threat": "2",
    "Rating": "29",
    "Value": "15",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "50",
    "Movement": "Flying",
    "Speed": "29",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "35",
    "Core Integrity": "30",
    "Core Exposure": "57",
    "Core Exposure %": "19",
    "Salvage Potential": "10~20",
    "Armament": ["Tearclaws"],
    "Components": ["Lgt. Deuterium Engine", "Cesium-ion Thruster", "Cesium-ion Thruster", "Cesium-ion Thruster", "Propulsion Shielding"],
    "Analysis": "Fast and extremely difficult to core, the thief is the most effective method derelict groups have of stealing new components directly from robots without excessive collateral damage. With a growing number of these in the caves, for now I'm reluctant to send any of the new prototypes to clear them out lest they steal that technology, too.",
    "Armament String": "Tearclaws",
    "Components String": "Lgt. Deuterium Engine, 3x Cesium-ion Thruster, Propulsion Shielding"
  },
  "Master Thief": {
    "Name": "Master Thief",
    "Class": "Master Thief (Derelict)",
    "Tier": "7",
    "Threat": "3",
    "Rating": "68",
    "Value": "30",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "100",
    "Movement": "Flying",
    "Speed": "34",
    "Sight Range": "22",
    "Energy Generation": "38",
    "Heat Dissipation": "35",
    "Core Integrity": "40",
    "Core Exposure": "97",
    "Core Exposure %": "19",
    "Salvage Potential": "15~30",
    "Traits": ["Scan Cloak (4): Hides this robot from sensors without a Signal Interpreter of at least strength 4."],
    "Armament": ["Master Tearclaws"],
    "Components": ["Lgt. Fission Core", "Nuclear Pulse Thruster", "Nuclear Pulse Thruster", "Nuclear Pulse Thruster", "Imp. Propulsion Shielding", "Reaction Control System", "Adv. Weight Redist. System", "Mak. Cloaking Device", "Enh. Optical Array", "Nanoactuators"],
    "Armament String": "Master Tearclaws",
    "Components String": "Lgt. Fission Core, 3x Nuclear Pulse Thruster, Imp. Propulsion Shielding, Reaction Control System, Adv. Weight Redist. System, Mak. Cloaking Device, Enh. Optical Array, Nanoactuators"
  },
  "Assembler": {
    "Name": "Assembler",
    "Class": "Assembler (Derelict)",
    "Tier": "4",
    "Threat": "2",
    "Rating": "77",
    "Value": "40",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "10",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "14",
    "Energy Generation": "23",
    "Heat Dissipation": "38",
    "Core Integrity": "40",
    "Core Exposure": "390",
    "Core Exposure %": "30",
    "Salvage Potential": "30~60",
    "Immunities": ["Hacking"],
    "Components": ["Lgt. Deuterium Engine", "Lgt. Deuterium Engine", "Med. Treads", "Med. Treads", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Com. Matter Pod", "Imp. Heat Sink", "Imp. Heat Sink", "Lrn. Tractor Beam", "Mobile Assembly Unit"],
    "Analysis": "An emerging threat in Complex 0b10, serving no purpose but to collect matter and construct new Assembled specifically to wreak havoc in low-security areas. The appearance of Assemblers represents an apparent offensive turn by whatever built the first Demented and Furnace models.",
    "Resistances": {
      "Electromagnetic": "50"
    },
    "Components String": "2x Lgt. Deuterium Engine, 2x Med. Treads, 10x Com. Matter Pod, 2x Imp. Heat Sink, Lrn. Tractor Beam, Mobile Assembly Unit"
  },
  "Assembled (4)": {
    "Name": "Assembled (4)",
    "Class": "Assembled (Derelict)",
    "Tier": "4",
    "Threat": "1",
    "Rating": "8",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "35",
    "Core Integrity": "20",
    "Core Exposure": "155",
    "Core Exposure %": "50",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"],
    "Armament": [[{
      "name": "Asb. Rifle"
    }, {
      "name": "Asb. Heavy Rifle"
    }, {
      "name": "Asb. F-torch"
    }, {
      "name": "Asb. Maul"
    }, {
      "name": "Asb. Blade"
    }]],
    "Components": ["Asb. Hover Unit"],
    "Analysis": "A quick but not especially dangerous combat derelict with fully integrated systems, constructed seemingly at random by an Assembler's self-contained fabrication apparatus. Individually resilient for their size, they pose a real threat in greater numbers.",
    "Resistances": {
      "Impact": "-25",
      "Slashing": "-25",
      "Piercing": "-25"
    },
    "Armament String": "Asb. Rifle OR Asb. Heavy Rifle OR Asb. F-torch OR Asb. Maul OR Asb. Blade",
    "Components String": "Asb. Hover Unit"
  },
  "Assembled (7)": {
    "Name": "Assembled (7)",
    "Class": "Assembled (Derelict)",
    "Tier": "7",
    "Threat": "2",
    "Rating": "15",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "35",
    "Core Integrity": "30",
    "Core Exposure": "103",
    "Core Exposure %": "39",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"],
    "Armament": [[{
      "name": "Asb. Shotgun"
    }, {
      "name": "Asb. Gauss Rifle"
    }, {
      "name": "Asb. P-torch"
    }, {
      "name": "Asb. P-maul"
    }, {
      "name": "Asb. P-sword"
    }]],
    "Components": ["Asb. Hover System"],
    "Analysis": "A quick but not especially dangerous combat derelict with fully integrated systems, constructed seemingly at random by an Assembler's self-contained fabrication apparatus. Individually resilient for their size, they pose a real threat in greater numbers.",
    "Resistances": {
      "Impact": "-25",
      "Slashing": "-25",
      "Piercing": "-25"
    },
    "Armament String": "Asb. Shotgun OR Asb. Gauss Rifle OR Asb. P-torch OR Asb. P-maul OR Asb. P-sword",
    "Components String": "Asb. Hover System"
  },
  "Golem": {
    "Name": "Golem",
    "Class": "Golem (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "234",
    "Value": "250",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "144",
    "Sight Range": "16",
    "Energy Generation": "80",
    "Heat Dissipation": "95",
    "Core Integrity": "200",
    "Core Exposure": "132",
    "Core Exposure %": "9",
    "Salvage Potential": "80~120",
    "Immunities": ["Disruption", "Hacking"],
    "Armament": ["Asb. Focal Cannon", "Asb. Focal Cannon", "Asb. Focal Cannon"],
    "Components": ["GOLEM Unit", "Asb. Alloy Leg", "Asb. Flux Generator", "Asb. Alloy Leg", "Asb. Biocell Array", "Asb. Nanovents", "Asb. Nanovents", "Asb. Alloy Armor", "Asb. Nanovents", "Asb. Suspension Frame", "Asb. Combat Suite", "Asb. Alloy Armor", "Asb. Biocell Array", "Asb. Nanovents", "Asb. Alloy Armor", "Asb. Metafiber Network", "Asb. Alloy Armor"],
    "Resistances": {
      "Kinetic": "15",
      "Thermal": "15",
      "Explosive": "15",
      "Electromagnetic": "15",
      "Impact": "-10",
      "Slashing": "-10",
      "Piercing": "-10"
    },
    "Armament String": "Asb. Focal Cannon, Asb. Focal Cannon, Asb. Focal Cannon",
    "Components String": "GOLEM Unit, Asb. Alloy Leg, Asb. Flux Generator, Asb. Alloy Leg, Asb. Biocell Array, Asb. Nanovents, Asb. Nanovents, Asb. Alloy Armor, Asb. Nanovents, Asb. Suspension Frame, Asb. Combat Suite, Asb. Alloy Armor, Asb. Biocell Array, Asb. Nanovents, Asb. Alloy Armor, Asb. Metafiber Network, Asb. Alloy Armor"
  },
  "Golem (Naked)": {
    "Name": "Golem (Naked)",
    "Class": "Golem (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "56",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "50",
    "Movement": "Core",
    "Speed": "50",
    "Sight Range": "16",
    "Energy Generation": "40",
    "Heat Dissipation": "35",
    "Core Integrity": "200",
    "Core Exposure": "132",
    "Core Exposure %": "81",
    "Salvage Potential": "80~120",
    "Immunities": ["Disruption", "Hacking"],
    "Components": ["GOLEM Unit"],
    "Resistances": {
      "Impact": "-25",
      "Slashing": "-25",
      "Piercing": "-25"
    },
    "Components String": "GOLEM Unit"
  },
  "Surgeon (4)": {
    "Name": "Surgeon (4)",
    "Class": "Surgeon (Derelict)",
    "Tier": "4",
    "Threat": "2",
    "Rating": "20",
    "Value": "28",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "14",
    "Heat Dissipation": "25",
    "Core Integrity": "40",
    "Core Exposure": "116",
    "Core Exposure %": "39",
    "Salvage Potential": "40~60",
    "Components": ["Lgt. Deuterium Engine", "Wheel", "Wheel", "Imp. Field Recycling Unit"],
    "Analysis": "Surgeons are derelict-modified mechanics that combine repair and recycling in a single design. Without a recycling infrastructure to support manufacturing, derelict groups rely on surgeons to handle both tasks.",
    "Components String": "Lgt. Deuterium Engine, 2x Wheel, Imp. Field Recycling Unit"
  },
  "Surgeon (6)": {
    "Name": "Surgeon (6)",
    "Class": "Surgeon (Derelict)",
    "Tier": "6",
    "Threat": "3",
    "Rating": "27",
    "Value": "36",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Rolling",
    "Speed": "80",
    "Sight Range": "14",
    "Energy Generation": "18",
    "Heat Dissipation": "25",
    "Core Integrity": "50",
    "Core Exposure": "150",
    "Core Exposure %": "40",
    "Salvage Potential": "50~70",
    "Components": ["Lgt. Angular Momentum Engine", "Wheel", "Wheel", "Wheel", "Adv. Field Recycling Unit"],
    "Analysis": "Surgeons are derelict-modified mechanics that combine repair and recycling in a single design. Without a recycling infrastructure to support manufacturing, derelict groups rely on surgeons to handle both tasks.",
    "Components String": "Lgt. Angular Momentum Engine, 3x Wheel, Adv. Field Recycling Unit"
  },
  "Wasp (5)": {
    "Name": "Wasp (5)",
    "Class": "Wasp (Derelict)",
    "Tier": "5",
    "Threat": "2",
    "Rating": "14",
    "Value": "27",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "32",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "25",
    "Core Integrity": "18",
    "Core Exposure": "220",
    "Core Exposure %": "50",
    "Salvage Potential": "20~30",
    "Armament": ["Battle Rifle"],
    "Components": ["Lgt. Nuclear Core", "Cesium-ion Thruster", "Cesium-ion Thruster"],
    "Analysis": "Wasps are swarmer class variants equipped with a derelict-made battle rifle, less reliable than swarmer armament but nonetheless dangerous in large numbers.",
    "Resistances": {
      "Explosive": "-25"
    },
    "Armament String": "Battle Rifle",
    "Components String": "Lgt. Nuclear Core, 2x Cesium-ion Thruster"
  },
  "Wasp (7)": {
    "Name": "Wasp (7)",
    "Class": "Wasp (Derelict)",
    "Tier": "7",
    "Threat": "3",
    "Rating": "25",
    "Value": "43",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Flying",
    "Speed": "37",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "29",
    "Core Integrity": "30",
    "Core Exposure": "220",
    "Core Exposure %": "50",
    "Salvage Potential": "30~40",
    "Armament": ["Hvy. Battle Rifle"],
    "Components": ["Lgt. Fission Core", "Nuclear Pulse Thruster", "Nuclear Pulse Thruster"],
    "Analysis": "Wasps are swarmer class variants equipped with a derelict-made battle rifle, less reliable than swarmer armament but nonetheless dangerous in large numbers.",
    "Resistances": {
      "Explosive": "-25"
    },
    "Armament String": "Hvy. Battle Rifle",
    "Components String": "Lgt. Fission Core, 2x Nuclear Pulse Thruster"
  },
  "Thug (5)": {
    "Name": "Thug (5)",
    "Class": "Thug (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "31",
    "Value": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "48",
    "Core Integrity": "45",
    "Core Exposure": "213",
    "Core Exposure %": "39",
    "Salvage Potential": "50~70",
    "Armament": ["Beamcaster"],
    "Components": ["Lgt. Angular Momentum Engine", "Carbon-fiber Leg", "Carbon-fiber Leg", "Imp. Heat Sink", "Imp. Heat Sink"],
    "Analysis": "A derelict improvement on the grunt that essentially fits them with a beamcaster, an interesting weapon of derelict origin. Some variants suffer serious heat issues from the added firepower, however.",
    "Resistances": {
      "Kinetic": "-25",
      "Electromagnetic": "-25"
    },
    "Armament String": "Beamcaster",
    "Components String": "Lgt. Angular Momentum Engine, 2x Carbon-fiber Leg, 2x Imp. Heat Sink"
  },
  "Thug (7)": {
    "Name": "Thug (7)",
    "Class": "Thug (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "46",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "60",
    "Core Integrity": "60",
    "Core Exposure": "253",
    "Core Exposure %": "39",
    "Salvage Potential": "60~85",
    "Armament": ["Particle Gun", "Hvy. Beamcaster"],
    "Components": ["Neutrino Core", "Flexi-carbon Leg", "Flexi-carbon Leg", "Adv. Heat Sink", "Adv. Heat Sink"],
    "Analysis": "A derelict improvement on the grunt that essentially fits them with a beamcaster, an interesting weapon of derelict origin. Some variants suffer serious heat issues from the added firepower, however.",
    "Resistances": {
      "Kinetic": "-25",
      "Electromagnetic": "-25"
    },
    "Armament String": "Particle Gun, Hvy. Beamcaster",
    "Components String": "Neutrino Core, 2x Flexi-carbon Leg, 2x Adv. Heat Sink"
  },
  "Savage (5)": {
    "Name": "Savage (5)",
    "Class": "Savage (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "20",
    "Value": "48",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "21",
    "Heat Dissipation": "15",
    "Core Integrity": "45",
    "Core Exposure": "258",
    "Core Exposure %": "34",
    "Salvage Potential": "60~75",
    "Armament": ["Great Maul"],
    "Components": ["Imp. Deuterium Engine", "Lgt. Treads", "Lgt. Treads", "Hrd. Light Armor Plating"],
    "Analysis": "Savages are early B-series brawlers, before they were upgraded with better armor. They also swing mauls rather than the faster hammers and maces of new brawler variants.",
    "Resistances": {
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "Great Maul",
    "Components String": "Imp. Deuterium Engine, 2x Lgt. Treads, Hrd. Light Armor Plating"
  },
  "Savage (7)": {
    "Name": "Savage (7)",
    "Class": "Savage (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "29",
    "Value": "60",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "15",
    "Core Integrity": "65",
    "Core Exposure": "298",
    "Core Exposure %": "34",
    "Salvage Potential": "70~90",
    "Armament": ["Power Maul"],
    "Components": ["Fission Core", "Imp. Treads", "Imp. Treads", "Hrd. Medium Armor Plating"],
    "Analysis": "Savages are early B-series brawlers, before they were upgraded with better armor. They also swing mauls rather than the faster hammers and maces of new brawler variants.",
    "Resistances": {
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "Power Maul",
    "Components String": "Fission Core, 2x Imp. Treads, Hrd. Medium Armor Plating"
  },
  "Butcher (5)": {
    "Name": "Butcher (5)",
    "Class": "Butcher (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "25",
    "Value": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "21",
    "Heat Dissipation": "10",
    "Core Integrity": "40",
    "Core Exposure": "127",
    "Core Exposure %": "34",
    "Salvage Potential": "50~70",
    "Armament": ["Ripper"],
    "Components": ["Imp. Deuterium Engine", "Carbon-fiber Leg", "Carbon-fiber Leg", "Melee Analysis Suite"],
    "Analysis": "Butchers are duelist class variants armed with more damaging derelict-designed slashing weapons. Survival in the harsh and factious cave environment seems to drive Derelicts towards the use of more violent weapons, and in some cases a preference for decisive close-quarters combat.",
    "Resistances": {
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Ripper",
    "Components String": "Imp. Deuterium Engine, 2x Carbon-fiber Leg, Melee Analysis Suite"
  },
  "Butcher (7)": {
    "Name": "Butcher (7)",
    "Class": "Butcher (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "38",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "15",
    "Core Integrity": "60",
    "Core Exposure": "127",
    "Core Exposure %": "34",
    "Salvage Potential": "60~85",
    "Armament": ["Phasing Sabre"],
    "Components": ["Neutrino Core", "Flexi-carbon Leg", "Flexi-carbon Leg", "Imp. Melee Analysis Suite"],
    "Analysis": "Butchers are duelist class variants armed with more damaging derelict-designed slashing weapons. Survival in the harsh and factious cave environment seems to drive Derelicts towards the use of more violent weapons, and in some cases a preference for decisive close-quarters combat.",
    "Resistances": {
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Phasing Sabre",
    "Components String": "Neutrino Core, 2x Flexi-carbon Leg, Imp. Melee Analysis Suite"
  },
  "Bouncer": {
    "Name": "Bouncer",
    "Class": "Bouncer (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "79",
    "Value": "68",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "70",
    "Core Integrity": "75",
    "Core Exposure": "803",
    "Core Exposure %": "34",
    "Salvage Potential": "75~95",
    "Armament": ["Hvy. Autocannon"],
    "Components": ["Rnf. Fission Core", "Arm. Medium Treads", "Arm. Medium Treads", "Arm. Medium Treads", "Hrd. Heavy Armor Plating", "Adv. Heat Sink", "Adv. Cooling System", "Imp. Weapon Shielding", "Imp. Targeting Computer"],
    "Analysis": "Sentries rebuilt around a single heavy autocannon make for a formidable mid-sized defender, but move too slowly to be a threat to Complex 0b10. My forces have never actually encountered one, but mining derelict records has uncovered information useful in dealing with them should that become necessary.",
    "Resistances": {
      "Explosive": "50",
      "Impact": "25"
    },
    "Armament String": "Hvy. Autocannon",
    "Components String": "Rnf. Fission Core, 3x Arm. Medium Treads, Hrd. Heavy Armor Plating, Adv. Heat Sink, Adv. Cooling System, Imp. Weapon Shielding, Imp. Targeting Computer"
  },
  "Martyr (5)": {
    "Name": "Martyr (5)",
    "Class": "Martyr (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "35",
    "Value": "53",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "52",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "31",
    "Core Integrity": "40",
    "Core Exposure": "427",
    "Core Exposure %": "39",
    "Salvage Potential": "40~60",
    "Armament": ["Rocket Launcher"],
    "Components": ["Lgt. Deuterium Engine", "Airjet", "Airjet", "Airjet", "Hrd. Medium Armor Plating", "Imp. Shock Absorption System", "Launcher Guidance Computer"],
    "Analysis": "Despite their origins as older demolisher variants, martyrs do carry a rocket or missile launcher and are therefore considered extremely dangerous. Martyrs are rarely encountered anywhere near Complex 0b10, but those that are are promptly dealt with.",
    "Resistances": {
      "Explosive": "100",
      "Impact": "25"
    },
    "Armament String": "Rocket Launcher",
    "Components String": "Lgt. Deuterium Engine, 3x Airjet, Hrd. Medium Armor Plating, Imp. Shock Absorption System, Launcher Guidance Computer"
  },
  "Martyr (7)": {
    "Name": "Martyr (7)",
    "Class": "Martyr (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "50",
    "Value": "63",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "20",
    "Heat Dissipation": "30",
    "Core Integrity": "65",
    "Core Exposure": "370",
    "Core Exposure %": "39",
    "Salvage Potential": "55~80",
    "Armament": ["Missile Launcher"],
    "Components": ["Mic. Fission Core", "Antigrav System", "Antigrav System", "Imp. Medium Armor Plating", "Imp. Shock Absorption System", "Imp. Launcher Guidance Computer"],
    "Analysis": "Despite their origins as older demolisher variants, martyrs do carry a rocket or missile launcher and are therefore considered extremely dangerous. Martyrs are rarely encountered anywhere near Complex 0b10, but those that are are promptly dealt with.",
    "Resistances": {
      "Explosive": "100",
      "Impact": "25"
    },
    "Armament String": "Missile Launcher",
    "Components String": "Mic. Fission Core, 2x Antigrav System, Imp. Medium Armor Plating, Imp. Shock Absorption System, Imp. Launcher Guidance Computer"
  },
  "Guerrilla (5)": {
    "Name": "Guerrilla (5)",
    "Class": "Guerrilla (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "39",
    "Value": "66",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "37",
    "Core Integrity": "45",
    "Core Exposure": "233",
    "Core Exposure %": "34",
    "Salvage Potential": "50~70",
    "Traits": ["Scan Cloak (1): Hides this robot from sensors without a Signal Interpreter of at least strength 1."],
    "Armament": ["Bore Cannon"],
    "Components": ["Fission Core", "Flexi-carbon Leg", "Flexi-carbon Leg", "Targeting Computer", "Armor Integrity Analyzer", "Phase Shifter"],
    "Analysis": "Derelicts have taken the original hunter and rearmed it with a weapon of their own design: the bore cannon. While the concentrated firepower is less effective in open firefights, its ability to deal significant damage even after penetrating multiple walls is surprising.",
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "Bore Cannon",
    "Components String": "Fission Core, 2x Flexi-carbon Leg, Targeting Computer, Armor Integrity Analyzer, Phase Shifter"
  },
  "Guerrilla (7)": {
    "Name": "Guerrilla (7)",
    "Class": "Guerrilla (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "51",
    "Value": "77",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "50",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "40",
    "Core Integrity": "65",
    "Core Exposure": "288",
    "Core Exposure %": "34",
    "Salvage Potential": "60~85",
    "Traits": ["Scan Cloak (2): Hides this robot from sensors without a Signal Interpreter of at least strength 2."],
    "Armament": ["Bore Cannon", "Battle Rifle"],
    "Components": ["Neutrino Core", "Myomer Leg", "Myomer Leg", "Targeting Computer", "Targeting Computer", "Armor Integrity Analyzer", "Phase Shifter"],
    "Analysis": "Derelicts have taken the original hunter and rearmed it with a weapon of their own design: the bore cannon. While the concentrated firepower is less effective in open firefights, its ability to deal significant damage even after penetrating multiple walls is surprising.",
    "Resistances": {
      "Kinetic": "25",
      "Electromagnetic": "-25"
    },
    "Armament String": "Bore Cannon, Battle Rifle",
    "Components String": "Neutrino Core, 2x Myomer Leg, 2x Targeting Computer, Armor Integrity Analyzer, Phase Shifter"
  },
  "Wizard (5)": {
    "Name": "Wizard (5)",
    "Class": "Wizard (Derelict)",
    "Tier": "5",
    "Threat": "3",
    "Rating": "51",
    "Value": "70",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "48",
    "Core Integrity": "40",
    "Core Exposure": "185",
    "Core Exposure %": "29",
    "Salvage Potential": "50~60",
    "Immunities": ["Hacking"],
    "Armament": ["Riot Gun", "Riot Gun"],
    "Components": ["Lgt. Fission Core", "Gravmag System", "Gravmag System", "Imp. Hacking Suite", "System Shield", "Corruption Screen", "Imp. Heat Sink", "Imp. Heat Sink", "Com. Battery", "Com. Battery"],
    "Analysis": "The single most annoying derelict out there. Hiding from my patrols, hacking my robots, accessing my databases, corrupting systems with their riot guns... According to those captured and analyzed, although the wizard's design is related to the programmer, the changes necessary to break them free of the relay network could only have been designed by an extremely intelligent system.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "-25",
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "2x Riot Gun",
    "Components String": "Lgt. Fission Core, 2x Gravmag System, Imp. Hacking Suite, System Shield, Corruption Screen, 2x Imp. Heat Sink, 2x Com. Battery"
  },
  "Wizard (7)": {
    "Name": "Wizard (7)",
    "Class": "Wizard (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "81",
    "Value": "80",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "52",
    "Sight Range": "16",
    "Energy Generation": "39",
    "Heat Dissipation": "68",
    "Core Integrity": "50",
    "Core Exposure": "234",
    "Core Exposure %": "29",
    "Salvage Potential": "60~70",
    "Immunities": ["Hacking"],
    "Armament": ["Hvy. Riot Gun", "Hvy. Riot Gun"],
    "Components": ["Lgt. Antimatter Reactor", "Lgt. Fission Core", "Antigrav System", "Antigrav System", "Antigrav System", "Adv. Hacking Suite", "Imp. System Shield", "Imp. Corruption Screen", "Adv. Heat Sink", "Adv. Heat Sink", "Com. Battery", "Com. Battery"],
    "Analysis": "The single most annoying derelict out there. Hiding from my patrols, hacking my robots, accessing my databases, corrupting systems with their riot guns... According to those captured and analyzed, although the wizard's design is related to the programmer, the changes necessary to break them free of the relay network could only have been designed by an extremely intelligent system.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "-25",
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "2x Hvy. Riot Gun",
    "Components String": "Lgt. Antimatter Reactor, Lgt. Fission Core, 3x Antigrav System, Adv. Hacking Suite, Imp. System Shield, Imp. Corruption Screen, 2x Adv. Heat Sink, 2x Com. Battery"
  },
  "Marauder (6)": {
    "Name": "Marauder (6)",
    "Class": "Marauder (Derelict)",
    "Tier": "6",
    "Threat": "3",
    "Rating": "77",
    "Value": "80",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "36",
    "Heat Dissipation": "65",
    "Core Integrity": "120",
    "Core Exposure": "422",
    "Core Exposure %": "19",
    "Salvage Potential": "80~115",
    "Immunities": ["Coring"],
    "Armament": ["Hvy. Battle Rifle", "Hvy. Battle Rifle", "Slug Cannon"],
    "Components": ["Fission Core", "Fission Core", "Spk. Medium Treads", "Spk. Medium Treads", "Spk. Medium Treads", "Hvy. Armor Plating", "Reflective Plating", "Cooling System", "Cooling System", "Recoil Stabilizer"],
    "Analysis": "Inferior behemoth variants undoubtedly built by that idiot Warlord. They've only been reported deep in the caves, never anywhere near where an actual behemoth could tear them apart. They do possess respectable, if unreliable, firepower.",
    "Resistances": {
      "Thermal": "10",
      "Electromagnetic": "50"
    },
    "Armament String": "2x Hvy. Battle Rifle, Slug Cannon",
    "Components String": "2x Fission Core, 3x Spk. Medium Treads, Hvy. Armor Plating, Reflective Plating, 2x Cooling System, Recoil Stabilizer"
  },
  "Marauder (8)": {
    "Name": "Marauder (8)",
    "Class": "Marauder (Derelict)",
    "Tier": "8",
    "Threat": "4",
    "Rating": "95",
    "Value": "85",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "69",
    "Core Integrity": "135",
    "Core Exposure": "463",
    "Core Exposure %": "19",
    "Salvage Potential": "90~130",
    "Immunities": ["Coring"],
    "Armament": ["Hvy. Battle Rifle", "Slug Cannon", "Slug Cannon"],
    "Components": ["Antimatter Reactor", "Spk. Heavy Treads", "Spk. Heavy Treads", "Hvy. Armor Plating", "Med. Reflective Plating", "Imp. Cooling System", "Imp. Cooling System", "Recoil Stabilizer"],
    "Analysis": "Inferior behemoth variants undoubtedly built by that idiot Warlord. They've only been reported deep in the caves, never anywhere near where an actual behemoth could tear them apart. They do possess respectable, if unreliable, firepower.",
    "Resistances": {
      "Thermal": "15",
      "Electromagnetic": "50"
    },
    "Armament String": "Hvy. Battle Rifle, 2x Slug Cannon",
    "Components String": "Antimatter Reactor, 2x Spk. Heavy Treads, Hvy. Armor Plating, Med. Reflective Plating, 2x Imp. Cooling System, Recoil Stabilizer"
  },
  "Fireman (5)": {
    "Name": "Fireman (5)",
    "Class": "Fireman (Derelict)",
    "Tier": "5",
    "Threat": "2",
    "Rating": "28",
    "Value": "50",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Rolling",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "19",
    "Heat Dissipation": "64",
    "Core Integrity": "45",
    "Core Exposure": "293",
    "Core Exposure %": "39",
    "Salvage Potential": "50~70",
    "Armament": ["Flamer", "Flamer"],
    "Components": ["Lgt. Nuclear Core", "Arm. Wheel", "Arm. Wheel", "Imp. Cooling System", "Imp. Cooling System"],
    "Analysis": "The fireman is a relatively new robot discovered in the caves, purely of derelict design. Their flamer technology is extremely effective against my robots, thus I've instructed researchers to revisit my most common methods of electronics housing.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "50"
    },
    "Armament String": "2x Flamer",
    "Components String": "Lgt. Nuclear Core, 2x Arm. Wheel, 2x Imp. Cooling System"
  },
  "Fireman (7)": {
    "Name": "Fireman (7)",
    "Class": "Fireman (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "39",
    "Value": "67",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Rolling",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "72",
    "Core Integrity": "60",
    "Core Exposure": "293",
    "Core Exposure %": "39",
    "Salvage Potential": "60~85",
    "Armament": ["Enh. Flamer", "Enh. Flamer"],
    "Components": ["Lgt. Angular Momentum Engine", "Arm. Wheel", "Arm. Wheel", "Adv. Cooling System", "Adv. Cooling System"],
    "Analysis": "The fireman is a relatively new robot discovered in the caves, purely of derelict design. Their flamer technology is extremely effective against my robots, thus I've instructed researchers to revisit my most common methods of electronics housing.",
    "Resistances": {
      "Kinetic": "-25",
      "Thermal": "50"
    },
    "Armament String": "2x Enh. Flamer",
    "Components String": "Lgt. Angular Momentum Engine, 2x Arm. Wheel, 2x Adv. Cooling System"
  },
  "Mutant (5)": {
    "Name": "Mutant (5)",
    "Class": "Mutant (Derelict)",
    "Tier": "5",
    "Threat": "2",
    "Rating": "31",
    "Value": "50",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "16",
    "Energy Generation": "31",
    "Heat Dissipation": "60",
    "Core Integrity": "55",
    "Core Exposure": "350",
    "Core Exposure %": "34",
    "Salvage Potential": "50~70",
    "Armament": [[{
      "name": "Battle Rifle"
    }, {
      "name": "Battle Cannon"
    }], [{
      "name": "Flamer"
    }, {
      "name": "Barrage Gun"
    }]],
    "Components": [[{
      "name": "Deuterium Engine"
    }, {
      "name": "Imp. Deuterium Engine"
    }], [{
      "name": "Imp. Treads"
    }, {
      "name": "Arm. Treads"
    }], [{
      "name": "Imp. Treads"
    }, {
      "name": "Arm. Treads"
    }], "Salvage Targeting Computer", [{
      "name": "Particle Charger"
    }, {
      "name": "Weapon Cycler"
    }], "Heat Sink"],
    "Analysis": "Lumbering abominations cobbled together from stolen or salvaged components, though much of their weaponry is derelict in origin. I believe the ever-stimulating Warlord is mass-producing these to lead an attack of some sort, since sightings by cave patrols have become increasingly common.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Battle Rifle OR Battle Cannon, Flamer OR Barrage Gun",
    "Components String": "Deuterium Engine OR Imp. Deuterium Engine, Imp. Treads OR Arm. Treads, Imp. Treads OR Arm. Treads, Salvage Targeting Computer, Particle Charger OR Weapon Cycler, Heat Sink"
  },
  "Mutant (6)": {
    "Name": "Mutant (6)",
    "Class": "Mutant (Derelict)",
    "Tier": "6",
    "Threat": "3",
    "Rating": "40",
    "Value": "60",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "165",
    "Sight Range": "16",
    "Energy Generation": "33",
    "Heat Dissipation": "64",
    "Core Integrity": "65",
    "Core Exposure": "329",
    "Core Exposure %": "35",
    "Salvage Potential": "60~80",
    "Armament": [[{
      "name": "Riot Gun"
    }, {
      "name": "Barrage Gun"
    }], [{
      "name": "Enh. Flamer"
    }, {
      "name": "Hvy. Riot Gun"
    }]],
    "Components": [[{
      "name": "Imp. Deuterium Engine"
    }, {
      "name": "Angular Momentum Engine"
    }], [{
      "name": "Arm. Treads"
    }, {
      "name": "Med. Treads"
    }], [{
      "name": "Arm. Treads"
    }, {
      "name": "Med. Treads"
    }], "Salvage Targeting Computer", [{
      "name": "Particle Charger"
    }, {
      "name": "Weapon Cycler"
    }], [{
      "name": "Heat Sink"
    }, {
      "name": "Imp. Heat Sink"
    }]],
    "Analysis": "Lumbering abominations cobbled together from stolen or salvaged components, though much of their weaponry is derelict in origin. I believe the ever-stimulating Warlord is mass-producing these to lead an attack of some sort, since sightings by cave patrols have become increasingly common.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Riot Gun OR Barrage Gun, Enh. Flamer OR Hvy. Riot Gun",
    "Components String": "Imp. Deuterium Engine OR Angular Momentum Engine, Arm. Treads OR Med. Treads, Arm. Treads OR Med. Treads, Salvage Targeting Computer, Particle Charger OR Weapon Cycler, Heat Sink OR Imp. Heat Sink"
  },
  "Mutant (7)": {
    "Name": "Mutant (7)",
    "Class": "Mutant (Derelict)",
    "Tier": "7",
    "Threat": "4",
    "Rating": "58",
    "Value": "67",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "34",
    "Heat Dissipation": "69",
    "Core Integrity": "75",
    "Core Exposure": "324",
    "Core Exposure %": "34",
    "Salvage Potential": "70~90",
    "Armament": [[{
      "name": "Slug Cannon"
    }, {
      "name": "Beamcaster"
    }], [{
      "name": "Arc Thrower"
    }, {
      "name": "Hvy. Battle Rifle"
    }]],
    "Components": [[{
      "name": "Angular Momentum Engine"
    }, {
      "name": "Neutrino Core"
    }], [{
      "name": "Med. Treads"
    }, {
      "name": "Imp. Medium Treads"
    }, {
      "name": "Spk. Medium Treads"
    }], [{
      "name": "Med. Treads"
    }, {
      "name": "Imp. Medium Treads"
    }, {
      "name": "Spk. Medium Treads"
    }], [{
      "name": "Imp. Salvage Targeting Computer"
    }, {
      "name": "Component Analysis Suite"
    }], [{
      "name": "Imp. Particle Charger"
    }, {
      "name": "Imp. Weapon Cycler"
    }], [{
      "name": "Point Defense System"
    }, {
      "name": "Energy Filter"
    }, {
      "name": "Matter Filter"
    }], [{
      "name": "Adv. Heat Sink"
    }, {
      "name": "Cooling System"
    }]],
    "Analysis": "Lumbering abominations cobbled together from stolen or salvaged components, though much of their weaponry is derelict in origin. I believe the ever-stimulating Warlord is mass-producing these to lead an attack of some sort, since sightings by cave patrols have become increasingly common.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Slug Cannon OR Beamcaster, Arc Thrower OR Hvy. Battle Rifle",
    "Components String": "Angular Momentum Engine OR Neutrino Core, Med. Treads OR Imp. Medium Treads OR Spk. Medium Treads, Med. Treads OR Imp. Medium Treads OR Spk. Medium Treads, Imp. Salvage Targeting Computer OR Component Analysis Suite, Imp. Particle Charger OR Imp. Weapon Cycler, Point Defense System OR Energy Filter OR Matter Filter, Adv. Heat Sink OR Cooling System"
  },
  "Mutant (8)": {
    "Name": "Mutant (8)",
    "Class": "Mutant (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "73",
    "Value": "75",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "36",
    "Heat Dissipation": "81",
    "Core Integrity": "85",
    "Core Exposure": "345",
    "Core Exposure %": "34",
    "Salvage Potential": "80~100",
    "Armament": [[{
      "name": "Bore Cannon"
    }, {
      "name": "Plasma Flamer"
    }], [{
      "name": "Hvy. Beamcaster"
    }, {
      "name": "Imp. Arc Thrower"
    }]],
    "Components": [[{
      "name": "Neutrino Core"
    }, {
      "name": "Antimatter Reactor"
    }], [{
      "name": "Imp. Medium Treads"
    }, {
      "name": "Spk. Medium Treads"
    }, {
      "name": "Arm. Medium Treads"
    }], [{
      "name": "Imp. Medium Treads"
    }, {
      "name": "Spk. Medium Treads"
    }, {
      "name": "Arm. Medium Treads"
    }], [{
      "name": "Adv. Salvage Targeting Computer"
    }, {
      "name": "Imp. Component Analysis Suite"
    }], [{
      "name": "Adv. Particle Charger"
    }, {
      "name": "Imp. Weapon Cycler"
    }], [{
      "name": "Stasis Canceller"
    }, {
      "name": "Point Defense Array"
    }], [{
      "name": "Energy Filter"
    }, {
      "name": "Matter Filter"
    }], [{
      "name": "Imp. Cooling System"
    }, {
      "name": "Adv. Cooling System"
    }]],
    "Analysis": "Lumbering abominations cobbled together from stolen or salvaged components, though much of their weaponry is derelict in origin. I believe the ever-stimulating Warlord is mass-producing these to lead an attack of some sort, since sightings by cave patrols have become increasingly common.",
    "Resistances": {
      "Electromagnetic": "-25"
    },
    "Armament String": "Bore Cannon OR Plasma Flamer, Hvy. Beamcaster OR Imp. Arc Thrower",
    "Components String": "Neutrino Core OR Antimatter Reactor, Imp. Medium Treads OR Spk. Medium Treads OR Arm. Medium Treads, Imp. Medium Treads OR Spk. Medium Treads OR Arm. Medium Treads, Adv. Salvage Targeting Computer OR Imp. Component Analysis Suite, Adv. Particle Charger OR Imp. Weapon Cycler, Stasis Canceller OR Point Defense Array, Energy Filter OR Matter Filter, Imp. Cooling System OR Adv. Cooling System"
  },
  "Sapper": {
    "Name": "Sapper",
    "Class": "Sapper (Derelict)",
    "Tier": "7",
    "Threat": "5",
    "Rating": "60",
    "Value": "80",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "25",
    "Core Integrity": "70",
    "Core Exposure": "219",
    "Core Exposure %": "24",
    "Salvage Potential": "60~85",
    "Armament": ["Thermoblaster"],
    "Components": ["Mak. Power Source", "Mak. Power Source", "Arm. Leg", "Arm. Leg", "Mak. Terrain Scanner", "Mak. Terrain Scan Processor", "Energy Well", "Mak. Ablative Armor"],
    "Analysis": "While sappers lack staying power in extended fights and therefore don't pose a direct threat, they are quickly becoming a headache due to their capacity for clandestine destruction, operating in isolated units that aren't even directed by Warlord. Sappers run their own missions then feed new route data to enemy forces, making them somewhat harder to track down.",
    "Resistances": {
      "Thermal": "25",
      "Explosive": "50",
      "Electromagnetic": "-25"
    },
    "Armament String": "Thermoblaster",
    "Components String": "2x Mak. Power Source, 2x Arm. Leg, Mak. Terrain Scanner, Mak. Terrain Scan Processor, Energy Well, Mak. Ablative Armor"
  },
  "Commander": {
    "Name": "Commander",
    "Class": "Commander (Derelict)",
    "Tier": "7",
    "Threat": "5",
    "Rating": "74",
    "Value": "80",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "22",
    "Energy Generation": "31",
    "Heat Dissipation": "77",
    "Core Integrity": "80",
    "Core Exposure": "271",
    "Core Exposure %": "29",
    "Salvage Potential": "60~85",
    "Armament": ["Beamcaster", "Beamcaster"],
    "Components": ["Lgt. Antimatter Reactor", "Myomer Leg", "Myomer Leg", "Enh. Optical Array", "Tactical Coordination Suite", "Adv. Cooling System", "Adv. Cooling System", "Lyr. Medium Armor Plating"],
    "Analysis": "Some derelict thugs in Warlord's service are promoted to commander roles, upgrading them with heavier firepower and better cooling. More problematic is their enhanced visual range and ability to improve the combat effectiveness of others in their squad, making them a prime target when encountered in the field.",
    "Armament String": "2x Beamcaster",
    "Components String": "Lgt. Antimatter Reactor, 2x Myomer Leg, Enh. Optical Array, Tactical Coordination Suite, 2x Adv. Cooling System, Lyr. Medium Armor Plating"
  },
  "Knight": {
    "Name": "Knight",
    "Class": "Knight (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "79",
    "Value": "250",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "28",
    "Heat Dissipation": "25",
    "Core Integrity": "100",
    "Core Exposure": "382",
    "Core Exposure %": "24",
    "Salvage Potential": "90~130",
    "Immunities": ["Coring", "Meltdown"],
    "Armament": ["Particle Cleaver"],
    "Components": ["Particle Reactor", "Biometal Leg", "Biometal Leg", "Lyr. Medium Armor Plating", "Hvy. Reflective Plating", "Imp. Weapon Shielding", "Exp. Melee Analysis Suite"],
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Particle Cleaver",
    "Components String": "Particle Reactor, 2x Biometal Leg, Lyr. Medium Armor Plating, Hvy. Reflective Plating, Imp. Weapon Shielding, Exp. Melee Analysis Suite"
  },
  "Troll": {
    "Name": "Troll",
    "Class": "Troll (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "90",
    "Value": "250",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "40",
    "Sight Range": "16",
    "Energy Generation": "50",
    "Heat Dissipation": "20",
    "Core Integrity": "250",
    "Core Exposure": "100",
    "Core Exposure %": "100",
    "Salvage Potential": "90~130",
    "Immunities": ["Criticals", "Meltdown"],
    "Traits": ["Core Regeneration (20): Regenerates 20 core integrity every turn."],
    "Armament": ["Centrium Claws"],
    "Components": ["T.R.O.L.L. Exoskeleton"],
    "Resistances": {
      "Electromagnetic": "75"
    },
    "Armament String": "Centrium Claws",
    "Components String": "T.R.O.L.L. Exoskeleton"
  },
  "Dragon": {
    "Name": "Dragon",
    "Class": "Dragon (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "156",
    "Value": "250",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "16",
    "Energy Generation": "68",
    "Heat Dissipation": "143",
    "Core Integrity": "160",
    "Core Exposure": "379",
    "Core Exposure %": "20",
    "Salvage Potential": "130~200",
    "Immunities": ["Coring", "Meltdown"],
    "Armament": ["Plasma Flamer", "Plasma Flamer", "Nova Cannon", "Nova Cannon"],
    "Components": ["Particle Reactor", "Biometal Leg", "Biometal Leg", "Biometal Leg", "Biometal Leg", "Lyr. Heavy Armor Plating", "Adv. Thermal Generator", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Energy Well", "Adv. Energy Well", "Imp. Particle Charger"],
    "Resistances": {
      "Electromagnetic": "75"
    },
    "Armament String": "2x Plasma Flamer, 2x Nova Cannon",
    "Components String": "Particle Reactor, 4x Biometal Leg, Lyr. Heavy Armor Plating, Adv. Thermal Generator, 3x Adv. Cooling System, 2x Adv. Energy Well, Imp. Particle Charger"
  },
  "Hydra": {
    "Name": "Hydra",
    "Class": "Hydra (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "138",
    "Value": "250",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "68",
    "Heat Dissipation": "111",
    "Core Integrity": "160",
    "Core Exposure": "482",
    "Core Exposure %": "19",
    "Salvage Potential": "130~200",
    "Immunities": ["Coring", "Meltdown"],
    "Armament": ["Hvy. Battle Rifle", "Hvy. Battle Rifle", "Hvy. Battle Rifle", "Hvy. Battle Rifle", "Hvy. Battle Rifle", "Hvy. Battle Rifle"],
    "Components": ["Particle Reactor", "Hvy. Treads", "Hvy. Treads", "Lyr. Heavy Armor Plating", "Imp. Cooling System", "Imp. Cooling System", "Imp. Cooling System", "Matter Compressor", "Matter Filter", "Recoil Nullifier", "Imp. Target Analyzer", "Imp. Weapon Cycler"],
    "Resistances": {
      "Electromagnetic": "75"
    },
    "Armament String": "6x Hvy. Battle Rifle",
    "Components String": "Particle Reactor, 2x Hvy. Treads, Lyr. Heavy Armor Plating, 3x Imp. Cooling System, Matter Compressor, Matter Filter, Recoil Nullifier, Imp. Target Analyzer, Imp. Weapon Cycler"
  },
  "Borebot": {
    "Name": "Borebot",
    "Class": "Borebot (Derelict)",
    "Tier": "8",
    "Threat": "5",
    "Rating": "374",
    "Value": "1",
    "Size Class": "Huge",
    "Size": "3",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Movement": "Treading",
    "Speed": "275",
    "Sight Range": "16",
    "Energy Generation": "203",
    "Heat Dissipation": "216",
    "Core Integrity": "250",
    "Core Exposure": "935",
    "Core Exposure %": "20",
    "Salvage Potential": "400~600",
    "Immunities": ["Criticals", "Dismemberment", "Disruption", "Hacking", "Meltdown"],
    "Armament": ["Vortex Shredder"],
    "Components": ["Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Megatreads", "Megatreads", "Adv. Power Amplifier", "Adv. Power Amplifier", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Cooling System", "Adv. Energy Well", "Adv. Energy Well", "Adv. Energy Well", "Adv. Energy Well", "Adv. Energy Well", "Exp. Utility Shielding", "Vortex Field Projector"],
    "Resistances": {
      "Electromagnetic": "100"
    },
    "Armament String": "Vortex Shredder",
    "Components String": "6x Rnf. Antimatter Reactor, 2x Megatreads, 2x Adv. Power Amplifier, 6x Adv. Cooling System, 5x Adv. Energy Well, Exp. Utility Shielding, Vortex Field Projector"
  },
  "Revision": {
    "Name": "Revision",
    "Class": "Special",
    "Tier": "8",
    "Threat": "4",
    "Rating": "65",
    "Value": "73",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "28",
    "Heat Dissipation": "68",
    "Core Integrity": "70",
    "Core Exposure": "263",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Immunities": ["Coring", "Meltdown"],
    "Armament": ["Variable Charge Gun", "Plasma Rifle"],
    "Components": ["Lgt. Particle Reactor", "Flexi-carbon Leg", "Flexi-carbon Leg", "Adv. Heat Sink", "Adv. Heat Sink", "Energy Well", "Lyr. Medium Armor Plating", "Imp. Targeting Computer"],
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "25"
    },
    "Armament String": "Variable Charge Gun, Plasma Rifle",
    "Components String": "Lgt. Particle Reactor, 2x Flexi-carbon Leg, 2x Adv. Heat Sink, Energy Well, Lyr. Medium Armor Plating, Imp. Targeting Computer"
  },
  "YI-UF0": {
    "Name": "YI-UF0",
    "Class": "Unique",
    "Tier": "3",
    "Threat": "1",
    "Rating": "45",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "21",
    "Heat Dissipation": "49",
    "Core Integrity": "60",
    "Core Exposure": "201",
    "Core Exposure %": "29",
    "Salvage Potential": "100~120",
    "Armament": ["YI-UF0's Doublenader"],
    "Components": ["Imp. Deuterium Engine", "Carbon-fiber Leg", "Carbon-fiber Leg", "Shock Absorption System", "YI-UF0's Bottomless Matter Pit", "Adv. Heat Sink", "Weapon Shielding"],
    "Resistances": {
      "Explosive": "75"
    },
    "Armament String": "YI-UF0's Doublenader",
    "Components String": "Imp. Deuterium Engine, 2x Carbon-fiber Leg, Shock Absorption System, YI-UF0's Bottomless Matter Pit, Adv. Heat Sink, Weapon Shielding"
  },
  "01-MTF": {
    "Name": "01-MTF",
    "Class": "Unique",
    "Tier": "7",
    "Threat": "1",
    "Rating": "100",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "46",
    "Sight Range": "16",
    "Energy Generation": "66",
    "Heat Dissipation": "56",
    "Core Integrity": "110",
    "Core Exposure": "119",
    "Core Exposure %": "19",
    "Salvage Potential": "100~120",
    "Armament": ["01-MTF's Shockpuncher"],
    "Components": ["Mni. Fusion Reactor", "Cld. Gravmag System", "Cld. Gravmag System", "Imp. Propulsion Shielding", "Centrium Light Armor Plating", "Exp. Heat Sink", "Adv. Thermal Shield", "Adv. Energy Well", "Mak. Cloaking Device", "01-MTF's Autohacker", "Imp. Weapon Shielding"],
    "Resistances": {
      "Thermal": "55",
      "Electromagnetic": "67"
    },
    "Armament String": "01-MTF's Shockpuncher",
    "Components String": "Mni. Fusion Reactor, 2x Cld. Gravmag System, Imp. Propulsion Shielding, Centrium Light Armor Plating, Exp. Heat Sink, Adv. Thermal Shield, Adv. Energy Well, Mak. Cloaking Device, 01-MTF's Autohacker, Imp. Weapon Shielding"
  },
  "Warlord Statue": {
    "Name": "Warlord Statue",
    "Class": "Special",
    "Tier": "1",
    "Threat": "1",
    "Rating": "20",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Core",
    "Speed": "50",
    "Sight Range": "16",
    "Energy Generation": "10",
    "Heat Dissipation": "10",
    "Core Integrity": "100",
    "Core Exposure": "100",
    "Core Exposure %": "100",
    "Salvage Potential": "10~20",
    "Immunities": ["Hacking"]
  },
  "Warbot": {
    "Name": "Warbot",
    "Class": "Unique",
    "Tier": "7",
    "Threat": "1",
    "Rating": "99",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "30",
    "Heat Dissipation": "90",
    "Core Integrity": "200",
    "Core Exposure": "381",
    "Core Exposure %": "19",
    "Salvage Potential": "150~200",
    "Immunities": ["Coring", "Meltdown"],
    "Armament": ["Battle Rifle", "Battle Rifle", "Battle Rifle", "Battle Rifle", "Mak. Shrapnel Gun", "Mak. Shrapnel Gun"],
    "Components": ["Mak. Power Source", "Spk. Treads", "Spk. Treads", "Spk. Treads", "Heat Sink", "Heat Sink", "Heat Sink", "Heat Sink", "Mak. System Restoration Module", "Targeting Computer", "Targeting Computer", "Targeting Computer", "Mak. Armor Plating", "Mak. Armor Plating", "Mak. Kinetic Plating", "Mak. Thermal Plating", "Weapon Shielding", "Weapon Shielding", "Weapon Cycler"],
    "Resistances": {
      "Kinetic": "10",
      "Thermal": "10"
    },
    "Armament String": "4x Battle Rifle, 2x Mak. Shrapnel Gun",
    "Components String": "Mak. Power Source, 3x Spk. Treads, 4x Heat Sink, Mak. System Restoration Module, 3x Targeting Computer, 2x Mak. Armor Plating, Mak. Kinetic Plating, Mak. Thermal Plating, 2x Weapon Shielding, Weapon Cycler"
  },
  "5H-AD0": {
    "Name": "5H-AD0",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "119",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "60",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "110",
    "Sight Range": "24",
    "Energy Generation": "66",
    "Heat Dissipation": "56",
    "Core Integrity": "150",
    "Core Exposure": "179",
    "Core Exposure %": "19",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["5H-AD0's Sniper Rifle"],
    "Components": ["Mni. Fusion Reactor", "Biometal Leg", "Biometal Leg", "Biometal Leg", "Exp. Heat Sink", "Mak. Transmission Jammer", "Exp. ECM Suite", "Spectral Analyzer", "5H-AD0's Cloak", "Zio. Weapon Casing"],
    "Resistances": {
      "Electromagnetic": "67"
    },
    "Armament String": "5H-AD0's Sniper Rifle",
    "Components String": "Mni. Fusion Reactor, 3x Biometal Leg, Exp. Heat Sink, Mak. Transmission Jammer, Exp. ECM Suite, Spectral Analyzer, 5H-AD0's Cloak, Zio. Weapon Casing"
  },
  "Surveybot 24": {
    "Name": "Surveybot 24",
    "Class": "Unique",
    "Tier": "5",
    "Threat": "1",
    "Rating": "13",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "14",
    "Energy Generation": "19",
    "Heat Dissipation": "10",
    "Core Integrity": "30",
    "Core Exposure": "76",
    "Core Exposure %": "39",
    "Salvage Potential": "10~30",
    "Components": ["Lgt. Nuclear Core", "Gravmag System"],
    "Resistances": {
      "Electromagnetic": "-50"
    },
    "Components String": "Lgt. Nuclear Core, Gravmag System"
  },
  "8R-AWN": {
    "Name": "8R-AWN",
    "Class": "Unique",
    "Tier": "9",
    "Threat": "1",
    "Rating": "174",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "10",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "34",
    "Heat Dissipation": "76",
    "Core Integrity": "200",
    "Core Exposure": "372",
    "Core Exposure %": "14",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["8R-AWN's Boregun", "8R-AWN's Boregun"],
    "Components": ["Rnf. Fission Core", "Adv. Myomer Leg", "Adv. Myomer Leg", "Gravity Neutralizer", "Exp. Heat Sink", "8R-AWN's Armor/TH", "8R-AWN's Armor/EX", "AS-neutralizer No. 17b", "Adv. Weapon Cycler", "Exp. Targeting Computer"],
    "Resistances": {
      "Thermal": "90",
      "Explosive": "90",
      "Electromagnetic": "90"
    },
    "Armament String": "2x 8R-AWN's Boregun",
    "Components String": "Rnf. Fission Core, 2x Adv. Myomer Leg, Gravity Neutralizer, Exp. Heat Sink, 8R-AWN's Armor/TH, 8R-AWN's Armor/EX, AS-neutralizer No. 17b, Adv. Weapon Cycler, Exp. Targeting Computer"
  },
  "EX-BIN": {
    "Name": "EX-BIN",
    "Class": "Unique",
    "Tier": "4",
    "Threat": "1",
    "Rating": "79",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "66",
    "Sight Range": "16",
    "Energy Generation": "22",
    "Heat Dissipation": "15",
    "Core Integrity": "30",
    "Core Exposure": "118",
    "Core Exposure %": "40",
    "Salvage Potential": "20~30",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming"],
    "Components": ["Cold Fusion Reactor", "Mak. Hover Unit", "Mak. Hover Unit", "Adv. Component Analysis Suite", "System Purifier", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2"],
    "Resistances": {
      "Electromagnetic": "90"
    },
    "Components String": "Cold Fusion Reactor, 2x Mak. Hover Unit, Adv. Component Analysis Suite, System Purifier, 10x EX Chip 1, 10x EX Chip 2"
  },
  "EX-DEC": {
    "Name": "EX-DEC",
    "Class": "Unique",
    "Tier": "4",
    "Threat": "1",
    "Rating": "113",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "80",
    "Sight Range": "16",
    "Energy Generation": "23",
    "Heat Dissipation": "15",
    "Core Integrity": "50",
    "Core Exposure": "80",
    "Core Exposure %": "19",
    "Salvage Potential": "20~30",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming"],
    "Armament": ["AWS/EX-DEC"],
    "Components": ["Hvy. Deuterium Engine", "Cmb. Antigrav System", "Imp. Target Analyzer", "Imp. Armor Integrity Analyzer", "Exp. Core Analyzer", "Adv. Launcher Guidance Computer", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2"],
    "Resistances": {
      "Electromagnetic": "90"
    },
    "Armament String": "AWS/EX-DEC",
    "Components String": "Hvy. Deuterium Engine, Cmb. Antigrav System, Imp. Target Analyzer, Imp. Armor Integrity Analyzer, Exp. Core Analyzer, Adv. Launcher Guidance Computer, 10x EX Chip 1, 10x EX Chip 2"
  },
  "EX-HEX": {
    "Name": "EX-HEX",
    "Class": "Unique",
    "Tier": "4",
    "Threat": "1",
    "Rating": "85",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "16",
    "Energy Generation": "34",
    "Heat Dissipation": "15",
    "Core Integrity": "30",
    "Core Exposure": "116",
    "Core Exposure %": "39",
    "Salvage Potential": "20~30",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming"],
    "Components": ["Lgt. Neutrino Core", "Gravmag Array", "Adv. Transmission Jammer", "Imp. System Guard", "Adv. Recalibrator", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 1", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2", "EX Chip 2"],
    "Resistances": {
      "Electromagnetic": "90"
    },
    "Components String": "Lgt. Neutrino Core, Gravmag Array, Adv. Transmission Jammer, Imp. System Guard, Adv. Recalibrator, 10x EX Chip 1, 10x EX Chip 2"
  },
  "CL-ANK": {
    "Name": "CL-ANK",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "127",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "145",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "51",
    "Core Integrity": "130",
    "Core Exposure": "279",
    "Core Exposure %": "19",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["CL-ANK's Mallet"],
    "Components": ["Hyb. Antimatter Reactor", "Hyb. Antimatter Reactor", "Biometal Medium Treads", "Biometal Medium Treads", "Biometal Medium Treads", "Adv. Cooling System", "Med. Reactive Plating", "Med. Reflective Plating", "Exp. Weapon Shielding", "Exp. Melee Analysis Suite", "Force Booster", "Microactuators", "Nanoactuators"],
    "Resistances": {
      "Kinetic": "30",
      "Thermal": "15",
      "Electromagnetic": "75",
      "Impact": "25",
      "Slashing": "25"
    },
    "Armament String": "CL-ANK's Mallet",
    "Components String": "2x Hyb. Antimatter Reactor, 3x Biometal Medium Treads, Adv. Cooling System, Med. Reactive Plating, Med. Reflective Plating, Exp. Weapon Shielding, Exp. Melee Analysis Suite, Force Booster, Microactuators, Nanoactuators"
  },
  "1C-UTU": {
    "Name": "1C-UTU",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "140",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "51",
    "Core Integrity": "120",
    "Core Exposure": "142",
    "Core Exposure %": "19",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["1C-UTU's Sword \"Choppy\"", "1C-UTU's Sword \"Lootmaker\""],
    "Components": ["Mni. Fusion Reactor", "Exp. Myomer Leg", "Exp. Myomer Leg", "1C-UTU's Buckler", "Adv. Cooling System", "Imp. Core Shielding", "Exp. Energy Well", "Mak. Transmission Jammer", "Exp. Reaction Control System", "Exp. Melee Analysis Suite", "Femtoactuators", "Exp. Actuator Array"],
    "Resistances": {
      "Electromagnetic": "75",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "1C-UTU's Sword \"Choppy\", 1C-UTU's Sword \"Lootmaker\"",
    "Components String": "Mni. Fusion Reactor, 2x Exp. Myomer Leg, 1C-UTU's Buckler, Adv. Cooling System, Imp. Core Shielding, Exp. Energy Well, Mak. Transmission Jammer, Exp. Reaction Control System, Exp. Melee Analysis Suite, Femtoactuators, Exp. Actuator Array"
  },
  "AD-0RF": {
    "Name": "AD-0RF",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "135",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Rolling",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "28",
    "Heat Dissipation": "100",
    "Core Integrity": "120",
    "Core Exposure": "384",
    "Core Exposure %": "24",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["AD-0RF's Magmablaster"],
    "Components": ["Lgt. Particle Reactor", "Arm. Huge Wheel", "Arm. Huge Wheel", "Coolant Network", "Exp. Coolant Injector", "Exp. Energy Well", "Exp. Energy Well", "Exp. Thermal Shield", "Exp. Targeting Computer", "Lyr. Heavy Armor Plating", "Exp. Weapon Shielding"],
    "Resistances": {
      "Thermal": "80",
      "Electromagnetic": "75"
    },
    "Armament String": "AD-0RF's Magmablaster",
    "Components String": "Lgt. Particle Reactor, 2x Arm. Huge Wheel, Coolant Network, Exp. Coolant Injector, 2x Exp. Energy Well, Exp. Thermal Shield, Exp. Targeting Computer, Lyr. Heavy Armor Plating, Exp. Weapon Shielding"
  },
  "7V-RTL": {
    "Name": "7V-RTL",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "180",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "16",
    "Energy Generation": "60",
    "Heat Dissipation": "96",
    "Core Integrity": "150",
    "Core Exposure": "470",
    "Core Exposure %": "19",
    "Salvage Potential": "120~150",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["Railgun", "Dispersion Rifle"],
    "Components": ["Rnf. Quantum Reactor", "Mic. Neutrino Core", "Arm. Heavy Treads", "Arm. Heavy Treads", "Adv. Powered Armor", "Adv. Powered Armor", "Exp. Power Amplifier", "Exp. Energy Well", "Exp. Energy Well", "Exp. Energy Well", "Exp. Energy Well", "Exp. Cooling System", "Exp. Cooling System", "7V-RTL's Ultimate Field"],
    "Resistances": {
      "Explosive": "50",
      "Electromagnetic": "75",
      "Impact": "25"
    },
    "Armament String": "Railgun, Dispersion Rifle",
    "Components String": "Rnf. Quantum Reactor, Mic. Neutrino Core, 2x Arm. Heavy Treads, 2x Adv. Powered Armor, Exp. Power Amplifier, 4x Exp. Energy Well, 2x Exp. Cooling System, 7V-RTL's Ultimate Field"
  },
  "P1-3CE": {
    "Name": "P1-3CE",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "167",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "30",
    "Spot %": "20",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "22",
    "Energy Generation": "30",
    "Heat Dissipation": "95",
    "Core Integrity": "170",
    "Core Exposure": "322",
    "Core Exposure %": "20",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["P1-3CE's Gatling Flakker"],
    "Components": ["Quantum Reactor", "Spk. Heavy Treads", "Spk. Heavy Treads", [{
      "name": "Med. Reactive Plating"
    }, {
      "name": "Med. Reflective Plating"
    }], "EM Disruption Field", "Imp. Heat Sink", "Disposable Heat Sink", "Adv. Cooling System", "Med. Storage Unit", "Hcp. Battery", "Hcp. Battery", "Adv. Matter Compressor", "Enh. Optical Array", "Exp. Targeting Computer", "Exp. Core Analyzer", "Imp. Armor Integrity Analyzer", "Matter Filter", "Weapon Cycler", "Exp. Hacking Suite", "Tractor Beam"],
    "Resistances": {
      "Kinetic": "30",
      "Electromagnetic": "100"
    },
    "Armament String": "P1-3CE's Gatling Flakker",
    "Components String": "Quantum Reactor, 2x Spk. Heavy Treads, Med. Reactive Plating OR Med. Reflective Plating, EM Disruption Field, Imp. Heat Sink, Disposable Heat Sink, Adv. Cooling System, Med. Storage Unit, 2x Hcp. Battery, Adv. Matter Compressor, Enh. Optical Array, Exp. Targeting Computer, Exp. Core Analyzer, Imp. Armor Integrity Analyzer, Matter Filter, Weapon Cycler, Exp. Hacking Suite, Tractor Beam"
  },
  "12-ASH": {
    "Name": "12-ASH",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "106",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "20",
    "Spot %": "20",
    "Movement": "Walking",
    "Speed": "90",
    "Sight Range": "16",
    "Energy Generation": "26",
    "Heat Dissipation": "48",
    "Core Integrity": "120",
    "Core Exposure": "123",
    "Core Exposure %": "24",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["12-ASH's Boomstick", "Ripper"],
    "Components": ["Lgt. Antimatter Reactor", "Exp. Flexi-carbon Leg", "Exp. Flexi-carbon Leg", "Exp. Heat Sink", "Triangulator", "0b10 Decoder Chip [Skirmisher]", "Exp. Reaction Control System", "Adv. Targeting Computer", "Adv. Melee Analysis Suite", "Exp. Core Analyzer"],
    "Resistances": {
      "Electromagnetic": "75"
    },
    "Armament String": "12-ASH's Boomstick, Ripper",
    "Components String": "Lgt. Antimatter Reactor, 2x Exp. Flexi-carbon Leg, Exp. Heat Sink, Triangulator, 0b10 Decoder Chip [Skirmisher], Exp. Reaction Control System, Adv. Targeting Computer, Adv. Melee Analysis Suite, Exp. Core Analyzer"
  },
  "ME-RLN": {
    "Name": "ME-RLN",
    "Class": "Unique",
    "Tier": "10",
    "Threat": "1",
    "Rating": "165",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "80",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "42",
    "Sight Range": "16",
    "Energy Generation": "63",
    "Heat Dissipation": "68",
    "Core Integrity": "100",
    "Core Exposure": "116",
    "Core Exposure %": "14",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Hacking", "Meltdown"],
    "Armament": ["ME-RLN's Wand", "Imp. Arc Thrower", "Imp. Arc Thrower"],
    "Components": ["Cld. Antimatter Reactor", "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "Gravity Neutralizer", "Exp. Phase Shifter", "Imp. Cloaking Device", "System Mapper", "System Mapper", "Ghost Barrier", "Exp. Cooling System", "Exp. Energy Well", "Exp. Energy Well", "ME-RLN's Chromatic Screen"],
    "Resistances": {
      "Kinetic": "20",
      "Thermal": "20",
      "Explosive": "45",
      "Electromagnetic": "95",
      "Impact": "20",
      "Slashing": "20",
      "Piercing": "20"
    },
    "Armament String": "ME-RLN's Wand, 2x Imp. Arc Thrower",
    "Components String": "Cld. Antimatter Reactor, 3x Cld. Antigrav System, Gravity Neutralizer, Exp. Phase Shifter, Imp. Cloaking Device, 2x System Mapper, Ghost Barrier, Exp. Cooling System, 2x Exp. Energy Well, ME-RLN's Chromatic Screen"
  },
  "NK-0LA": {
    "Name": "NK-0LA",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "146",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "30",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "81",
    "Heat Dissipation": "93",
    "Core Integrity": "110",
    "Core Exposure": "151",
    "Core Exposure %": "14",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["NK-0LA's Tesla Doomcannon"],
    "Components": ["Graviton Reactor", "Enh. Biometal Leg", "Enh. Biometal Leg", "Adv. Cryofiber Web", "Exp. Heat Sink", "Exp. Heat Sink", "Exp. Heat Sink", "Thermal Barrier", "Adv. Power Amplifier", "Exp. Energy Well", "Exp. Energy Well", "Adv. EM Disruption Field", "Reflective Plating", "Reflective Plating"],
    "Resistances": {
      "Thermal": "50",
      "Electromagnetic": "100"
    },
    "Armament String": "NK-0LA's Tesla Doomcannon",
    "Components String": "Graviton Reactor, 2x Enh. Biometal Leg, Adv. Cryofiber Web, 3x Exp. Heat Sink, Thermal Barrier, Adv. Power Amplifier, 2x Exp. Energy Well, Adv. EM Disruption Field, 2x Reflective Plating"
  },
  "99-TNT": {
    "Name": "99-TNT",
    "Class": "Unique",
    "Tier": "8",
    "Threat": "1",
    "Rating": "135",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "30",
    "Spot %": "30",
    "Movement": "Hovering",
    "Speed": "72",
    "Sight Range": "20",
    "Energy Generation": "50",
    "Heat Dissipation": "68",
    "Core Integrity": "130",
    "Core Exposure": "388",
    "Core Exposure %": "24",
    "Salvage Potential": "100~120",
    "Immunities": ["Coring", "Disruption", "Meltdown"],
    "Armament": ["99-TNT's Nukerbomber"],
    "Components": ["Hvy. Antimatter Reactor", "Cmb. Antigrav System", "Cmb. Antigrav System", "Cmb. Antigrav System", "Exp. Cooling System", "Hvy. Reactive Plating", "Exp. Weapon Shielding", "Exp. Shock Absorption System", "Exp. Matter Compressor", "Lrn. Tractor Beam", "Adv. Visual Processing Unit", "Adv. Launcher Guidance Computer"],
    "Resistances": {
      "Kinetic": "40",
      "Explosive": "100",
      "Electromagnetic": "75",
      "Impact": "25"
    },
    "Armament String": "99-TNT's Nukerbomber",
    "Components String": "Hvy. Antimatter Reactor, 3x Cmb. Antigrav System, Exp. Cooling System, Hvy. Reactive Plating, Exp. Weapon Shielding, Exp. Shock Absorption System, Exp. Matter Compressor, Lrn. Tractor Beam, Adv. Visual Processing Unit, Adv. Launcher Guidance Computer"
  },
  "Revision 17": {
    "Name": "Revision 17",
    "Class": "Special",
    "Tier": "6",
    "Threat": "1",
    "Rating": "54",
    "Value": "1",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Flying",
    "Speed": "42",
    "Sight Range": "22",
    "Energy Generation": "64",
    "Heat Dissipation": "25",
    "Core Integrity": "12",
    "Core Exposure": "104",
    "Core Exposure %": "39",
    "Salvage Potential": "10~30",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Components": ["Neutrino Core", "Field Propulsion Drive", "Field Propulsion Drive", "Weight Redist. System", "Enh. Optical Array", "Lrn. Sensor Array", "Adv. Signal Interpreter", "Adv. ECM Suite", "Adv. Hacking Suite", "Imp. System Shield"],
    "Resistances": {
      "Electromagnetic": "-100"
    },
    "Components String": "Neutrino Core, 2x Field Propulsion Drive, Weight Redist. System, Enh. Optical Array, Lrn. Sensor Array, Adv. Signal Interpreter, Adv. ECM Suite, Adv. Hacking Suite, Imp. System Shield"
  },
  "Revision 17++": {
    "Name": "Revision 17++",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "141",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "60",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "120",
    "Sight Range": "16",
    "Energy Generation": "46",
    "Heat Dissipation": "112",
    "Core Integrity": "200",
    "Core Exposure": "468",
    "Core Exposure %": "24",
    "Salvage Potential": "70~100",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Armament": ["Quantum Rifle", "Quantum Rifle", "Linear Accelerator"],
    "Components": ["Lgt. Particle Reactor", "Lgt. Particle Reactor", "Centrium Leg", "Centrium Leg", "Quantum Shading Machine", "Centrium Medium Armor Plating", "Hvy. Reflective Plating", "Adv. Cooling System", "Adv. Cooling System", "Adv. Targeting Computer"],
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Quantum Rifle, Quantum Rifle, Linear Accelerator",
    "Components String": "2x Lgt. Particle Reactor, 2x Centrium Leg, Quantum Shading Machine, Centrium Medium Armor Plating, Hvy. Reflective Plating, 2x Adv. Cooling System, Adv. Targeting Computer"
  },
  "Imprinter": {
    "Name": "Imprinter",
    "Class": "Special",
    "Tier": "5",
    "Threat": "4",
    "Rating": "72",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ5X5",
    "Memory": "20",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "62",
    "Sight Range": "16",
    "Energy Generation": "24",
    "Heat Dissipation": "20",
    "Core Integrity": "60",
    "Core Exposure": "140",
    "Core Exposure %": "39",
    "Salvage Potential": "30~40",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Components": ["F-cell Engine", "Mak. Hover Unit", "Mak. Hover Unit", "Mak. Hover Unit", "Mak. Hacking Suite", "Mak. Hacking Suite", "Mak. Hacking Suite", "Mak. Hacking Suite", "Mak. System Shield", "Mak. System Shield", "Mak. System Shield", "Mak. System Shield", "Mak. Sensor Array"],
    "Resistances": {
      "Electromagnetic": "90"
    },
    "Components String": "F-cell Engine, 3x Mak. Hover Unit, 4x Mak. Hacking Suite, 4x Mak. System Shield, Mak. Sensor Array"
  },
  "Z-Imprinter": {
    "Name": "Z-Imprinter",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "182",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "SQ5X5",
    "Memory": "100",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "24",
    "Sight Range": "16",
    "Energy Generation": "94",
    "Heat Dissipation": "124",
    "Core Integrity": "150",
    "Core Exposure": "514",
    "Core Exposure %": "29",
    "Salvage Potential": "70~100",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Armament": ["Zio. Laser-M", "Zio. Laser-M", "Zio. Laser-M"],
    "Components": ["Zio. Light DM Reactor", "Zio. Light DM Reactor", "Zio. Glidesys II", "Zio. Glidesys II", "Zio. Glidesys II", "Zio. Glidesys II", "Zio. Metafield Generator", "Zio. Light Carapace", "Zio. Biocell", "Zio. Biocell", "Adv. Phase Shifter", "Exp. Reaction Control System", "Exp. Heat Sink", "Exp. Heat Sink", "Exp. Heat Sink", "Exp. Heat Sink", "Zio. Weapon Casing"],
    "Resistances": {
      "Electromagnetic": "90"
    },
    "Armament String": "3x Zio. Laser-M",
    "Components String": "2x Zio. Light DM Reactor, 4x Zio. Glidesys II, Zio. Metafield Generator, Zio. Light Carapace, 2x Zio. Biocell, Adv. Phase Shifter, Exp. Reaction Control System, 4x Exp. Heat Sink, Zio. Weapon Casing"
  },
  "A8": {
    "Name": "A8",
    "Class": "Special",
    "Tier": "8",
    "Threat": "4",
    "Rating": "169",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "66",
    "Heat Dissipation": "108",
    "Core Integrity": "150",
    "Core Exposure": "336",
    "Core Exposure %": "24",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Armament": ["Arc Projector", "Arc Projector", "Arc Projector", "Arc Projector"],
    "Components": ["Com. Particle Reactor", "Lgt. Particle Reactor", "Antigrav Array", "Antigrav Array", "Lgt. Regenerative Plating", "Imp. Core Shielding", "Imp. Weapon Shielding", "Gravity Neutralizer", "Adv. Hacking Suite", "Adv. System Shield", "Exp. Heat Sink", "Exp. Heat Sink", "Exp. Heat Sink", "Adv. Energy Well", "Imp. Phase Shifter", "Remote Force Field"],
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "25",
      "Explosive": "-25",
      "Electromagnetic": "75"
    },
    "Armament String": "4x Arc Projector",
    "Components String": "Com. Particle Reactor, Lgt. Particle Reactor, 2x Antigrav Array, Lgt. Regenerative Plating, Imp. Core Shielding, Imp. Weapon Shielding, Gravity Neutralizer, Adv. Hacking Suite, Adv. System Shield, 3x Exp. Heat Sink, Adv. Energy Well, Imp. Phase Shifter, Remote Force Field"
  },
  "A7": {
    "Name": "A7",
    "Class": "Special",
    "Tier": "8",
    "Threat": "4",
    "Rating": "159",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "62",
    "Heat Dissipation": "92",
    "Core Integrity": "150",
    "Core Exposure": "285",
    "Core Exposure %": "25",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Armament": ["Tesla Rifle", "Tesla Rifle"],
    "Components": ["Com. Particle Reactor", "Mic. Antimatter Reactor", "Antigrav Array", "Antigrav Array", "Med. Regenerative Plating", "Imp. Core Shielding", "Imp. Weapon Shielding", "Adv. Gravity Neutralizer", "Adv. Hacking Suite", "Adv. System Shield", "Adv. Cooling System", "Adv. Cooling System", "Adv. Energy Well", "Imp. Phase Shifter", "Remote Force Field"],
    "Resistances": {
      "Explosive": "50",
      "Electromagnetic": "75",
      "Impact": "25",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "2x Tesla Rifle",
    "Components String": "Com. Particle Reactor, Mic. Antimatter Reactor, 2x Antigrav Array, Med. Regenerative Plating, Imp. Core Shielding, Imp. Weapon Shielding, Adv. Gravity Neutralizer, Adv. Hacking Suite, Adv. System Shield, 2x Adv. Cooling System, Adv. Energy Well, Imp. Phase Shifter, Remote Force Field"
  },
  "A6": {
    "Name": "A6",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "196",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "42",
    "Sight Range": "16",
    "Energy Generation": "76",
    "Heat Dissipation": "92",
    "Core Integrity": "150",
    "Core Exposure": "238",
    "Core Exposure %": "24",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Armament": ["Enh. Force Lance", "Enh. Force Lance"],
    "Components": ["Com. Particle Reactor", "Com. Particle Reactor", "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "Med. Regenerative Plating", "Exp. Core Shielding", "Exp. Weapon Shielding", "Adv. Gravity Neutralizer", "Adv. Hacking Suite", "Adv. System Shield", "Adv. Cooling System", "Adv. Cooling System", "Adv. Energy Well", "Imp. Phase Shifter", "Adv. Force Field", "Exp. Melee Analysis Suite", "Femtoactuators", "Exp. Actuator Array"],
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "25",
      "Explosive": "50",
      "Impact": "50",
      "Slashing": "50",
      "Piercing": "50"
    },
    "Armament String": "2x Enh. Force Lance",
    "Components String": "2x Com. Particle Reactor, 3x Cld. Antigrav System, Med. Regenerative Plating, Exp. Core Shielding, Exp. Weapon Shielding, Adv. Gravity Neutralizer, Adv. Hacking Suite, Adv. System Shield, 2x Adv. Cooling System, Adv. Energy Well, Imp. Phase Shifter, Adv. Force Field, Exp. Melee Analysis Suite, Femtoactuators, Exp. Actuator Array"
  },
  "A5": {
    "Name": "A5",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "197",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "56",
    "Sight Range": "16",
    "Energy Generation": "63",
    "Heat Dissipation": "108",
    "Core Integrity": "150",
    "Core Exposure": "325",
    "Core Exposure %": "25",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Traits": ["Scan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["Hvy. Tesla Rifle", "Hvy. Tesla Rifle", "Hvy. Tesla Rifle"],
    "Components": ["Graviton Reactor", "Antigrav Array", "Antigrav Array", "Exp. Power Amplifier", "Med. Regenerative Plating", "Exp. Core Shielding", "Exp. Weapon Shielding", "Adv. Gravity Neutralizer", "Exp. Hacking Suite", "Exp. System Shield", "Exp. Heat Sink", "Exp. Heat Sink", "Exp. Heat Sink", "Exp. Energy Well", "Adv. Phase Shifter", "Imp. Remote Force Field"],
    "Resistances": {
      "Kinetic": "25",
      "Thermal": "25",
      "Explosive": "25",
      "Electromagnetic": "75",
      "Impact": "-50",
      "Slashing": "-25",
      "Piercing": "-50"
    },
    "Armament String": "3x Hvy. Tesla Rifle",
    "Components String": "Graviton Reactor, 2x Antigrav Array, Exp. Power Amplifier, Med. Regenerative Plating, Exp. Core Shielding, Exp. Weapon Shielding, Adv. Gravity Neutralizer, Exp. Hacking Suite, Exp. System Shield, 3x Exp. Heat Sink, Exp. Energy Well, Adv. Phase Shifter, Imp. Remote Force Field"
  },
  "A4": {
    "Name": "A4",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "217",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "72",
    "Sight Range": "16",
    "Energy Generation": "103",
    "Heat Dissipation": "111",
    "Core Integrity": "150",
    "Core Exposure": "491",
    "Core Exposure %": "24",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Traits": ["Scan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["Helical Railgun", "Gamma Rifle", "Quantum Rifle"],
    "Components": ["Imp. Quantum Reactor", "Imp. Quantum Reactor", "Cmb. Antigrav System", "Cmb. Antigrav System", "Cmb. Antigrav System", "Hvy. Regenerative Plating", "Antimissile System", "Exp. Core Shielding", "Exp. Weapon Shielding", "Exp. Shock Absorption System", "Quantum Shading Machine", "System Mapper", "Ghost Barrier", "Exp. Cooling System", "Exp. Cooling System", "Exp. Energy Well", "Adv. Phase Shifter", "Energy Mantle"],
    "Resistances": {
      "Kinetic": "25",
      "Explosive": "75",
      "Electromagnetic": "75",
      "Impact": "25",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "Helical Railgun, Gamma Rifle, Quantum Rifle",
    "Components String": "2x Imp. Quantum Reactor, 3x Cmb. Antigrav System, Hvy. Regenerative Plating, Antimissile System, Exp. Core Shielding, Exp. Weapon Shielding, Exp. Shock Absorption System, Quantum Shading Machine, System Mapper, Ghost Barrier, 2x Exp. Cooling System, Exp. Energy Well, Adv. Phase Shifter, Energy Mantle"
  },
  "A3": {
    "Name": "A3",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "214",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "21",
    "Sight Range": "24",
    "Energy Generation": "108",
    "Heat Dissipation": "106",
    "Core Integrity": "150",
    "Core Exposure": "348",
    "Core Exposure %": "24",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Traits": ["Scan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["A3's Sniper Rifle"],
    "Components": ["Lgt. Quantum Reactor", "Lgt. Quantum Reactor", "Lgt. Particle Reactor", "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "ST Field Compressor", "Lgt. Regenerative Plating", "Lgt. Regenerative Plating", "Exp. Core Shielding", "Exp. Weapon Shielding", "Quantum Shading Machine", "Deep Network Scanner", "Quantum Router", "Exp. Cooling System", "Exp. Cooling System", "Exp. Energy Well", "Adv. Phase Shifter", "Spectral Analyzer", "Imp. Energy Mantle"],
    "Resistances": {
      "Kinetic": "25",
      "Explosive": "25",
      "Electromagnetic": "75",
      "Impact": "25",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "A3's Sniper Rifle",
    "Components String": "2x Lgt. Quantum Reactor, Lgt. Particle Reactor, 3x Cld. Antigrav System, ST Field Compressor, 2x Lgt. Regenerative Plating, Exp. Core Shielding, Exp. Weapon Shielding, Quantum Shading Machine, Deep Network Scanner, Quantum Router, 2x Exp. Cooling System, Exp. Energy Well, Adv. Phase Shifter, Spectral Analyzer, Imp. Energy Mantle"
  },
  "A2": {
    "Name": "A2",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "253",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "36",
    "Sight Range": "16",
    "Energy Generation": "132",
    "Heat Dissipation": "106",
    "Core Integrity": "150",
    "Core Exposure": "433",
    "Core Exposure %": "25",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Traits": ["Scan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["Gatling Beam", "Gatling Beam"],
    "Components": ["Imp. Quantum Reactor", "Imp. Quantum Reactor", "Cmb. Antigrav System", "Cmb. Antigrav System", "Cmb. Antigrav System", "ST Field Compressor", "Exp. Power Amplifier", "Hvy. Regenerative Plating", "Exp. Core Shielding", "Exp. Weapon Shielding", "Adv. Quantum Shading Machine", "Deep Network Scanner", "Deep Network Scanner", "Quantum Router", "Quantum Router", "Exp. Cooling System", "Exp. Cooling System", "Exp. Energy Well", "Exp. Phase Shifter", "Exp. Thermal Defense Suite", "Imp. Energy Mantle"],
    "Resistances": {
      "Thermal": "25",
      "Explosive": "50",
      "Electromagnetic": "75",
      "Impact": "25",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "2x Gatling Beam",
    "Components String": "2x Imp. Quantum Reactor, 3x Cmb. Antigrav System, ST Field Compressor, Exp. Power Amplifier, Hvy. Regenerative Plating, Exp. Core Shielding, Exp. Weapon Shielding, Adv. Quantum Shading Machine, 2x Deep Network Scanner, 2x Quantum Router, 2x Exp. Cooling System, Exp. Energy Well, Exp. Phase Shifter, Exp. Thermal Defense Suite, Imp. Energy Mantle"
  },
  "Zhirov": {
    "Name": "Zhirov",
    "Class": "Special",
    "Tier": "8",
    "Threat": "4",
    "Rating": "128",
    "Value": "1",
    "Size Class": "Medium",
    "Size": "1",
    "Profile": "RD5X5",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "46",
    "Sight Range": "16",
    "Energy Generation": "38",
    "Heat Dissipation": "25",
    "Core Integrity": "120",
    "Core Exposure": "125",
    "Core Exposure %": "24",
    "Salvage Potential": "70~90",
    "Immunities": ["Coring", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Armament": ["Exp. Stasis Projector", "Hvy. Tesla Rifle"],
    "Components": ["Com. Particle Reactor", "Cld. Antigrav System", "Cld. Antigrav System", "Imp. Core Shielding", "Adv. Cryofiber Web", "Exp. Terrain Scanner", "Exp. Terrain Scan Processor", "Exp. Transmission Jammer", "Deep Network Scanner", "Quantum Router"],
    "Resistances": {
      "Explosive": "25",
      "Electromagnetic": "75"
    },
    "Armament String": "Exp. Stasis Projector, Hvy. Tesla Rifle",
    "Components String": "Com. Particle Reactor, 2x Cld. Antigrav System, Imp. Core Shielding, Adv. Cryofiber Web, Exp. Terrain Scanner, Exp. Terrain Scan Processor, Exp. Transmission Jammer, Deep Network Scanner, Quantum Router"
  },
  "Perun": {
    "Name": "Perun",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "131",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "68",
    "Heat Dissipation": "107",
    "Core Integrity": "200",
    "Core Exposure": "322",
    "Core Exposure %": "24",
    "Salvage Potential": "80~105",
    "Immunities": ["Coring", "Jamming"],
    "Armament": ["Imp. Arc Thrower", "Imp. Arc Thrower", "Imp. Arc Thrower"],
    "Components": ["Com. Particle Reactor", "Enh. Biometal Leg", "Enh. Biometal Leg", "Adv. Powered Armor", "Adv. Heat Sink", "Adv. Heat Sink", "Adv. Heat Sink", "Exp. Energy Well", "Adv. Dynamic Insulation System", "Adv. Targeting Computer"],
    "Resistances": {
      "Explosive": "50",
      "Slashing": "-50"
    },
    "Armament String": "3x Imp. Arc Thrower",
    "Components String": "Com. Particle Reactor, 2x Enh. Biometal Leg, Adv. Powered Armor, 3x Adv. Heat Sink, Exp. Energy Well, Adv. Dynamic Insulation System, Adv. Targeting Computer"
  },
  "Svarog": {
    "Name": "Svarog",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "113",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "40",
    "Spot %": "100",
    "Movement": "Walking",
    "Speed": "100",
    "Sight Range": "16",
    "Energy Generation": "28",
    "Heat Dissipation": "112",
    "Core Integrity": "200",
    "Core Exposure": "287",
    "Core Exposure %": "24",
    "Salvage Potential": "80~105",
    "Immunities": ["Coring", "Jamming"],
    "Armament": ["Nova Cannon", "Nova Cannon"],
    "Components": ["Com. Particle Reactor", "Enh. Biometal Leg", "Enh. Biometal Leg", "Adv. Powered Armor", "Adv. Cooling System", "Adv. Cooling System", "Adv. Targeting Computer", "Adv. Particle Charger"],
    "Resistances": {
      "Explosive": "50",
      "Slashing": "-50"
    },
    "Armament String": "2x Nova Cannon",
    "Components String": "Com. Particle Reactor, 2x Enh. Biometal Leg, Adv. Powered Armor, 2x Adv. Cooling System, Adv. Targeting Computer, Adv. Particle Charger"
  },
  "Data Miner": {
    "Name": "Data Miner",
    "Class": "Special",
    "Tier": "5",
    "Threat": "4",
    "Rating": "59",
    "Value": "1",
    "Size Class": "Small",
    "Size": "1",
    "Profile": "SQ3X3",
    "Memory": "20",
    "Movement": "Hovering",
    "Speed": "60",
    "Sight Range": "16",
    "Energy Generation": "18",
    "Heat Dissipation": "15",
    "Core Integrity": "30",
    "Core Exposure": "98",
    "Core Exposure %": "39",
    "Salvage Potential": "20~30",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Components": ["Lgt. Angular Momentum Engine", "Gravmag Array", "System Mapper", "Deep Network Scanner", "Ghost Barrier", "Quantum Router"],
    "Resistances": {
      "Electromagnetic": "90"
    },
    "Components String": "Lgt. Angular Momentum Engine, Gravmag Array, System Mapper, Deep Network Scanner, Ghost Barrier, Quantum Router"
  },
  "God Mode (Fake)": {
    "Name": "God Mode (Fake)",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "159",
    "Value": "1",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "20",
    "Energy Generation": "73",
    "Heat Dissipation": "104",
    "Core Integrity": "200",
    "Core Exposure": "1490",
    "Core Exposure %": "39",
    "Salvage Potential": "200~400",
    "Immunities": ["Coring", "Hacking", "Jamming"],
    "Armament": ["Slug Cannon", "Slug Cannon", "Slug Cannon", "Slug Cannon", "Slug Cannon"],
    "Components": ["Antimatter Reactor", "Antimatter Reactor", "Antimatter Reactor", "Hvy. Treads", "Hvy. Treads", "Hvy. Treads", "Core Shielding", "Weapon Shielding", "Imp. Focal Shield", "Hvy. Armor Plating", "Shock Absorption System", "Imp. Cooling System", "Imp. Cooling System", "Adv. Energy Well", "Recoil Stabilizer", "Imp. Targeting Computer", "Adv. Visual Processing Unit"],
    "Resistances": {
      "Kinetic": "25",
      "Explosive": "25",
      "Electromagnetic": "50"
    },
    "Armament String": "5x Slug Cannon",
    "Components String": "3x Antimatter Reactor, 3x Hvy. Treads, Core Shielding, Weapon Shielding, Imp. Focal Shield, Hvy. Armor Plating, Shock Absorption System, 2x Imp. Cooling System, Adv. Energy Well, Recoil Stabilizer, Imp. Targeting Computer, Adv. Visual Processing Unit"
  },
  "God Mode": {
    "Name": "God Mode",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "369",
    "Value": "2000",
    "Size Class": "Large",
    "Size": "2",
    "Profile": "SQ9X9",
    "Memory": "50",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "22",
    "Energy Generation": "114",
    "Heat Dissipation": "162",
    "Core Integrity": "1000",
    "Core Exposure": "1650",
    "Core Exposure %": "39",
    "Salvage Potential": "500~1000",
    "Immunities": ["Coring", "Dismemberment", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Armament": ["Hvy. Beamcaster", "Hvy. Beamcaster", "Bore Cannon", "Bore Cannon", "Micro-nuke Launcher"],
    "Components": ["Antimatter Reactor", "Antimatter Reactor", "Antimatter Reactor", "Antimatter Reactor", "Hvy. Treads", "Hvy. Treads", "Hvy. Treads", "Hvy. Treads", "Imp. Core Shielding", "Imp. Weapon Shielding", "Adv. Focal Shield", "Hvy. Reflective Plating", "Shock Absorption System", "Adv. Cooling System", "Adv. Cooling System", "Exp. Energy Well", "Recoil Nullifier", "Adv. Targeting Computer", "Enh. Optical Array"],
    "Resistances": {
      "Kinetic": "30",
      "Thermal": "25",
      "Explosive": "25",
      "Electromagnetic": "100"
    },
    "Armament String": "2x Hvy. Beamcaster, 2x Bore Cannon, Micro-nuke Launcher",
    "Components String": "4x Antimatter Reactor, 4x Hvy. Treads, Imp. Core Shielding, Imp. Weapon Shielding, Adv. Focal Shield, Hvy. Reflective Plating, Shock Absorption System, 2x Adv. Cooling System, Exp. Energy Well, Recoil Nullifier, Adv. Targeting Computer, Enh. Optical Array"
  },
  "Warlord": {
    "Name": "Warlord",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "220",
    "Value": "2000",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "170",
    "Sight Range": "22",
    "Energy Generation": "56",
    "Heat Dissipation": "126",
    "Core Integrity": "400",
    "Core Exposure": "613",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Disruption", "Hacking", "Meltdown"],
    "Armament": ["Imp. Arc Thrower", "Com. HERF Cannon", "Hyp. Railgun"],
    "Components": ["Particle Reactor", "Particle Reactor", "Arm. Heavy Treads", "Arm. Heavy Treads", "Imp. Weapon Shielding", "Centrium Medium Armor Plating", "Adv. Thermal Shield", "Adv. Powered Armor", "Exp. Cooling System", "Exp. Cooling System", "Adv. Energy Well", "Imp. Phase Shifter", "Exp. Targeting Computer", "Enh. Optical Array"],
    "Resistances": {
      "Thermal": "30",
      "Explosive": "50",
      "Electromagnetic": "100"
    },
    "Armament String": "Imp. Arc Thrower, Com. HERF Cannon, Hyp. Railgun",
    "Components String": "2x Particle Reactor, 2x Arm. Heavy Treads, Imp. Weapon Shielding, Centrium Medium Armor Plating, Adv. Thermal Shield, Adv. Powered Armor, 2x Exp. Cooling System, Adv. Energy Well, Imp. Phase Shifter, Exp. Targeting Computer, Enh. Optical Array"
  },
  "Warlord (Command)": {
    "Name": "Warlord (Command)",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "275",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "22",
    "Energy Generation": "56",
    "Heat Dissipation": "126",
    "Core Integrity": "500",
    "Core Exposure": "740",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Disruption", "Hacking", "Meltdown"],
    "Armament": ["Blast Cannon", "Blast Cannon"],
    "Components": ["Particle Reactor", "Particle Reactor", "Enh. Armored Heavy Treads", "Enh. Armored Heavy Treads", "Exp. Weapon Shielding", "Centrium Medium Armor Plating", "Adv. Thermal Shield", "Exp. Powered Armor", "Exp. Cooling System", "Exp. Cooling System", "Adv. Energy Well", "Lrn. Tractor Beam", "Adv. Phase Shifter", "Exp. Targeting Computer", "Enh. Optical Array"],
    "Resistances": {
      "Thermal": "30",
      "Explosive": "50",
      "Electromagnetic": "100"
    },
    "Armament String": "2x Blast Cannon",
    "Components String": "2x Particle Reactor, 2x Enh. Armored Heavy Treads, Exp. Weapon Shielding, Centrium Medium Armor Plating, Adv. Thermal Shield, Exp. Powered Armor, 2x Exp. Cooling System, Adv. Energy Well, Lrn. Tractor Beam, Adv. Phase Shifter, Exp. Targeting Computer, Enh. Optical Array"
  },
  "Warlord AM-PH4": {
    "Name": "Warlord AM-PH4",
    "Class": "Special",
    "Tier": "2",
    "Threat": "5",
    "Rating": "64",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "320",
    "Sight Range": "16",
    "Energy Generation": "41",
    "Heat Dissipation": "94",
    "Core Integrity": "100",
    "Core Exposure": "496",
    "Core Exposure %": "25",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": ["Particle Gun", "Particle Gun", "Battle Rifle", "Battle Rifle", "Battle Cannon"],
    "Components": ["Imp. Ion Engine", "Imp. Ion Engine", "Imp. Ion Engine", "Imp. Treads", "Arm. Huge Wheel", "Arm. Huge Wheel", "Weapon Shielding", "Med. Armor Plating", "Med. Armor Plating", "Cooling System", "Cooling System", "Hcp. Matter Pod"],
    "Resistances": {
      "Electromagnetic": "100"
    },
    "Armament String": "2x Particle Gun, 2x Battle Rifle, Battle Cannon",
    "Components String": "3x Imp. Ion Engine, Imp. Treads, 2x Arm. Huge Wheel, Weapon Shielding, 2x Med. Armor Plating, 2x Cooling System, Hcp. Matter Pod"
  },
  "Warlord MG-163": {
    "Name": "Warlord MG-163",
    "Class": "Special",
    "Tier": "3",
    "Threat": "5",
    "Rating": "72",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "250",
    "Sight Range": "16",
    "Energy Generation": "38",
    "Heat Dissipation": "92",
    "Core Integrity": "120",
    "Core Exposure": "690",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": [[{
      "name": "Field Laser"
    }, {
      "name": "Riot Gun",
      "number": 2
    }], "Barrage Gun", "Barrage Gun", [{
      "name": "Hvy. Particle Cannon"
    }, {
      "name": "Assault Cannon"
    }]],
    "Components": ["Deuterium Engine", "Deuterium Engine", "Arm. Treads", "Arm. Treads", "Hvy. Armor Plating", "Hvy. Armor Plating", "Imp. Heat Sink", "Imp. Heat Sink", "Imp. Heat Sink", "Adv. Targeting Computer"],
    "Resistances": {
      "Electromagnetic": "100"
    },
    "Armament String": "Field Laser OR 2x Riot Gun, 2x Barrage Gun, Hvy. Particle Cannon OR Assault Cannon",
    "Components String": "2x Deuterium Engine, 2x Arm. Treads, 2x Hvy. Armor Plating, 3x Imp. Heat Sink, Adv. Targeting Computer"
  },
  "Warlord HL-1SK": {
    "Name": "Warlord HL-1SK",
    "Class": "Special",
    "Tier": "4",
    "Threat": "5",
    "Rating": "127",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "240",
    "Sight Range": "16",
    "Energy Generation": "42",
    "Heat Dissipation": "104",
    "Core Integrity": "180",
    "Core Exposure": "706",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": ["Greatsword", "Greatsword"],
    "Components": ["Rnf. Deuterium Engine", "Rnf. Deuterium Engine", "Med. Treads", "Med. Treads", "Imp. Weapon Shielding", "Imp. Weapon Shielding", "Hrd. Heavy Armor Plating", "Hrd. Heavy Armor Plating", "Imp. Cooling System", "Imp. Cooling System", "Phase Shifter", "Microactuators", "Microactuators", "Microactuators", "Force Booster", "Imp. Melee Analysis Suite", "Imp. Melee Analysis Suite"],
    "Resistances": {
      "Electromagnetic": "100"
    },
    "Armament String": "2x Greatsword",
    "Components String": "2x Rnf. Deuterium Engine, 2x Med. Treads, 2x Imp. Weapon Shielding, 2x Hrd. Heavy Armor Plating, 2x Imp. Cooling System, Phase Shifter, 3x Microactuators, Force Booster, 2x Imp. Melee Analysis Suite"
  },
  "Warlord SH-K8T": {
    "Name": "Warlord SH-K8T",
    "Class": "Special",
    "Tier": "5",
    "Threat": "5",
    "Rating": "117",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "240",
    "Sight Range": "16",
    "Energy Generation": "46",
    "Heat Dissipation": "104",
    "Core Integrity": "240",
    "Core Exposure": "543",
    "Core Exposure %": "25",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": [[{
      "name": "Plasma Rifle",
      "number": 2
    }, {
      "name": "Beamcaster",
      "number": 2
    }, {
      "name": "Arc Thrower",
      "number": 2
    }], "Hvy. Machine Gun", [{
      "name": "Hvy. Plasma Cannon"
    }, {
      "name": "Bore Cannon"
    }]],
    "Components": ["Angular Momentum Engine", "Angular Momentum Engine", "Imp. Medium Treads", "Imp. Medium Treads", "Core Shielding", "Lyr. Medium Armor Plating", "Hvy. Reactive Plating", "Imp. Cooling System", "Imp. Cooling System", "Imp. Targeting Computer", "Adv. Targeting Computer"],
    "Resistances": {
      "Kinetic": "40",
      "Electromagnetic": "100"
    },
    "Armament String": "2x Plasma Rifle OR 2x Beamcaster OR 2x Arc Thrower, Hvy. Machine Gun, Hvy. Plasma Cannon OR Bore Cannon",
    "Components String": "2x Angular Momentum Engine, 2x Imp. Medium Treads, Core Shielding, Lyr. Medium Armor Plating, Hvy. Reactive Plating, 2x Imp. Cooling System, Imp. Targeting Computer, Adv. Targeting Computer"
  },
  "Warlord D3-CKR": {
    "Name": "Warlord D3-CKR",
    "Class": "Special",
    "Tier": "6",
    "Threat": "5",
    "Rating": "160",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "330",
    "Sight Range": "16",
    "Energy Generation": "48",
    "Heat Dissipation": "112",
    "Core Integrity": "260",
    "Core Exposure": "609",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": ["Hvy. Rocket Launcher", [{
      "name": "Shock Bomb Launcher"
    }, {
      "name": "Imp. Grenade Launcher"
    }], "Smartbomb Launcher"],
    "Components": ["Rnf. Fission Core", "Rnf. Fission Core", "Arm. Medium Treads", "Arm. Medium Treads", "Lyr. Medium Armor Plating", "Lyr. Medium Armor Plating", "Lyr. Medium Armor Plating", "Imp. Shock Absorption System", "Imp. Thermal Shield", "Adv. Cooling System", "Adv. Cooling System", "Lrn. Tractor Beam", "Matter Filter", "Imp. Matter Compressor", "Point Defense System", "Imp. Launcher Guidance Computer"],
    "Resistances": {
      "Thermal": "25",
      "Explosive": "50",
      "Electromagnetic": "100"
    },
    "Armament String": "Hvy. Rocket Launcher, Shock Bomb Launcher OR Imp. Grenade Launcher, Smartbomb Launcher",
    "Components String": "2x Rnf. Fission Core, 2x Arm. Medium Treads, 3x Lyr. Medium Armor Plating, Imp. Shock Absorption System, Imp. Thermal Shield, 2x Adv. Cooling System, Lrn. Tractor Beam, Matter Filter, Imp. Matter Compressor, Point Defense System, Imp. Launcher Guidance Computer"
  },
  "Warlord 4Z-XS3": {
    "Name": "Warlord 4Z-XS3",
    "Class": "Special",
    "Tier": "7",
    "Threat": "5",
    "Rating": "179",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "16",
    "Energy Generation": "52",
    "Heat Dissipation": "81",
    "Core Integrity": "320",
    "Core Exposure": "746",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": [[{
      "name": "Phase Gun",
      "number": 2
    }, {
      "name": "Dispersion Rifle",
      "number": 2
    }, {
      "name": "Imp. Arc Thrower",
      "number": 2
    }], "Railgun", [{
      "name": "Hvy. Neutron Cannon"
    }, {
      "name": "Hardcell Cannon"
    }]],
    "Components": ["Antimatter Reactor", "Antimatter Reactor", "Hvy. Treads", "Hvy. Treads", "Lyr. Heavy Armor Plating", "Hvy. Reflective Plating", "Adv. Cooling System", "Adv. Coolant Injector", "Adv. Coolant Injector", "Imp. Weapon Cycler"],
    "Resistances": {
      "Thermal": "25",
      "Electromagnetic": "100"
    },
    "Armament String": "2x Phase Gun OR 2x Dispersion Rifle OR 2x Imp. Arc Thrower, Railgun, Hvy. Neutron Cannon OR Hardcell Cannon",
    "Components String": "2x Antimatter Reactor, 2x Hvy. Treads, Lyr. Heavy Armor Plating, Hvy. Reflective Plating, Adv. Cooling System, 2x Adv. Coolant Injector, Imp. Weapon Cycler"
  },
  "Warlord KY-Z71": {
    "Name": "Warlord KY-Z71",
    "Class": "Special",
    "Tier": "8",
    "Threat": "5",
    "Rating": "227",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "100",
    "Movement": "Treading",
    "Speed": "225",
    "Sight Range": "16",
    "Energy Generation": "77",
    "Heat Dissipation": "112",
    "Core Integrity": "350",
    "Core Exposure": "396",
    "Core Exposure %": "19",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Hacking", "Meltdown"],
    "Armament": ["Quantum Rifle", "Quantum Rifle", [{
      "name": "Nova Cannon"
    }, {
      "name": "Linear Accelerator"
    }]],
    "Components": ["Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Rnf. Antimatter Reactor", "Adv. Medium Treads", "Adv. Medium Treads", "Adv. Medium Treads", "Imp. Core Shielding", "Imp. Utility Shielding", "Lyr. Heavy Armor Plating", "Adv. Force Field", "Power Amplifier", "Adv. Cooling System", "Adv. Cooling System", "Adv. Coolant Injector", "Adv. Coolant Injector", "Energy Well", "Energy Well", "Energy Well", "Energy Well", "Imp. Particle Charger", "Lrn. Sensor Array"],
    "Resistances": {
      "Electromagnetic": "100"
    },
    "Armament String": "2x Quantum Rifle, Nova Cannon OR Linear Accelerator",
    "Components String": "3x Rnf. Antimatter Reactor, 3x Adv. Medium Treads, Imp. Core Shielding, Imp. Utility Shielding, Lyr. Heavy Armor Plating, Adv. Force Field, Power Amplifier, 2x Adv. Cooling System, 2x Adv. Coolant Injector, 4x Energy Well, Imp. Particle Charger, Lrn. Sensor Array"
  },
  "Sigix Warrior": {
    "Name": "Sigix Warrior",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "1075",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "20",
    "Movement": "Walking",
    "Speed": "30",
    "Sight Range": "22",
    "Energy Generation": "40",
    "Heat Dissipation": "100",
    "Core Integrity": "100",
    "Core Exposure": "304",
    "Salvage Potential": "70~100",
    "Immunities": ["Criticals", "Dismemberment", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Armament": ["Sigix Sheargun", "Sigix Sheargun"],
    "Components": ["Sigix Exoskeleton"],
    "Resistances": {
      "Kinetic": "50",
      "Thermal": "50",
      "Explosive": "50",
      "Electromagnetic": "100",
      "Impact": "50",
      "Slashing": "50",
      "Piercing": "50"
    },
    "Armament String": "2x Sigix Sheargun",
    "Components String": "Sigix Exoskeleton"
  },
  "MAIN.C (Shell)": {
    "Name": "MAIN.C (Shell)",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "343",
    "Value": "1",
    "Size Class": "Huge",
    "Size": "3",
    "Profile": "SQ9X9",
    "Memory": "100",
    "Spot %": "100",
    "Movement": "Treading",
    "Speed": "160",
    "Sight Range": "22",
    "Energy Generation": "120",
    "Heat Dissipation": "280",
    "Core Integrity": "500",
    "Core Exposure": "885",
    "Core Exposure %": "24",
    "Salvage Potential": "500~1000",
    "Immunities": ["Coring", "Dismemberment", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Traits": ["Core Regeneration (5): Regenerates 5 core integrity every turn."],
    "Armament": ["Hvy. Quantum Rifle", "Hvy. Quantum Rifle", "Hpw. Disruptor Cannon", "Hpw. Disruptor Cannon"],
    "Components": ["Singularity Reactor", "Hdn. Centrium Heavy Treads", "Hdn. Centrium Heavy Treads", "Centrium Heavy Armor Plating", "Centrium Heavy Armor Plating", "Coolant Network", "Coolant Network", "Exp. Energy Well", "Exp. Energy Well", "Enh. Optical Array"],
    "Resistances": {
      "Electromagnetic": "100"
    },
    "Armament String": "2x Hvy. Quantum Rifle, 2x Hpw. Disruptor Cannon",
    "Components String": "Singularity Reactor, 2x Hdn. Centrium Heavy Treads, 2x Centrium Heavy Armor Plating, 2x Coolant Network, 2x Exp. Energy Well, Enh. Optical Array"
  },
  "MAIN.C": {
    "Name": "MAIN.C",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "305",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "200",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "34",
    "Sight Range": "22",
    "Energy Generation": "156",
    "Heat Dissipation": "100",
    "Core Integrity": "500",
    "Core Exposure": "644",
    "Core Exposure %": "24",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Traits": ["Core Regeneration (5): Regenerates 5 core integrity every turn."],
    "Armament": ["Imp. Heavy Machine Gun", "Imp. Heavy Machine Gun", "Imp. Heavy Machine Gun", "Imp. Heavy Machine Gun", "Omega Cannon"],
    "Components": ["Zero-point Reactor", "Zero-point Reactor", "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "Cld. Antigrav System", "Exp. Powered Armor", "Exp. Powered Armor", "Exp. Propulsion Shielding", "Exp. Weapon Shielding", "Antimissile System", "Beam Splitter", "Exp. Shock Absorption System", "Adv. Quantum Shading Machine", "Exp. Matter Compressor", "Exp. Targeting Computer", "Enh. Optical Array"],
    "Resistances": {
      "Thermal": "75",
      "Explosive": "75",
      "Electromagnetic": "100"
    },
    "Armament String": "4x Imp. Heavy Machine Gun, Omega Cannon",
    "Components String": "2x Zero-point Reactor, 5x Cld. Antigrav System, 2x Exp. Powered Armor, Exp. Propulsion Shielding, Exp. Weapon Shielding, Antimissile System, Beam Splitter, Exp. Shock Absorption System, Adv. Quantum Shading Machine, Exp. Matter Compressor, Exp. Targeting Computer, Enh. Optical Array"
  },
  "Architect": {
    "Name": "Architect",
    "Class": "Special",
    "Tier": "10",
    "Threat": "5",
    "Rating": "345",
    "Value": "1",
    "Size Class": "Large",
    "Size": "1",
    "Profile": "RD7X7",
    "Memory": "-2",
    "Spot %": "100",
    "Movement": "Hovering",
    "Speed": "28",
    "Sight Range": "22",
    "Energy Generation": "156",
    "Heat Dissipation": "150",
    "Core Integrity": "400",
    "Core Exposure": "547",
    "Core Exposure %": "25",
    "Salvage Potential": "150~300",
    "Immunities": ["Coring", "Dismemberment", "Disruption", "Hacking", "Jamming", "Meltdown"],
    "Traits": ["Core Regeneration (5): Regenerates 5 core integrity every turn.\n\nPart Regeneration (5): All attached parts regenerate 5 integrity every turn. Also regenerates one missing part every ten turns.\n\nScan Cloak (5): Hides this robot from sensors without a Signal Interpreter of at least strength 5."],
    "Armament": ["Modified Sigix Sheargun", "Modified Sigix Sheargun", "Modified Sigix Sheargun"],
    "Components": ["Zero-point Reactor", "Zero-point Reactor", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Cld. Linear Gravjet", "Centrium Linked Plating", "Centrium Linked Plating", "Adv. Quantum Shading Machine", "Architect God Chip A", "Architect God Chip A", "Architect God Chip A", "Architect God Chip A", "Architect God Chip D", "Architect God Chip D", "Architect God Chip D", "Architect God Chip D", "Exp. Propulsion Shielding", "Exp. Phase Shifter", "Imp. Armor Integrity Analyzer", "Exp. Core Analyzer", "Enh. Optical Array"],
    "Resistances": {
      "Kinetic": "25",
      "Explosive": "25",
      "Electromagnetic": "100",
      "Impact": "25",
      "Slashing": "25",
      "Piercing": "25"
    },
    "Armament String": "3x Modified Sigix Sheargun",
    "Components String": "2x Zero-point Reactor, 4x Cld. Linear Gravjet, 2x Centrium Linked Plating, Adv. Quantum Shading Machine, 4x Architect God Chip A, 4x Architect God Chip D, Exp. Propulsion Shielding, Exp. Phase Shifter, Imp. Armor Integrity Analyzer, Exp. Core Analyzer, Enh. Optical Array"
  }
};
},{}],"json/items.json":[function(require,module,exports) {
module.exports = {
  "Matter": {
    "Slot": "N/A",
    "Name": "Matter",
    "Type": "Matter",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Used to fuse components, and is consumed by ballistic weapons, which convert it to the appropriate type of ammunition.",
    "Index": 0,
    "Full Name": "Matter"
  },
  "Data Core": {
    "Slot": "N/A",
    "Name": "Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contains a unique dynamic key that can be used to improve the chances of hacking its associated terminal, if used before its renewal time expires (40 turns).",
    "Index": 1,
    "Full Name": "Data Core"
  },
  "Derelict Log": {
    "Slot": "N/A",
    "Name": "Derelict Log",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contains intel data collected by derelicts.",
    "Index": 2,
    "Full Name": "Derelict Log"
  },
  "Schematic Archive": {
    "Slot": "N/A",
    "Name": "Schematic Archive",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contains a part or robot schematic.",
    "Index": 3,
    "Full Name": "Schematic Archive"
  },
  "Imprinter Data Core": {
    "Slot": "N/A",
    "Name": "Imprinter Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 4,
    "Full Name": "Imprinter Data Core"
  },
  "A2 Data Core": {
    "Slot": "N/A",
    "Name": "A2 Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 5,
    "Full Name": "A2 Data Core"
  },
  "A7 Data Core": {
    "Slot": "N/A",
    "Name": "A7 Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 6,
    "Full Name": "A7 Data Core"
  },
  "MAIN.C Data Core": {
    "Slot": "N/A",
    "Name": "MAIN.C Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 7,
    "Full Name": "MAIN.C Data Core"
  },
  "Architect Data Core": {
    "Slot": "N/A",
    "Name": "Architect Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 8,
    "Full Name": "Architect Data Core"
  },
  "Scrap": {
    "Slot": "N/A",
    "Name": "Scrap",
    "Type": "Scrap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "50",
    "Description": "A collection of debris and components that may or may not contain something useful.",
    "Index": 9,
    "Full Name": "Scrap"
  },
  "Protomatter": {
    "Slot": "N/A",
    "Name": "Protomatter",
    "Type": "Protomatter",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Used to restore integrity of core and attached parts at a rate of 1 protomatter per 3 integrity. Wait while standing on protomatter to automatically apply up to 8 of it per turn.",
    "Index": 10,
    "Full Name": "Protomatter"
  },
  "Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Ion Engine",
    "Type": "Engine",
    "Rating": "1",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 20-48 thermal damage with a radius of 2 (falloff: 8; salvage: -4). High heat transfer.",
    "Energy Generation": "5",
    "Energy Storage": "150",
    "Explosion Radius": "2",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-4",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 11,
    "Full Name": "Ion Engine"
  },
  "Lgt. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Ion Engine",
    "Type": "Engine",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "40",
    "Coverage": "60",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 20-48 thermal damage with a radius of 2 (falloff: 8; salvage: -4). High heat transfer.",
    "Energy Generation": "5",
    "Energy Storage": "25",
    "Explosion Radius": "2",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-4",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 12,
    "Full Name": "Light Ion Engine"
  },
  "Backup Power I": {
    "Slot": "Power",
    "Name": "Backup Power I",
    "Type": "Engine",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "40",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 20-48 thermal damage with a radius of 2 (falloff: 8; salvage: -4). High heat transfer.",
    "Energy Generation": "4",
    "Explosion Radius": "2",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-4",
    "Index": 13,
    "Full Name": "Backup Power I"
  },
  "Imp. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Ion Engine",
    "Type": "Engine",
    "Rating": "2",
    "Size": "1",
    "Mass": "7",
    "Integrity": "70",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "7",
    "Energy Storage": "165",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 14,
    "Full Name": "Improved Ion Engine"
  },
  "Rnf. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Ion Engine",
    "Type": "Engine",
    "Rating": "2",
    "Size": "1",
    "Mass": "10",
    "Integrity": "140",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "7",
    "Energy Storage": "165",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 15,
    "Full Name": "Reinforced Ion Engine"
  },
  "Hvy. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hvy. Ion Engine",
    "Type": "Engine",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "180",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 16,
    "Full Name": "Heavy Ion Engine"
  },
  "Cld. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Ion Engine",
    "Type": "Engine",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "180",
    "Power Stability": "99%",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 17,
    "Full Name": "Cooled Ion Engine"
  },
  "Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Deuterium Engine",
    "Type": "Engine",
    "Rating": "3",
    "Size": "1",
    "Mass": "9",
    "Integrity": "75",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "175",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 18,
    "Full Name": "Deuterium Engine"
  },
  "Lgt. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Deuterium Engine",
    "Type": "Engine",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "40",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 19,
    "Full Name": "Light Deuterium Engine"
  },
  "Backup Power III": {
    "Slot": "Power",
    "Name": "Backup Power III",
    "Type": "Engine",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "40",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "6",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Index": 20,
    "Full Name": "Backup Power III"
  },
  "Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Nuclear Core",
    "Type": "Power Core",
    "Rating": "3",
    "Size": "1",
    "Mass": "7",
    "Integrity": "75",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "140",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 21,
    "Full Name": "Nuclear Core"
  },
  "Lgt. Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Nuclear Core",
    "Type": "Power Core",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "60",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 22,
    "Full Name": "Light Nuclear Core"
  },
  "Imp. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "11",
    "Energy Storage": "190",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 23,
    "Full Name": "Improved Deuterium Engine"
  },
  "Rnf. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "15",
    "Integrity": "160",
    "Coverage": "60",
    "Heat Generation": "10",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "11",
    "Energy Storage": "190",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 24,
    "Full Name": "Reinforced Deuterium Engine"
  },
  "Hyb. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hyb. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "5",
    "Energy Storage": "700",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 25,
    "Full Name": "Hybrid Deuterium Engine"
  },
  "Hvy. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hvy. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "210",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 26,
    "Full Name": "Heavy Deuterium Engine"
  },
  "Cld. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "210",
    "Power Stability": "99%",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 27,
    "Full Name": "Cooled Deuterium Engine"
  },
  "Enh. Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Enh. Nuclear Core",
    "Type": "Power Core",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "12",
    "Energy Storage": "200",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 28,
    "Full Name": "Enhanced Nuclear Core"
  },
  "Mic. Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mic. Nuclear Core",
    "Type": "Power Core",
    "Rating": "4",
    "Size": "1",
    "Mass": "6",
    "Integrity": "50",
    "Coverage": "30",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "10",
    "Energy Storage": "50",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 29,
    "Full Name": "Micro Nuclear Core"
  },
  "Mak. Power Source": {
    "Slot": "Power",
    "Name": "Mak. Power Source",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "50",
    "Heat Generation": "10",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "10",
    "Energy Storage": "70",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 30,
    "Full Name": "Makshift Power Source"
  },
  "Angular Momentum Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Angular Momentum Engine",
    "Type": "Engine",
    "Rating": "5",
    "Size": "1",
    "Mass": "13",
    "Integrity": "90",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "200",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 31,
    "Full Name": "Angular Momentum Engine"
  },
  "Lgt. Angular Momentum Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Angular Momentum Engine",
    "Type": "Engine",
    "Rating": "5",
    "Size": "1",
    "Mass": "9",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "50",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 32,
    "Full Name": "Light Angular Momentum Engine"
  },
  "F-cell Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "F-cell Engine",
    "Type": "Engine",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "135",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "14",
    "Energy Storage": "400",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 33,
    "Full Name": "F-cell Engine"
  },
  "Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Fission Core",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "10",
    "Integrity": "90",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "210",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 34,
    "Full Name": "Fission Core"
  },
  "Lgt. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Fission Core",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "7",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "60",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 35,
    "Full Name": "Light Fission Core"
  },
  "Hyb. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hyb. Fission Core",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "6",
    "Energy Storage": "800",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 36,
    "Full Name": "Hybrid Fission Core"
  },
  "Fusion Compressor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Fusion Compressor",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "50",
    "Heat Generation": "15",
    "Energy Generation": "20",
    "Matter Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 37,
    "Full Name": "Fusion Compressor"
  },
  "Cold Fusion Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cold Fusion Reactor",
    "Type": "Reactor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "150",
    "Coverage": "60",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "12",
    "Energy Storage": "100",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 38,
    "Full Name": "Cold Fusion Reactor"
  },
  "Neutrino Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Neutrino Core",
    "Type": "Power Core",
    "Rating": "6",
    "Size": "1",
    "Mass": "14",
    "Integrity": "95",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 24-40 electromagnetic damage with a radius of 2 (falloff: 3; salvage: 3; disruption: 2%). Wide spectrum.",
    "Energy Generation": "14",
    "Energy Storage": "215",
    "Explosion Radius": "2",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "40",
    "Falloff": "3",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 39,
    "Full Name": "Neutrino Core"
  },
  "Lgt. Neutrino Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Neutrino Core",
    "Type": "Power Core",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "80",
    "Coverage": "50",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 24-40 electromagnetic damage with a radius of 2 (falloff: 3; salvage: 3; disruption: 2%). Wide spectrum.",
    "Energy Generation": "14",
    "Energy Storage": "70",
    "Explosion Radius": "2",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "40",
    "Falloff": "3",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 40,
    "Full Name": "Light Neutrino Core"
  },
  "Rnf. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Fission Core",
    "Type": "Power Core",
    "Rating": "6",
    "Size": "1",
    "Mass": "21",
    "Integrity": "250",
    "Coverage": "60",
    "Heat Generation": "12",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "14",
    "Energy Storage": "210",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 41,
    "Full Name": "Reinforced Fission Core"
  },
  "Enh. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Enh. Fission Core",
    "Type": "Power Core",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "150",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "250",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 42,
    "Full Name": "Enhanced Fission Core"
  },
  "Cld. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Fission Core",
    "Type": "Power Core",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "14",
    "Integrity": "150",
    "Coverage": "60",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "250",
    "Power Stability": "99%",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 43,
    "Full Name": "Cooled Fission Core"
  },
  "Mic. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mic. Fission Core",
    "Type": "Power Core",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "30",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "10",
    "Energy Storage": "50",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 44,
    "Full Name": "Micro Fission Core"
  },
  "Fusion Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Fusion Reactor",
    "Type": "Reactor",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "15",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "195",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 45,
    "Full Name": "Fusion Reactor"
  },
  "Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "16",
    "Integrity": "100",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "225",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 46,
    "Full Name": "Antimatter Reactor"
  },
  "Lgt. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "70",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "70",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 47,
    "Full Name": "Light Antimatter Reactor"
  },
  "Rnf. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "24",
    "Integrity": "300",
    "Coverage": "60",
    "Heat Generation": "13",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "225",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 48,
    "Full Name": "Reinforced Antimatter Reactor"
  },
  "Hyb. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hyb. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "70",
    "Coverage": "60",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "8",
    "Energy Storage": "1000",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 49,
    "Full Name": "Hybrid Antimatter Reactor"
  },
  "Backup Power VII": {
    "Slot": "Power",
    "Name": "Backup Power VII",
    "Type": "Power Core",
    "Rating": "7",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "40",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "12",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 50,
    "Full Name": "Backup Power VII"
  },
  "Hvy. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hvy. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "18",
    "Integrity": "180",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "240",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 51,
    "Full Name": "Heavy Antimatter Reactor"
  },
  "Mni. Fusion Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mni. Fusion Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "100",
    "Coverage": "40",
    "Heat Generation": "15",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "70",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 52,
    "Full Name": "Mini Fusion Reactor"
  },
  "Imp. Fusion Compressor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Fusion Compressor",
    "Type": "Power Core",
    "Rating": "7",
    "Size": "1",
    "Mass": "7",
    "Integrity": "100",
    "Coverage": "50",
    "Heat Generation": "20",
    "Energy Generation": "30",
    "Matter Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 53,
    "Full Name": "Improved Fusion Compressor"
  },
  "Mic. Neutrino Core": {
    "Slot": "Power",
    "Name": "Mic. Neutrino Core",
    "Type": "Power Core",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "20",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 54,
    "Full Name": "Micro Neutrino Core"
  },
  "Zio. Light DM Reactor": {
    "Slot": "Power",
    "Name": "Zio. Light DM Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "20",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "22",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 55,
    "Full Name": "Zionite Light DM Reactor"
  },
  "Zio. Heavy DM Reactor": {
    "Slot": "Power",
    "Name": "Zio. Heavy DM Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "20",
    "Integrity": "130",
    "Coverage": "60",
    "Heat Generation": "30",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "30",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 56,
    "Full Name": "Zionite Heavy DM Reactor"
  },
  "Particle Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Particle Reactor",
    "Type": "Reactor",
    "Rating": "8",
    "Size": "1",
    "Mass": "18",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "240",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 57,
    "Full Name": "Particle Reactor"
  },
  "Lgt. Particle Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Particle Reactor",
    "Type": "Reactor",
    "Rating": "8",
    "Size": "1",
    "Mass": "14",
    "Integrity": "75",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "80",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 58,
    "Full Name": "Light Particle Reactor"
  },
  "Mic. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mic. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "8",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "30",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "14",
    "Energy Storage": "50",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 59,
    "Full Name": "Micro Antimatter Reactor"
  },
  "Com. Particle Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Com. Particle Reactor",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "90",
    "Coverage": "30",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "35",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 60,
    "Full Name": "Compact Particle Reactor"
  },
  "Cld. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "18",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "280",
    "Power Stability": "99%",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "204/102/68",
    "Index": 61,
    "Full Name": "Cooled Antimatter Reactor"
  },
  "Graviton Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Graviton Reactor",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "24",
    "Energy Storage": "240",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 62,
    "Full Name": "Graviton Reactor"
  },
  "Asb. Flux Generator": {
    "Slot": "Power",
    "Name": "Asb. Flux Generator",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "40",
    "Integrity": "350",
    "Coverage": "160",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "40",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 63,
    "Full Name": "Assembled Flux Generator"
  },
  "Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9",
    "Size": "1",
    "Mass": "20",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "10",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "250",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 64,
    "Full Name": "Quantum Reactor"
  },
  "Lgt. Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9",
    "Size": "1",
    "Mass": "15",
    "Integrity": "80",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "90",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 65,
    "Full Name": "Light Quantum Reactor"
  },
  "Rnf. Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9",
    "Size": "1",
    "Mass": "30",
    "Integrity": "360",
    "Coverage": "60",
    "Heat Generation": "15",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "250",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 66,
    "Full Name": "Reinforced Quantum Reactor"
  },
  "Imp. Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "17",
    "Integrity": "125",
    "Coverage": "60",
    "Heat Generation": "2",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "24",
    "Energy Storage": "250",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 67,
    "Full Name": "Improved Quantum Reactor"
  },
  "Zero-point Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Zero-point Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "150",
    "Coverage": "40",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "28",
    "Energy Storage": "140",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 68,
    "Full Name": "Zero-point Reactor"
  },
  "Vortex Chain Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Vortex Chain Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "35",
    "Integrity": "300",
    "Coverage": "120",
    "Heat Generation": "12",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "50",
    "Energy Storage": "600",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 69,
    "Full Name": "Vortex Chain Reactor"
  },
  "Singularity Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Singularity Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "50",
    "Integrity": "600",
    "Coverage": "240",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "70",
    "Energy Storage": "1000",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 70,
    "Full Name": "Singularity Reactor"
  },
  "Matter Drive": {
    "Slot": "Power",
    "Name": "Matter Drive",
    "Type": "Reactor",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "22",
    "Integrity": "400",
    "Coverage": "160",
    "Heat Generation": "20",
    "Effect": "Converts each adjacent wall, earth, and door to 100-300 energy.",
    "Index": 71,
    "Full Name": "Matter Drive"
  },
  "Lgt. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Lgt. Treads",
    "Type": "Treads",
    "Rating": "1",
    "Size": "1",
    "Integrity": "140",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 72,
    "Full Name": "Light Treads"
  },
  "Imp. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Treads",
    "Type": "Treads",
    "Rating": "2",
    "Size": "1",
    "Integrity": "155",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "23",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 73,
    "Full Name": "Improved Treads"
  },
  "Spk. Treads": {
    "Slot": "Propulsion",
    "Name": "Spk. Treads",
    "Type": "Treads",
    "Rating": "2",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "140",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "100",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 74,
    "Full Name": "Spiked Treads"
  },
  "Arm. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Treads",
    "Type": "Treads",
    "Rating": "3",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "160",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "170",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 75,
    "Full Name": "Armored Treads"
  },
  "Adv. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Treads",
    "Type": "Treads",
    "Rating": "3",
    "Size": "1",
    "Integrity": "170",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "22",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 76,
    "Full Name": "Advanced Treads"
  },
  "Med. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Med. Treads",
    "Type": "Treads",
    "Rating": "4",
    "Size": "1",
    "Integrity": "185",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "28",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 77,
    "Full Name": "Medium Treads"
  },
  "Imp. Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Medium Treads",
    "Type": "Treads",
    "Rating": "5",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "30",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 78,
    "Full Name": "Improved Medium Treads"
  },
  "Spk. Medium Treads": {
    "Slot": "Propulsion",
    "Name": "Spk. Medium Treads",
    "Type": "Treads",
    "Rating": "5",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "140",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "28",
    "Penalty": "100",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 79,
    "Full Name": "Spiked Medium Treads"
  },
  "Arm. Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Medium Treads",
    "Type": "Treads",
    "Rating": "6",
    "Size": "1",
    "Integrity": "450",
    "Coverage": "160",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "170",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "27",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 80,
    "Full Name": "Armored Medium Treads"
  },
  "Hvy. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hvy. Treads",
    "Type": "Treads",
    "Rating": "6",
    "Size": "2",
    "Integrity": "500",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "5",
    "Heat/Move": "3",
    "Support": "70",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 81,
    "Full Name": "Heavy Treads"
  },
  "Adv. Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Medium Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "1",
    "Integrity": "230",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "20",
    "Energy/Move": "5",
    "Heat/Move": "2",
    "Support": "30",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 82,
    "Full Name": "Advanced Medium Treads"
  },
  "Enh. Armored Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Armored Medium Treads",
    "Type": "Treads",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "500",
    "Coverage": "160",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "35",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 83,
    "Full Name": "Enhanced Armored Medium Treads"
  },
  "Imp. Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "2",
    "Integrity": "550",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "6",
    "Heat/Move": "3",
    "Support": "75",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 84,
    "Full Name": "Improved Heavy Treads"
  },
  "Hvy. Siege Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hvy. Siege Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "2",
    "Integrity": "500",
    "Coverage": "280",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "180",
    "Drag": "50",
    "Energy/Move": "5",
    "Heat/Move": "10",
    "Support": "70",
    "Penalty": "90",
    "Siege": "High",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 85,
    "Full Name": "Heavy Siege Treads"
  },
  "Spk. Heavy Treads": {
    "Slot": "Propulsion",
    "Name": "Spk. Heavy Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "2",
    "Integrity": "650",
    "Coverage": "280",
    "Effect": "20% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "75",
    "Penalty": "100",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 86,
    "Full Name": "Spiked Heavy Treads"
  },
  "Biometal Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biometal Medium Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "1",
    "Integrity": "245",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "20",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "35",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 87,
    "Full Name": "Biometal Medium Treads"
  },
  "Arm. Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Heavy Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "2",
    "Integrity": "900",
    "Coverage": "320",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "170",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "60",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 88,
    "Full Name": "Armored Heavy Treads"
  },
  "Adv. Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Heavy Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "2",
    "Integrity": "600",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "40",
    "Energy/Move": "10",
    "Heat/Move": "4",
    "Support": "70",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 89,
    "Full Name": "Advanced Heavy Treads"
  },
  "Imp. Heavy Siege Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Siege Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "2",
    "Integrity": "550",
    "Coverage": "280",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "180",
    "Drag": "50",
    "Energy/Move": "6",
    "Heat/Move": "10",
    "Support": "75",
    "Penalty": "90",
    "Siege": "High",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 90,
    "Full Name": "Improved Heavy Siege Treads"
  },
  "Centrium Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Centrium Heavy Treads",
    "Type": "Treads",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "800",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "80",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 91,
    "Full Name": "Centrium Heavy Treads"
  },
  "Megatreads": {
    "Slot": "Propulsion",
    "Name": "Megatreads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "6",
    "Integrity": "4000",
    "Coverage": "960",
    "Effect": "35% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-6 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "275",
    "Drag": "120",
    "Energy/Move": "50",
    "Heat/Move": "80",
    "Support": "600",
    "Penalty": "90",
    "Siege": "High",
    "Index": 92,
    "Full Name": "Megatreads"
  },
  "Biometal Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biometal Heavy Treads",
    "Type": "Treads",
    "Rating": "9",
    "Size": "2",
    "Integrity": "650",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "3",
    "Support": "75",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 93,
    "Full Name": "Biometal Heavy Treads"
  },
  "Exp. Biometal Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Biometal Heavy Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "850",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "135",
    "Drag": "40",
    "Energy/Move": "8",
    "Heat/Move": "4",
    "Support": "85",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 94,
    "Full Name": "Experimental Biometal Heavy Treads"
  },
  "Enh. Armored Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Armored Heavy Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "1200",
    "Coverage": "320",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "3",
    "Support": "80",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 95,
    "Full Name": "Enhanced Armored Heavy Treads"
  },
  "Adv. Heavy Siege Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Heavy Siege Treads",
    "Type": "Treads",
    "Rating": "9",
    "Size": "2",
    "Integrity": "600",
    "Coverage": "280",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "50",
    "Energy/Move": "7",
    "Heat/Move": "8",
    "Support": "80",
    "Penalty": "90",
    "Siege": "High",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 96,
    "Full Name": "Advanced Heavy Siege Treads"
  },
  "Hdn. Centrium Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hdn. Centrium Heavy Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "1000",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "90",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 97,
    "Full Name": "High-density Centrium Heavy Treads"
  },
  "Exp. Biometal Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Biometal Medium Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "135",
    "Drag": "20",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "40",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 98,
    "Full Name": "Experimental Biometal Medium Treads"
  },
  "Aluminum Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Aluminum Leg",
    "Type": "Leg",
    "Rating": "1",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "10",
    "Penalty": "70",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 99,
    "Full Name": "Aluminum Leg"
  },
  "Imp. Aluminum Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Aluminum Leg",
    "Type": "Leg",
    "Rating": "2",
    "Size": "1",
    "Integrity": "100",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "13",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 100,
    "Full Name": "Improved Aluminum Leg"
  },
  "Carbon-fiber Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Carbon-fiber Leg",
    "Type": "Leg",
    "Rating": "3",
    "Size": "1",
    "Integrity": "110",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "15",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 101,
    "Full Name": "Carbon-fiber Leg"
  },
  "Titanium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Titanium Leg",
    "Type": "Leg",
    "Rating": "3",
    "Size": "1",
    "Integrity": "145",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "130",
    "Drag": "10",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "17",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 102,
    "Full Name": "Titanium Leg"
  },
  "VSS Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "VSS Leg",
    "Type": "Leg",
    "Rating": "3",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 103,
    "Full Name": "VSS Leg"
  },
  "Imp. Carbon-fiber Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Carbon-fiber Leg",
    "Type": "Leg",
    "Rating": "4",
    "Size": "1",
    "Integrity": "125",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "18",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 104,
    "Full Name": "Improved Carbon-fiber Leg"
  },
  "Imp. Titanium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Titanium Leg",
    "Type": "Leg",
    "Rating": "4",
    "Size": "1",
    "Integrity": "165",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "130",
    "Drag": "10",
    "Energy/Move": "4",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 105,
    "Full Name": "Improved Titanium Leg"
  },
  "Mak. Leg": {
    "Slot": "Propulsion",
    "Name": "Mak. Leg",
    "Type": "Leg",
    "Rating": "4",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "140",
    "Drag": "10",
    "Energy/Move": "1",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 106,
    "Full Name": "Makshift Leg"
  },
  "Flexi-carbon Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Flexi-carbon Leg",
    "Type": "Leg",
    "Rating": "5",
    "Size": "1",
    "Integrity": "135",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 107,
    "Full Name": "Flexi-carbon Leg"
  },
  "Arm. Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Leg",
    "Type": "Leg",
    "Rating": "5",
    "Size": "1",
    "Integrity": "330",
    "Coverage": "100",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "2",
    "Support": "16",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 108,
    "Full Name": "Armored Leg"
  },
  "Imp. VSS Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. VSS Leg",
    "Type": "Leg",
    "Rating": "5",
    "Size": "1",
    "Integrity": "110",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "5",
    "Heat/Move": "2",
    "Support": "15",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 109,
    "Full Name": "Improved VSS Leg"
  },
  "Zio. Composite Leg I": {
    "Slot": "Propulsion",
    "Name": "Zio. Composite Leg I",
    "Type": "Leg",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "24",
    "Penalty": "100",
    "Index": 110,
    "Full Name": "Zionite Composite Leg I"
  },
  "Enh. Flexi-carbon Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Flexi-carbon Leg",
    "Type": "Leg",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "180",
    "Coverage": "50",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "28",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 111,
    "Full Name": "Enhanced Flexi-carbon Leg"
  },
  "Enh. Armored Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Armored Leg",
    "Type": "Leg",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "100",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 112,
    "Full Name": "Enhanced Armored Leg"
  },
  "Myomer Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Myomer Leg",
    "Type": "Leg",
    "Rating": "7",
    "Size": "1",
    "Integrity": "160",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "25",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 113,
    "Full Name": "Myomer Leg"
  },
  "Adv. VSS Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. VSS Leg",
    "Type": "Leg",
    "Rating": "7",
    "Size": "1",
    "Integrity": "130",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "5",
    "Heat/Move": "2",
    "Support": "18",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 114,
    "Full Name": "Advanced VSS Leg"
  },
  "Adv. Myomer Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Myomer Leg",
    "Type": "Leg",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "225",
    "Coverage": "50",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "30",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 115,
    "Full Name": "Advanced Myomer Leg"
  },
  "Exp. Flexi-carbon Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Flexi-carbon Leg",
    "Type": "Leg",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "50",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "2",
    "Support": "23",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 116,
    "Full Name": "Experimental Flexi-carbon Leg"
  },
  "Zio. Composite Leg II": {
    "Slot": "Propulsion",
    "Name": "Zio. Composite Leg II",
    "Type": "Leg",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "240",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Support": "28",
    "Penalty": "100",
    "Index": 117,
    "Full Name": "Zionite Composite Leg II"
  },
  "Biometal Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biometal Leg",
    "Type": "Leg",
    "Rating": "8",
    "Size": "1",
    "Integrity": "180",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "28",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 118,
    "Full Name": "Biometal Leg"
  },
  "Enh. Biometal Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Biometal Leg",
    "Type": "Leg",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "100",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "30",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 119,
    "Full Name": "Enhanced Biometal Leg"
  },
  "Exp. Myomer Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Myomer Leg",
    "Type": "Leg",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "225",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "2",
    "Support": "25",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 120,
    "Full Name": "Experimental Myomer Leg"
  },
  "Asb. Alloy Leg": {
    "Slot": "Propulsion",
    "Name": "Asb. Alloy Leg",
    "Type": "Leg",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "100",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "150",
    "Drag": "10",
    "Energy/Move": "5",
    "Support": "30",
    "Penalty": "30",
    "Index": 121,
    "Full Name": "Assembled Alloy Leg"
  },
  "Centrium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Centrium Leg",
    "Type": "Leg",
    "Rating": "9",
    "Size": "1",
    "Integrity": "450",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "30",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 122,
    "Full Name": "Centrium Leg"
  },
  "Hdn. Centrium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hdn. Centrium Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "600",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "32",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 123,
    "Full Name": "High-density Centrium Leg"
  },
  "Exp. Biometal Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Biometal Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "250",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "2",
    "Support": "28",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 124,
    "Full Name": "Experimental Biometal Leg"
  },
  "Sigix Exoskeleton": {
    "Slot": "Propulsion",
    "Name": "Sigix Exoskeleton",
    "Type": "Leg",
    "Rating": "9**",
    "Category": "Alien",
    "Size": "3",
    "Integrity": "4000",
    "Coverage": "30000",
    "Effect": "Increases Sigix non-AOE weapon damage by 100%. Incompatible with other part-based damage-modifying effects. Also enables resistance against all standard forms of damage: 50%. \n <no_stack>",
    "Description": "Standard leg-based kicking and running mechanics apply.",
    "Time/Move": "30",
    "Drag": "30",
    "Energy/Move": "2",
    "Support": "60",
    "Penalty": "60",
    "Index": 125,
    "Full Name": "Sigix Exoskeleton"
  },
  "Zio. Supercomposite Leg": {
    "Slot": "Propulsion",
    "Name": "Zio. Supercomposite Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "270",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Support": "35",
    "Penalty": "100",
    "Index": 126,
    "Full Name": "Zionite Supercomposite Leg"
  },
  "Potential Leg": {
    "Slot": "Propulsion",
    "Name": "Potential Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "80",
    "Description": "This leg can be overloaded to double its effective speed, during which the leg is subject to burnout. Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "30",
    "Penalty": "80",
    "Burnout": "5%",
    "Index": 127,
    "Full Name": "Potential Leg"
  },
  "Myomer Exoskeleton": {
    "Slot": "Propulsion",
    "Name": "Myomer Exoskeleton",
    "Type": "Leg",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "3",
    "Integrity": "1200",
    "Coverage": "300",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "100",
    "Drag": "30",
    "Energy/Move": "6",
    "Heat/Move": "6",
    "Support": "100",
    "Penalty": "60",
    "Index": 128,
    "Full Name": "Myomer Exoskeleton"
  },
  "Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Wheel",
    "Type": "Wheel",
    "Rating": "1",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "50",
    "Time/Move": "80",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "10",
    "Penalty": "15",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 129,
    "Full Name": "Wheel"
  },
  "Com. Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Com. Wheel",
    "Type": "Wheel",
    "Rating": "1",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Time/Move": "100",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "16",
    "Penalty": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 130,
    "Full Name": "Compact Wheel"
  },
  "Arm. Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Wheel",
    "Type": "Wheel",
    "Rating": "2",
    "Size": "1",
    "Integrity": "100",
    "Coverage": "60",
    "Time/Move": "90",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "12",
    "Penalty": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 131,
    "Full Name": "Armored Wheel"
  },
  "Arm. Huge Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Huge Wheel",
    "Type": "Wheel",
    "Rating": "4",
    "Size": "2",
    "Integrity": "250",
    "Coverage": "120",
    "Time/Move": "100",
    "Drag": "10",
    "Energy/Move": "4",
    "Support": "28",
    "Penalty": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 132,
    "Full Name": "Armored Huge Wheel"
  },
  "Centrium Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Centrium Wheel",
    "Type": "Wheel",
    "Rating": "7",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "50",
    "Time/Move": "90",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "16",
    "Penalty": "20",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 133,
    "Full Name": "Centrium Wheel"
  },
  "Hdn. Centrium Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hdn. Centrium Wheel",
    "Type": "Wheel",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "50",
    "Time/Move": "90",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "20",
    "Penalty": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 134,
    "Full Name": "High-density Centrium Wheel"
  },
  "Hover Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hover Unit",
    "Type": "Hover Unit",
    "Rating": "1",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 135,
    "Full Name": "Hover Unit"
  },
  "Backup Propulsion I": {
    "Slot": "Propulsion",
    "Name": "Backup Propulsion I",
    "Type": "Hover Unit",
    "Rating": "1",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "6",
    "Penalty": "80",
    "Index": 136,
    "Full Name": "Backup Propulsion I"
  },
  "Imp. Hover Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Hover Unit",
    "Type": "Hover Unit",
    "Rating": "2",
    "Size": "1",
    "Integrity": "35",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 137,
    "Full Name": "Improved Hover Unit"
  },
  "Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Airjet",
    "Type": "Hover Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 138,
    "Full Name": "Airjet"
  },
  "Aerolev Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Aerolev Unit",
    "Type": "Hover Unit",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 139,
    "Full Name": "Aerolev Unit"
  },
  "Backup Propulsion III": {
    "Slot": "Propulsion",
    "Name": "Backup Propulsion III",
    "Type": "Hover Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "80",
    "Index": 140,
    "Full Name": "Backup Propulsion III"
  },
  "Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Gravmag System",
    "Type": "Hover Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "45",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "9",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 141,
    "Full Name": "Gravmag System"
  },
  "Imp. Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Airjet",
    "Type": "Hover Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "9",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 142,
    "Full Name": "Improved Airjet"
  },
  "Cld. Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Airjet",
    "Type": "Hover Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "8",
    "Penalty": "60",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 143,
    "Full Name": "Cooled Airjet"
  },
  "Imp. Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Gravmag System",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "50",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "10",
    "Penalty": "50",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 144,
    "Full Name": "Improved Gravmag System"
  },
  "Cld. Aerolev Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Aerolev Unit",
    "Type": "Hover Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "100",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "9",
    "Penalty": "50",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 145,
    "Full Name": "Cooled Aerolev Unit"
  },
  "Cmb. Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Airjet",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "130",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 146,
    "Full Name": "Combat Airjet"
  },
  "Gravmag Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Gravmag Array",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "2",
    "Integrity": "180",
    "Coverage": "80",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "50",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 147,
    "Full Name": "Gravmag Array"
  },
  "Mak. Hover Unit": {
    "Slot": "Propulsion",
    "Name": "Mak. Hover Unit",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "40",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "70",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "12",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 148,
    "Full Name": "Makshift Hover Unit"
  },
  "Zio. Glidesys I": {
    "Slot": "Propulsion",
    "Name": "Zio. Glidesys I",
    "Type": "Hover Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "14",
    "Penalty": "70",
    "Index": 149,
    "Full Name": "Zionite Glidesys I"
  },
  "Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Antigrav System",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "55",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "11",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 150,
    "Full Name": "Antigrav System"
  },
  "Gyrokinetic Inverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Gyrokinetic Inverter",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "50",
    "Coverage": "7",
    "Energy Upkeep": "2",
    "Heat Generation": "5",
    "Time/Move": "70",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "11",
    "Penalty": "40",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 151,
    "Full Name": "Gyrokinetic Inverter"
  },
  "Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "55",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "9",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 152,
    "Full Name": "Linear Gravjet"
  },
  "Cld. Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Gravmag System",
    "Type": "Hover Unit",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "120",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "11",
    "Penalty": "50",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 153,
    "Full Name": "Cooled Gravmag System"
  },
  "Cmb. Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Gravmag System",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "150",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "14",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 154,
    "Full Name": "Combat Gravmag System"
  },
  "Imp. Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Antigrav System",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 155,
    "Full Name": "Improved Antigrav System"
  },
  "Imp. Gyrokinetic Inverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Gyrokinetic Inverter",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "7",
    "Energy Upkeep": "2",
    "Heat Generation": "5",
    "Time/Move": "70",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "40",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 156,
    "Full Name": "Improved Gyrokinetic Inverter"
  },
  "Imp. Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "10",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 157,
    "Full Name": "Improved Linear Gravjet"
  },
  "Backup Propulsion VII": {
    "Slot": "Propulsion",
    "Name": "Backup Propulsion VII",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "35",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "80",
    "Index": 158,
    "Full Name": "Backup Propulsion VII"
  },
  "Zio. Glidesys II": {
    "Slot": "Propulsion",
    "Name": "Zio. Glidesys II",
    "Type": "Hover Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Support": "16",
    "Penalty": "70",
    "Index": 159,
    "Full Name": "Zionite Glidesys II"
  },
  "Cld. Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Antigrav System",
    "Type": "Hover Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "150",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "13",
    "Penalty": "50",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 160,
    "Full Name": "Cooled Antigrav System"
  },
  "Cmb. Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Antigrav System",
    "Type": "Hover Unit",
    "Rating": "8",
    "Size": "1",
    "Integrity": "210",
    "Coverage": "35",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "16",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 161,
    "Full Name": "Combat Antigrav System"
  },
  "Antigrav Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Antigrav Array",
    "Type": "Hover Unit",
    "Rating": "8",
    "Size": "2",
    "Integrity": "200",
    "Coverage": "70",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "26",
    "Penalty": "50",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 162,
    "Full Name": "Antigrav Array"
  },
  "Exp. Gyrokinetic Inverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Gyrokinetic Inverter",
    "Type": "Hover Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "7",
    "Energy Upkeep": "2",
    "Heat Generation": "4",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "14",
    "Penalty": "40",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 163,
    "Full Name": "Experimental Gyrokinetic Inverter"
  },
  "Cld. Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "140",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Time/Move": "40",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "14",
    "Penalty": "70",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 164,
    "Full Name": "Cooled Linear Gravjet"
  },
  "Cmb. Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "9",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "35",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "17",
    "Penalty": "100",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 165,
    "Full Name": "Combat Linear Gravjet"
  },
  "Flight Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Flight Unit",
    "Type": "Flight Unit",
    "Rating": "1",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 166,
    "Full Name": "Flight Unit"
  },
  "VTOL Module": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "VTOL Module",
    "Type": "Flight Unit",
    "Rating": "2",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 167,
    "Full Name": "VTOL Module"
  },
  "Imp. Flight Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Flight Unit",
    "Type": "Flight Unit",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "15",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 168,
    "Full Name": "Improved Flight Unit"
  },
  "Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 169,
    "Full Name": "Cesium-ion Thruster"
  },
  "Surge Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Surge Thruster",
    "Type": "Flight Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "70",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "3",
    "Penalty": "40",
    "Burnout": "40%",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 170,
    "Full Name": "Surge Thruster"
  },
  "Imp. VTOL Module": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. VTOL Module",
    "Type": "Flight Unit",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "50",
    "Coverage": "15",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 171,
    "Full Name": "Improved VTOL Module"
  },
  "Xenon Bombardment Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Xenon Bombardment Thruster",
    "Type": "Flight Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 172,
    "Full Name": "Xenon Bombardment Thruster"
  },
  "Imp. Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "15",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "65",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 173,
    "Full Name": "Improved Cesium-ion Thruster"
  },
  "Cld. VTOL Module": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. VTOL Module",
    "Type": "Flight Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "15",
    "Energy Upkeep": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "65",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 174,
    "Full Name": "Cooled VTOL Module"
  },
  "Mak. Flight Unit": {
    "Slot": "Propulsion",
    "Name": "Mak. Flight Unit",
    "Type": "Flight Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "20",
    "Energy Upkeep": "0.5",
    "Heat Generation": "2",
    "Time/Move": "55",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 175,
    "Full Name": "Makshift Flight Unit"
  },
  "Nuclear Pulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Nuclear Pulse Thruster",
    "Type": "Flight Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 176,
    "Full Name": "Nuclear Pulse Thruster"
  },
  "Imp. Surge Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Surge Thruster",
    "Type": "Flight Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "70",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "40",
    "Burnout": "40%",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 177,
    "Full Name": "Improved Surge Thruster"
  },
  "Mni. Nuclear Pulse Thruster": {
    "Slot": "Propulsion",
    "Name": "Mni. Nuclear Pulse Thruster",
    "Type": "Flight Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "10",
    "Energy Upkeep": "0.5",
    "Time/Move": "25",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "100",
    "Index": 178,
    "Full Name": "Mini Nuclear Pulse Thruster"
  },
  "Cld. Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "15",
    "Energy Upkeep": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "80",
    "Burnout": "15%",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 179,
    "Full Name": "Cooled Cesium-ion Thruster"
  },
  "Biomechanical Wings": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biomechanical Wings",
    "Type": "Flight Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "5",
    "Energy Upkeep": "0.5",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Support": "6",
    "Penalty": "65",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 180,
    "Full Name": "Biomechanical Wings"
  },
  "Field Propulsion Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Field Propulsion Drive",
    "Type": "Flight Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "45",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 181,
    "Full Name": "Field Propulsion Drive"
  },
  "Cld. Nuclear Pulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Nuclear Pulse Thruster",
    "Type": "Flight Unit",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "20",
    "Energy Upkeep": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "70",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 182,
    "Full Name": "Cooled Nuclear Pulse Thruster"
  },
  "Exp. Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "20",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "25",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "90",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 183,
    "Full Name": "Experimental Cesium-ion Thruster"
  },
  "Nuclear Pulse Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Nuclear Pulse Array",
    "Type": "Flight Unit",
    "Rating": "6",
    "Size": "2",
    "Integrity": "110",
    "Coverage": "60",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "13",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 184,
    "Full Name": "Nuclear Pulse Array"
  },
  "Impulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Impulse Thruster",
    "Type": "Flight Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "30",
    "Energy Upkeep": "1.5",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 185,
    "Full Name": "Impulse Thruster"
  },
  "Adv. Surge Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Surge Thruster",
    "Type": "Flight Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "70",
    "Energy Upkeep": "1.5",
    "Heat Generation": "2",
    "Time/Move": "25",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "40",
    "Burnout": "40%",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 186,
    "Full Name": "Advanced Surge Thruster"
  },
  "Cld. Field Propulsion Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Field Propulsion Drive",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "20",
    "Energy Upkeep": "1.5",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "65",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 187,
    "Full Name": "Cooled Field Propulsion Drive"
  },
  "Field Propulsion Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Field Propulsion Array",
    "Type": "Flight Unit",
    "Rating": "7",
    "Size": "2",
    "Integrity": "140",
    "Coverage": "60",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "15",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 188,
    "Full Name": "Field Propulsion Array"
  },
  "Diametric Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Diametric Drive",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "45",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "3",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 189,
    "Full Name": "Diametric Drive"
  },
  "Flying Fortress v7": {
    "Slot": "Propulsion",
    "Name": "Flying Fortress v7",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "4",
    "Integrity": "800",
    "Coverage": "480",
    "Energy Upkeep": "2.5",
    "Heat Generation": "7",
    "Time/Move": "50",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "50",
    "Penalty": "100",
    "Index": 190,
    "Full Name": "Flying Fortress v7"
  },
  "Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Q-thruster",
    "Type": "Flight Unit",
    "Rating": "8",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "30",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 191,
    "Full Name": "Q-thruster"
  },
  "Electron Diverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Electron Diverter",
    "Type": "Flight Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "20",
    "Energy Upkeep": "1",
    "Heat Generation": "3",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 192,
    "Full Name": "Electron Diverter"
  },
  "Imp. Diametric Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Diametric Drive",
    "Type": "Flight Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "20",
    "Energy Upkeep": "0.5",
    "Heat Generation": "3",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 193,
    "Full Name": "Improved Diametric Drive"
  },
  "Cld. Impulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Impulse Thruster",
    "Type": "Flight Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "20",
    "Energy Upkeep": "1.5",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "70",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 194,
    "Full Name": "Cooled Impulse Thruster"
  },
  "Impulse Thruster Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Impulse Thruster Array",
    "Type": "Flight Unit",
    "Rating": "8",
    "Size": "2",
    "Integrity": "140",
    "Coverage": "40",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "45",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "16",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 195,
    "Full Name": "Impulse Thruster Array"
  },
  "Imp. Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Q-thruster",
    "Type": "Flight Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "15",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 196,
    "Full Name": "Improved Q-thruster"
  },
  "Cld. Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Q-thruster",
    "Type": "Flight Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "15",
    "Energy Upkeep": "1.5",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "55",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 197,
    "Full Name": "Cooled Q-thruster"
  },
  "Exp. Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Q-thruster",
    "Type": "Flight Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "15",
    "Energy Upkeep": "1.5",
    "Heat Generation": "2",
    "Time/Move": "20",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "90",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 198,
    "Full Name": "Experimental Q-thruster"
  },
  "Desublimator": {
    "Slot": "Utility",
    "Name": "Desublimator",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "160",
    "Coverage": "50",
    "Effect": "Converts energy to matter at a ratio of 20:5 every turn.\n <parallel_ok>",
    "Index": 199,
    "Full Name": "Desublimator"
  },
  "Power Amplifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Power Amplifier",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "24",
    "Coverage": "20",
    "Effect": "Increases generation of power sources by 20%.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 200,
    "Full Name": "Power Amplifier"
  },
  "Adv. Power Amplifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Power Amplifier",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "31",
    "Coverage": "20",
    "Effect": "Increases generation of power sources by 30%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 201,
    "Full Name": "Advanced Power Amplifier"
  },
  "Exp. Power Amplifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Power Amplifier",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "20",
    "Effect": "Increases generation of power sources by 40%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 202,
    "Full Name": "Experimental Power Amplifier"
  },
  "Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Generator",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "7",
    "Integrity": "25",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 10 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 203,
    "Full Name": "Thermal Generator"
  },
  "Imp. Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Thermal Generator",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "9",
    "Integrity": "40",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 8 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 204,
    "Full Name": "Improved Thermal Generator"
  },
  "Adv. Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Thermal Generator",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "11",
    "Integrity": "40",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 6 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 205,
    "Full Name": "Advanced Thermal Generator"
  },
  "Exp. Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Thermal Generator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "60",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 3 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 206,
    "Full Name": "Experimental Thermal Generator"
  },
  "Cryofiber Web": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cryofiber Web",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "8",
    "Effect": "Lowers base temperature to -100. Also protects power sources from forced shutdown while overheating, and has a 25% chance to prevent other types of overheating side effects.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 207,
    "Full Name": "Cryofiber Web"
  },
  "Imp. Cryofiber Web": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Cryofiber Web",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "32",
    "Coverage": "8",
    "Effect": "Lowers base temperature to -150. Also protects power sources from forced shutdown while overheating, and has a 30% chance to prevent other types of overheating side effects.\n <no_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 208,
    "Full Name": "Improved Cryofiber Web"
  },
  "Adv. Cryofiber Web": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Cryofiber Web",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "34",
    "Coverage": "8",
    "Effect": "Lowers base temperature to -200. Also protects power sources from forced shutdown while overheating, and has a 35% chance to prevent other types of overheating side effects.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 209,
    "Full Name": "Advanced Cryofiber Web"
  },
  "Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Heat Sink",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "20",
    "Effect": "Dissipates 10 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 210,
    "Full Name": "Heat Sink"
  },
  "Imp. Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Heat Sink",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "20",
    "Effect": "Dissipates 14 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 211,
    "Full Name": "Improved Heat Sink"
  },
  "Adv. Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Heat Sink",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "20",
    "Effect": "Dissipates 19 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 212,
    "Full Name": "Advanced Heat Sink"
  },
  "Exp. Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Heat Sink",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "80",
    "Coverage": "20",
    "Effect": "Dissipates 26 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 213,
    "Full Name": "Experimental Heat Sink"
  },
  "Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cooling System",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "30",
    "Effect": "Dissipates 22 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 214,
    "Full Name": "Cooling System"
  },
  "Imp. Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Cooling System",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "30",
    "Effect": "Dissipates 27 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 215,
    "Full Name": "Improved Cooling System"
  },
  "Adv. Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Cooling System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "90",
    "Coverage": "30",
    "Effect": "Dissipates 31 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 216,
    "Full Name": "Advanced Cooling System"
  },
  "Exp. Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Cooling System",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Coverage": "50",
    "Effect": "Dissipates 38 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 217,
    "Full Name": "Experimental Cooling System"
  },
  "Coolant Network": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Coolant Network",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "2",
    "Integrity": "300",
    "Coverage": "100",
    "Effect": "Dissipates 90 heat per turn.\n <stacks>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 218,
    "Full Name": "Coolant Network"
  },
  "Asb. Nanovents": {
    "Slot": "Utility",
    "Name": "Asb. Nanovents",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "5",
    "Coverage": "6",
    "Effect": "Dissipates 15 heat per turn.\n <stacks>",
    "Index": 219,
    "Full Name": "Assembled Nanovents"
  },
  "2N-1CE's Frost Array": {
    "Slot": "Utility",
    "Name": "2N-1CE's Frost Array",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "50",
    "Coverage": "5",
    "Effect": "Dissipates 100 heat per turn.\n <stacks>",
    "Energy Upkeep": "2",
    "Index": 220,
    "Full Name": "2N-1CE's Frost Array"
  },
  "Disposable Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Disposable Heat Sink",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "10",
    "Effect": "Dissipates 50 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 221,
    "Full Name": "Disposable Heat Sink"
  },
  "Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Coolant Injector",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "75",
    "Coverage": "10",
    "Effect": "Dissipates 65 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 222,
    "Full Name": "Coolant Injector"
  },
  "Imp. Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Coolant Injector",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Effect": "Dissipates 80 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 223,
    "Full Name": "Improved Coolant Injector"
  },
  "Adv. Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Coolant Injector",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "125",
    "Coverage": "10",
    "Effect": "Dissipates 100 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 224,
    "Full Name": "Advanced Coolant Injector"
  },
  "Exp. Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Coolant Injector",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "150",
    "Coverage": "10",
    "Effect": "Dissipates 120 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 225,
    "Full Name": "Experimental Coolant Injector"
  },
  "Sml. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sml. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 3.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 226,
    "Full Name": "Small Storage Unit"
  },
  "Med. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "10",
    "Integrity": "250",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 5.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 227,
    "Full Name": "Medium Storage Unit"
  },
  "Lrg. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrg. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "20",
    "Integrity": "350",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 10.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 228,
    "Full Name": "Large Storage Unit"
  },
  "Hcp. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hcp. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "40",
    "Integrity": "500",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 15.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 229,
    "Full Name": "High-capacity Storage Unit"
  },
  "Huge Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Huge Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "80",
    "Integrity": "600",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 20.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 230,
    "Full Name": "Huge Storage Unit"
  },
  "Cargo Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cargo Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "2",
    "Mass": "140",
    "Integrity": "700",
    "Coverage": "50",
    "Effect": "Increases inventory capacity by 25.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 231,
    "Full Name": "Cargo Storage Unit"
  },
  "Humpback": {
    "Slot": "Utility",
    "Name": "Humpback",
    "Type": "Storage",
    "Rating": "1",
    "Size": "2",
    "Mass": "200",
    "Integrity": "400",
    "Coverage": "160",
    "Effect": "Increases inventory capacity by 30.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 232,
    "Full Name": "Humpback"
  },
  "Lightpack 2.0": {
    "Slot": "Utility",
    "Name": "Lightpack 2.0",
    "Type": "Storage",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "5",
    "Integrity": "500",
    "Coverage": "45",
    "Effect": "Increases inventory capacity by 35.\n <no_stack>",
    "Description": "The space within this storage unit doesn't seem very stable.",
    "Index": 233,
    "Full Name": "Lightpack 2.0"
  },
  "Sml. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sml. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 100. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 234,
    "Full Name": "Small Battery"
  },
  "Med. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 150. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 235,
    "Full Name": "Medium Battery"
  },
  "Lrg. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrg. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 200. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 236,
    "Full Name": "Large Battery"
  },
  "Hcp. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hcp. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "4",
    "Integrity": "45",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 250. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 237,
    "Full Name": "High-capacity Battery"
  },
  "Com. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Com. Battery",
    "Type": "Storage",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 200. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 238,
    "Full Name": "Compact Battery"
  },
  "Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Energy Well",
    "Type": "Storage",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 350. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 239,
    "Full Name": "Energy Well"
  },
  "Imp. Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Energy Well",
    "Type": "Storage",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 400. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 240,
    "Full Name": "Improved Energy Well"
  },
  "Adv. Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Energy Well",
    "Type": "Storage",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 500. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 241,
    "Full Name": "Advanced Energy Well"
  },
  "Exp. Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Energy Well",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 600. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 242,
    "Full Name": "Experimental Energy Well"
  },
  "Zio. Biocell": {
    "Slot": "Utility",
    "Name": "Zio. Biocell",
    "Type": "Storage",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Increases energy storage capacity by 600. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 243,
    "Full Name": "Zionite Biocell"
  },
  "Asb. Biocell Array": {
    "Slot": "Utility",
    "Name": "Asb. Biocell Array",
    "Type": "Storage",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 1000. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 244,
    "Full Name": "Assembled Biocell Array"
  },
  "Zio. Biocell Array": {
    "Slot": "Utility",
    "Name": "Zio. Biocell Array",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "15",
    "Effect": "Increases energy storage capacity by 750. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 245,
    "Full Name": "Zionite Biocell Array"
  },
  "Superbattery": {
    "Slot": "Utility",
    "Name": "Superbattery",
    "Type": "Storage",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "12",
    "Effect": "Increases energy storage capacity by 1500. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 246,
    "Full Name": "Superbattery"
  },
  "Sml. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sml. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 50. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 247,
    "Full Name": "Small Matter Pod"
  },
  "Med. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 100. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 248,
    "Full Name": "Medium Matter Pod"
  },
  "Lrg. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrg. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 150. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 249,
    "Full Name": "Large Matter Pod"
  },
  "Hcp. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hcp. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "4",
    "Integrity": "45",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 200. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 250,
    "Full Name": "High-capacity Matter Pod"
  },
  "Com. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Com. Matter Pod",
    "Type": "Storage",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 150. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 251,
    "Full Name": "Compact Matter Pod"
  },
  "Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Matter Compressor",
    "Type": "Storage",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 250. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 252,
    "Full Name": "Matter Compressor"
  },
  "Imp. Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Matter Compressor",
    "Type": "Storage",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 300. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 253,
    "Full Name": "Improved Matter Compressor"
  },
  "Adv. Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Matter Compressor",
    "Type": "Storage",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 400. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 254,
    "Full Name": "Advanced Matter Compressor"
  },
  "Exp. Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Matter Compressor",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 500. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 255,
    "Full Name": "Experimental Matter Compressor"
  },
  "YI-UF0's Bottomless Matter Pit": {
    "Slot": "Utility",
    "Name": "YI-UF0's Bottomless Matter Pit",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Increases matter storage capacity by 1500. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 256,
    "Full Name": "YI-UF0's Bottomless Matter Pit"
  },
  "Weight Redist. System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Weight Redist. System",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "8",
    "Effect": "Increases mass support by 6.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 257,
    "Full Name": "Weight Redist. System"
  },
  "Adv. Weight Redist. System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Weight Redist. System",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "8",
    "Effect": "Increases mass support by 9.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 258,
    "Full Name": "Advanced Weight Redist. System"
  },
  "Gravity Neutralizer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Gravity Neutralizer",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "8",
    "Effect": "Increases mass support by 12.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 259,
    "Full Name": "Gravity Neutralizer"
  },
  "Adv. Gravity Neutralizer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Gravity Neutralizer",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Increases mass support by 16.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 260,
    "Full Name": "Advanced Gravity Neutralizer"
  },
  "Quantum Shading Machine": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Quantum Shading Machine",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "8",
    "Effect": "Increases mass support by 20.\n <no_stack>",
    "Energy Upkeep": "12",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 261,
    "Full Name": "Quantum Shading Machine"
  },
  "Asb. Suspension Frame": {
    "Slot": "Utility",
    "Name": "Asb. Suspension Frame",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "55",
    "Coverage": "75",
    "Effect": "Increases mass support by 20.\n <no_stack>",
    "Energy Upkeep": "2",
    "Index": 262,
    "Full Name": "Assembled Suspension Frame"
  },
  "Adv. Quantum Shading Machine": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Quantum Shading Machine",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "38",
    "Coverage": "8",
    "Effect": "Increases mass support by 25.\n <no_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 263,
    "Full Name": "Advanced Quantum Shading Machine"
  },
  "Asb. Metafiber Network": {
    "Slot": "Utility",
    "Name": "Asb. Metafiber Network",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Increases active leg speed by 20%.\n <no_stack>\n",
    "Energy Upkeep": "5",
    "Index": 264,
    "Full Name": "Assembled Metafiber Network"
  },
  "Zio. Metafield Generator": {
    "Slot": "Utility",
    "Name": "Zio. Metafield Generator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "30",
    "Effect": "Doubles core/hover/flight speed, applied before considering any overweight penalties.\n <no_stack>\n",
    "Energy Upkeep": "15",
    "Index": 265,
    "Full Name": "Zionite Metafield Generator"
  },
  "ST Field Compressor": {
    "Slot": "Utility",
    "Name": "ST Field Compressor",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "30",
    "Effect": "Doubles core/hover/flight speed, applied before considering any overweight penalties.\n <no_stack>\n",
    "Energy Upkeep": "8",
    "Index": 266,
    "Full Name": "ST Field Compressor"
  },
  "Structural Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Structural Scanner",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "Scans all visible walls to analyze the structure behind them and identify hidden doorways. Also highlights areas that will soon cave in due to instability even without further stimulation.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 267,
    "Full Name": "Structural Scanner"
  },
  "Trap Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Trap Scanner",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "4% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 268,
    "Full Name": "Trap Scanner"
  },
  "Imp. Trap Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Trap Scanner",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "22",
    "Coverage": "8",
    "Effect": "6% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 269,
    "Full Name": "Improved Trap Scanner"
  },
  "Mak. Trap Scanner": {
    "Slot": "Utility",
    "Name": "Mak. Trap Scanner",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "20% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 270,
    "Full Name": "Makshift Trap Scanner"
  },
  "Adv. Trap Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Trap Scanner",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "27",
    "Coverage": "8",
    "Effect": "8% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 271,
    "Full Name": "Advanced Trap Scanner"
  },
  "Machine Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Machine Analyzer",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "1",
    "Effect": "Analyzes visible machines to locate others on the 0b10 network. Also determines whether an explosive machine has been destabilized and how long until detonation.",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 272,
    "Full Name": "Machine Analyzer"
  },
  "Triangulator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Triangulator",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "8",
    "Effect": "Reasons likely distance at which each visible hostile can spot you, enables predictions of visible robot travel paths, and analyzes ambient signals to determine how many hostiles are currently tracking you, as well as pinpoint them if within a range of 24.",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 273,
    "Full Name": "Triangulator"
  },
  "Visual Processing Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Visual Processing Unit",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 2.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 274,
    "Full Name": "Visual Processing Unit"
  },
  "Adv. Visual Processing Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Visual Processing Unit",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 4.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 275,
    "Full Name": "Advanced Visual Processing Unit"
  },
  "Enh. Optical Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Enh. Optical Array",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 6.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 276,
    "Full Name": "Enhanced Optical Array"
  },
  "Exp. Optical Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Optical Array",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "31",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 7.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 277,
    "Full Name": "Experimental Optical Array"
  },
  "Spectral Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Spectral Analyzer",
    "Type": "Processor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 8.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 278,
    "Full Name": "Spectral Analyzer"
  },
  "Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sensor Array",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 14, once per turn.",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 279,
    "Full Name": "Sensor Array"
  },
  "Imp. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Sensor Array",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "22",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 15, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 280,
    "Full Name": "Improved Sensor Array"
  },
  "Adv. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Sensor Array",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "24",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 16, once per turn.",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 281,
    "Full Name": "Advanced Sensor Array"
  },
  "Lrn. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrn. Sensor Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "2",
    "Integrity": "27",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 18, once per turn.",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 282,
    "Full Name": "Long-range Sensor Array"
  },
  "Mak. Sensor Array": {
    "Slot": "Utility",
    "Name": "Mak. Sensor Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "5",
    "Integrity": "25",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 19, once per turn.",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 283,
    "Full Name": "Makshift Sensor Array"
  },
  "Exp. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Sensor Array",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 20, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 284,
    "Full Name": "Experimental Sensor Array"
  },
  "Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Signal Interpreter",
    "Type": "Processor",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "1",
    "Effect": "Strength 1: Robot scan signals differentiate between object sizes. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 285,
    "Full Name": "Signal Interpreter"
  },
  "Imp. Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Signal Interpreter",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Strength 2: Robot scan signals accurately reflect target size and class, and are unaffected by system corruption. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 286,
    "Full Name": "Improved Signal Interpreter"
  },
  "Adv. Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Signal Interpreter",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "1",
    "Effect": "Strength 3: Robot scan signals accurately reflect target size and specific class rating, and are unaffected by system corruption. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 287,
    "Full Name": "Advanced Signal Interpreter"
  },
  "Exp. Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Signal Interpreter",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "1",
    "Effect": "Strength 4: Robot scan signals accurately reflect target size and specific class rating, are unaffected by system corruption, and can discern dormant, unpowered, disabled, and broken robots. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 288,
    "Full Name": "Experimental Signal Interpreter"
  },
  "Active Sensor Suite": {
    "Slot": "Utility",
    "Name": "Active Sensor Suite",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "4",
    "Integrity": "100",
    "Coverage": "45",
    "Effect": "Enables robot scanning up to a distance of 20, once per turn, in addition to all effects of a maximum-strength Signal Interpreter. Also detects long-term residual evidence of prior robot activity within field of view. 0b10 combat robots scanned by this device will report the event, once per bot.",
    "Energy Upkeep": "5",
    "Index": 289,
    "Full Name": "Active Sensor Suite"
  },
  "Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Terrain Scanner",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 14, once per turn.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 290,
    "Full Name": "Terrain Scanner"
  },
  "Imp. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Terrain Scanner",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "22",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 16, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 291,
    "Full Name": "Improved Terrain Scanner"
  },
  "Adv. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Terrain Scanner",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "24",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 20, once per turn.",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 292,
    "Full Name": "Advanced Terrain Scanner"
  },
  "Mak. Terrain Scanner": {
    "Slot": "Utility",
    "Name": "Mak. Terrain Scanner",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 18, once per turn.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 293,
    "Full Name": "Makshift Terrain Scanner"
  },
  "Lrn. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrn. Terrain Scanner",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "2",
    "Integrity": "27",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 24, once per turn.",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 294,
    "Full Name": "Long-range Terrain Scanner"
  },
  "Exp. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Terrain Scanner",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 30, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 295,
    "Full Name": "Experimental Terrain Scanner"
  },
  "Surveybot 24 Scanner": {
    "Slot": "Utility",
    "Name": "Surveybot 24 Scanner",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "5",
    "Integrity": "5",
    "Coverage": "30",
    "Effect": "Enables terrain scanning up to a distance of 24, once per turn.",
    "Energy Upkeep": "10",
    "Index": 296,
    "Full Name": "Surveybot 24 Scanner"
  },
  "Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 75. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 297,
    "Full Name": "Terrain Scan Processor"
  },
  "Imp. Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 100. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 298,
    "Full Name": "Improved Terrain Scan Processor"
  },
  "Mak. Terrain Scan Processor": {
    "Slot": "Utility",
    "Name": "Mak. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "25",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 125. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 299,
    "Full Name": "Makshift Terrain Scan Processor"
  },
  "Adv. Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 200. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 300,
    "Full Name": "Advanced Terrain Scan Processor"
  },
  "Exp. Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 1000. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 301,
    "Full Name": "Experimental Terrain Scan Processor"
  },
  "Surveybot 24 Chip": {
    "Slot": "Utility",
    "Name": "Surveybot 24 Chip",
    "Type": "Processor",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "1",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 2000. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Index": 302,
    "Full Name": "Surveybot 24 Chip"
  },
  "Seismic Detector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Seismic Detector",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Enables real-time seismic detection and analysis up to a distance of 22.\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 303,
    "Full Name": "Seismic Detector"
  },
  "Transport Network Coupler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Transport Network Coupler",
    "Type": "Processor",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "1",
    "Effect": "Enables real-time tracking of 0b10 Haulers across the entire floor. Only applies in 0b10-controlled areas.",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 304,
    "Full Name": "Transport Network Coupler"
  },
  "Modified TNC": {
    "Slot": "Utility",
    "Name": "Modified TNC",
    "Type": "Processor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "1",
    "Effect": "Enables both real-time tracking of 0b10 Haulers across the entire floor, and gives access to their current manifest. Toggle active state to temporarily list all inventories in view. Only applies in 0b10-controlled areas.",
    "Index": 305,
    "Full Name": "Modified TNC"
  },
  "0b10 Decoder Chip [Generic]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Generic]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about items, traps, exits, hidden doorways, interactive machines, and active patrol and security positions.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 306,
    "Full Name": "0b10 Decoder Chip [Generic]"
  },
  "0b10 Decoder Chip [Looter]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Looter]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about items.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 307,
    "Full Name": "0b10 Decoder Chip [Looter]"
  },
  "0b10 Decoder Chip [Scout]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Scout]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about traps, exits, garrisons, and hidden doorways.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 308,
    "Full Name": "0b10 Decoder Chip [Scout]"
  },
  "0b10 Decoder Chip [Skirmisher]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Skirmisher]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about garrisons and active patrol, investigation, reinforcement, and security positions.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 309,
    "Full Name": "0b10 Decoder Chip [Skirmisher]"
  },
  "0b10 Alert Chip": {
    "Slot": "Utility",
    "Name": "0b10 Alert Chip",
    "Type": "Processor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Analyzes ambient 0b10 signals to gauge the current alert level, and reduces all influence increases by 20%.",
    "Index": 310,
    "Full Name": "0b10 Alert Chip"
  },
  "Salvage Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Increases salvage recovered from targets, +1 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 311,
    "Full Name": "Salvage Targeting Computer"
  },
  "Imp. Salvage Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases salvage recovered from targets, +2 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 312,
    "Full Name": "Improved Salvage Targeting Computer"
  },
  "Mak. Salvage Targeting Computer": {
    "Slot": "Utility",
    "Name": "Mak. Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "5",
    "Coverage": "2",
    "Effect": "Increases salvage recovered from targets, +4 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 313,
    "Full Name": "Makshift Salvage Targeting Computer"
  },
  "Adv. Salvage Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "31",
    "Coverage": "1",
    "Effect": "Increases salvage recovered from targets, +3 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 314,
    "Full Name": "Advanced Salvage Targeting Computer"
  },
  "Asb. Combat Suite": {
    "Slot": "Utility",
    "Name": "Asb. Combat Suite",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "8",
    "Effect": "Increases non-melee weapon accuracy by 8% <stacks>. Increases target core exposure by 8%. Reduces enemy targeting accuracy by 8%.\n <no_stack>",
    "Energy Upkeep": "5",
    "Index": 315,
    "Full Name": "Assembled Combat Suite"
  },
  "Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Targeting Computer",
    "Type": "Processor",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 5%.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 316,
    "Full Name": "Targeting Computer"
  },
  "Imp. Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Targeting Computer",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 6%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 317,
    "Full Name": "Improved Targeting Computer"
  },
  "Adv. Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Targeting Computer",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 8%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 318,
    "Full Name": "Advanced Targeting Computer"
  },
  "Exp. Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Targeting Computer",
    "Type": "Processor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 12%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 319,
    "Full Name": "Experimental Targeting Computer"
  },
  "Tactical Coordination Suite": {
    "Slot": "Utility",
    "Name": "Tactical Coordination Suite",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Increases non-melee weapon accuracy by 10%, applying benefit to both self and any allies within a range of 10.\n <stacks>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 320,
    "Full Name": "Tactical Coordination Suite"
  },
  "Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 5%, and minimum damage by 2 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 321,
    "Full Name": "Melee Analysis Suite"
  },
  "Imp. Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 6%, and minimum damage by 3 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 322,
    "Full Name": "Improved Melee Analysis Suite"
  },
  "Adv. Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 8%, and minimum damage by 4 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 323,
    "Full Name": "Advanced Melee Analysis Suite"
  },
  "Exp. Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 12%, and minimum damage by 6 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 324,
    "Full Name": "Experimental Melee Analysis Suite"
  },
  "Launcher Guidance Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Launcher Guidance Computer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases launcher accuracy by 20%. Also prevents launcher misfires caused by system corruption.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 325,
    "Full Name": "Launcher Guidance Computer"
  },
  "Imp. Launcher Guidance Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Launcher Guidance Computer",
    "Type": "Processor",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "31",
    "Coverage": "1",
    "Effect": "Increases launcher accuracy by 30%. Also prevents launcher misfires caused by system corruption.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 326,
    "Full Name": "Improved Launcher Guidance Computer"
  },
  "Adv. Launcher Guidance Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Launcher Guidance Computer",
    "Type": "Processor",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "1",
    "Effect": "Increases launcher accuracy by 40%. Also prevents launcher misfires caused by system corruption.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 327,
    "Full Name": "Advanced Launcher Guidance Computer"
  },
  "Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Target Analyzer",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 5%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 328,
    "Full Name": "Target Analyzer"
  },
  "Imp. Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Target Analyzer",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 6%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 329,
    "Full Name": "Improved Target Analyzer"
  },
  "Adv. Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Target Analyzer",
    "Type": "Processor",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "35",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 8%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 330,
    "Full Name": "Advanced Target Analyzer"
  },
  "Exp. Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Target Analyzer",
    "Type": "Processor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 10%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 331,
    "Full Name": "Experimental Target Analyzer"
  },
  "Core Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Core Analyzer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "2",
    "Effect": "Increases target core exposure by 6%. Applies only to gun, cannon, and melee attacks.\n <half_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 332,
    "Full Name": "Core Analyzer"
  },
  "Exp. Core Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Core Analyzer",
    "Type": "Processor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "2",
    "Effect": "Increases target core exposure by 8%. Applies only to gun, cannon, and melee attacks.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 333,
    "Full Name": "Experimental Core Analyzer"
  },
  "Armor Integrity Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Armor Integrity Analyzer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "2",
    "Effect": "Enables 30% chance to bypass target armor. Does not apply to AOE attacks.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 334,
    "Full Name": "Armor Integrity Analyzer"
  },
  "Imp. Armor Integrity Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Armor Integrity Analyzer",
    "Type": "Processor",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "35",
    "Coverage": "2",
    "Effect": "Enables 40% chance to bypass target armor. Does not apply to AOE attacks.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 335,
    "Full Name": "Improved Armor Integrity Analyzer"
  },
  "Exp. Armor Integrity Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Armor Integrity Analyzer",
    "Type": "Processor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "2",
    "Effect": "Enables 50% chance to bypass target armor. Does not apply to AOE attacks.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 336,
    "Full Name": "Experimental Armor Integrity Analyzer"
  },
  "Recoil Stabilizer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Recoil Stabilizer",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Effect": "Reduces recoil from each weapon in a volley by 4.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 337,
    "Full Name": "Recoil Stabilizer"
  },
  "Recoil Nullifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Recoil Nullifier",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "30",
    "Effect": "Reduces recoil from each weapon in a volley by 6.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 338,
    "Full Name": "Recoil Nullifier"
  },
  "Matter Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Matter Filter",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "40",
    "Coverage": "50",
    "Effect": "Reduces matter cost of firing any weapon by 30%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 339,
    "Full Name": "Matter Filter"
  },
  "Prc. Matter Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Prc. Matter Filter",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Reduces matter cost of firing any weapon by 50%.\n <half_stack>",
    "Energy Upkeep": "10",
    "Heat Generation": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 340,
    "Full Name": "Precision Matter Filter"
  },
  "Energy Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Energy Filter",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "40",
    "Coverage": "50",
    "Effect": "Reduces energy cost of firing any weapon by 30%.\n <half_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 341,
    "Full Name": "Energy Filter"
  },
  "Prc. Energy Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Prc. Energy Filter",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Reduces energy cost of firing any weapon by 50%.\n <half_stack>",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 342,
    "Full Name": "Precision Energy Filter"
  },
  "Particle Charger": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Particle Charger",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "25",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 15%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 343,
    "Full Name": "Particle Charger"
  },
  "Imp. Particle Charger": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Particle Charger",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "35",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 20%.\n <half_stack>",
    "Energy Upkeep": "7",
    "Heat Generation": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 344,
    "Full Name": "Improved Particle Charger"
  },
  "Adv. Particle Charger": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Particle Charger",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "5",
    "Integrity": "45",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 25%.\n <half_stack>",
    "Energy Upkeep": "9",
    "Heat Generation": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 345,
    "Full Name": "Advanced Particle Charger"
  },
  "Particle Accelerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Particle Accelerator",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 30%.\n <half_stack>",
    "Energy Upkeep": "10",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 346,
    "Full Name": "Particle Accelerator"
  },
  "Imp. Particle Accelerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Particle Accelerator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 40%.\n <half_stack>",
    "Energy Upkeep": "15",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 347,
    "Full Name": "Improved Particle Accelerator"
  },
  "Adv. Particle Accelerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Particle Accelerator",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 50%.\n <half_stack>",
    "Energy Upkeep": "20",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 348,
    "Full Name": "Advanced Particle Accelerator"
  },
  "Kinecellerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Kinecellerator",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Increases ballistic gun/cannon minimum damage by 30%, and may allow some weapons to exceed their normal maximum damage as well.\n <no_stack>",
    "Energy Upkeep": "4",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 349,
    "Full Name": "Kinecellerator"
  },
  "Imp. Kinecellerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Kinecellerator",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Increases ballistic gun/cannon minimum damage by 40%, and may allow some weapons to exceed their normal maximum damage as well.\n <no_stack>",
    "Energy Upkeep": "6",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 350,
    "Full Name": "Improved Kinecellerator"
  },
  "Adv. Kinecellerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Kinecellerator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "90",
    "Coverage": "50",
    "Effect": "Increases ballistic gun/cannon minimum damage by 50%, and may allow some weapons to exceed their normal maximum damage as well.\n <no_stack>",
    "Energy Upkeep": "8",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 351,
    "Full Name": "Advanced Kinecellerator"
  },
  "Launcher Loader": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Launcher Loader",
    "Type": "Device",
    "Rating": "5",
    "Size": "2",
    "Mass": "12",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Reduces firing time for any launcher by 50%, if fired alone. Incompatible with Weapon Cyclers and autonomous or overloaded weapons.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 352,
    "Full Name": "Launcher Loader"
  },
  "Quantum Capacitor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Quantum Capacitor",
    "Type": "Device",
    "Rating": "7",
    "Size": "2",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "20",
    "Effect": "Reduces firing time for an energy gun or cannon by 50%, if fired alone. Incompatible with Weapon Cyclers and autonomous or overloaded weapons.\n <no_stack>",
    "Energy Upkeep": "5",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 353,
    "Full Name": "Quantum Capacitor"
  },
  "Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Weapon Cycler",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "10",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 15%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 354,
    "Full Name": "Weapon Cycler"
  },
  "Imp. Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Weapon Cycler",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "10",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 20%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 355,
    "Full Name": "Improved Weapon Cycler"
  },
  "Adv. Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Weapon Cycler",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "10",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 25%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 356,
    "Full Name": "Advanced Weapon Cycler"
  },
  "Exp. Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Weapon Cycler",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "60",
    "Coverage": "8",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 30%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 357,
    "Full Name": "Experimental Weapon Cycler"
  },
  "Microactuators": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Microactuators",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Effect": "Reduces melee attack time by 20%.\n <stacks, capped at 50%>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 358,
    "Full Name": "Microactuators"
  },
  "Nanoactuators": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Nanoactuators",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "12",
    "Effect": "Reduces melee attack time by 30%.\n <stacks, capped at 50%>",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 359,
    "Full Name": "Nanoactuators"
  },
  "Femtoactuators": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Femtoactuators",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "8",
    "Effect": "Reduces melee attack time by 50%.\n <stacks, capped at 50%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 360,
    "Full Name": "Femtoactuators"
  },
  "Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Actuator Array",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "100",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 10%.\n <half_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 361,
    "Full Name": "Actuator Array"
  },
  "Imp. Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Actuator Array",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 12%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 362,
    "Full Name": "Improved Actuator Array"
  },
  "Adv. Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Actuator Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "7",
    "Integrity": "140",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 16%.\n <half_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 363,
    "Full Name": "Advanced Actuator Array"
  },
  "Exp. Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Actuator Array",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "160",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 20%.\n <half_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 364,
    "Full Name": "Experimental Actuator Array"
  },
  "Force Booster": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Force Booster",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "5",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Increases melee weapon maximum damage by 20%, and decreases melee attack accuracy by 4%.\n <half_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 365,
    "Full Name": "Force Booster"
  },
  "Imp. Force Booster": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Force Booster",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Increases melee weapon maximum damage by 30%, and decreases melee attack accuracy by 6%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 366,
    "Full Name": "Improved Force Booster"
  },
  "Adv. Force Booster": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Force Booster",
    "Type": "Device",
    "Rating": "9",
    "Size": "1",
    "Mass": "10",
    "Integrity": "160",
    "Coverage": "50",
    "Effect": "Increases melee weapon maximum damage by 40%, and decreases melee attack accuracy by 8%.\n <half_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 367,
    "Full Name": "Advanced Force Booster"
  },
  "Stasis Canceller": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Stasis Canceller",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "30",
    "Coverage": "50",
    "Effect": "Ignore all effects of stasis beams and stasis traps.",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 368,
    "Full Name": "Stasis Canceller"
  },
  "Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Transmission Jammer",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 12, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 369,
    "Full Name": "Transmission Jammer"
  },
  "Mak. Transmission Jammer": {
    "Slot": "Utility",
    "Name": "Mak. Transmission Jammer",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 14, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 370,
    "Full Name": "Makshift Transmission Jammer"
  },
  "Imp. Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Transmission Jammer",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 14, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 371,
    "Full Name": "Improved Transmission Jammer"
  },
  "Adv. Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Transmission Jammer",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 16, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "9",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 372,
    "Full Name": "Advanced Transmission Jammer"
  },
  "Exp. Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Transmission Jammer",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 22, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 373,
    "Full Name": "Experimental Transmission Jammer"
  },
  "ECM Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "ECM Suite",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 2x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 374,
    "Full Name": "ECM Suite"
  },
  "Mak. ECM Suite": {
    "Slot": "Utility",
    "Name": "Mak. ECM Suite",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "15",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 3x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "7",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 375,
    "Full Name": "Makshift ECM Suite"
  },
  "Adv. ECM Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. ECM Suite",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "30",
    "Coverage": "8",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 3x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 376,
    "Full Name": "Advanced ECM Suite"
  },
  "Exp. ECM Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. ECM Suite",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "8",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 4x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "25",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 377,
    "Full Name": "Experimental ECM Suite"
  },
  "Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Reaction Control System",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 4% to dodge while on legs, or 8% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 378,
    "Full Name": "Reaction Control System"
  },
  "Imp. Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Reaction Control System",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 5% to dodge while on legs, or 10% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 379,
    "Full Name": "Improved Reaction Control System"
  },
  "Adv. Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Reaction Control System",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 6% to dodge while on legs, or 12% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 380,
    "Full Name": "Advanced Reaction Control System"
  },
  "Exp. Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Reaction Control System",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 7% to dodge while on legs, or 14% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 381,
    "Full Name": "Experimental Reaction Control System"
  },
  "Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Phase Shifter",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 5%.\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 382,
    "Full Name": "Phase Shifter"
  },
  "Imp. Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Phase Shifter",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "2",
    "Integrity": "45",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 10%.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 383,
    "Full Name": "Improved Phase Shifter"
  },
  "Adv. Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Phase Shifter",
    "Type": "Device",
    "Rating": "9",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 15%.\n <no_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 384,
    "Full Name": "Advanced Phase Shifter"
  },
  "Exp. Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Phase Shifter",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 20%.\n <no_stack>",
    "Energy Upkeep": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 385,
    "Full Name": "Experimental Phase Shifter"
  },
  "Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cloaking Device",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "30",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 2. Also -8% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 386,
    "Full Name": "Cloaking Device"
  },
  "Mak. Cloaking Device": {
    "Slot": "Utility",
    "Name": "Mak. Cloaking Device",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "60",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 3. Also -12% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 387,
    "Full Name": "Makshift Cloaking Device"
  },
  "Imp. Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Cloaking Device",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "45",
    "Coverage": "30",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 3. Also -12% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 388,
    "Full Name": "Improved Cloaking Device"
  },
  "Adv. Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Cloaking Device",
    "Type": "Device",
    "Rating": "9",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "30",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 4. Also -16% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 389,
    "Full Name": "Advanced Cloaking Device"
  },
  "Exp. Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Cloaking Device",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 4. Also -16% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 390,
    "Full Name": "Experimental Cloaking Device"
  },
  "Cloak of Protection": {
    "Slot": "Utility",
    "Name": "Cloak of Protection",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "300",
    "Coverage": "400",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 5. Also -20% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "15",
    "Index": 391,
    "Full Name": "Cloak of Protection"
  },
  "5H-AD0's Cloak": {
    "Slot": "Utility",
    "Name": "5H-AD0's Cloak",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "400",
    "Coverage": "300",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 6. Also -24% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "20",
    "Index": 392,
    "Full Name": "5H-AD0's Cloak"
  },
  "Core Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Core Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 20% of damage that would otherwise affect core. Also negates extra effects of critical strikes against core.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 393,
    "Full Name": "Core Shielding"
  },
  "Imp. Core Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Core Shielding",
    "Type": "Protection",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 30% of damage that would otherwise affect core. Also negates extra effects of critical strikes against core.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 394,
    "Full Name": "Improved Core Shielding"
  },
  "Exp. Core Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Core Shielding",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 40% of damage that would otherwise affect core. Also negates extra effects of critical strikes against core.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 395,
    "Full Name": "Experimental Core Shielding"
  },
  "Power Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Power Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect power sources. Also negates extra effects of critical strikes against power sources, and prevents chain reactions due to electromagnetic damage.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 396,
    "Full Name": "Power Shielding"
  },
  "Imp. Power Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Power Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect power sources. Also negates extra effects of critical strikes against power sources, and prevents chain reactions due to electromagnetic damage.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 397,
    "Full Name": "Improved Power Shielding"
  },
  "Exp. Power Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Power Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect power sources. Also negates extra effects of critical strikes against power sources, and prevents chain reactions due to electromagnetic damage.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 398,
    "Full Name": "Experimental Power Shielding"
  },
  "Propulsion Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Propulsion Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect propulsion units. Also negates extra effects of critical strikes against propulsion units.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 399,
    "Full Name": "Propulsion Shielding"
  },
  "Imp. Propulsion Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Propulsion Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect propulsion units. Also negates extra effects of critical strikes against propulsion units.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 400,
    "Full Name": "Improved Propulsion Shielding"
  },
  "Exp. Propulsion Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Propulsion Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect propulsion units. Also negates extra effects of critical strikes against propulsion units.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 401,
    "Full Name": "Experimental Propulsion Shielding"
  },
  "Utility Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Utility Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect utilities. Does not protect armor, but negates extra effects of critical strikes against utilities.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 402,
    "Full Name": "Utility Shielding"
  },
  "Imp. Utility Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Utility Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect utilities. Does not protect armor, but negates extra effects of critical strikes against utilities.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 403,
    "Full Name": "Improved Utility Shielding"
  },
  "Exp. Utility Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Utility Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect utilities. Does not protect armor, but negates extra effects of critical strikes against utilities.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 404,
    "Full Name": "Experimental Utility Shielding"
  },
  "Weapon Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Weapon Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 405,
    "Full Name": "Weapon Shielding"
  },
  "Imp. Weapon Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Weapon Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 406,
    "Full Name": "Improved Weapon Shielding"
  },
  "Exp. Weapon Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Weapon Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 407,
    "Full Name": "Experimental Weapon Shielding"
  },
  "Zio. Weapon Casing": {
    "Slot": "Utility",
    "Name": "Zio. Weapon Casing",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 100% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Index": 408,
    "Full Name": "Zionite Weapon Casing"
  },
  "Lgt. Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lgt. Armor Plating",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "90",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 409,
    "Full Name": "Light Armor Plating"
  },
  "Med. Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Armor Plating",
    "Type": "Protection",
    "Rating": "2",
    "Size": "1",
    "Mass": "7",
    "Integrity": "120",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 410,
    "Full Name": "Medium Armor Plating"
  },
  "Hvy. Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Armor Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 411,
    "Full Name": "Heavy Armor Plating"
  },
  "Zio. Light Carapace": {
    "Slot": "Utility",
    "Name": "Zio. Light Carapace",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "90",
    "Coverage": "400",
    "Effect": "Protects other parts via high coverage.",
    "Index": 412,
    "Full Name": "Zionite Light Carapace"
  },
  "Zio. Heavy Carapace": {
    "Slot": "Utility",
    "Name": "Zio. Heavy Carapace",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "200",
    "Coverage": "1200",
    "Effect": "Protects other parts via high coverage.",
    "Index": 413,
    "Full Name": "Zionite Heavy Carapace"
  },
  "Hrd. Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hrd. Light Armor Plating",
    "Type": "Protection",
    "Rating": "2",
    "Size": "1",
    "Mass": "5",
    "Integrity": "180",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 414,
    "Full Name": "Hardened Light Armor Plating"
  },
  "Hrd. Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hrd. Medium Armor Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "8",
    "Integrity": "240",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 415,
    "Full Name": "Hardened Medium Armor Plating"
  },
  "Hrd. Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hrd. Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "2",
    "Mass": "20",
    "Integrity": "600",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 416,
    "Full Name": "Hardened Heavy Armor Plating"
  },
  "Imp. Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Light Armor Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "180",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 417,
    "Full Name": "Improved Light Armor Plating"
  },
  "Imp. Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Medium Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "240",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 418,
    "Full Name": "Improved Medium Armor Plating"
  },
  "Imp. Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "15",
    "Integrity": "600",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 419,
    "Full Name": "Improved Heavy Armor Plating"
  },
  "Lyr. Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lyr. Light Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "240",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 420,
    "Full Name": "Layered Light Armor Plating"
  },
  "Mak. Armor Plating": {
    "Slot": "Utility",
    "Name": "Mak. Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "300",
    "Coverage": "100",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 421,
    "Full Name": "Makshift Armor Plating"
  },
  "Lyr. Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lyr. Medium Armor Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "330",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 422,
    "Full Name": "Layered Medium Armor Plating"
  },
  "Lyr. Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lyr. Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "6",
    "Size": "2",
    "Mass": "20",
    "Integrity": "750",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 423,
    "Full Name": "Layered Heavy Armor Plating"
  },
  "Centrium Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Centrium Light Armor Plating",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "450",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 424,
    "Full Name": "Centrium Light Armor Plating"
  },
  "Centrium Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Centrium Medium Armor Plating",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "600",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 425,
    "Full Name": "Centrium Medium Armor Plating"
  },
  "Centrium Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Centrium Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "1500",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 426,
    "Full Name": "Centrium Heavy Armor Plating"
  },
  "Centrium Linked Plating": {
    "Slot": "Utility",
    "Name": "Centrium Linked Plating",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "600",
    "Coverage": "500",
    "Effect": "Protects other parts via high coverage.",
    "Index": 427,
    "Full Name": "Centrium Linked Plating"
  },
  "Reactive Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Reactive Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "150",
    "Effect": "Enables kinetic damage resistance: 20%.\n <no_stack>",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 428,
    "Full Name": "Reactive Plating"
  },
  "Med. Reactive Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Reactive Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "20",
    "Integrity": "240",
    "Coverage": "225",
    "Effect": "Enables kinetic damage resistance: 30%.\n <no_stack>",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 429,
    "Full Name": "Medium Reactive Plating"
  },
  "Mak. Kinetic Plating": {
    "Slot": "Utility",
    "Name": "Mak. Kinetic Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "100",
    "Effect": "Enables kinetic damage resistance: 10%.\n <no_stack>",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 430,
    "Full Name": "Makshift Kinetic Plating"
  },
  "Hvy. Reactive Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Reactive Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "35",
    "Integrity": "600",
    "Coverage": "600",
    "Effect": "Enables kinetic damage resistance: 40%.\n <no_stack>",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 431,
    "Full Name": "Heavy Reactive Plating"
  },
  "Reflective Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Reflective Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "150",
    "Effect": "Enables thermal damage resistance: 10%.\n <no_stack>",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 432,
    "Full Name": "Reflective Plating"
  },
  "Med. Reflective Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Reflective Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "225",
    "Effect": "Enables thermal damage resistance: 15%.\n <no_stack>",
    "Heat Generation": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 433,
    "Full Name": "Medium Reflective Plating"
  },
  "Mak. Thermal Plating": {
    "Slot": "Utility",
    "Name": "Mak. Thermal Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "100",
    "Effect": "Enables thermal damage resistance: 10%.\n <no_stack>",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 434,
    "Full Name": "Makshift Thermal Plating"
  },
  "Hvy. Reflective Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Reflective Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "600",
    "Effect": "Enables thermal damage resistance: 25%.\n <no_stack>",
    "Heat Generation": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 435,
    "Full Name": "Heavy Reflective Plating"
  },
  "8R-AWN's Armor/TH": {
    "Slot": "Utility",
    "Name": "8R-AWN's Armor/TH",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "18",
    "Integrity": "120",
    "Coverage": "750",
    "Effect": "Enables thermal damage resistance: 90%.\n <no_stack>",
    "Index": 436,
    "Full Name": "8R-AWN's Armor/TH"
  },
  "8R-AWN's Armor/EX": {
    "Slot": "Utility",
    "Name": "8R-AWN's Armor/EX",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "24",
    "Integrity": "700",
    "Coverage": "900",
    "Effect": "Enables explosive damage resistance: 90%.\n <no_stack>",
    "Index": 437,
    "Full Name": "8R-AWN's Armor/EX"
  },
  "Insulated Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Insulated Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "150",
    "Effect": "Enables electromagnetic damage resistance: 15%.\n <no_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 438,
    "Full Name": "Insulated Plating"
  },
  "Med. Insulated Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Insulated Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "225",
    "Effect": "Enables electromagnetic damage resistance: 20%.\n <no_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 439,
    "Full Name": "Medium Insulated Plating"
  },
  "Hvy. Insulated Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Insulated Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "600",
    "Effect": "Enables electromagnetic damage resistance: 30%.\n <no_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 440,
    "Full Name": "Heavy Insulated Plating"
  },
  "Damper Plating": {
    "Slot": "Utility",
    "Name": "Damper Plating",
    "Type": "Protection",
    "Rating": "6",
    "Size": "4",
    "Mass": "45",
    "Integrity": "1200",
    "Coverage": "1600",
    "Effect": "Enables electromagnetic damage resistance: 90%.\n <no_stack>",
    "Heat Generation": "15",
    "Index": 441,
    "Full Name": "Damper Plating"
  },
  "Zio. Shade Carapace": {
    "Slot": "Utility",
    "Name": "Zio. Shade Carapace",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "400",
    "Effect": "Enables resistance against all standard forms of damage: 20%.\n <no_stack>",
    "Index": 442,
    "Full Name": "Zionite Shade Carapace"
  },
  "Zio. Shade Armor": {
    "Slot": "Utility",
    "Name": "Zio. Shade Armor",
    "Type": "Protection",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "200",
    "Coverage": "225",
    "Effect": "Enables resistance against all standard forms of damage: 30%.\n <no_stack>",
    "Heat Generation": "4",
    "Index": 443,
    "Full Name": "Zionite Shade Armor"
  },
  "Asb. Alloy Armor": {
    "Slot": "Utility",
    "Name": "Asb. Alloy Armor",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "200",
    "Coverage": "100",
    "Effect": "Enables resistance against all standard forms of damage: 15%.\n <no_stack>",
    "Index": 444,
    "Full Name": "Assembled Alloy Armor"
  },
  "Mak. Ablative Armor": {
    "Slot": "Utility",
    "Name": "Mak. Ablative Armor",
    "Type": "Protection",
    "Rating": "6",
    "Size": "1",
    "Mass": "8",
    "Integrity": "250",
    "Coverage": "225",
    "Effect": "Dissipates heat each turn, losing 1 integrity per 20 heat dissipated, applied after all standard heat dissipation and any injectors, and only when heat levels rise above 200. If multiple similar parts attached, heat is distributed among them equally where possible.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 445,
    "Full Name": "Makshift Ablative Armor"
  },
  "Active Cooling Armor": {
    "Slot": "Utility",
    "Name": "Active Cooling Armor",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "32",
    "Integrity": "2500",
    "Coverage": "900",
    "Effect": "Dissipates 60 heat per turn.\n <stacks>",
    "Energy Upkeep": "8",
    "Index": 446,
    "Full Name": "Active Cooling Armor"
  },
  "Powered Armor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Powered Armor",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 447,
    "Full Name": "Powered Armor"
  },
  "Imp. Powered Armor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Powered Armor",
    "Type": "Protection",
    "Rating": "6",
    "Size": "1",
    "Mass": "12",
    "Integrity": "240",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 448,
    "Full Name": "Improved Powered Armor"
  },
  "Adv. Powered Armor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Powered Armor",
    "Type": "Protection",
    "Rating": "8",
    "Size": "1",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 449,
    "Full Name": "Advanced Powered Armor"
  },
  "Exp. Powered Armor": {
    "Slot": "Utility",
    "Name": "Exp. Powered Armor",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "450",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Index": 450,
    "Full Name": "Experimental Powered Armor"
  },
  "1C-UTU's Buckler": {
    "Slot": "Utility",
    "Name": "1C-UTU's Buckler",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "400",
    "Coverage": "200",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "2",
    "Index": 451,
    "Full Name": "1C-UTU's Buckler"
  },
  "Lgt. Regenerative Plating": {
    "Slot": "Utility",
    "Name": "Lgt. Regenerative Plating",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "240",
    "Coverage": "150",
    "Effect": "Regenerates integrity at a rate of 1 per 3 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "3",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 452,
    "Full Name": "Light Regenerative Plating"
  },
  "Med. Regenerative Plating": {
    "Slot": "Utility",
    "Name": "Med. Regenerative Plating",
    "Type": "Protection",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "330",
    "Coverage": "225",
    "Effect": "Regenerates integrity at a rate of 1 per 2 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "4",
    "Heat Generation": "5",
    "Index": 453,
    "Full Name": "Medium Regenerative Plating"
  },
  "Hvy. Regenerative Plating": {
    "Slot": "Utility",
    "Name": "Hvy. Regenerative Plating",
    "Type": "Protection",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "21",
    "Integrity": "750",
    "Coverage": "600",
    "Effect": "Regenerates integrity at a rate of 1 per turn.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Heat Generation": "10",
    "Index": 454,
    "Full Name": "Heavy Regenerative Plating"
  },
  "SHELL Armor": {
    "Slot": "Utility",
    "Name": "SHELL Armor",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "30",
    "Integrity": "1200",
    "Coverage": "900",
    "Effect": "Regenerates integrity at a rate of 3 per turn.\n <parallel_ok>",
    "Energy Upkeep": "3",
    "Heat Generation": "8",
    "Index": 455,
    "Full Name": "SHELL Armor"
  },
  "Phase Armor": {
    "Slot": "Utility",
    "Name": "Phase Armor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "40",
    "Integrity": "900",
    "Coverage": "1200",
    "Effect": "While active, 50% of damage to this part is instead passed along to the core.",
    "Energy Upkeep": "10",
    "Index": 456,
    "Full Name": "Phase Armor"
  },
  "Graphene Brace": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Graphene Brace",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Coverage": "8",
    "Effect": "100% chance to negate the effects of incoming critical strikes.",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 457,
    "Full Name": "Graphene Brace"
  },
  "Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Focal Shield",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 20%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 458,
    "Full Name": "Focal Shield"
  },
  "Imp. Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Focal Shield",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "31",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 459,
    "Full Name": "Improved Focal Shield"
  },
  "Adv. Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Focal Shield",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 460,
    "Full Name": "Advanced Focal Shield"
  },
  "Exp. Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Focal Shield",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "36",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 461,
    "Full Name": "Experimental Focal Shield"
  },
  "Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Shield",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 20%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 462,
    "Full Name": "Thermal Shield"
  },
  "Imp. Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Thermal Shield",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "31",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 463,
    "Full Name": "Improved Thermal Shield"
  },
  "Adv. Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Thermal Shield",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 464,
    "Full Name": "Advanced Thermal Shield"
  },
  "Exp. Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Thermal Shield",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "36",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 465,
    "Full Name": "Experimental Thermal Shield"
  },
  "Thermal Barrier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Barrier",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "20",
    "Effect": "Enables thermal damage resistance: 50%.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 466,
    "Full Name": "Thermal Barrier"
  },
  "Beam Splitter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Beam Splitter",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "20",
    "Effect": "Enables thermal damage resistance: 75%.\n <no_stack>",
    "Energy Upkeep": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 467,
    "Full Name": "Beam Splitter"
  },
  "Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Defense Suite",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "100",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 20%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 468,
    "Full Name": "Thermal Defense Suite"
  },
  "Imp. Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Thermal Defense Suite",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 25%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "12",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 469,
    "Full Name": "Improved Thermal Defense Suite"
  },
  "Adv. Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Thermal Defense Suite",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 30%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "14",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 470,
    "Full Name": "Advanced Thermal Defense Suite"
  },
  "Exp. Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Thermal Defense Suite",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 30%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 471,
    "Full Name": "Experimental Thermal Defense Suite"
  },
  "Shock Absorption System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Shock Absorption System",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "27",
    "Coverage": "70",
    "Effect": "Enables explosive damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 472,
    "Full Name": "Shock Absorption System"
  },
  "Imp. Shock Absorption System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Shock Absorption System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "31",
    "Coverage": "80",
    "Effect": "Enables explosive damage resistance: 50%.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 473,
    "Full Name": "Improved Shock Absorption System"
  },
  "Exp. Shock Absorption System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Shock Absorption System",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "90",
    "Effect": "Enables explosive damage resistance: 75%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 474,
    "Full Name": "Experimental Shock Absorption System"
  },
  "EM Disruption Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "EM Disruption Field",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "27",
    "Coverage": "15",
    "Effect": "Enables electromagnetic damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 475,
    "Full Name": "EM Disruption Field"
  },
  "Adv. EM Disruption Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. EM Disruption Field",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables electromagnetic damage resistance: 50%.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "187/93/62",
    "Index": 476,
    "Full Name": "Advanced EM Disruption Field"
  },
  "Exp. EM Disruption Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. EM Disruption Field",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "31",
    "Coverage": "15",
    "Effect": "Enables electromagnetic damage resistance: 75%.\n <no_stack>",
    "Energy Upkeep": "20",
    "Fabrication Number": "2",
    "Fabrication Time": "204/102/68",
    "Index": 477,
    "Full Name": "Experimental EM Disruption Field"
  },
  "ME-RLN's Chromatic Screen": {
    "Slot": "Utility",
    "Name": "ME-RLN's Chromatic Screen",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "15",
    "Effect": "Enables resistance against all standard forms of damage: 20%.\n <no_stack>",
    "Energy Upkeep": "4",
    "Index": 478,
    "Full Name": "ME-RLN's Chromatic Screen"
  },
  "Hardlight Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hardlight Generator",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "30",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 4 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 479,
    "Full Name": "Hardlight Generator"
  },
  "Imp. Hardlight Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Hardlight Generator",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "40",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 6 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "12",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 480,
    "Full Name": "Improved Hardlight Generator"
  },
  "Adv. Hardlight Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Hardlight Generator",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "10",
    "Integrity": "50",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 8 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 481,
    "Full Name": "Advanced Hardlight Generator"
  },
  "Exp. Hardlight Generator": {
    "Slot": "Utility",
    "Name": "Exp. Hardlight Generator",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 10 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "20",
    "Index": 482,
    "Full Name": "Experimental Hardlight Generator"
  },
  "Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Shield Generator",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:6 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 483,
    "Full Name": "Shield Generator"
  },
  "Imp. Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Shield Generator",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "40",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:5 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 484,
    "Full Name": "Improved Shield Generator"
  },
  "Adv. Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Shield Generator",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:4 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 485,
    "Full Name": "Advanced Shield Generator"
  },
  "Exp. Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Shield Generator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:2 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 486,
    "Full Name": "Experimental Shield Generator"
  },
  "Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Force Field",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "7",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:7 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 487,
    "Full Name": "Force Field"
  },
  "Imp. Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Force Field",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:6 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 488,
    "Full Name": "Improved Force Field"
  },
  "Adv. Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Force Field",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "15",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:5 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 489,
    "Full Name": "Advanced Force Field"
  },
  "Exp. Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Force Field",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "90",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:3 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 490,
    "Full Name": "Experimental Force Field"
  },
  "7V-RTL's Ultimate Field": {
    "Slot": "Utility",
    "Name": "7V-RTL's Ultimate Field",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "20",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Blocks 75% of damage in exchange for energy loss at a 1:3 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "20",
    "Index": 491,
    "Full Name": "7V-RTL's Ultimate Field"
  },
  "Vortex Field Projector": {
    "Slot": "Utility",
    "Name": "Vortex Field Projector",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "4",
    "Mass": "200",
    "Integrity": "480",
    "Coverage": "600",
    "Effect": "Blocks 75% of damage in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "60",
    "Heat Generation": "40",
    "Index": 492,
    "Full Name": "Vortex Field Projector"
  },
  "Remote Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Remote Shield",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "70",
    "Effect": "Blocks 25% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:6 ratio.\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 493,
    "Full Name": "Remote Shield"
  },
  "Imp. Remote Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Remote Shield",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "70",
    "Effect": "Blocks 25% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:5 ratio.\n <no_stack>",
    "Energy Upkeep": "7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 494,
    "Full Name": "Improved Remote Shield"
  },
  "Adv. Remote Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Remote Shield",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "70",
    "Effect": "Blocks 25% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:4 ratio.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 495,
    "Full Name": "Advanced Remote Shield"
  },
  "Remote Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Remote Force Field",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:8 ratio.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 496,
    "Full Name": "Remote Force Field"
  },
  "Imp. Remote Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Remote Force Field",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "15",
    "Integrity": "90",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:7 ratio.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 497,
    "Full Name": "Improved Remote Force Field"
  },
  "Energy Mantle": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Energy Mantle",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "18",
    "Integrity": "90",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:6 ratio.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 498,
    "Full Name": "Energy Mantle"
  },
  "Imp. Energy Mantle": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Energy Mantle",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "100",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:5 ratio.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 499,
    "Full Name": "Improved Energy Mantle"
  },
  "AEGIS Remote Shield": {
    "Slot": "Utility",
    "Name": "AEGIS Remote Shield",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "120",
    "Coverage": "30",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:2 ratio.\n <no_stack>",
    "Energy Upkeep": "20",
    "Index": 500,
    "Full Name": "AEGIS Remote Shield"
  },
  "Phase Redirector": {
    "Slot": "Utility",
    "Name": "Phase Redirector",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "15",
    "Integrity": "100",
    "Coverage": "200",
    "Effect": "25% of damage to parts is instead transferred directly to the core.\n <stacks>",
    "Energy Upkeep": "5",
    "Index": 501,
    "Full Name": "Phase Redirector"
  },
  "Point Defense System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Point Defense System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "30",
    "Effect": "8.00% chance to shoot down grenades, rockets, or missiles that pass within a range of 3, checked every time the projectile moves. Can also intercept Remote Datajack projectiles.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 502,
    "Full Name": "Point Defense System"
  },
  "Point Defense Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Point Defense Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "30",
    "Effect": "16.00% chance to shoot down grenades, rockets, or missiles that pass within a range of 3, checked every time the projectile moves. Can also intercept Remote Datajack projectiles.\n <parallel_ok>",
    "Energy Upkeep": "7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 503,
    "Full Name": "Point Defense Array"
  },
  "Antimissile System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Antimissile System",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "30",
    "Effect": "24.00% chance to shoot down grenades, rockets, or missiles that pass within a range of 3, checked every time the projectile moves. Can also intercept Remote Datajack projectiles.\n <parallel_ok>",
    "Energy Upkeep": "9",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 504,
    "Full Name": "Antimissile System"
  },
  "EX Chip 1": {
    "Slot": "Utility",
    "Name": "EX Chip 1",
    "Type": "Hackware",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "1",
    "Coverage": "1",
    "Effect": "Increases chance of successful machine hack by 7. Also provides a +3% bonus to rewiring traps and disrupted robots, and applies a -1% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 505,
    "Full Name": "EX Chip 1"
  },
  "Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hacking Suite",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 10. Also provides a +5% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 506,
    "Full Name": "Hacking Suite"
  },
  "Mak. Hacking Suite": {
    "Slot": "Utility",
    "Name": "Mak. Hacking Suite",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 11. Also provides a +5% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 507,
    "Full Name": "Makshift Hacking Suite"
  },
  "Imp. Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Hacking Suite",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 12. Also provides a +6% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 508,
    "Full Name": "Improved Hacking Suite"
  },
  "Adv. Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Hacking Suite",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 14. Also provides a +7% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 509,
    "Full Name": "Advanced Hacking Suite"
  },
  "Exp. Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Hacking Suite",
    "Type": "Hackware",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 16. Also provides a +8% bonus to rewiring traps and disrupted robots, and applies a -3% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 510,
    "Full Name": "Experimental Hacking Suite"
  },
  "System Mapper": {
    "Slot": "Utility",
    "Name": "System Mapper",
    "Type": "Hackware",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 20. Also provides a +10% bonus to rewiring traps and disrupted robots, and applies a -4% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 511,
    "Full Name": "System Mapper"
  },
  "Deep Network Scanner": {
    "Slot": "Utility",
    "Name": "Deep Network Scanner",
    "Type": "Hackware",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 25. Also provides a +12% bonus to rewiring traps and disrupted robots, and applies a -5% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 512,
    "Full Name": "Deep Network Scanner"
  },
  "Architect God Chip A": {
    "Slot": "Utility",
    "Name": "Architect God Chip A",
    "Type": "Hackware",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "25",
    "Coverage": "1",
    "Effect": "Increases chance of successful machine hack by 100. Also provides a +50% bonus to rewiring traps and disrupted robots, and applies a -20% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 513,
    "Full Name": "Architect God Chip A"
  },
  "EX Chip 2": {
    "Slot": "Utility",
    "Name": "EX Chip 2",
    "Type": "Hackware",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "1",
    "Coverage": "1",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 7. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 3%. Blocks hacking feedback side effects 14% of the time, and repels 14% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 514,
    "Full Name": "EX Chip 2"
  },
  "System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Shield",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 10. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 5%. Blocks hacking feedback side effects 20% of the time, and repels 20% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 515,
    "Full Name": "System Shield"
  },
  "Mak. System Shield": {
    "Slot": "Utility",
    "Name": "Mak. System Shield",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 11. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 5%. Blocks hacking feedback side effects 22% of the time, and repels 22% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 516,
    "Full Name": "Makshift System Shield"
  },
  "Imp. System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. System Shield",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 12. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 6%. Blocks hacking feedback side effects 24% of the time, and repels 24% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 517,
    "Full Name": "Improved System Shield"
  },
  "Adv. System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. System Shield",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 14. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 7%. Blocks hacking feedback side effects 28% of the time, and repels 28% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 518,
    "Full Name": "Advanced System Shield"
  },
  "Exp. System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. System Shield",
    "Type": "Hackware",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 16. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 8%. Blocks hacking feedback side effects 32% of the time, and repels 32% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 519,
    "Full Name": "Experimental System Shield"
  },
  "Ghost Barrier": {
    "Slot": "Utility",
    "Name": "Ghost Barrier",
    "Type": "Hackware",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 20. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 10%. Blocks hacking feedback side effects 40% of the time, and repels 40% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 520,
    "Full Name": "Ghost Barrier"
  },
  "Quantum Router": {
    "Slot": "Utility",
    "Name": "Quantum Router",
    "Type": "Hackware",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 25. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 12%. Blocks hacking feedback side effects 50% of the time, and repels 50% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 521,
    "Full Name": "Quantum Router"
  },
  "Architect God Chip D": {
    "Slot": "Utility",
    "Name": "Architect God Chip D",
    "Type": "Hackware",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "25",
    "Coverage": "1",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 100. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 50%. Blocks hacking feedback side effects 100% of the time, and repels 200% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 522,
    "Full Name": "Architect God Chip D"
  },
  "Authchip [R/NC]": {
    "Slot": "Utility",
    "Name": "Authchip [R/NC]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for most non-combat 0b10 bots, including Workers, Tunnelers, Haulers, Recyclers, Minesweepers, Mechanics, Operators, Protectors, and Researchers.",
    "Index": 523,
    "Full Name": "Authchip [R/NC]"
  },
  "Authchip [R/Combat]": {
    "Slot": "Utility",
    "Name": "Authchip [R/Combat]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for most 0b10 combat bots, including Swarmers, Cutters, Saboteurs, Grunts, Brawlers, Duelists, Sentries, Demolishers, Specialists, Hunters, and Programmers.",
    "Index": 524,
    "Full Name": "Authchip [R/Combat]"
  },
  "Authchip [Power]": {
    "Slot": "Utility",
    "Name": "Authchip [Power]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all types of power sources.",
    "Index": 525,
    "Full Name": "Authchip [Power]"
  },
  "Authchip [Propulsion]": {
    "Slot": "Utility",
    "Name": "Authchip [Propulsion]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all types of propulsion.",
    "Index": 526,
    "Full Name": "Authchip [Propulsion]"
  },
  "Authchip [Device]": {
    "Slot": "Utility",
    "Name": "Authchip [Device]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Device-type utilities.",
    "Index": 527,
    "Full Name": "Authchip [Device]"
  },
  "Authchip [Storage]": {
    "Slot": "Utility",
    "Name": "Authchip [Storage]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Storage-type utilities.",
    "Index": 528,
    "Full Name": "Authchip [Storage]"
  },
  "Authchip [Processor]": {
    "Slot": "Utility",
    "Name": "Authchip [Processor]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Processors and Hackware-type utilities.",
    "Index": 529,
    "Full Name": "Authchip [Processor]"
  },
  "Authchip [Armor]": {
    "Slot": "Utility",
    "Name": "Authchip [Armor]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Armor-type utilities.",
    "Index": 530,
    "Full Name": "Authchip [Armor]"
  },
  "Authchip [Weapon]": {
    "Slot": "Utility",
    "Name": "Authchip [Weapon]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all types of weapons.",
    "Index": 531,
    "Full Name": "Authchip [Weapon]"
  },
  "Relay Coupler [NC]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [NC]",
    "Type": "Hackware",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to non-combat 0b10 bots, including Workers, Builders, Tunnelers, Haulers, Recyclers, Mechanics, Operators, Watchers, Protectors, Researchers, and Compactors.",
    "Index": 532,
    "Full Name": "Relay Coupler [NC]"
  },
  "Relay Coupler [C]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [C]",
    "Type": "Hackware",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to common front-line 0b10 combat bots, including Swarmers, Grunts, Brawlers, and Duelists.",
    "Index": 533,
    "Full Name": "Relay Coupler [C]"
  },
  "Relay Coupler [ARC]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [ARC]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to 0b10 Carriers.",
    "Index": 534,
    "Full Name": "Relay Coupler [ARC]"
  },
  "Relay Coupler [Swarmer]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Swarmer]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Swarmer variant.",
    "Index": 535,
    "Full Name": "Relay Coupler [Swarmer]"
  },
  "Relay Coupler [Cutter]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Cutter]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Cutter variant.",
    "Index": 536,
    "Full Name": "Relay Coupler [Cutter]"
  },
  "Relay Coupler [Grunt]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Grunt]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Grunt variant.",
    "Index": 537,
    "Full Name": "Relay Coupler [Grunt]"
  },
  "Relay Coupler [Brawler]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Brawler]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Brawler variant.",
    "Index": 538,
    "Full Name": "Relay Coupler [Brawler]"
  },
  "Relay Coupler [Duelist]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Duelist]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Duelist variant.",
    "Index": 539,
    "Full Name": "Relay Coupler [Duelist]"
  },
  "Relay Coupler [Sentry]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Sentry]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Sentry variant.",
    "Index": 540,
    "Full Name": "Relay Coupler [Sentry]"
  },
  "Relay Coupler [Demolisher]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Demolisher]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Demolisher variant.",
    "Index": 541,
    "Full Name": "Relay Coupler [Demolisher]"
  },
  "Relay Coupler [Specialist]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Specialist]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Specialist variant.",
    "Index": 542,
    "Full Name": "Relay Coupler [Specialist]"
  },
  "Relay Coupler [Hunter]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Hunter]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Hunter variant.",
    "Index": 543,
    "Full Name": "Relay Coupler [Hunter]"
  },
  "Relay Coupler [Heavy]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Heavy]",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Heavy variant.",
    "Index": 544,
    "Full Name": "Relay Coupler [Heavy]"
  },
  "Relay Coupler [Behemoth]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Behemoth]",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Behemoth variant.",
    "Index": 545,
    "Full Name": "Relay Coupler [Behemoth]"
  },
  "Relay Coupler [Programmer]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Programmer]",
    "Type": "Hackware",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Programmer variant.",
    "Index": 546,
    "Full Name": "Relay Coupler [Programmer]"
  },
  "Skeleton Box": {
    "Slot": "Utility",
    "Name": "Skeleton Box",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Effect": "Automatically hacks visible door terminals within a range of 10. Requires being within that range for 10 turns.",
    "Index": 547,
    "Full Name": "Skeleton Box"
  },
  "01-MTF's Autohacker": {
    "Slot": "Utility",
    "Name": "01-MTF's Autohacker",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Effect": "Automatically hacks visible door terminals within a range of 10. Requires being within that range for 1 turn.",
    "Index": 548,
    "Full Name": "01-MTF's Autohacker"
  },
  "Component Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Component Analysis Suite",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "3% chance to identify a random unidentified part in inventory each turn.\n <parallel_ok>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 549,
    "Full Name": "Component Analysis Suite"
  },
  "Imp. Component Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Component Analysis Suite",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "4% chance to identify a random unidentified part in inventory each turn.\n <parallel_ok>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 550,
    "Full Name": "Improved Component Analysis Suite"
  },
  "Adv. Component Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Component Analysis Suite",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "10% chance to identify a random unidentified part in inventory each turn.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 551,
    "Full Name": "Advanced Component Analysis Suite"
  },
  "Dynamic Insulation System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Dynamic Insulation System",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "27",
    "Coverage": "8",
    "Effect": "Cuts chance of system corruption from electromagnetic damage by 50%. Also a 20% chance to prevent the effects of a shock or surge trap.\n <stacks>",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 552,
    "Full Name": "Dynamic Insulation System"
  },
  "Imp. Dynamic Insulation System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Dynamic Insulation System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "31",
    "Coverage": "8",
    "Effect": "Cuts chance of system corruption from electromagnetic damage by 67%. Also a 30% chance to prevent the effects of a shock or surge trap.\n <stacks>",
    "Energy Upkeep": "3",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 553,
    "Full Name": "Improved Dynamic Insulation System"
  },
  "Adv. Dynamic Insulation System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Dynamic Insulation System",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Cuts chance of system corruption from electromagnetic damage by 75%. Also a 40% chance to prevent the effects of a shock or surge trap.\n <stacks>",
    "Energy Upkeep": "6",
    "Heat Generation": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 554,
    "Full Name": "Advanced Dynamic Insulation System"
  },
  "System Guard": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Guard",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Reduces effective system corruption by 8.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 555,
    "Full Name": "System Guard"
  },
  "Imp. System Guard": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. System Guard",
    "Type": "Processor",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "2",
    "Effect": "Reduces effective system corruption by 12.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 556,
    "Full Name": "Improved System Guard"
  },
  "Exp. System Guard": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. System Guard",
    "Type": "Processor",
    "Rating": "9",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Reduces effective system corruption by 20.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 557,
    "Full Name": "Experimental System Guard"
  },
  "Corruption Screen": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Corruption Screen",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "16",
    "Coverage": "2",
    "Effect": "Prevents infliction of new system corruption from any source, losing 2 integrity per percent of corruption blocked.",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 558,
    "Full Name": "Corruption Screen"
  },
  "Imp. Corruption Screen": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Corruption Screen",
    "Type": "Processor",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "30",
    "Coverage": "2",
    "Effect": "Prevents infliction of new system corruption from any source, losing 2 integrity per percent of corruption blocked.",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 559,
    "Full Name": "Improved Corruption Screen"
  },
  "Adv. Corruption Screen": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Corruption Screen",
    "Type": "Processor",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "40",
    "Coverage": "2",
    "Effect": "Prevents infliction of new system corruption from any source, losing 2 integrity per percent of corruption blocked.",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 560,
    "Full Name": "Advanced Corruption Screen"
  },
  "System Restoration Module": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Restoration Module",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "15",
    "Effect": "4.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 561,
    "Full Name": "System Restoration Module"
  },
  "Mak. System Restoration Module": {
    "Slot": "Utility",
    "Name": "Mak. System Restoration Module",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "5",
    "Integrity": "45",
    "Coverage": "20",
    "Effect": "1.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 562,
    "Full Name": "Makshift System Restoration Module"
  },
  "Imp. System Restoration Module": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. System Restoration Module",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "21",
    "Coverage": "15",
    "Effect": "4.70% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 563,
    "Full Name": "Improved System Restoration Module"
  },
  "Adv. System Restoration Module": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. System Restoration Module",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "30",
    "Coverage": "15",
    "Effect": "5.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 564,
    "Full Name": "Advanced System Restoration Module"
  },
  "System Purifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Purifier",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "45",
    "Coverage": "15",
    "Effect": "3.80% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 565,
    "Full Name": "System Purifier"
  },
  "Exp. System Purifier": {
    "Slot": "Utility",
    "Name": "Exp. System Purifier",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "300",
    "Coverage": "15",
    "Effect": "10.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "15",
    "Index": 566,
    "Full Name": "Experimental System Purifier"
  },
  "Tractor Beam": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Tractor Beam",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Effect": "Automatically collects matter within a range of 4.",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 567,
    "Full Name": "Tractor Beam"
  },
  "Hpw. Tractor Beam": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hpw. Tractor Beam",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Effect": "Automatically collects matter within a range of 8.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 568,
    "Full Name": "High-powered Tractor Beam"
  },
  "Lrn. Tractor Beam": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrn. Tractor Beam",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "30",
    "Effect": "Automatically collects matter within a range of 16.",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 569,
    "Full Name": "Long-range Tractor Beam"
  },
  "Mobile Refinery Mk. CCLXVII": {
    "Slot": "Utility",
    "Name": "Mobile Refinery Mk. CCLXVII",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "40",
    "Effect": "Attracts any visible debris within a range of 16, converting it to matter on arrival.",
    "Energy Upkeep": "40",
    "Index": 570,
    "Full Name": "Mobile Refinery Mk. CCLXVII"
  },
  "Trap Extractor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Trap Extractor",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "15",
    "Effect": "Enables 60% chance to extract a non-hostile trap at current location, adding it to the extractor inventory if possible. Can hold up to 4 traps of the same type, but cannot store stasis traps. Each extraction attempt requires 5 matter. Activate a second time to begin dropping stored traps to the ground at a rate of one per turn. Also prevents user system corruption from accidentally triggering a trap at current location due to movement.",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 571,
    "Full Name": "Trap Extractor"
  },
  "Imp. Trap Extractor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Trap Extractor",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "85",
    "Coverage": "15",
    "Effect": "Enables 80% chance to extract a non-hostile trap at current location, adding it to the extractor inventory if possible. Can hold up to 6 traps of the same type, but cannot store stasis traps. Each extraction attempt requires 5 matter. Activate a second time to begin dropping stored traps to the ground at a rate of one per turn. Also prevents user system corruption from accidentally triggering a trap at current location due to movement.",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 572,
    "Full Name": "Improved Trap Extractor"
  },
  "Adv. Trap Extractor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Trap Extractor",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "100",
    "Coverage": "15",
    "Effect": "Enables 100% chance to extract a non-hostile trap at current location, adding it to the extractor inventory if possible. Can hold up to 8 traps of the same type, but cannot store stasis traps. Each extraction attempt requires 5 matter. Activate a second time to begin dropping stored traps to the ground at a rate of one per turn. Also prevents user system corruption from accidentally triggering a trap at current location due to movement.",
    "Energy Upkeep": "8",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 573,
    "Full Name": "Advanced Trap Extractor"
  },
  "Trap Reconfigurator": {
    "Slot": "Utility",
    "Name": "Trap Reconfigurator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "65",
    "Coverage": "15",
    "Effect": "Automatically and instantly reprograms visible hostile traps within a range of 14.",
    "Energy Upkeep": "2",
    "Index": 574,
    "Full Name": "Trap Reconfigurator"
  },
  "Recalibrator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Recalibrator",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "15",
    "Effect": "0.70% chance each turn to restore a broken part, attached or in inventory, to functionality. Unable to repair alien technology, or prototypes above rating 8.\n <parallel_ok>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 575,
    "Full Name": "Recalibrator"
  },
  "Imp. Recalibrator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Recalibrator",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "15",
    "Effect": "1.00% chance each turn to restore a broken part, attached or in inventory, to functionality. Unable to repair alien technology, or prototypes above rating 8.\n <parallel_ok>",
    "Energy Upkeep": "14",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 576,
    "Full Name": "Improved Recalibrator"
  },
  "Adv. Recalibrator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Recalibrator",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "15",
    "Effect": "2.00% chance each turn to restore a broken part, attached or in inventory, to functionality. Unable to repair alien technology, or prototypes above rating 8.\n <parallel_ok>",
    "Energy Upkeep": "18",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 577,
    "Full Name": "Advanced Recalibrator"
  },
  "Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Field Recycling Unit",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (25% efficiency) at a rate of 2 per turn. Can hold no more than 100 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "4",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 578,
    "Full Name": "Field Recycling Unit"
  },
  "Imp. Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Field Recycling Unit",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "12",
    "Integrity": "70",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (45% efficiency) at a rate of 4 per turn. Can hold no more than 200 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "6",
    "Heat Generation": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 579,
    "Full Name": "Improved Field Recycling Unit"
  },
  "Adv. Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Field Recycling Unit",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "16",
    "Integrity": "80",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (60% efficiency) at a rate of 6 per turn. Can hold no more than 300 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "8",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 580,
    "Full Name": "Advanced Field Recycling Unit"
  },
  "Exp. Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Field Recycling Unit",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "120",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (75% efficiency) at a rate of 7 per turn. Can hold no more than 350 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 581,
    "Full Name": "Experimental Field Recycling Unit"
  },
  "Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Drone Bay",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "200",
    "Effect": "Holds up to 2 Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 582,
    "Full Name": "Drone Bay"
  },
  "Z-Drone Bay": {
    "Slot": "Utility",
    "Name": "Z-Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "200",
    "Effect": "Holds up to 2 Z-Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 583,
    "Full Name": "Z-Drone Bay"
  },
  "Mni. Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Mni. Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "150",
    "Coverage": "100",
    "Effect": "Holds up to 3 Mini Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 584,
    "Full Name": "Mini Drone Bay"
  },
  "Mapping Drone Bay": {
    "Slot": "Utility",
    "Name": "Mapping Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "100",
    "Coverage": "80",
    "Effect": "Holds up to 3 Mapping Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 585,
    "Full Name": "Mapping Drone Bay"
  },
  "Adv. Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "2",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "400",
    "Effect": "Holds up to 2 Advanced Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 586,
    "Full Name": "Advanced Drone Bay"
  },
  "Bomb Drone Bay": {
    "Slot": "Utility",
    "Name": "Bomb Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "320",
    "Coverage": "400",
    "Effect": "Holds up to 16 Bomb Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nBomb Drones explode for 57-109 explosive damage with a radius of 6 (falloff: 15; salvage: -15).",
    "Index": 587,
    "Full Name": "Bomb Drone Bay"
  },
  "Thief Drone Bay": {
    "Slot": "Utility",
    "Name": "Thief Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "200",
    "Coverage": "100",
    "Effect": "Holds up to 3 Thief Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 588,
    "Full Name": "Thief Drone Bay"
  },
  "Decoy Drone Bay": {
    "Slot": "Utility",
    "Name": "Decoy Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "14",
    "Integrity": "270",
    "Coverage": "400",
    "Effect": "Holds up to 16 Decoy Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nWhen deployed, Decoy Drones immediately draw hostiles to a distant location then self-destruct.",
    "Index": 589,
    "Full Name": "Decoy Drone Bay"
  },
  "Splice Drone Bay": {
    "Slot": "Utility",
    "Name": "Splice Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "200",
    "Coverage": "200",
    "Effect": "Holds up to 6 Splice Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 590,
    "Full Name": "Splice Drone Bay"
  },
  "Combat Drone Bay": {
    "Slot": "Utility",
    "Name": "Combat Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "350",
    "Coverage": "400",
    "Effect": "Holds up to 2 Combat Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 591,
    "Full Name": "Combat Drone Bay"
  },
  "Assault Drone Bay": {
    "Slot": "Utility",
    "Name": "Assault Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "400",
    "Coverage": "500",
    "Effect": "Holds up to 2 Assault Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 592,
    "Full Name": "Assault Drone Bay"
  },
  "Stealth Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Stealth Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "250",
    "Coverage": "200",
    "Effect": "Holds up to 2 Stealth Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 593,
    "Full Name": "Stealth Drone Bay"
  },
  "Swarm Drone Bay": {
    "Slot": "Utility",
    "Name": "Swarm Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "250",
    "Coverage": "600",
    "Effect": "Holds up to 4 Swarm Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 1025,
    "Full Name": "Swarm Drone Bay"
  },
  "Supersonic Drone Bay": {
    "Slot": "Utility",
    "Name": "Supersonic Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Holds 1 Trailblazer. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 595,
    "Full Name": "Supersonic Drone Bay"
  },
  "Sensor Drone Bay": {
    "Slot": "Utility",
    "Name": "Sensor Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "14",
    "Integrity": "400",
    "Coverage": "100",
    "Effect": "Holds up to 20 Sensor Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 596,
    "Full Name": "Sensor Drone Bay"
  },
  "Hacking Drone Bay": {
    "Slot": "Utility",
    "Name": "Hacking Drone Bay",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Coverage": "60",
    "Effect": "Holds 1 Hacking Drone. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nHacking Drones automatically attempt to perform useful hacks on any Terminals in your view, and will always stop before their actions are traced.",
    "Index": 597,
    "Full Name": "Hacking Drone Bay"
  },
  "Minesniffer Drone Bay": {
    "Slot": "Utility",
    "Name": "Minesniffer Drone Bay",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "100",
    "Effect": "Holds up to 10 Minesniffer Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nMinesniffer Drones automatically attempt to retrieve known hostile traps in your view which they are able to extract, and also seek out hidden traps.",
    "Index": 598,
    "Full Name": "Minesniffer Drone Bay"
  },
  "Army-in-a-Box": {
    "Slot": "Utility",
    "Name": "Army-in-a-Box",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "6",
    "Mass": "80",
    "Integrity": "1000",
    "Coverage": "600",
    "Effect": "Holds up to 30 Army Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nArmy Drones receive a randomized loadout on deployment.",
    "Index": 599,
    "Full Name": "Army-in-a-Box"
  },
  "Wardrone Bay": {
    "Slot": "Utility",
    "Name": "Wardrone Bay",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "8",
    "Mass": "50",
    "Integrity": "2750",
    "Coverage": "1600",
    "Effect": "Holds 1 Wardrone. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 600,
    "Full Name": "Wardrone Bay"
  },
  "Bomb Factory No. 2": {
    "Slot": "Utility",
    "Name": "Bomb Factory No. 2",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "30",
    "Integrity": "400",
    "Coverage": "200",
    "Effect": "Fabricates a Dirty Bomb Trap at a rate of 1 per 25 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "10",
    "Matter Upkeep": "2",
    "Heat Generation": "10",
    "Index": 601,
    "Full Name": "Bomb Factory No. 2"
  },
  "Mobile Assembly Unit": {
    "Slot": "Utility",
    "Name": "Mobile Assembly Unit",
    "Type": "Device",
    "Rating": "4",
    "Size": "4",
    "Mass": "40",
    "Integrity": "200",
    "Coverage": "400",
    "Effect": "Fabricates a random Assembled at a rate of 1 per 10 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "10",
    "Matter Upkeep": "1",
    "Heat Generation": "10",
    "Index": 602,
    "Full Name": "Mobile Assembly Unit"
  },
  "Heart of Steel": {
    "Slot": "Utility",
    "Name": "Heart of Steel",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "60",
    "Effect": "Undergoes a transformaton after remaining active for 200 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "10",
    "Matter Upkeep": "10",
    "Index": 603,
    "Full Name": "Heart of Steel"
  },
  "GOLEM Unit": {
    "Slot": "Utility",
    "Name": "GOLEM Unit",
    "Type": "Device",
    "Rating": "8",
    "Size": "2",
    "Mass": "1",
    "Integrity": "200",
    "Coverage": "30",
    "Effect": "Autonomous self-powered unit capable of building and maintaining a complete Golem. Construction requires approximately 900 turns.",
    "Index": 604,
    "Full Name": "GOLEM Unit"
  },
  "PSU Rigger": {
    "Slot": "Utility",
    "Name": "PSU Rigger",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "15",
    "Effect": "Stand on a power source and use > or right-click on self to convert it into a proximity mine that detonates when any enemy moves adjacent to it. Rigging requires 5 matter.",
    "Index": 605,
    "Full Name": "PSU Rigger"
  },
  "Phasing AFG": {
    "Slot": "Utility",
    "Name": "Phasing AFG",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "20",
    "Integrity": "240",
    "Coverage": "50",
    "Effect": "Attracts any loose items within a range of 16, even if they have to be drawn through solid materials to arrive. Each turn the process damages each item it affects by 1% of max integrity or 1, whichever is greater.",
    "Energy Upkeep": "30",
    "Index": 606,
    "Full Name": "Phasing AFG"
  },
  "AS-neutralizer No. 17b": {
    "Slot": "Utility",
    "Name": "AS-neutralizer No. 17b",
    "Type": "Device",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "80",
    "Coverage": "60",
    "Effect": "Every 5 turns emits a powerful signal tuned to power down all Assembled within a range of 16.",
    "Energy Upkeep": "5",
    "Index": 607,
    "Full Name": "AS-neutralizer No. 17b"
  },
  "Chronowheel": {
    "Slot": "Utility",
    "Name": "Chronowheel",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "10",
    "Effect": "Sets a temporal reversion point when attached, then loses 1 integrity per turn. Once integrity is depleted naturally, you are forced back to that point in time. If destroyed prematurely the reversion will not occur.",
    "Index": 608,
    "Full Name": "Chronowheel"
  },
  "Dimensional Node Initializer": {
    "Slot": "Utility",
    "Name": "Dimensional Node Initializer",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Initializes a dimensional slip node at the current position. Transdimensional reconstruction automatically targets the nearest active slip node, regardless of distance.\n <consumed>",
    "Index": 609,
    "Full Name": "Dimensional Node Initializer"
  },
  "Transdimensional Reconstructor": {
    "Slot": "Utility",
    "Name": "Transdimensional Reconstructor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Teleports the user to an approximate distance of 32 from current position, traveling along dimensional pathways of least resistance.\n <consumed>",
    "Index": 610,
    "Full Name": "Transdimensional Reconstructor"
  },
  "Hpw. Transdimensional Reconstructor": {
    "Slot": "Utility",
    "Name": "Hpw. Transdimensional Reconstructor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Teleports the user to an approximate distance of 64 from current position, traveling along dimensional pathways of least resistance.\n <consumed>",
    "Index": 611,
    "Full Name": "High-powered Transdimensional Reconstructor"
  },
  "Core Expander": {
    "Slot": "Utility",
    "Name": "Core Expander",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Evolves a new slot of a random type.",
    "Index": 612,
    "Full Name": "Core Expander"
  },
  "Core Regenerator": {
    "Slot": "Utility",
    "Name": "Core Regenerator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Restores 25% of core integrity.\n <consumed>",
    "Index": 613,
    "Full Name": "Core Regenerator"
  },
  "Integrity Redistributor": {
    "Slot": "Utility",
    "Name": "Integrity Redistributor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Drains a core at or above half integrity to restore integrity of all attached parts at a 1:6 ratio. Process is reversed for cores below half integrity.\n <consumed>",
    "Index": 614,
    "Full Name": "Integrity Redistributor"
  },
  "Integrated Dissipator": {
    "Slot": "Utility",
    "Name": "Integrated Dissipator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core heat dissipation by 20.\n <consumed>",
    "Index": 615,
    "Full Name": "Integrated Dissipator"
  },
  "Supercharged Integrated Dissipator": {
    "Slot": "Utility",
    "Name": "Supercharged Integrated Dissipator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core heat dissipation by 40.\n <consumed>",
    "Index": 616,
    "Full Name": "Supercharged Integrated Dissipator"
  },
  "Integrated Thermoelectric Network": {
    "Slot": "Utility",
    "Name": "Integrated Thermoelectric Network",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Converts all heat above 250 to energy every turn at a 3:1 ratio.\n <consumed>",
    "Index": 617,
    "Full Name": "Integrated Thermoelectric Network"
  },
  "Integrated Reactor": {
    "Slot": "Utility",
    "Name": "Integrated Reactor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core energy generation by 10.\n <consumed>",
    "Index": 618,
    "Full Name": "Integrated Reactor"
  },
  "Supercharged Integrated Reactor": {
    "Slot": "Utility",
    "Name": "Supercharged Integrated Reactor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core energy generation by 15.\n <consumed>",
    "Index": 619,
    "Full Name": "Supercharged Integrated Reactor"
  },
  "Integrated Mediator": {
    "Slot": "Utility",
    "Name": "Integrated Mediator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Energy and matter required for part attachment permanently reduced by 50%. Also enables 50% chance to avoid negative effects of attaching a faulty prototype or corrupted part, but this feature requires 20 matter to take effect.\n <no_stack>",
    "Index": 620,
    "Full Name": "Integrated Mediator"
  },
  "Core Membrane": {
    "Slot": "Utility",
    "Name": "Core Membrane",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Provides permanent immunity against system corruption.\n <consumed>",
    "Index": 621,
    "Full Name": "Core Membrane"
  },
  "Navigation Efficiency Matrix": {
    "Slot": "Utility",
    "Name": "Navigation Efficiency Matrix",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Upgrades subspace navigation controls.\n <consumed>",
    "Index": 622,
    "Full Name": "Navigation Efficiency Matrix"
  },
  "Core Reset Matrix": {
    "Slot": "Utility",
    "Name": "Core Reset Matrix",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Removes all corruption and wipes entire memory, including part knowledge, robot analysis, schematics, and map data. Also restores knowledge of alien technology.\n <consumed>",
    "Index": 623,
    "Full Name": "Core Reset Matrix"
  },
  "Subatomic Replicator": {
    "Slot": "Utility",
    "Name": "Subatomic Replicator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Duplicates object at current location.\n <consumed>",
    "Index": 624,
    "Full Name": "Subatomic Replicator"
  },
  "Terrabomb": {
    "Slot": "Utility",
    "Name": "Terrabomb",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Destroys all walls and earth up to a distance of 20 without affecting other materials.\n <consumed>",
    "Index": 625,
    "Full Name": "Terrabomb"
  },
  "Core Physics Calibrator": {
    "Slot": "Utility",
    "Name": "Core Physics Calibrator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "5",
    "Effect": "Enables greater freedom during assignment of evolution parameters.",
    "Index": 626,
    "Full Name": "Core Physics Calibrator"
  },
  "Spacefold Activator": {
    "Slot": "Utility",
    "Name": "Spacefold Activator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "250",
    "Coverage": "15",
    "Effect": "Move through up to 3 consecutive solid objects to the first open space on the other side, in the process taking core integrity damage equivalent to 1% of maximum for each space traveled.",
    "Index": 627,
    "Full Name": "Spacefold Activator"
  },
  "Microwarp Drive": {
    "Slot": "Utility",
    "Name": "Microwarp Drive",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "6",
    "Integrity": "400",
    "Coverage": "100",
    "Effect": "Warp across any number of open spaces nearly instantly, taking 2 damage to core integrity for each space traveled.",
    "Index": 628,
    "Full Name": "Microwarp Drive"
  },
  "LC Capacitor": {
    "Slot": "Utility",
    "Name": "LC Capacitor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "3",
    "Mass": "15",
    "Integrity": "250",
    "Coverage": "90",
    "Energy Upkeep": "5",
    "Index": 629,
    "Full Name": "LC Capacitor"
  },
  "LRC Armor": {
    "Slot": "Utility",
    "Name": "LRC Armor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "250",
    "Coverage": "600",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases maximum core integrity by 250.\n <consumed>",
    "Index": 630,
    "Full Name": "LRC Armor"
  },
  "LRC Storage": {
    "Slot": "Utility",
    "Name": "LRC Storage",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases inventory capacity by 2.\n <consumed>",
    "Index": 631,
    "Full Name": "LRC Storage"
  },
  "LRC Energy Well": {
    "Slot": "Utility",
    "Name": "LRC Energy Well",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases energy capacity by 250.\n <consumed>",
    "Index": 632,
    "Full Name": "LRC Energy Well"
  },
  "LRC Matter Compressor": {
    "Slot": "Utility",
    "Name": "LRC Matter Compressor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases matter storage capacity by 125.\n <consumed>",
    "Index": 633,
    "Full Name": "LRC Matter Compressor"
  },
  "LRC Boosters": {
    "Slot": "Utility",
    "Name": "LRC Boosters",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases mass support by 10 (regardless of propulsion).\n <consumed>",
    "Index": 634,
    "Full Name": "LRC Boosters"
  },
  "LRC Insulator": {
    "Slot": "Utility",
    "Name": "LRC Insulator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently sets base electromagnetic damage resistance to 25%, if not already better.\n <consumed>",
    "Index": 635,
    "Full Name": "LRC Insulator"
  },
  "EM Pulse Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EM Pulse Gun",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "45",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "16",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 636,
    "Full Name": "EM Pulse Gun"
  },
  "Hvy. EM Pulse Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. EM Pulse Gun",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "20",
    "Shot Heat": "45",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 637,
    "Full Name": "Heavy EM Pulse Gun"
  },
  "EM Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EM Shotgun",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "8",
    "Shot Energy": "20",
    "Shot Heat": "45",
    "Projectile Count": "2",
    "Damage Min": "7",
    "Damage Max": "9",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "2",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 638,
    "Full Name": "EM Shotgun"
  },
  "Imp. EM Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. EM Shotgun",
    "Type": "Energy Gun",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "100",
    "Range": "8",
    "Shot Energy": "20",
    "Shot Heat": "45",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "10",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "3",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 639,
    "Full Name": "Improved EM Shotgun"
  },
  "Shock Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shock Rifle",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "16",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 640,
    "Full Name": "Shock Rifle"
  },
  "Riot Gun": {
    "Slot": "Weapon",
    "Name": "Riot Gun",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "28",
    "Shot Heat": "50",
    "Targeting": "-5",
    "Projectile Count": "2",
    "Damage Min": "8",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 641,
    "Full Name": "Riot Gun"
  },
  "Hvy. EM Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. EM Shotgun",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "24",
    "Shot Heat": "50",
    "Projectile Count": "2",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 642,
    "Full Name": "Heavy EM Shotgun"
  },
  "Lightning Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lightning Gun",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "28",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "8",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 643,
    "Full Name": "Lightning Gun"
  },
  "Hvy. Riot Gun": {
    "Slot": "Weapon",
    "Name": "Hvy. Riot Gun",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "65",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "32",
    "Shot Heat": "60",
    "Targeting": "-5",
    "Projectile Count": "2",
    "Damage Min": "8",
    "Damage Max": "13",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 644,
    "Full Name": "Heavy Riot Gun"
  },
  "Arc Projector": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Arc Projector",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "28",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Damage Min": "8",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "25",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 645,
    "Full Name": "Arc Projector"
  },
  "Prc. Shock Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Shock Rifle",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "28",
    "Shot Heat": "55",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 646,
    "Full Name": "Precision Shock Rifle"
  },
  "Hpw. Shock Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hpw. Shock Rifle",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "65",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "32",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "21",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "2",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 647,
    "Full Name": "High-powered Shock Rifle"
  },
  "Arc Thrower": {
    "Slot": "Weapon",
    "Name": "Arc Thrower",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "40",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "36",
    "Shot Heat": "70",
    "Projectile Count": "3",
    "Damage Min": "4",
    "Damage Max": "6",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "15",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 648,
    "Full Name": "Arc Thrower"
  },
  "Imp. Lightning Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Lightning Gun",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "90",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "32",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "23",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 649,
    "Full Name": "Improved Lightning Gun"
  },
  "Tesla Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tesla Rifle",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "75",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "19",
    "Damage Max": "23",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "2",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 650,
    "Full Name": "Tesla Rifle"
  },
  "Imp. Arc Projector": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Arc Projector",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "75",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "40",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 651,
    "Full Name": "Improved Arc Projector"
  },
  "Hvy. Tesla Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Tesla Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "40",
    "Shot Heat": "70",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "28",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "2",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 652,
    "Full Name": "Heavy Tesla Rifle"
  },
  "Hyp. EM Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Hyp. EM Gauss Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "22",
    "Shot Energy": "70",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "2",
    "Damage Type": "Electromagnetic",
    "Penetration": "100 / 80 / 60",
    "Spectrum": "Fine (100)",
    "Disruption": "60",
    "Salvage": "4",
    "Index": 653,
    "Full Name": "Hypervelocity EM Gauss Rifle"
  },
  "Imp. Arc Thrower": {
    "Slot": "Weapon",
    "Name": "Imp. Arc Thrower",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "48",
    "Shot Heat": "90",
    "Projectile Count": "5",
    "Damage Min": "4",
    "Damage Max": "6",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Wide (10)",
    "Disruption": "15",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 654,
    "Full Name": "Improved Arc Thrower"
  },
  "01-MTF's Shockpuncher": {
    "Slot": "Weapon",
    "Name": "01-MTF's Shockpuncher",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "100",
    "Range": "6",
    "Shot Energy": "60",
    "Shot Heat": "50",
    "Projectile Count": "2",
    "Damage Min": "15",
    "Damage Max": "25",
    "Damage Type": "Electromagnetic",
    "Critical": "5% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "50",
    "Salvage": "3",
    "Index": 655,
    "Full Name": "01-MTF's Shockpuncher"
  },
  "Gamma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gamma Rifle",
    "Type": "Energy Gun",
    "Rating": "8",
    "Size": "1",
    "Mass": "6",
    "Integrity": "85",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "44",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "25",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 656,
    "Full Name": "Gamma Rifle"
  },
  "Tachyon Dispersion Ray": {
    "Slot": "Weapon",
    "Name": "Tachyon Dispersion Ray",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "85",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "48",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Fine (100)",
    "Disruption": "80",
    "Salvage": "4",
    "Index": 657,
    "Full Name": "Tachyon Dispersion Ray"
  },
  "Immobilizer": {
    "Slot": "Weapon",
    "Name": "Immobilizer",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "70",
    "Coverage": "100",
    "Effect": "Disables one hover or flight propulsion component with each hit. No effect on targets with disruption immunity.",
    "Range": "14",
    "Shot Energy": "24",
    "Shot Heat": "80",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "3",
    "Damage Max": "6",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Index": 658,
    "Full Name": "Immobilizer"
  },
  "Modified EM Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Modified EM Gauss Rifle",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "120",
    "Coverage": "100",
    "Effect": "Performs a random hack on any standard 0b10 Swarmer, Cutter, Grunt, Brawler, Duelist, Sentry, Demolisher, Specialist, Hunter, Heavy, or Behemoth variant.\n <no_stack>",
    "Description": "V3-CT5 says this can hack standard 0b10 combat robots.",
    "Range": "22",
    "Shot Energy": "70",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "2",
    "Damage Type": "Electromagnetic",
    "Penetration": "100 / 80 / 60",
    "Spectrum": "Fine (100)",
    "Disruption": "60",
    "Salvage": "4",
    "Index": 659,
    "Full Name": "Modified EM Gauss Rifle"
  },
  "AWS/EX-DEC": {
    "Slot": "Weapon",
    "Name": "AWS/EX-DEC",
    "Type": "Energy Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "220",
    "Coverage": "200",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "10",
    "Targeting": "20",
    "Delay": "-100",
    "Projectile Count": "2",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "2",
    "Salvage": "1",
    "Index": 660,
    "Full Name": "AWS/EX-DEC"
  },
  "Enh. Gamma Rifle": {
    "Slot": "Weapon",
    "Name": "Enh. Gamma Rifle",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "44",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "33",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "6",
    "Salvage": "8",
    "Index": 661,
    "Full Name": "Enhanced Gamma Rifle"
  },
  "Med. Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Med. Laser",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "10",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "13",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 662,
    "Full Name": "Medium Laser"
  },
  "Sml. Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Sml. Laser",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "70",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "8",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 663,
    "Full Name": "Small Laser"
  },
  "Backup Laser I": {
    "Slot": "Weapon",
    "Name": "Backup Laser I",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "30",
    "Range": "10",
    "Shot Energy": "6",
    "Shot Heat": "30",
    "Projectile Count": "1",
    "Damage Min": "8",
    "Damage Max": "10",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 664,
    "Full Name": "Backup Laser I"
  },
  "Beam Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Beam Rifle",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "75",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "13",
    "Shot Heat": "56",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "15",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 665,
    "Full Name": "Beam Rifle"
  },
  "Particle Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Particle Gun",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "75",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "10",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "13",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 666,
    "Full Name": "Particle Gun"
  },
  "Spread Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Spread Laser",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "10",
    "Shot Energy": "16",
    "Shot Heat": "65",
    "Targeting": "-10",
    "Projectile Count": "6",
    "Damage Min": "3",
    "Damage Max": "5",
    "Damage Type": "Thermal",
    "Heat Transfer": "Minimal (5)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 667,
    "Full Name": "Spread Laser"
  },
  "Imp. Medium Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Medium Laser",
    "Type": "Energy Gun",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "8",
    "Shot Heat": "56",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 668,
    "Full Name": "Improved Medium Laser"
  },
  "Field Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Field Laser",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "15",
    "Shot Heat": "63",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 669,
    "Full Name": "Field Laser"
  },
  "Pulse Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Pulse Rifle",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "18",
    "Shot Heat": "63",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 670,
    "Full Name": "Pulse Rifle"
  },
  "Backup Laser III": {
    "Slot": "Weapon",
    "Name": "Backup Laser III",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "30",
    "Range": "14",
    "Shot Energy": "10",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 671,
    "Full Name": "Backup Laser III"
  },
  "Hvy. Particle Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Particle Gun",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 672,
    "Full Name": "Heavy Particle Gun"
  },
  "Prc. Beam Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Beam Rifle",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "61",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 673,
    "Full Name": "Precision Beam Rifle"
  },
  "Adv. Beam Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Beam Rifle",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "61",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 674,
    "Full Name": "Advanced Beam Rifle"
  },
  "Hvy. Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Laser",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "85",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "18",
    "Shot Heat": "69",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 675,
    "Full Name": "Heavy Laser"
  },
  "Gatling Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gatling Laser",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "85",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "20",
    "Shot Heat": "80",
    "Delay": "20",
    "Projectile Count": "3",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 676,
    "Full Name": "Gatling Laser"
  },
  "Cld. Pulse Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Pulse Rifle",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "20",
    "Shot Heat": "20",
    "Targeting": "10",
    "Overload Stability": "94%",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 677,
    "Full Name": "Cooled Pulse Rifle"
  },
  "Hpw. Field Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hpw. Field Laser",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "60",
    "Description": "1",
    "Range": "14",
    "Shot Energy": "20",
    "Shot Heat": "70",
    "Projectile Count": "23",
    "Damage Min": "26",
    "Damage Max": "Thermal",
    "Damage Type": "10% Burn",
    "Penetration": "Medium (37)",
    "Fabrication Number": "134/67/44",
    "Index": 678,
    "Full Name": "High-powered Field Laser"
  },
  "Imp. Spread Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Spread Laser",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "10",
    "Shot Energy": "16",
    "Shot Heat": "75",
    "Targeting": "-10",
    "Projectile Count": "6",
    "Damage Min": "5",
    "Damage Max": "7",
    "Damage Type": "Thermal",
    "Heat Transfer": "Minimal (5)",
    "Salvage": "-1",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 679,
    "Full Name": "Improved Spread Laser"
  },
  "Mak. Laser": {
    "Slot": "Weapon",
    "Name": "Mak. Laser",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "40",
    "Range": "12",
    "Shot Energy": "16",
    "Shot Heat": "50",
    "Overload Stability": "70%",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "15% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 680,
    "Full Name": "Makshift Laser"
  },
  "Plasma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Rifle",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "20",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "23",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 681,
    "Full Name": "Plasma Rifle"
  },
  "Thermic Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Thermic Laser",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "18",
    "Shot Heat": "85",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "20% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 682,
    "Full Name": "Thermic Laser"
  },
  "Beamcaster": {
    "Slot": "Weapon",
    "Name": "Beamcaster",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "20",
    "Shot Energy": "20",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 683,
    "Full Name": "Beamcaster"
  },
  "Force Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Force Rifle",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "20",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "10% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "152/76/50",
    "Index": 684,
    "Full Name": "Force Rifle"
  },
  "Imp. Heavy Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Laser",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "17",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 685,
    "Full Name": "Improved Heavy Laser"
  },
  "Storm Laser": {
    "Slot": "Weapon",
    "Name": "Storm Laser",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "4",
    "Mass": "20",
    "Integrity": "480",
    "Coverage": "240",
    "Range": "14",
    "Shot Energy": "100",
    "Shot Heat": "250",
    "Targeting": "-20",
    "Delay": "200",
    "Projectile Count": "12",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 686,
    "Full Name": "Storm Laser"
  },
  "Zio. Laser-S": {
    "Slot": "Weapon",
    "Name": "Zio. Laser-S",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "15",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "25",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 687,
    "Full Name": "Zionite Laser-S"
  },
  "Wave Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Wave Gun",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "95",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "23",
    "Shot Heat": "81",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 688,
    "Full Name": "Wave Gun"
  },
  "Variable Charge Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Variable Charge Gun",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "95",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "23",
    "Shot Heat": "75",
    "Overload Stability": "95%",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 689,
    "Full Name": "Variable Charge Gun"
  },
  "Hvy. Beamcaster": {
    "Slot": "Weapon",
    "Name": "Hvy. Beamcaster",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "95",
    "Coverage": "60",
    "Range": "20",
    "Shot Energy": "23",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "24",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 690,
    "Full Name": "Heavy Beamcaster"
  },
  "Cld. Plasma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Plasma Rifle",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "23",
    "Shot Heat": "24",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 691,
    "Full Name": "Cooled Plasma Rifle"
  },
  "Enh. Force Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Force Rifle",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "23",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "25% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 692,
    "Full Name": "Enhanced Force Rifle"
  },
  "Hvy. Gatling Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Gatling Laser",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "100",
    "Delay": "20",
    "Projectile Count": "3",
    "Damage Min": "14",
    "Damage Max": "16",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 693,
    "Full Name": "Heavy Gatling Laser"
  },
  "Zio. Phaser-S": {
    "Slot": "Weapon",
    "Name": "Zio. Phaser-S",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "20",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "30",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "33",
    "Damage Type": "Phasic",
    "Critical": "7% Intensify",
    "Index": 694,
    "Full Name": "Zionite Phaser-S"
  },
  "Phase Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Phase Gun",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 695,
    "Full Name": "Phase Gun"
  },
  "Dispersion Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Dispersion Rifle",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "15% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 696,
    "Full Name": "Dispersion Rifle"
  },
  "Backup Laser VII": {
    "Slot": "Weapon",
    "Name": "Backup Laser VII",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "30",
    "Range": "14",
    "Shot Energy": "18",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 697,
    "Full Name": "Backup Laser VII"
  },
  "Plasma Storm": {
    "Slot": "Weapon",
    "Name": "Plasma Storm",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "5",
    "Mass": "25",
    "Integrity": "600",
    "Coverage": "300",
    "Description": "Thermal explosion at targets inflict 23-27 damage with a radius of 2 (falloff: 2). Low heat transfer.",
    "Range": "16",
    "Shot Energy": "120",
    "Shot Heat": "300",
    "Delay": "100",
    "Arc": "30",
    "Projectile Count": "10",
    "Damage Min": "2",
    "Damage Max": "6",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Explosion Radius": "2",
    "Explosion Damage Min": "23",
    "Explosion Damage Max": "27",
    "Falloff": "2",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Low (25)",
    "Index": 698,
    "Full Name": "Plasma Storm"
  },
  "Adv. Plasma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Plasma Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "29",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 699,
    "Full Name": "Advanced Plasma Rifle"
  },
  "Hvy. Wave Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Wave Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "140",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 700,
    "Full Name": "Heavy Wave Gun"
  },
  "Adv. Variable Charge Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Variable Charge Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "140",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "25",
    "Shot Heat": "80",
    "Overload Stability": "95%",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "40",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 701,
    "Full Name": "Advanced Variable Charge Gun"
  },
  "Cld. Phase Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Phase Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "140",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "26",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 702,
    "Full Name": "Cooled Phase Gun"
  },
  "Lrn. Gatling Laser": {
    "Slot": "Weapon",
    "Name": "Lrn. Gatling Laser",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "60",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "110",
    "Delay": "40",
    "Projectile Count": "3",
    "Damage Min": "15",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 703,
    "Full Name": "Long-range Gatling Laser"
  },
  "Warp Gun": {
    "Slot": "Weapon",
    "Name": "Warp Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "25",
    "Shot Heat": "90",
    "Waypoints": "1",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "10% Destroy",
    "Heat Transfer": "Medium (37)",
    "Index": 704,
    "Full Name": "Warp Gun"
  },
  "Vortex Rifle": {
    "Slot": "Weapon",
    "Name": "Vortex Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "60",
    "Special Trait": "Unstable (35)",
    "Range": "22",
    "Shot Energy": "10",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "60",
    "Damage Type": "Entropic",
    "Critical": "5% Detonate",
    "Salvage": "-10",
    "Index": 705,
    "Full Name": "Vortex Rifle"
  },
  "Zio. Laser-M": {
    "Slot": "Weapon",
    "Name": "Zio. Laser-M",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "17",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "30",
    "Shot Heat": "73",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "35",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 706,
    "Full Name": "Zionite Laser-M"
  },
  "AWS/Thermal": {
    "Slot": "Weapon",
    "Name": "AWS/Thermal",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "300",
    "Coverage": "120",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "14",
    "Targeting": "30",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "32",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 707,
    "Full Name": "AWS/Thermal"
  },
  "PD Laser": {
    "Slot": "Weapon",
    "Name": "PD Laser",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "3",
    "Mass": "10",
    "Integrity": "150",
    "Coverage": "180",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Range": "10",
    "Shot Energy": "70",
    "Shot Heat": "100",
    "Targeting": "-20",
    "Projectile Count": "3",
    "Damage Min": "25",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 708,
    "Full Name": "PD Laser"
  },
  "Quantum Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Quantum Rifle",
    "Type": "Energy Gun",
    "Rating": "8",
    "Size": "1",
    "Mass": "6",
    "Integrity": "105",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "94",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 709,
    "Full Name": "Quantum Rifle"
  },
  "Prc. Phase Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Phase Gun",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "94",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 710,
    "Full Name": "Precision Phase Gun"
  },
  "Hvy. Dispersion Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Dispersion Rifle",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "150",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "94",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Critical": "25% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 711,
    "Full Name": "Heavy Dispersion Rifle"
  },
  "Vortex Shotgun": {
    "Slot": "Weapon",
    "Name": "Vortex Shotgun",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "60",
    "Special Trait": "Unstable (50)",
    "Range": "18",
    "Shot Energy": "15",
    "Shot Heat": "60",
    "Targeting": "-10",
    "Projectile Count": "3",
    "Damage Min": "25",
    "Damage Max": "30",
    "Damage Type": "Entropic",
    "Critical": "5% Detonate",
    "Salvage": "-5",
    "Index": 712,
    "Full Name": "Vortex Shotgun"
  },
  "Vortex Rail": {
    "Slot": "Weapon",
    "Name": "Vortex Rail",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "80",
    "Coverage": "60",
    "Special Trait": "Unstable (40)",
    "Range": "24",
    "Shot Energy": "12",
    "Shot Heat": "45",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "50",
    "Damage Type": "Entropic",
    "Critical": "20% Detonate",
    "Penetration": "80 / 65 / 50 / 35",
    "Salvage": "-10",
    "Index": 713,
    "Full Name": "Vortex Rail"
  },
  "Zio. Phaser-M": {
    "Slot": "Weapon",
    "Name": "Zio. Phaser-M",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "22",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "35",
    "Shot Heat": "73",
    "Projectile Count": "1",
    "Damage Min": "38",
    "Damage Max": "38",
    "Damage Type": "Phasic",
    "Critical": "7% Intensify",
    "Index": 714,
    "Full Name": "Zionite Phaser-M"
  },
  "Enh. Quantum Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Quantum Rifle",
    "Type": "Energy Gun",
    "Rating": "9",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "24",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "32",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 715,
    "Full Name": "Enhanced Quantum Rifle"
  },
  "Zio. Laser-H": {
    "Slot": "Weapon",
    "Name": "Zio. Laser-H",
    "Type": "Energy Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "20",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "35",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "38",
    "Damage Max": "41",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 716,
    "Full Name": "Zionite Laser-H"
  },
  "Hvy. Quantum Rifle": {
    "Slot": "Weapon",
    "Name": "Hvy. Quantum Rifle",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "180",
    "Coverage": "60",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "36",
    "Damage Max": "42",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 717,
    "Full Name": "Heavy Quantum Rifle"
  },
  "Zio. Phaser-H": {
    "Slot": "Weapon",
    "Name": "Zio. Phaser-H",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "25",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "40",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "44",
    "Damage Max": "44",
    "Damage Type": "Phasic",
    "Critical": "7% Intensify",
    "Index": 718,
    "Full Name": "Zionite Phaser-H"
  },
  "Gatling Beam": {
    "Slot": "Weapon",
    "Name": "Gatling Beam",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "170",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "42",
    "Shot Heat": "120",
    "Projectile Count": "3",
    "Damage Min": "20",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Index": 719,
    "Full Name": "Gatling Beam"
  },
  "Sigix Sheargun": {
    "Slot": "Weapon",
    "Name": "Sigix Sheargun",
    "Type": "Energy Gun",
    "Rating": "9**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "7",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "32",
    "Damage Type": "Slashing",
    "Critical": "4% Sever",
    "Penetration": "100",
    "Salvage": "2",
    "Index": 720,
    "Full Name": "Sigix Sheargun"
  },
  "Modified Sigix Sheargun": {
    "Slot": "Weapon",
    "Name": "Modified Sigix Sheargun",
    "Type": "Energy Gun",
    "Rating": "9**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "7",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "30",
    "Shot Heat": "80",
    "Delay": "-30",
    "Damage Min": "29",
    "Damage Max": "40",
    "Damage Type": "Slashing",
    "Critical": "4% Sever",
    "Penetration": "50",
    "Salvage": "2",
    "Index": 721,
    "Full Name": "Modified Sigix Sheargun"
  },
  "Lgt. EM Pulse Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. EM Pulse Cannon",
    "Type": "Energy Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "40",
    "Shot Heat": "56",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "4",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 722,
    "Full Name": "Light EM Pulse Cannon"
  },
  "EM Pulse Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EM Pulse Cannon",
    "Type": "Energy Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "48",
    "Shot Heat": "63",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "23",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "4",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 723,
    "Full Name": "EM Pulse Cannon"
  },
  "Imp. EM Pulse Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. EM Pulse Cannon",
    "Type": "Energy Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "56",
    "Shot Heat": "69",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "26",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 724,
    "Full Name": "Improved EM Pulse Cannon"
  },
  "Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "64",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "29",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 725,
    "Full Name": "Proton Cannon"
  },
  "Lrn. Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lrn. Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "72",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "31",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 726,
    "Full Name": "Long-range Proton Cannon"
  },
  "Disruptor Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Disruptor Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "72",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "16",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "30",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 727,
    "Full Name": "Disruptor Cannon"
  },
  "Hvy. Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "130",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "85",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Electromagnetic",
    "Critical": "4% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "6",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 728,
    "Full Name": "Heavy Proton Cannon"
  },
  "HERF Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "HERF Cannon",
    "Type": "Energy Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "11",
    "Integrity": "100",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "80",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 729,
    "Full Name": "HERF Cannon"
  },
  "Hvy. Disruptor Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Disruptor Cannon",
    "Type": "Energy Cannon",
    "Rating": "7",
    "Size": "2",
    "Mass": "16",
    "Integrity": "140",
    "Coverage": "200",
    "Range": "16",
    "Shot Energy": "100",
    "Shot Heat": "110",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "31",
    "Damage Type": "Electromagnetic",
    "Critical": "4% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "60",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 730,
    "Full Name": "Heavy Disruptor Cannon"
  },
  "Cld. Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "130",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "80",
    "Shot Heat": "40",
    "Overload Stability": "88%",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Electromagnetic",
    "Critical": "4% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 731,
    "Full Name": "Cooled Proton Cannon"
  },
  "Proton Burst Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Proton Burst Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "90",
    "Shot Heat": "100",
    "Targeting": "-10",
    "Delay": "25",
    "Projectile Count": "3",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "3",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 732,
    "Full Name": "Proton Burst Cannon"
  },
  "Com. HERF Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. HERF Cannon",
    "Type": "Energy Cannon",
    "Rating": "8",
    "Size": "1",
    "Mass": "7",
    "Integrity": "70",
    "Coverage": "30",
    "Range": "16",
    "Shot Energy": "88",
    "Shot Heat": "94",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "37",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 733,
    "Full Name": "Compact HERF Cannon"
  },
  "Latent Energy Streamer": {
    "Slot": "Weapon",
    "Name": "Latent Energy Streamer",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "90",
    "Effect": "Redirects latent energy from up to a range of 12, using no more than necessary to achieve average detonation power limit (100).",
    "Range": "18",
    "Shot Energy": "160",
    "Shot Heat": "60",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "4",
    "Damage Max": "8",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Wide (10)",
    "Explosion Radius": "4",
    "Explosion Damage Min": "90",
    "Explosion Damage Max": "110",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "1",
    "Explosion Salvage": "4",
    "Index": 734,
    "Full Name": "Latent Energy Streamer"
  },
  "NK-0LA's Tesla Doomcannon": {
    "Slot": "Weapon",
    "Name": "NK-0LA's Tesla Doomcannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "16",
    "Integrity": "300",
    "Coverage": "200",
    "Range": "18",
    "Shot Energy": "160",
    "Shot Heat": "110",
    "Targeting": "-10",
    "Projectile Count": "4",
    "Damage Min": "20",
    "Damage Max": "28",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Fine (100)",
    "Disruption": "4",
    "Salvage": "4",
    "Index": 735,
    "Full Name": "NK-0LA's Tesla Doomcannon"
  },
  "EMDS": {
    "Slot": "Weapon",
    "Name": "EMDS",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "140",
    "Coverage": "300",
    "Range": "22",
    "Shot Energy": "100",
    "Shot Matter": "10",
    "Shot Heat": "70",
    "Recoil": "6",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "45",
    "Damage Type": "Electromagnetic",
    "Critical": "20% Corrupt",
    "Penetration": "90",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Index": 736,
    "Full Name": "EMDS"
  },
  "Hpw. Disruptor Cannon": {
    "Slot": "Weapon",
    "Name": "Hpw. Disruptor Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "220",
    "Coverage": "200",
    "Range": "16",
    "Shot Energy": "120",
    "Shot Heat": "110",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "37",
    "Damage Type": "Electromagnetic",
    "Critical": "6% Corrupt",
    "Spectrum": "Fine (100)",
    "Disruption": "90",
    "Salvage": "4",
    "Index": 737,
    "Full Name": "High-powered Disruptor Cannon"
  },
  "Beam Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Beam Cannon",
    "Type": "Energy Cannon",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "100",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "12",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "17",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 738,
    "Full Name": "Beam Cannon"
  },
  "Particle Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Particle Cannon",
    "Type": "Energy Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "110",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "68",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "21",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 739,
    "Full Name": "Particle Cannon"
  },
  "Adv. Beam Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Beam Cannon",
    "Type": "Energy Cannon",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "130",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "13",
    "Shot Heat": "68",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "21",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 740,
    "Full Name": "Advanced Beam Cannon"
  },
  "Hvy. Particle Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Particle Cannon",
    "Type": "Energy Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "130",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "18",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 741,
    "Full Name": "Heavy Particle Cannon"
  },
  "Ion Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ion Cannon",
    "Type": "Energy Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "115",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "18",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "24",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 742,
    "Full Name": "Ion Cannon"
  },
  "Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "125",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "21",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 743,
    "Full Name": "Plasma Cannon"
  },
  "Hvy. Ion Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Ion Cannon",
    "Type": "Energy Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "8",
    "Integrity": "135",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "21",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "28",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 744,
    "Full Name": "Heavy Ion Cannon"
  },
  "Cld. Particle Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Particle Cannon",
    "Type": "Energy Cannon",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "21",
    "Shot Heat": "30",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "28",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 745,
    "Full Name": "Cooled Particle Cannon"
  },
  "Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "130",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "85",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "32",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 746,
    "Full Name": "Phase Cannon"
  },
  "Hvy. Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "10",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "33",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 747,
    "Full Name": "Heavy Plasma Cannon"
  },
  "Cld. Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "35",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Thermal",
    "Critical": "3% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 748,
    "Full Name": "Cooled Plasma Cannon"
  },
  "Com. Ion Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Ion Cannon",
    "Type": "Energy Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "160",
    "Coverage": "30",
    "Range": "18",
    "Shot Energy": "24",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "29",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 749,
    "Full Name": "Compact Ion Cannon"
  },
  "Ion Burst Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ion Burst Cannon",
    "Type": "Energy Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "170",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Recoil": "10",
    "Targeting": "-15",
    "Delay": "50",
    "Projectile Count": "3",
    "Damage Min": "20",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 750,
    "Full Name": "Ion Burst Cannon"
  },
  "Adv. Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "140",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "27",
    "Shot Heat": "98",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "35",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 751,
    "Full Name": "Advanced Plasma Cannon"
  },
  "Hvy. Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "10",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "27",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "36",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 752,
    "Full Name": "Heavy Phase Cannon"
  },
  "Neutron Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Neutron Cannon",
    "Type": "Energy Cannon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "14",
    "Shot Energy": "30",
    "Shot Heat": "90",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "35",
    "Damage Max": "40",
    "Damage Type": "Thermal",
    "Spectrum": "Narrow (50)",
    "Disruption": "8",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "169/84/56",
    "Index": 753,
    "Full Name": "Neutron Cannon"
  },
  "Matter Neutralizer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Matter Neutralizer",
    "Type": "Energy Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "10",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "30",
    "Shot Heat": "105",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "38",
    "Damage Type": "Thermal",
    "Critical": "6% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 754,
    "Full Name": "Matter Neutralizer"
  },
  "Hvy. Neutron Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Neutron Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "190",
    "Coverage": "80",
    "Range": "14",
    "Shot Energy": "33",
    "Shot Heat": "110",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "43",
    "Damage Type": "Thermal",
    "Spectrum": "Narrow (50)",
    "Disruption": "12",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "187/93/62",
    "Index": 755,
    "Full Name": "Heavy Neutron Cannon"
  },
  "Lrn. Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lrn. Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "185",
    "Coverage": "80",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "105",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "38",
    "Damage Type": "Thermal",
    "Critical": "3% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 756,
    "Full Name": "Long-range Phase Cannon"
  },
  "Cld. Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "180",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "30",
    "Shot Heat": "40",
    "Overload Stability": "92%",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "38",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 757,
    "Full Name": "Cooled Phase Cannon"
  },
  "Vortex Cannon": {
    "Slot": "Weapon",
    "Name": "Vortex Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "14",
    "Integrity": "130",
    "Coverage": "80",
    "Special Trait": "Unstable (26)",
    "Range": "22",
    "Shot Energy": "15",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "80",
    "Damage Type": "Entropic",
    "Critical": "50% Sunder",
    "Salvage": "-15",
    "Index": 758,
    "Full Name": "Vortex Cannon"
  },
  "Gui. Plasma Cannon": {
    "Slot": "Weapon",
    "Name": "Gui. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "130",
    "Coverage": "80",
    "Description": "Eventually breaks down. Recalibrators restore functionality, but breakdowns become increasingly frequent.",
    "Range": "18",
    "Shot Energy": "30",
    "Shot Heat": "120",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "40",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Index": 759,
    "Full Name": "Guided Plasma Cannon"
  },
  "Nova Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Nova Cannon",
    "Type": "Energy Cannon",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "155",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "33",
    "Shot Heat": "113",
    "Projectile Count": "1",
    "Damage Min": "37",
    "Damage Max": "42",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 760,
    "Full Name": "Nova Cannon"
  },
  "Imp. Matter Neutralizer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Matter Neutralizer",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "170",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "33",
    "Shot Heat": "113",
    "Projectile Count": "1",
    "Damage Min": "37",
    "Damage Max": "42",
    "Damage Type": "Thermal",
    "Critical": "8% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 761,
    "Full Name": "Improved Matter Neutralizer"
  },
  "Vortex Driver": {
    "Slot": "Weapon",
    "Name": "Vortex Driver",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "16",
    "Integrity": "150",
    "Coverage": "80",
    "Special Trait": "Unstable (30)",
    "Range": "24",
    "Shot Energy": "40",
    "Shot Heat": "100",
    "Projectile Count": "1",
    "Damage Min": "70",
    "Damage Max": "100",
    "Damage Type": "Entropic",
    "Critical": "75% Sunder",
    "Penetration": "90",
    "Salvage": "-20",
    "Index": 762,
    "Full Name": "Vortex Driver"
  },
  "Zio. Alpha Cannon": {
    "Slot": "Weapon",
    "Name": "Zio. Alpha Cannon",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "28",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "80",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "53",
    "Damage Max": "53",
    "Damage Type": "Phasic",
    "Critical": "5% Phase",
    "Index": 763,
    "Full Name": "Zionite Alpha Cannon"
  },
  "Asb. Focal Cannon": {
    "Slot": "Weapon",
    "Name": "Asb. Focal Cannon",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "24",
    "Shot Energy": "120",
    "Shot Heat": "25",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "60",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 764,
    "Full Name": "Assembled Focal Cannon"
  },
  "Enh. Nova Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Nova Cannon",
    "Type": "Energy Cannon",
    "Rating": "9",
    "Size": "1",
    "Mass": "13",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "120",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "45",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 765,
    "Full Name": "Enhanced Nova Cannon"
  },
  "Firepult": {
    "Slot": "Weapon",
    "Name": "Firepult",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "325",
    "Coverage": "160",
    "Description": "Thermal explosion at targets inflict 25-35 damage with a radius of 3 (falloff: 5). Massive heat transfer.",
    "Range": "18",
    "Shot Energy": "65",
    "Shot Heat": "250",
    "Arc": "20",
    "Projectile Count": "4",
    "Damage Min": "10",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Explosion Radius": "3",
    "Explosion Damage Min": "15",
    "Explosion Damage Max": "25",
    "Falloff": "5",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Index": 766,
    "Full Name": "Firepult"
  },
  "YOLO Cannon": {
    "Slot": "Weapon",
    "Name": "YOLO Cannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "18",
    "Integrity": "350",
    "Coverage": "160",
    "Description": "Thermal explosion inflicts 65-85 damage with a radius of 3 (falloff: 10). Massive heat transfer.",
    "Range": "18",
    "Shot Energy": "70",
    "Shot Heat": "100",
    "Recoil": "50",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Min": "75",
    "Damage Max": "150",
    "Damage Type": "Thermal",
    "Critical": "50% Meltdown",
    "Heat Transfer": "Massive (80)",
    "Salvage": "-10",
    "Explosion Radius": "3",
    "Explosion Damage Min": "65",
    "Explosion Damage Max": "85",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-8",
    "Index": 767,
    "Full Name": "YOLO Cannon"
  },
  "Potential Cannon": {
    "Slot": "Weapon",
    "Name": "Potential Cannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "25",
    "Integrity": "280",
    "Coverage": "160",
    "Description": "Thermal explosion inflicts 75-125 damage with a radius of 3 (falloff: 25). Massive heat transfer.",
    "Range": "18",
    "Shot Energy": "300",
    "Shot Heat": "200",
    "Recoil": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "100",
    "Damage Max": "200",
    "Damage Type": "Thermal",
    "Critical": "20% Meltdown",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Explosion Radius": "3",
    "Explosion Damage Min": "75",
    "Explosion Damage Max": "125",
    "Falloff": "25",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-10",
    "Index": 768,
    "Full Name": "Potential Cannon"
  },
  "Warp Cannon": {
    "Slot": "Weapon",
    "Name": "Warp Cannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "140",
    "Coverage": "80",
    "Description": "Eventually breaks down.",
    "Range": "16",
    "Shot Energy": "40",
    "Shot Heat": "100",
    "Waypoints": "1",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "50",
    "Damage Type": "Thermal",
    "Critical": "15% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Index": 769,
    "Full Name": "Warp Cannon"
  },
  "Cld. Nova Cannon": {
    "Slot": "Weapon",
    "Name": "Cld. Nova Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "240",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "50",
    "Overload Stability": "90%",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "45",
    "Damage Type": "Thermal",
    "Critical": "3% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Index": 770,
    "Full Name": "Cooled Nova Cannon"
  },
  "Null Cannon": {
    "Slot": "Weapon",
    "Name": "Null Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "60",
    "Shot Heat": "130",
    "Recoil": "10",
    "Projectile Count": "1",
    "Damage Min": "80",
    "Damage Max": "100",
    "Damage Type": "Thermal",
    "Critical": "10% Meltdown",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Index": 771,
    "Full Name": "Null Cannon"
  },
  "Imp. Potential Cannon": {
    "Slot": "Weapon",
    "Name": "Imp. Potential Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "320",
    "Coverage": "160",
    "Description": "Thermal explosion inflicts 90-130 damage with a radius of 3 (falloff: 20). Massive heat transfer.",
    "Range": "20",
    "Shot Energy": "350",
    "Shot Heat": "200",
    "Recoil": "20",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "120",
    "Damage Max": "200",
    "Damage Type": "Thermal",
    "Critical": "10% Meltdown",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Explosion Radius": "3",
    "Explosion Damage Min": "90",
    "Explosion Damage Max": "130",
    "Falloff": "20",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-10",
    "Index": 772,
    "Full Name": "Improved Potential Cannon"
  },
  "Disintegrator": {
    "Slot": "Weapon",
    "Name": "Disintegrator",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "250",
    "Coverage": "160",
    "Range": "5",
    "Shot Energy": "300",
    "Shot Heat": "200",
    "Targeting": "10",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "5",
    "Damage Type": "Thermal",
    "Critical": "25% Meltdown",
    "Penetration": "100 / 100 / 100 / 100",
    "Salvage": "20",
    "Index": 773,
    "Full Name": "Disintegrator"
  },
  "Core Cannon": {
    "Slot": "Weapon",
    "Name": "Core Cannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "350",
    "Coverage": "160",
    "Effect": "Core loses 10-30 integrity with each discharge.",
    "Range": "22",
    "Shot Energy": "300",
    "Shot Heat": "300",
    "Recoil": "20",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "200",
    "Damage Max": "200",
    "Damage Type": "Thermal",
    "Critical": "100% Destroy",
    "Penetration": "Unlimited",
    "Salvage": "-20",
    "Index": 774,
    "Full Name": "Core Cannon"
  },
  "Sigix Shearcannon": {
    "Slot": "Weapon",
    "Name": "Sigix Shearcannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "24",
    "Integrity": "350",
    "Coverage": "200",
    "Range": "18",
    "Shot Energy": "90",
    "Shot Heat": "180",
    "Arc": "10",
    "Projectile Count": "8",
    "Damage Min": "15",
    "Damage Max": "25",
    "Damage Type": "Slashing",
    "Critical": "4% Sever",
    "Penetration": "100",
    "Index": 775,
    "Full Name": "Sigix Shearcannon"
  },
  "Drained L-Cannon": {
    "Slot": "Weapon",
    "Name": "Drained L-Cannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "4",
    "Mass": "55",
    "Integrity": "1400",
    "Coverage": "480",
    "Description": "Incompatible with Quantum Capacitor, Weapon Cyclers, Energy Filters, and Particle Chargers/Accelerators.",
    "Range": "100000",
    "Shot Energy": "10000",
    "Shot Heat": "900",
    "Recoil": "50",
    "Targeting": "-20",
    "Delay": "1800",
    "Projectile Count": "1",
    "Damage Min": "5000",
    "Damage Max": "5000",
    "Damage Type": "Thermal",
    "Critical": "100% Phase",
    "Penetration": "Unlimited",
    "Salvage": "-100",
    "Index": 776,
    "Full Name": "Drained L-Cannon"
  },
  "L-Cannon": {
    "Slot": "Weapon",
    "Name": "L-Cannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "4",
    "Mass": "70",
    "Integrity": "1400",
    "Coverage": "480",
    "Description": "Incompatible with Quantum Capacitor, Weapon Cyclers, and Particle Chargers/Accelerators.",
    "Range": "100000",
    "Shot Heat": "900",
    "Recoil": "50",
    "Targeting": "-20",
    "Delay": "800",
    "Projectile Count": "1",
    "Damage Min": "5000",
    "Damage Max": "5000",
    "Damage Type": "Thermal",
    "Critical": "100% Phase",
    "Penetration": "Unlimited",
    "Salvage": "-100",
    "Index": 777,
    "Full Name": "L-Cannon"
  },
  "Zio. Alpha Cannon Mk. II": {
    "Slot": "Weapon",
    "Name": "Zio. Alpha Cannon Mk. II",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "30",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "90",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "65",
    "Damage Max": "65",
    "Damage Type": "Phasic",
    "Critical": "5% Phase",
    "Index": 778,
    "Full Name": "Zionite Alpha Cannon Mk. II"
  },
  "BFG-9k Vortex Edition": {
    "Slot": "Weapon",
    "Name": "BFG-9k Vortex Edition",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "6",
    "Mass": "50",
    "Integrity": "600",
    "Coverage": "480",
    "Special Trait": "Unstable (40)",
    "Range": "24",
    "Shot Energy": "200",
    "Shot Heat": "300",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "400",
    "Damage Max": "500",
    "Damage Type": "Entropic",
    "Critical": "90% Sunder",
    "Salvage": "-50",
    "Index": 779,
    "Full Name": "BFG-9k Vortex Edition"
  },
  "Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "20",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "15",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 780,
    "Full Name": "Assault Rifle"
  },
  "Lgt. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "1",
    "Shot Heat": "20",
    "Recoil": "1",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "6",
    "Damage Max": "10",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 781,
    "Full Name": "Light Assault Rifle"
  },
  "Hvy. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "115",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "23",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 782,
    "Full Name": "Heavy Assault Rifle"
  },
  "Autogun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Autogun",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "115",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "23",
    "Recoil": "2",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 783,
    "Full Name": "Autogun"
  },
  "Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shotgun",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "115",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "23",
    "Recoil": "6",
    "Targeting": "-5",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "12",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 784,
    "Full Name": "Shotgun"
  },
  "Battle Rifle": {
    "Slot": "Weapon",
    "Name": "Battle Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "25",
    "Recoil": "3",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 785,
    "Full Name": "Battle Rifle"
  },
  "Imp. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "23",
    "Recoil": "2",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 786,
    "Full Name": "Improved Assault Rifle"
  },
  "Minigun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Minigun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "2",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 787,
    "Full Name": "Minigun"
  },
  "Hpw. Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hpw. Shotgun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "12",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "8",
    "Targeting": "-10",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 788,
    "Full Name": "High-powered Shotgun"
  },
  "Barrage Gun": {
    "Slot": "Weapon",
    "Name": "Barrage Gun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "5",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 789,
    "Full Name": "Barrage Gun"
  },
  "Enh. Autogun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Autogun",
    "Type": "Ballistic Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "160",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "2",
    "Delay": "-40",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 790,
    "Full Name": "Enhanced Autogun"
  },
  "Gauss Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "3% Destroy",
    "Penetration": "65",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 791,
    "Full Name": "Gauss Rifle"
  },
  "Flak Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Flak Gun",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "2",
    "Shot Matter": "5",
    "Shot Heat": "28",
    "Recoil": "4",
    "Targeting": "-15",
    "Projectile Count": "6",
    "Damage Min": "5",
    "Damage Max": "6",
    "Damage Type": "Kinetic",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 792,
    "Full Name": "Flak Gun"
  },
  "Prc. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "160",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "2",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 793,
    "Full Name": "Precision Assault Rifle"
  },
  "Hvy. Battle Rifle": {
    "Slot": "Weapon",
    "Name": "Hvy. Battle Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "3",
    "Shot Heat": "33",
    "Recoil": "5",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Salvage": "-1",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 794,
    "Full Name": "Heavy Battle Rifle"
  },
  "Mak. Shrapnel Gun": {
    "Slot": "Weapon",
    "Name": "Mak. Shrapnel Gun",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "70",
    "Range": "14",
    "Shot Energy": "2",
    "Shot Matter": "5",
    "Shot Heat": "24",
    "Recoil": "6",
    "Targeting": "-10",
    "Projectile Count": "3",
    "Damage Min": "6",
    "Damage Max": "15",
    "Damage Type": "Kinetic",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 795,
    "Full Name": "Makshift Shrapnel Gun"
  },
  "Coil Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "60 / 30",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 796,
    "Full Name": "Coil Gun"
  },
  "Hyp. Gauss Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "140",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "33",
    "Recoil": "1",
    "Projectile Count": "1",
    "Damage Min": "6",
    "Damage Max": "7",
    "Damage Type": "Kinetic",
    "Critical": "35% Destroy",
    "Penetration": "100 / 65 / 35",
    "Salvage": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 797,
    "Full Name": "Hypervelocity Gauss Rifle"
  },
  "Hvy. Machine Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Machine Gun",
    "Type": "Ballistic Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "4",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 798,
    "Full Name": "Heavy Machine Gun"
  },
  "Imp. Heavy Machine Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Machine Gun",
    "Type": "Ballistic Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "15",
    "Recoil": "2",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 799,
    "Full Name": "Improved Heavy Machine Gun"
  },
  "Com. Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Com. Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "25",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "3% Destroy",
    "Penetration": "65",
    "Index": 800,
    "Full Name": "Compact Gauss Rifle"
  },
  "XL Autogun Subcomponent": {
    "Slot": "Weapon",
    "Name": "XL Autogun Subcomponent",
    "Type": "Ballistic Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "3",
    "Shot Heat": "20",
    "Recoil": "3",
    "Delay": "-50",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "22",
    "Damage Type": "Kinetic",
    "Index": 801,
    "Full Name": "XL Autogun Subcomponent"
  },
  "KE Penetrator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "KE Penetrator",
    "Type": "Ballistic Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "165",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "33",
    "Recoil": "3",
    "Projectile Count": "1",
    "Damage Min": "19",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 802,
    "Full Name": "KE Penetrator"
  },
  "Hyp. Coil Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "35",
    "Recoil": "1",
    "Projectile Count": "1",
    "Damage Min": "7",
    "Damage Max": "8",
    "Damage Type": "Kinetic",
    "Critical": "35% Destroy",
    "Penetration": "100 / 75 / 50",
    "Salvage": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 803,
    "Full Name": "Hypervelocity Coil Gun"
  },
  "Imp. KE Penetrator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. KE Penetrator",
    "Type": "Ballistic Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "33",
    "Recoil": "3",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "10% Destroy",
    "Penetration": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 804,
    "Full Name": "Improved KE Penetrator"
  },
  "Enh. Coil Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "10% Destroy",
    "Penetration": "60 / 30",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 805,
    "Full Name": "Enhanced Coil Gun"
  },
  "Com. Coil Gun": {
    "Slot": "Weapon",
    "Name": "Com. Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "25",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "35",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "60 / 30",
    "Index": 806,
    "Full Name": "Compact Coil Gun"
  },
  "Railgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Railgun",
    "Type": "Ballistic Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "175",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "35",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 807,
    "Full Name": "Railgun"
  },
  "Adv. KE Penetrator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. KE Penetrator",
    "Type": "Ballistic Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "200",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "3",
    "Shot Matter": "4",
    "Shot Heat": "35",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "20% Destroy",
    "Penetration": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 808,
    "Full Name": "Advanced KE Penetrator"
  },
  "Linked Autogun": {
    "Slot": "Weapon",
    "Name": "Linked Autogun",
    "Type": "Ballistic Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "190",
    "Coverage": "200",
    "Range": "14",
    "Shot Energy": "3",
    "Shot Matter": "10",
    "Shot Heat": "30",
    "Recoil": "4",
    "Targeting": "20",
    "Delay": "-100",
    "Projectile Count": "2",
    "Damage Min": "18",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Index": 809,
    "Full Name": "Linked Autogun"
  },
  "AWS/Gauss": {
    "Slot": "Weapon",
    "Name": "AWS/Gauss",
    "Type": "Ballistic Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "400",
    "Coverage": "200",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "20",
    "Targeting": "30",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Index": 810,
    "Full Name": "AWS/Gauss"
  },
  "Hyp. Railgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Railgun",
    "Type": "Ballistic Gun",
    "Rating": "8",
    "Size": "1",
    "Mass": "7",
    "Integrity": "175",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "40",
    "Recoil": "1",
    "Projectile Count": "1",
    "Damage Min": "8",
    "Damage Max": "9",
    "Damage Type": "Kinetic",
    "Critical": "40% Destroy",
    "Penetration": "80 / 65 / 50 / 50",
    "Salvage": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 811,
    "Full Name": "Hypervelocity Railgun"
  },
  "Helical Railgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Helical Railgun",
    "Type": "Ballistic Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "220",
    "Coverage": "100",
    "Range": "24",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "38",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "33",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "50 / 50",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 812,
    "Full Name": "Helical Railgun"
  },
  "Com. Railgun": {
    "Slot": "Weapon",
    "Name": "Com. Railgun",
    "Type": "Ballistic Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "25",
    "Range": "18",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "40",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Index": 813,
    "Full Name": "Compact Railgun"
  },
  "XL Autogun Array": {
    "Slot": "Weapon",
    "Name": "XL Autogun Array",
    "Type": "Ballistic Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "4",
    "Mass": "15",
    "Integrity": "840",
    "Coverage": "400",
    "Description": "Despite its high integrity, does not seem like it will hold up well against lots of wear and tear.",
    "Range": "20",
    "Shot Energy": "10",
    "Shot Matter": "15",
    "Shot Heat": "60",
    "Recoil": "10",
    "Delay": "-100",
    "Projectile Count": "4",
    "Damage Min": "20",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Index": 814,
    "Full Name": "XL Autogun Array"
  },
  "12-ASH's Boomstick": {
    "Slot": "Weapon",
    "Name": "12-ASH's Boomstick",
    "Type": "Ballistic Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "220",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "6",
    "Shot Heat": "20",
    "Recoil": "10",
    "Delay": "-40",
    "Projectile Count": "2",
    "Damage Min": "22",
    "Damage Max": "36",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Salvage": "-3",
    "Index": 815,
    "Full Name": "12-ASH's Boomstick"
  },
  "8R-AWN's Boregun": {
    "Slot": "Weapon",
    "Name": "8R-AWN's Boregun",
    "Type": "Ballistic Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "20",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "30",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "50% Destroy",
    "Penetration": "100 / 100",
    "Salvage": "4",
    "Index": 816,
    "Full Name": "8R-AWN's Boregun"
  },
  "Multirail": {
    "Slot": "Weapon",
    "Name": "Multirail",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "200",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "45",
    "Recoil": "8",
    "Projectile Count": "3",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Index": 817,
    "Full Name": "Multirail"
  },
  "Hyp. Multirail": {
    "Slot": "Weapon",
    "Name": "Hyp. Multirail",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "190",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "5",
    "Shot Matter": "6",
    "Shot Heat": "50",
    "Recoil": "10",
    "Projectile Count": "3",
    "Damage Min": "5",
    "Damage Max": "7",
    "Damage Type": "Kinetic",
    "Critical": "50% Destroy",
    "Penetration": "80 / 65 / 50 / 50",
    "Index": 818,
    "Full Name": "Hypervelocity Multirail"
  },
  "5H-AD0's Sniper Rifle": {
    "Slot": "Weapon",
    "Name": "5H-AD0's Sniper Rifle",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "250",
    "Coverage": "100",
    "Range": "24",
    "Shot Matter": "3",
    "Recoil": "20",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "70",
    "Damage Type": "Kinetic",
    "Critical": "6% Destroy",
    "Penetration": "100 / 90 / 60",
    "Index": 819,
    "Full Name": "5H-AD0's Sniper Rifle"
  },
  "A3's Sniper Rifle": {
    "Slot": "Weapon",
    "Name": "A3's Sniper Rifle",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "300",
    "Coverage": "100",
    "Range": "24",
    "Shot Energy": "10",
    "Shot Matter": "5",
    "Shot Heat": "30",
    "Recoil": "30",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "70",
    "Damage Type": "Kinetic",
    "Critical": "10% Destroy",
    "Penetration": "100 / 75 / 50 / 25",
    "Index": 820,
    "Full Name": "A3's Sniper Rifle"
  },
  "Lgt. Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "35",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-4",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 821,
    "Full Name": "Light Cannon"
  },
  "Imp. Light Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Light Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "135",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "39",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "24",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 822,
    "Full Name": "Improved Light Cannon"
  },
  "Battle Cannon": {
    "Slot": "Weapon",
    "Name": "Battle Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "39",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 823,
    "Full Name": "Battle Cannon"
  },
  "Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "44",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 824,
    "Full Name": "Assault Cannon"
  },
  "Hvy. Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "3",
    "Size": "2",
    "Mass": "12",
    "Integrity": "250",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "8",
    "Shot Heat": "60",
    "Recoil": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "64",
    "Damage Type": "Kinetic",
    "Critical": "15% Blast",
    "Penetration": "20",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 825,
    "Full Name": "Heavy Assault Cannon"
  },
  "Flak Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Flak Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "3",
    "Shot Matter": "6",
    "Shot Heat": "44",
    "Recoil": "6",
    "Targeting": "-15",
    "Projectile Count": "6",
    "Damage Min": "6",
    "Damage Max": "7",
    "Damage Type": "Kinetic",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 826,
    "Full Name": "Flak Cannon"
  },
  "Adv. Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "6",
    "Integrity": "160",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "31",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 827,
    "Full Name": "Advanced Assault Cannon"
  },
  "Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "170",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "31",
    "Damage Type": "Kinetic",
    "Critical": "15% Blast",
    "Penetration": "20",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 828,
    "Full Name": "Gauss Cannon"
  },
  "Slug Cannon": {
    "Slot": "Weapon",
    "Name": "Slug Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "165",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "6",
    "Targeting": "-20",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "45",
    "Damage Type": "Kinetic",
    "Critical": "20% Destroy",
    "Penetration": "10",
    "Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 829,
    "Full Name": "Slug Cannon"
  },
  "Mni. Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mni. Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "200",
    "Coverage": "30",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "31",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 830,
    "Full Name": "Mini Assault Cannon"
  },
  "Magnetic Acceleration Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Magnetic Acceleration Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "53",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 831,
    "Full Name": "Magnetic Acceleration Cannon"
  },
  "Hvy. Flak Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Flak Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "4",
    "Shot Matter": "7",
    "Shot Heat": "53",
    "Recoil": "6",
    "Targeting": "-15",
    "Projectile Count": "6",
    "Damage Min": "7",
    "Damage Max": "8",
    "Damage Type": "Kinetic",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 832,
    "Full Name": "Heavy Flak Cannon"
  },
  "Bore Cannon": {
    "Slot": "Weapon",
    "Name": "Bore Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "9",
    "Integrity": "165",
    "Coverage": "130",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "57",
    "Recoil": "6",
    "Targeting": "-20",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "60% Destroy",
    "Penetration": "60 / 40 / 20",
    "Salvage": "-4",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 833,
    "Full Name": "Bore Cannon"
  },
  "Antimatter Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Antimatter Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "240",
    "Coverage": "110",
    "Range": "24",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "40",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 834,
    "Full Name": "Antimatter Cannon"
  },
  "Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "195",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "57",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Penetration": "25",
    "Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 835,
    "Full Name": "Mass Driver"
  },
  "Hvy. Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "2",
    "Mass": "20",
    "Integrity": "270",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "8",
    "Shot Matter": "11",
    "Shot Heat": "75",
    "Recoil": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "50",
    "Damage Max": "85",
    "Damage Type": "Kinetic",
    "Critical": "15% Blast",
    "Penetration": "25",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 836,
    "Full Name": "Heavy Mass Driver"
  },
  "Enh. Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "195",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "7",
    "Shot Heat": "57",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "39",
    "Damage Type": "Kinetic",
    "Critical": "20% Blast",
    "Penetration": "20",
    "Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 837,
    "Full Name": "Enhanced Gauss Cannon"
  },
  "Hyp. Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "10",
    "Integrity": "175",
    "Coverage": "130",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "61",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "60% Destroy",
    "Penetration": "40 / 20",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 838,
    "Full Name": "Hypervelocity Gauss Cannon"
  },
  "Tri-rail Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tri-rail Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "200",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "8",
    "Shot Heat": "60",
    "Recoil": "6",
    "Projectile Count": "3",
    "Damage Min": "20",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "3% Blast",
    "Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 839,
    "Full Name": "Tri-rail Accelerator"
  },
  "Hardcell Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hardcell Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "10",
    "Integrity": "210",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "65",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "46",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 840,
    "Full Name": "Hardcell Cannon"
  },
  "Hvy. Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "210",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "61",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "20% Blast",
    "Penetration": "20",
    "Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 841,
    "Full Name": "Heavy Gauss Cannon"
  },
  "Hyp. Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "195",
    "Coverage": "130",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "66",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "70% Destroy",
    "Penetration": "50 / 25",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 842,
    "Full Name": "Hypervelocity Mass Driver"
  },
  "Hvy. Autocannon": {
    "Slot": "Weapon",
    "Name": "Hvy. Autocannon",
    "Type": "Ballistic Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "35",
    "Integrity": "450",
    "Coverage": "300",
    "Range": "24",
    "Shot Energy": "8",
    "Shot Matter": "18",
    "Shot Heat": "90",
    "Recoil": "8",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "90",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-10",
    "Index": 843,
    "Full Name": "Heavy Autocannon"
  },
  "Lgt. Antimatter Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. Antimatter Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "200",
    "Coverage": "70",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "60",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 844,
    "Full Name": "Light Antimatter Cannon"
  },
  "Linear Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "225",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "66",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "46",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 845,
    "Full Name": "Linear Accelerator"
  },
  "Hvy. Linear Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "8",
    "Size": "2",
    "Mass": "27",
    "Integrity": "350",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "9",
    "Shot Matter": "12",
    "Shot Heat": "83",
    "Recoil": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "65",
    "Damage Max": "90",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Penetration": "10",
    "Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 846,
    "Full Name": "Heavy Linear Accelerator"
  },
  "Com. Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "220",
    "Coverage": "40",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "66",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "49",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Penetration": "25",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 847,
    "Full Name": "Compact Mass Driver"
  },
  "Hvy. Hardcell Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Hardcell Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "400",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "8",
    "Shot Matter": "10",
    "Shot Heat": "80",
    "Recoil": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "100",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 848,
    "Full Name": "Heavy Hardcell Cannon"
  },
  "Com. Linear Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "240",
    "Coverage": "40",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "70",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "46",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 849,
    "Full Name": "Compact Linear Accelerator"
  },
  "Hyp. Linear Accelerator": {
    "Slot": "Weapon",
    "Name": "Hyp. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "17",
    "Integrity": "300",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "14",
    "Shot Matter": "10",
    "Shot Heat": "80",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "60% Destroy",
    "Penetration": "80 / 40",
    "Salvage": "-4",
    "Index": 850,
    "Full Name": "Hypervelocity Linear Accelerator"
  },
  "Hcl. Linear Accelerator": {
    "Slot": "Weapon",
    "Name": "Hcl. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "12",
    "Shot Matter": "8",
    "Shot Heat": "10",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "35",
    "Damage Max": "50",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-8",
    "Index": 851,
    "Full Name": "Hypercooled Linear Accelerator"
  },
  "Graviton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Graviton Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "300",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "70",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "60",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 852,
    "Full Name": "Graviton Cannon"
  },
  "Blast Cannon": {
    "Slot": "Weapon",
    "Name": "Blast Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "40",
    "Integrity": "600",
    "Coverage": "300",
    "Description": "Kinetic explosion inflicts 15-19 damage with a radius of 1 (falloff: 2).",
    "Range": "20",
    "Shot Energy": "12",
    "Shot Matter": "30",
    "Shot Heat": "120",
    "Recoil": "12",
    "Projectile Count": "3",
    "Damage Min": "25",
    "Damage Max": "40",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Penetration": "50",
    "Salvage": "-12",
    "Explosion Radius": "1",
    "Explosion Damage Min": "15",
    "Explosion Damage Max": "19",
    "Falloff": "2",
    "Explosion Type": "Kinetic",
    "Explosion Salvage": "-1",
    "Index": 853,
    "Full Name": "Blast Cannon"
  },
  "P1-3CE's Gatling Flakker": {
    "Slot": "Weapon",
    "Name": "P1-3CE's Gatling Flakker",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "425",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "12",
    "Shot Heat": "80",
    "Recoil": "10",
    "Projectile Count": "6",
    "Damage Min": "20",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Salvage": "-1",
    "Index": 854,
    "Full Name": "P1-3CE's Gatling Flakker"
  },
  "AWS/Autocannon": {
    "Slot": "Weapon",
    "Name": "AWS/Autocannon",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "60",
    "Integrity": "900",
    "Coverage": "360",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "24",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "70",
    "Damage Max": "100",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-10",
    "Index": 855,
    "Full Name": "AWS/Autocannon"
  },
  "Perforator": {
    "Slot": "Weapon",
    "Name": "Perforator",
    "Type": "Ballistic Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "400",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "40",
    "Shot Heat": "100",
    "Recoil": "10",
    "Targeting": "-20",
    "Delay": "100",
    "Projectile Count": "11",
    "Damage Min": "2",
    "Damage Max": "4",
    "Damage Type": "Kinetic",
    "Critical": "40% Destroy",
    "Penetration": "100 / 75 / 50",
    "Index": 856,
    "Full Name": "Perforator"
  },
  "Omega Cannon": {
    "Slot": "Weapon",
    "Name": "Omega Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "500",
    "Coverage": "220",
    "Range": "26",
    "Shot Energy": "30",
    "Shot Matter": "20",
    "Shot Heat": "100",
    "Recoil": "10",
    "Targeting": "20",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "80",
    "Damage Max": "120",
    "Damage Type": "Kinetic",
    "Critical": "20% Blast",
    "Salvage": "-20",
    "Index": 857,
    "Full Name": "Omega Cannon"
  },
  "EMP Blaster": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EMP Blaster",
    "Type": "Launcher",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "50",
    "Shot Matter": "4",
    "Shot Heat": "33",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "12",
    "Explosion Damage Max": "24",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Narrow (50)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 858,
    "Full Name": "EMP Blaster"
  },
  "Shock Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shock Bomb Launcher",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "60",
    "Shot Matter": "5",
    "Shot Heat": "36",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "14",
    "Explosion Damage Max": "26",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 859,
    "Full Name": "Shock Bomb Launcher"
  },
  "Adv. EMP Blaster": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. EMP Blaster",
    "Type": "Launcher",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "60",
    "Shot Matter": "5",
    "Shot Heat": "36",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "17",
    "Explosion Damage Max": "29",
    "Falloff": "4",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Narrow (50)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 860,
    "Full Name": "Advanced EMP Blaster"
  },
  "Proton Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Proton Missile Launcher",
    "Type": "Launcher",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "70",
    "Shot Matter": "5",
    "Shot Heat": "39",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "16",
    "Explosion Damage Max": "30",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 861,
    "Full Name": "Proton Missile Launcher"
  },
  "Imp. Proton Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Proton Missile Launcher",
    "Type": "Launcher",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "80",
    "Shot Matter": "6",
    "Shot Heat": "43",
    "Targeting": "15",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "17",
    "Explosion Damage Max": "33",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 862,
    "Full Name": "Improved Proton Missile Launcher"
  },
  "Gui. EMP Blaster": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gui. EMP Blaster",
    "Type": "Launcher",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "110",
    "Coverage": "220",
    "Range": "12",
    "Shot Energy": "90",
    "Shot Matter": "10",
    "Shot Heat": "50",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "14",
    "Explosion Damage Max": "26",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 863,
    "Full Name": "Guided EMP Blaster"
  },
  "Hvy. Shock Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Shock Bomb Launcher",
    "Type": "Launcher",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "95",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "90",
    "Shot Matter": "7",
    "Shot Heat": "46",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "36",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 864,
    "Full Name": "Heavy Shock Bomb Launcher"
  },
  "Tesla Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tesla Bomb Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "90",
    "Shot Matter": "7",
    "Shot Heat": "46",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "40",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 865,
    "Full Name": "Tesla Bomb Launcher"
  },
  "Hvy. Proton Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Proton Missile Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "100",
    "Shot Matter": "7",
    "Shot Heat": "40",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "36",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 866,
    "Full Name": "Heavy Proton Missile Launcher"
  },
  "Com. Tesla Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Tesla Bomb Launcher",
    "Type": "Launcher",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "110",
    "Coverage": "30",
    "Range": "12",
    "Shot Energy": "100",
    "Shot Matter": "8",
    "Shot Heat": "49",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "21",
    "Explosion Damage Max": "39",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 867,
    "Full Name": "Compact Tesla Bomb Launcher"
  },
  "Gamma Bomb Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gamma Bomb Array",
    "Type": "Launcher",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "110",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "140",
    "Shot Matter": "10",
    "Shot Heat": "80",
    "Targeting": "-10",
    "Arc": "30",
    "Projectile Count": "4",
    "Explosion Radius": "4",
    "Explosion Damage Min": "9",
    "Explosion Damage Max": "15",
    "Falloff": "2",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "3",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 868,
    "Full Name": "Gamma Bomb Array"
  },
  "Enh. Gamma Bomb Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Gamma Bomb Array",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "160",
    "Shot Matter": "12",
    "Shot Heat": "60",
    "Arc": "30",
    "Projectile Count": "4",
    "Explosion Radius": "4",
    "Explosion Damage Min": "11",
    "Explosion Damage Max": "17",
    "Falloff": "2",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "4",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 869,
    "Full Name": "Enhanced Gamma Bomb Array"
  },
  "Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Grenade Launcher",
    "Type": "Launcher",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "110",
    "Range": "10",
    "Shot Matter": "10",
    "Shot Heat": "30",
    "Targeting": "15",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 870,
    "Full Name": "Grenade Launcher"
  },
  "Rocket Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Rocket Launcher",
    "Type": "Launcher",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "11",
    "Shot Heat": "33",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-9",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 871,
    "Full Name": "Rocket Launcher"
  },
  "Mni. Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mni. Grenade Launcher",
    "Type": "Launcher",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "30",
    "Range": "10",
    "Shot Matter": "10",
    "Shot Heat": "30",
    "Targeting": "10",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-9",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 872,
    "Full Name": "Mini Grenade Launcher"
  },
  "Imp. Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Grenade Launcher",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "10",
    "Shot Matter": "13",
    "Shot Heat": "36",
    "Targeting": "15",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 873,
    "Full Name": "Improved Grenade Launcher"
  },
  "Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Missile Launcher",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "13",
    "Shot Heat": "36",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 874,
    "Full Name": "Missile Launcher"
  },
  "Concussive RPG": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Concussive RPG",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Special Trait": "Disposable (1)",
    "Description": "Robots within radius are knocked back 2-3 spaces. Projectile also inflicts 10-20 impact damage on direct hit.",
    "Range": "10",
    "Targeting": "-10",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Impact",
    "Explosion Radius": "4",
    "Explosion Damage Min": "15",
    "Explosion Damage Max": "29",
    "Falloff": "1",
    "Explosion Type": "Explosive",
    "Fabrication Number": "3",
    "Fabrication Time": "73/36/24",
    "Index": 875,
    "Full Name": "Concussive RPG"
  },
  "YI-UF0's Doublenader": {
    "Slot": "Weapon",
    "Name": "YI-UF0's Doublenader",
    "Type": "Launcher",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "25",
    "Shot Heat": "70",
    "Projectile Count": "2",
    "Explosion Radius": "4",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-8",
    "Index": 876,
    "Full Name": "YI-UF0's Doublenader"
  },
  "Hvy. Rocket Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Rocket Launcher",
    "Type": "Launcher",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "14",
    "Shot Heat": "39",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-11",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 877,
    "Full Name": "Heavy Rocket Launcher"
  },
  "Hvy. Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Missile Launcher",
    "Type": "Launcher",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "14",
    "Shot Heat": "39",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-11",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 878,
    "Full Name": "Heavy Missile Launcher"
  },
  "Gui. Missile Launcher": {
    "Slot": "Weapon",
    "Name": "Gui. Missile Launcher",
    "Type": "Launcher",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "15",
    "Shot Heat": "39",
    "Waypoints": "3",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Index": 879,
    "Full Name": "Guided Missile Launcher"
  },
  "Prc. Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Grenade Launcher",
    "Type": "Launcher",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "110",
    "Range": "10",
    "Shot Matter": "13",
    "Shot Heat": "36",
    "Targeting": "30",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 880,
    "Full Name": "Precision Grenade Launcher"
  },
  "Rocket Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Rocket Array",
    "Type": "Launcher",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "120",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "20",
    "Shot Heat": "45",
    "Delay": "100",
    "Arc": "36",
    "Projectile Count": "6",
    "Explosion Radius": "4",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "36",
    "Falloff": "4",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 881,
    "Full Name": "Rocket Array"
  },
  "Lrn. Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lrn. Missile Launcher",
    "Type": "Launcher",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "20",
    "Shot Matter": "15",
    "Shot Heat": "43",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 882,
    "Full Name": "Long-range Missile Launcher"
  },
  "Imp. Concussive RPG": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Concussive RPG",
    "Type": "Launcher",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "30",
    "Special Trait": "Disposable (1)",
    "Description": "Robots within radius are knocked back 3-4 spaces. Projectile also inflicts 12-28 impact damage on direct hit.",
    "Range": "10",
    "Targeting": "-10",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "28",
    "Damage Type": "Impact",
    "Explosion Radius": "5",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "36",
    "Falloff": "1",
    "Explosion Type": "Explosive",
    "Fabrication Number": "3",
    "Fabrication Time": "95/47/31",
    "Index": 883,
    "Full Name": "Improved Concussive RPG"
  },
  "Prc. Rocket Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Rocket Launcher",
    "Type": "Launcher",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "15",
    "Shot Heat": "43",
    "Targeting": "20",
    "Delay": "10",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 884,
    "Full Name": "Precision Rocket Launcher"
  },
  "Scatter Rocket Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Scatter Rocket Array",
    "Type": "Launcher",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "50",
    "Shot Heat": "50",
    "Targeting": "-30",
    "Delay": "150",
    "Arc": "44",
    "Projectile Count": "10",
    "Explosion Radius": "3",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "36",
    "Falloff": "4",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 885,
    "Full Name": "Scatter Rocket Array"
  },
  "Smartbomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Smartbomb Launcher",
    "Type": "Launcher",
    "Rating": "6",
    "Size": "2",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "16",
    "Shot Heat": "46",
    "Delay": "10",
    "Waypoints": "6",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-13",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 886,
    "Full Name": "Smartbomb Launcher"
  },
  "Mni. Smartbomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mni. Smartbomb Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "30",
    "Range": "16",
    "Shot Matter": "25",
    "Shot Heat": "80",
    "Delay": "30",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "40",
    "Explosion Damage Max": "80",
    "Falloff": "12",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 887,
    "Full Name": "Mini Smartbomb Launcher"
  },
  "Tiamat Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tiamat Missile Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "160",
    "Coverage": "110",
    "Range": "18",
    "Shot Matter": "25",
    "Shot Heat": "46",
    "Targeting": "30",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-13",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 888,
    "Full Name": "Tiamat Missile Launcher"
  },
  "Thermoblaster": {
    "Slot": "Weapon",
    "Name": "Thermoblaster",
    "Type": "Launcher",
    "Rating": "6",
    "Size": "1",
    "Mass": "8",
    "Integrity": "130",
    "Coverage": "110",
    "Range": "6",
    "Shot Energy": "85",
    "Shot Heat": "260",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "50",
    "Explosion Damage Max": "70",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-7",
    "Index": 889,
    "Full Name": "Thermoblaster"
  },
  "Micro-nuke Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Micro-nuke Launcher",
    "Type": "Launcher",
    "Rating": "7",
    "Size": "1",
    "Mass": "11",
    "Integrity": "105",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "18",
    "Shot Heat": "49",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-14",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 890,
    "Full Name": "Micro-nuke Launcher"
  },
  "Adv. Concussive RPG": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Concussive RPG",
    "Type": "Launcher",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "30",
    "Special Trait": "Disposable (1)",
    "Description": "Robots within radius are knocked back 4-5 spaces. Projectile also inflicts 14-36 impact damage on direct hit.",
    "Range": "10",
    "Targeting": "-10",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "36",
    "Damage Type": "Impact",
    "Explosion Radius": "5",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "43",
    "Falloff": "1",
    "Explosion Type": "Explosive",
    "Fabrication Number": "3",
    "Fabrication Time": "117/58/39",
    "Index": 891,
    "Full Name": "Advanced Concussive RPG"
  },
  "Neutron Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Neutron Missile Launcher",
    "Type": "Launcher",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "25",
    "Shot Heat": "49",
    "Targeting": "25",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Explosion Type": "Explosive",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "-14",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 892,
    "Full Name": "Neutron Missile Launcher"
  },
  "Fusion Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Fusion Bomb Launcher",
    "Type": "Launcher",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "115",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "19",
    "Shot Heat": "52",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 893,
    "Full Name": "Fusion Bomb Launcher"
  },
  "Hellfire Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hellfire Missile Launcher",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "16",
    "Shot Matter": "30",
    "Shot Heat": "60",
    "Targeting": "30",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "7",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-20",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 894,
    "Full Name": "Hellfire Missile Launcher"
  },
  "Adv. Micro-nuke Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Micro-nuke Launcher",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "16",
    "Shot Matter": "15",
    "Shot Heat": "30",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 895,
    "Full Name": "Advanced Micro-nuke Launcher"
  },
  "Tactical Quantum Warhead": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tactical Quantum Warhead",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "16",
    "Integrity": "150",
    "Coverage": "90",
    "Range": "20",
    "Shot Matter": "70",
    "Shot Heat": "20",
    "Targeting": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Explosion Radius": "10",
    "Explosion Damage Min": "60",
    "Explosion Damage Max": "80",
    "Falloff": "3",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-30",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 896,
    "Full Name": "Tactical Quantum Warhead"
  },
  "Vortex Catalyst Activator": {
    "Slot": "Weapon",
    "Name": "Vortex Catalyst Activator",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "200",
    "Coverage": "220",
    "Special Trait": "Unstable (10)",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "134",
    "Explosion Damage Max": "186",
    "Falloff": "7",
    "Explosion Type": "Entropic",
    "Explosion Salvage": "-30",
    "Index": 897,
    "Full Name": "Vortex Catalyst Activator"
  },
  "Chain Missile Launcher": {
    "Slot": "Weapon",
    "Name": "Chain Missile Launcher",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "25",
    "Integrity": "225",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "50",
    "Shot Heat": "160",
    "Delay": "100",
    "Projectile Count": "3",
    "Explosion Radius": "3",
    "Explosion Damage Min": "60",
    "Explosion Damage Max": "80",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Index": 898,
    "Full Name": "Chain Missile Launcher"
  },
  "Ragnarok Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ragnarok Missile Launcher",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "160",
    "Coverage": "110",
    "Range": "16",
    "Shot Matter": "35",
    "Shot Heat": "70",
    "Targeting": "30",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "70",
    "Explosion Damage Max": "130",
    "Falloff": "7",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-20",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 899,
    "Full Name": "Ragnarok Missile Launcher"
  },
  "Point Singularity Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Point Singularity Launcher",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "250",
    "Coverage": "90",
    "Range": "14",
    "Shot Matter": "50",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Explosion Radius": "3",
    "Explosion Damage Min": "120",
    "Explosion Damage Max": "200",
    "Falloff": "40",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-100",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 900,
    "Full Name": "Point Singularity Launcher"
  },
  "Gui. Micro-nuke Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gui. Micro-nuke Launcher",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "11",
    "Integrity": "140",
    "Coverage": "220",
    "Range": "20",
    "Shot Matter": "25",
    "Shot Heat": "55",
    "Delay": "20",
    "Waypoints": "9",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 901,
    "Full Name": "Guided Micro-nuke Launcher"
  },
  "99-TNT's Nukerbomber": {
    "Slot": "Weapon",
    "Name": "99-TNT's Nukerbomber",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "24",
    "Integrity": "280",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "66",
    "Shot Heat": "30",
    "Recoil": "15",
    "Arc": "20",
    "Projectile Count": "4",
    "Explosion Radius": "4",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-14",
    "Index": 902,
    "Full Name": "99-TNT's Nukerbomber"
  },
  "Z-bomb Delivery System": {
    "Slot": "Weapon",
    "Name": "Z-bomb Delivery System",
    "Type": "Launcher",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "16",
    "Integrity": "280",
    "Coverage": "90",
    "Range": "14",
    "Shot Matter": "100",
    "Shot Heat": "30",
    "Projectile Count": "1",
    "Explosion Radius": "2",
    "Explosion Damage Min": "250",
    "Explosion Damage Max": "250",
    "Falloff": "40",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-100",
    "Index": 903,
    "Full Name": "Z-bomb Delivery System"
  },
  "Sigix Terminator": {
    "Slot": "Weapon",
    "Name": "Sigix Terminator",
    "Type": "Launcher",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "20",
    "Integrity": "100",
    "Coverage": "220",
    "Special Trait": "Disposable (1)",
    "Range": "24",
    "Waypoints": "10",
    "Projectile Count": "1",
    "Explosion Radius": "20",
    "Explosion Damage Min": "1000",
    "Explosion Damage Max": "1000",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Deadly (120)",
    "Explosion Salvage": "-500",
    "Index": 904,
    "Full Name": "Sigix Terminator"
  },
  "Supercharged Sigix Terminator": {
    "Slot": "Weapon",
    "Name": "Supercharged Sigix Terminator",
    "Type": "Launcher",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "20",
    "Integrity": "100",
    "Coverage": "220",
    "Special Trait": "Disposable (1)",
    "Range": "24",
    "Waypoints": "10",
    "Projectile Count": "1",
    "Explosion Radius": "40",
    "Explosion Damage Min": "1500",
    "Explosion Damage Max": "1500",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Deadly (120)",
    "Explosion Salvage": "-500",
    "Index": 905,
    "Full Name": "Supercharged Sigix Terminator"
  },
  "Containment Facilitator": {
    "Slot": "Weapon",
    "Name": "Containment Facilitator",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "110",
    "Special Trait": "Disposable (1)",
    "Effect": "Holds targets in place. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "16",
    "Targeting": "20",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "1",
    "Explosion Damage Max": "1",
    "Explosion Type": "Special",
    "Index": 906,
    "Full Name": "Containment Facilitator"
  },
  "Dirty Datajack": {
    "Slot": "Weapon",
    "Name": "Dirty Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "10",
    "Special Trait": "Disposable (20)",
    "Effect": "Performs a random hack on any standard 0b10 Swarmer, Cutter, Grunt, Brawler, Duelist, Sentry, Demolisher, Specialist, Hunter, Heavy, or Behemoth variant.\n <no_stack>",
    "Range": "2",
    "Shot Energy": "15",
    "Shot Heat": "15",
    "Targeting": "20",
    "Delay": "-150",
    "Projectile Count": "1",
    "Damage Min": "1",
    "Damage Max": "3",
    "Damage Type": "Piercing",
    "Index": 907,
    "Full Name": "Dirty Datajack"
  },
  "Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "20",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Description": "Active melee Datajacks can be used in an attempt to disarm or reprogram known traps by moving into them (10% chance).",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "3",
    "Delay": "-50",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 908,
    "Full Name": "Datajack"
  },
  "Imp. Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "20",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Description": "Active melee Datajacks can be used in an attempt to disarm or reprogram known traps by moving into them (10% chance).",
    "Range": "2",
    "Shot Energy": "9",
    "Shot Heat": "5",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 909,
    "Full Name": "Improved Datajack"
  },
  "Adv. Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "20",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Description": "Active melee Datajacks can be used in an attempt to disarm or reprogram known traps by moving into them (10% chance).",
    "Range": "2",
    "Shot Energy": "12",
    "Shot Heat": "7",
    "Delay": "-150",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 910,
    "Full Name": "Advanced Datajack"
  },
  "Remote Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "12",
    "Shot Matter": "5",
    "Shot Heat": "5",
    "Targeting": "10",
    "Delay": "-50",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 911,
    "Full Name": "Remote Datajack"
  },
  "Imp. Remote Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "14",
    "Shot Matter": "7",
    "Shot Heat": "7",
    "Targeting": "20",
    "Delay": "-75",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 912,
    "Full Name": "Improved Remote Datajack"
  },
  "Adv. Remote Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "8",
    "Size": "1",
    "Mass": "5",
    "Integrity": "90",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "16",
    "Shot Matter": "10",
    "Shot Heat": "10",
    "Targeting": "20",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 913,
    "Full Name": "Advanced Remote Datajack"
  },
  "Exp. Remote Datajack": {
    "Slot": "Weapon",
    "Name": "Exp. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "16",
    "Shot Matter": "7",
    "Shot Heat": "7",
    "Targeting": "30",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 914,
    "Full Name": "Experimental Remote Datajack"
  },
  "Gui. Remote Datajack": {
    "Slot": "Weapon",
    "Name": "Gui. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "16",
    "Shot Matter": "10",
    "Shot Heat": "10",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 915,
    "Full Name": "Guided Remote Datajack"
  },
  "ME-RLN's Wand": {
    "Slot": "Weapon",
    "Name": "ME-RLN's Wand",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "200",
    "Coverage": "30",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "24",
    "Shot Matter": "2",
    "Shot Heat": "2",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 916,
    "Full Name": "ME-RLN's Wand"
  },
  "Field Lobotomy Kit": {
    "Slot": "Weapon",
    "Name": "Field Lobotomy Kit",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "130",
    "Coverage": "110",
    "Special Trait": "Disposable (5)",
    "Effect": "100% chance to instantly assimilate any robot without disruption immunity. No effect on unpowered, unconnected, or broken bots.",
    "Range": "16",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 917,
    "Full Name": "Field Lobotomy Kit"
  },
  "Mining Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mining Laser",
    "Type": "Special Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "2",
    "Shot Energy": "40",
    "Shot Heat": "100",
    "Targeting": "-20",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "24",
    "Damage Type": "Thermal",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 918,
    "Full Name": "Mining Laser"
  },
  "Welding Torch": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Welding Torch",
    "Type": "Special Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "20",
    "Targeting": "-20",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "4",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 919,
    "Full Name": "Welding Torch"
  },
  "Plasma Cutter": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Cutter",
    "Type": "Special Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "3",
    "Shot Energy": "16",
    "Shot Heat": "20",
    "Targeting": "-10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Critical": "5% Sever",
    "Heat Transfer": "Medium (37)",
    "Salvage": "15",
    "Fabrication Number": "3",
    "Fabrication Time": "62/31/20",
    "Index": 920,
    "Full Name": "Plasma Cutter"
  },
  "Imp. Plasma Cutter": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Plasma Cutter",
    "Type": "Special Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "3",
    "Shot Energy": "16",
    "Shot Heat": "20",
    "Targeting": "-10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "10% Sever",
    "Heat Transfer": "Medium (37)",
    "Salvage": "30",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 921,
    "Full Name": "Improved Plasma Cutter"
  },
  "Flamer": {
    "Slot": "Weapon",
    "Name": "Flamer",
    "Type": "Special Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "20",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Massive (80)",
    "Disruption": "25",
    "Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 922,
    "Full Name": "Flamer"
  },
  "Enh. Flamer": {
    "Slot": "Weapon",
    "Name": "Enh. Flamer",
    "Type": "Special Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "100",
    "Range": "6",
    "Shot Energy": "20",
    "Shot Heat": "80",
    "Targeting": "10",
    "Delay": "80",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Critical": "15% Burn",
    "Heat Transfer": "Massive (80)",
    "Disruption": "30",
    "Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 923,
    "Full Name": "Enhanced Flamer"
  },
  "Plasma Flamer": {
    "Slot": "Weapon",
    "Name": "Plasma Flamer",
    "Type": "Special Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Critical": "20% Burn",
    "Heat Transfer": "Massive (80)",
    "Disruption": "40",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 924,
    "Full Name": "Plasma Flamer"
  },
  "RU-N14's Throwing Claymores": {
    "Slot": "Weapon",
    "Name": "RU-N14's Throwing Claymores",
    "Type": "Special Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "150",
    "Coverage": "50",
    "Special Trait": "Disposable (10)",
    "Description": "Directional explosion with a 90-degree arc also inflicts 85-115 damage out to a distance of 7 (falloff: 7; salvage: -20).",
    "Range": "16",
    "Shot Energy": "30",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "45",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Explosion Radius": "7",
    "Explosion Damage Min": "85",
    "Explosion Damage Max": "115",
    "Falloff": "7",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-20",
    "Index": 925,
    "Full Name": "RU-N14's Throwing Claymores"
  },
  "RU-N14's Throwing Claymores v3": {
    "Slot": "Weapon",
    "Name": "RU-N14's Throwing Claymores v3",
    "Type": "Special Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "50",
    "Special Trait": "Disposable (10)",
    "Description": "Directional explosion with a 90-degree arc also inflicts 102-138 damage out to a distance of 8 (falloff: 8; salvage: -30).",
    "Range": "16",
    "Shot Energy": "40",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "60",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Explosion Radius": "8",
    "Explosion Damage Min": "102",
    "Explosion Damage Max": "138",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-30",
    "Index": 926,
    "Full Name": "RU-N14's Throwing Claymores v3"
  },
  "AD-0RF's Magmablaster": {
    "Slot": "Weapon",
    "Name": "AD-0RF's Magmablaster",
    "Type": "Special Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "10",
    "Shot Energy": "40",
    "Shot Heat": "220",
    "Targeting": "20",
    "Delay": "100",
    "Projectile Count": "4",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Disruption": "20",
    "Salvage": "-3",
    "Index": 927,
    "Full Name": "AD-0RF's Magmablaster"
  },
  "Stasis Beam": {
    "Slot": "Weapon",
    "Name": "Stasis Beam",
    "Type": "Special Weapon",
    "Rating": "8",
    "Size": "1",
    "Mass": "5",
    "Integrity": "70",
    "Coverage": "100",
    "Effect": "Holds target in place. Beam strength: 1. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "10",
    "Shot Energy": "40",
    "Targeting": "1000",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 928,
    "Full Name": "Stasis Beam"
  },
  "Stasis Projector": {
    "Slot": "Weapon",
    "Name": "Stasis Projector",
    "Type": "Special Weapon",
    "Rating": "9",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "100",
    "Effect": "Holds target in place. Beam strength: 2. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "12",
    "Shot Energy": "60",
    "Targeting": "1000",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 929,
    "Full Name": "Stasis Projector"
  },
  "Exp. Stasis Projector": {
    "Slot": "Weapon",
    "Name": "Exp. Stasis Projector",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "100",
    "Effect": "Holds target in place. Beam strength: 3. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "14",
    "Shot Energy": "60",
    "Targeting": "1000",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 930,
    "Full Name": "Experimental Stasis Projector"
  },
  "Molecular Deconstructor": {
    "Slot": "Weapon",
    "Name": "Molecular Deconstructor",
    "Type": "Special Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "6",
    "Integrity": "200",
    "Coverage": "220",
    "Description": "Delivers an entropy package to target, gradually eroding it from the inside out. Against robots causes a total 20-50 entropic damage, where salvage loss is equivalent to the amount of damage. Against terrain destroys the initial target while potentially spreading through adjacent connected terrain, disintegrating it.",
    "Range": "10",
    "Shot Energy": "100",
    "Shot Matter": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 931,
    "Full Name": "Molecular Deconstructor"
  },
  "Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hammer",
    "Type": "Impact Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "27",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 932,
    "Full Name": "Hammer"
  },
  "Mace": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mace",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "45",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 933,
    "Full Name": "Mace"
  },
  "Flail": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Flail",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "54",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 934,
    "Full Name": "Flail"
  },
  "Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Maul",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "54",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 935,
    "Full Name": "Maul"
  },
  "Hvy. Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Hammer",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "60",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 936,
    "Full Name": "Heavy Hammer"
  },
  "Hvy. Mace": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Mace",
    "Type": "Impact Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 937,
    "Full Name": "Heavy Mace"
  },
  "Hvy. Flail": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Flail",
    "Type": "Impact Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "72",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 938,
    "Full Name": "Heavy Flail"
  },
  "Great Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Great Maul",
    "Type": "Impact Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "4",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 939,
    "Full Name": "Great Maul"
  },
  "Powered Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Powered Hammer",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "6",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 940,
    "Full Name": "Powered Hammer"
  },
  "Mak. Hammer": {
    "Slot": "Weapon",
    "Name": "Mak. Hammer",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "6",
    "Targeting": "-15",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 941,
    "Full Name": "Makshift Hammer"
  },
  "Power Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Power Maul",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "32",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 942,
    "Full Name": "Power Maul"
  },
  "Impact Mace": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Impact Mace",
    "Type": "Impact Weapon",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "7",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "72",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 943,
    "Full Name": "Impact Mace"
  },
  "Shock Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shock Maul",
    "Type": "Impact Weapon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "150",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "15",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "72",
    "Damage Type": "Impact",
    "Critical": "40% Smash",
    "Disruption": "25",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 944,
    "Full Name": "Shock Maul"
  },
  "Thunder Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Thunder Hammer",
    "Type": "Impact Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "160",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "80",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 945,
    "Full Name": "Thunder Hammer"
  },
  "Gravity Flail": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gravity Flail",
    "Type": "Impact Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "180",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "7",
    "Targeting": "-10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "32",
    "Damage Max": "96",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 946,
    "Full Name": "Gravity Flail"
  },
  "CL-ANK's Mallet": {
    "Slot": "Weapon",
    "Name": "CL-ANK's Mallet",
    "Type": "Impact Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "280",
    "Coverage": "80",
    "Range": "2",
    "Shot Energy": "120",
    "Shot Heat": "25",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "45",
    "Damage Max": "120",
    "Damage Type": "Kinetic",
    "Critical": "95% Smash",
    "Salvage": "-5",
    "Index": 947,
    "Full Name": "CL-ANK's Mallet"
  },
  "Core Stripper": {
    "Slot": "Weapon",
    "Name": "Core Stripper",
    "Type": "Impact Weapon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "225",
    "Coverage": "220",
    "Effect": "Splits robots into constituent parts on 33% of successful hits.",
    "Range": "2",
    "Shot Energy": "300",
    "Shot Heat": "200",
    "Targeting": "20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "80",
    "Damage Type": "Kinetic",
    "Disruption": "25",
    "Index": 948,
    "Full Name": "Core Stripper"
  },
  "Mining Claw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mining Claw",
    "Type": "Slashing Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "4",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "25",
    "Damage Type": "Slashing",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 949,
    "Full Name": "Mining Claw"
  },
  "Katana": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Katana",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "36",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 950,
    "Full Name": "Katana"
  },
  "Scythe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Scythe",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "32",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 951,
    "Full Name": "Scythe"
  },
  "Axe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Axe",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "42",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 952,
    "Full Name": "Axe"
  },
  "Blade Saw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Blade Saw",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "40",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "13",
    "Damage Max": "20",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 953,
    "Full Name": "Blade Saw"
  },
  "Chainsword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Chainsword",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "42",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 954,
    "Full Name": "Chainsword"
  },
  "Ripper": {
    "Slot": "Weapon",
    "Name": "Ripper",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "44",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 955,
    "Full Name": "Ripper"
  },
  "Mak. Axe": {
    "Slot": "Weapon",
    "Name": "Mak. Axe",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "44",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 956,
    "Full Name": "Makshift Axe"
  },
  "Mak. Sword": {
    "Slot": "Weapon",
    "Name": "Mak. Sword",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "38",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 957,
    "Full Name": "Makshift Sword"
  },
  "Great Axe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Great Axe",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 958,
    "Full Name": "Great Axe"
  },
  "Greatsword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Greatsword",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "2",
    "Mass": "5",
    "Integrity": "140",
    "Coverage": "160",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "42",
    "Damage Max": "59",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 959,
    "Full Name": "Greatsword"
  },
  "Power Sword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Power Sword",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 960,
    "Full Name": "Power Sword"
  },
  "Falx": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Falx",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "36",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 961,
    "Full Name": "Falx"
  },
  "Carbide Saw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Carbide Saw",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "40",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "24",
    "Damage Type": "Slashing",
    "Critical": "35% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 962,
    "Full Name": "Carbide Saw"
  },
  "Segregator": {
    "Slot": "Weapon",
    "Name": "Segregator",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "40",
    "Description": "Overloads the highest-listed active power source to create a powerful directed charge that blasts up to four components clean off the target.",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Index": 963,
    "Full Name": "Segregator"
  },
  "Tearclaws": {
    "Slot": "Weapon",
    "Name": "Tearclaws",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "2",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "80",
    "Description": "20% chance to rip component off target.",
    "Range": "2",
    "Shot Energy": "60",
    "Shot Heat": "20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "30",
    "Damage Type": "Slashing",
    "Index": 964,
    "Full Name": "Tearclaws"
  },
  "Phasing Sabre": {
    "Slot": "Weapon",
    "Name": "Phasing Sabre",
    "Type": "Slashing Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "65",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "12",
    "Shot Heat": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "53",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 965,
    "Full Name": "Phasing Sabre"
  },
  "Plasma Sword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Sword",
    "Type": "Slashing Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "65",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "53",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 966,
    "Full Name": "Plasma Sword"
  },
  "Ionic Axe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ionic Axe",
    "Type": "Slashing Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "65",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "59",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 967,
    "Full Name": "Ionic Axe"
  },
  "Dual-blade Saw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Dual-blade Saw",
    "Type": "Slashing Weapon",
    "Rating": "7",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "40",
    "Range": "2",
    "Shot Energy": "9",
    "Shot Heat": "7",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "29",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 968,
    "Full Name": "Dual-blade Saw"
  },
  "Vibroblade": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Vibroblade",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "5",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "62",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 969,
    "Full Name": "Vibroblade"
  },
  "Molecular Scythe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Molecular Scythe",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "38",
    "Damage Max": "64",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 970,
    "Full Name": "Molecular Scythe"
  },
  "Centrium Greatsword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Centrium Greatsword",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "5",
    "Integrity": "220",
    "Coverage": "200",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "59",
    "Damage Max": "75",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 971,
    "Full Name": "Centrium Greatsword"
  },
  "Master Tearclaws": {
    "Slot": "Weapon",
    "Name": "Master Tearclaws",
    "Type": "Slashing Weapon",
    "Rating": "7",
    "Size": "2",
    "Mass": "12",
    "Integrity": "180",
    "Coverage": "100",
    "Description": "40% chance to rip component off target.",
    "Range": "2",
    "Shot Energy": "80",
    "Shot Heat": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "10",
    "Damage Type": "Slashing",
    "Index": 972,
    "Full Name": "Master Tearclaws"
  },
  "Longsword +1": {
    "Slot": "Weapon",
    "Name": "Longsword +1",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "90",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "2",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "35",
    "Damage Max": "55",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Index": 973,
    "Full Name": "Longsword +1"
  },
  "Nanosword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Nanosword",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "5",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "70",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 974,
    "Full Name": "Nanosword"
  },
  "Particle Cleaver": {
    "Slot": "Weapon",
    "Name": "Particle Cleaver",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "2",
    "Shot Energy": "12",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "80",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Index": 975,
    "Full Name": "Particle Cleaver"
  },
  "1C-UTU's Sword \"Lootmaker\"": {
    "Slot": "Weapon",
    "Name": "1C-UTU's Sword \"Lootmaker\"",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "50",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Salvage": "5",
    "Index": 976,
    "Full Name": "1C-UTU's Sword \"Lootmaker\""
  },
  "1C-UTU's Sword \"Choppy\"": {
    "Slot": "Weapon",
    "Name": "1C-UTU's Sword \"Choppy\"",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "80",
    "Damage Type": "Slashing",
    "Critical": "25% Destroy",
    "Index": 977,
    "Full Name": "1C-UTU's Sword \"Choppy\""
  },
  "Sigix Broadsword": {
    "Slot": "Weapon",
    "Name": "Sigix Broadsword",
    "Type": "Slashing Weapon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "800",
    "Effect": "Regenerates integrity at a rate of 2 per turn. Must be active, and requires 5 energy.\n <parallel_ok>",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "50",
    "Damage Max": "100",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Index": 978,
    "Full Name": "Sigix Broadsword"
  },
  "Spear": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Spear",
    "Type": "Piercing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "35",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 979,
    "Full Name": "Spear"
  },
  "Mak. Spear": {
    "Slot": "Weapon",
    "Name": "Mak. Spear",
    "Type": "Piercing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "35",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 980,
    "Full Name": "Makshift Spear"
  },
  "CR-A16's Pointy Stick": {
    "Slot": "Weapon",
    "Name": "CR-A16's Pointy Stick",
    "Type": "Piercing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "35",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Index": 981,
    "Full Name": "CR-A16's Pointy Stick"
  },
  "Hvy. Pick": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Pick",
    "Type": "Piercing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "45",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "40",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 982,
    "Full Name": "Heavy Pick"
  },
  "Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lance",
    "Type": "Piercing Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "45",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 983,
    "Full Name": "Lance"
  },
  "Kinetic Spear": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Kinetic Spear",
    "Type": "Piercing Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "50",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 984,
    "Full Name": "Kinetic Spear"
  },
  "Force Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Force Lance",
    "Type": "Piercing Weapon",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "55",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "60",
    "Damage Type": "Piercing",
    "Critical": "15% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 985,
    "Full Name": "Force Lance"
  },
  "Plasma Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Lance",
    "Type": "Piercing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "55",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 986,
    "Full Name": "Plasma Lance"
  },
  "Enh. Force Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Force Lance",
    "Type": "Piercing Weapon",
    "Rating": "8",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "65",
    "Damage Type": "Piercing",
    "Critical": "15% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 987,
    "Full Name": "Enhanced Force Lance"
  },
  "Vortex Lance": {
    "Slot": "Weapon",
    "Name": "Vortex Lance",
    "Type": "Piercing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "10",
    "Special Trait": "Unstable (40)",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "2",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "100",
    "Damage Type": "Entropic",
    "Critical": "35% Sunder",
    "Salvage": "-5",
    "Index": 988,
    "Full Name": "Vortex Lance"
  },
  "CR-A16's Behemoth Slayer": {
    "Slot": "Weapon",
    "Name": "CR-A16's Behemoth Slayer",
    "Type": "Piercing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "80",
    "Coverage": "5",
    "Range": "2",
    "Shot Energy": "50",
    "Shot Heat": "20",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "50",
    "Damage Type": "Piercing",
    "Critical": "25% Impale",
    "Index": 989,
    "Full Name": "CR-A16's Behemoth Slayer"
  },
  "Blade Trap": {
    "Slot": "N/A",
    "Name": "Blade Trap",
    "Type": "Trap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "10",
    "Description": "Severs 1-3 components from victim, damaging each by 12-20% of remaining integrity. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 990,
    "Full Name": "Blade Trap"
  },
  "Segregator Trap": {
    "Slot": "N/A",
    "Name": "Segregator Trap",
    "Type": "Trap",
    "Rating": "6",
    "Size": "1",
    "Integrity": "10",
    "Description": "Blows 2-4 components off victim, damaging each by 20-33% of remaining integrity. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 991,
    "Full Name": "Segregator Trap"
  },
  "Explosive Trap": {
    "Slot": "N/A",
    "Name": "Explosive Trap",
    "Type": "Trap",
    "Rating": "2",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 20-48 explosive damage with a radius of 3 (falloff: 8; salvage: -8). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 992,
    "Full Name": "Explosive Trap"
  },
  "Heavy Explosive Trap": {
    "Slot": "N/A",
    "Name": "Heavy Explosive Trap",
    "Type": "Trap",
    "Rating": "4",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 41-83 explosive damage with a radius of 4 (falloff: 12; salvage: -12). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 993,
    "Full Name": "Heavy Explosive Trap"
  },
  "Tiamat Bomb Trap": {
    "Slot": "N/A",
    "Name": "Tiamat Bomb Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 46-92 explosive damage with a radius of 4 (falloff: 13; salvage: -13). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 994,
    "Full Name": "Tiamat Bomb Trap"
  },
  "Fusion Bomb Trap": {
    "Slot": "N/A",
    "Name": "Fusion Bomb Trap",
    "Type": "Trap",
    "Rating": "6",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 57-109 explosive damage with a radius of 5 (falloff: 15; salvage: -15). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 995,
    "Full Name": "Fusion Bomb Trap"
  },
  "Hellfire Trap": {
    "Slot": "N/A",
    "Name": "Hellfire Trap",
    "Type": "Trap",
    "Rating": "7",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 57-109 explosive damage with a radius of 4 (falloff: 7; salvage: -20). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 996,
    "Full Name": "Hellfire Trap"
  },
  "Armageddon Trap": {
    "Slot": "N/A",
    "Name": "Armageddon Trap",
    "Type": "Trap",
    "Rating": "9",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 100-140 explosive damage with a radius of 10 (falloff: 3; salvage: -30). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 997,
    "Full Name": "Armageddon Trap"
  },
  "Dirty Bomb Trap": {
    "Slot": "N/A",
    "Name": "Dirty Bomb Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 50-90 electromagnetic damage with a radius of 5 (falloff: 10; salvage: -10). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 998,
    "Full Name": "Dirty Bomb Trap"
  },
  "EMP Trap": {
    "Slot": "N/A",
    "Name": "EMP Trap",
    "Type": "Trap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 12-24 electromagnetic damage with a radius of 3 (falloff: 5; salvage: 2). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 999,
    "Full Name": "EMP Trap"
  },
  "Proton Bomb Trap": {
    "Slot": "N/A",
    "Name": "Proton Bomb Trap",
    "Type": "Trap",
    "Rating": "3",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 16-30 electromagnetic damage with a radius of 4 (falloff: 6; salvage: 3). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1000,
    "Full Name": "Proton Bomb Trap"
  },
  "Tesla Bomb Trap": {
    "Slot": "N/A",
    "Name": "Tesla Bomb Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 24-40 electromagnetic damage with a radius of 4 (falloff: 3; salvage: 3). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1001,
    "Full Name": "Tesla Bomb Trap"
  },
  "Gamma Bomb Trap": {
    "Slot": "N/A",
    "Name": "Gamma Bomb Trap",
    "Type": "Trap",
    "Rating": "7",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 42-50 electromagnetic damage with a radius of 5 (falloff: 2; salvage: 6). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1002,
    "Full Name": "Gamma Bomb Trap"
  },
  "Shock Trap": {
    "Slot": "N/A",
    "Name": "Shock Trap",
    "Type": "Trap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "10",
    "Description": "Shocks victim for 50-80% system corruption. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1003,
    "Full Name": "Shock Trap"
  },
  "EM Surge Trap": {
    "Slot": "N/A",
    "Name": "EM Surge Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Shocks victim for 80-120% system corruption. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1004,
    "Full Name": "EM Surge Trap"
  },
  "Fire Trap": {
    "Slot": "N/A",
    "Name": "Fire Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Burns victim 3-5 times for 12-14 thermal damage each, and add 200-400 heat to victim and any adjacent robots. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1005,
    "Full Name": "Fire Trap"
  },
  "Stasis Trap": {
    "Slot": "N/A",
    "Name": "Stasis Trap",
    "Type": "Trap",
    "Rating": "2",
    "Size": "1",
    "Integrity": "10",
    "Life": "100",
    "Description": "Holds victim until stasis field depleted. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1006,
    "Full Name": "Stasis Trap"
  },
  "Signal Generator": {
    "Slot": "N/A",
    "Name": "Signal Generator",
    "Type": "Item",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Generates signals likely to trigger an assault dispatch in 0b10-controlled areas, or if there is an active assault squad in the area redirect it to the source of the signals.",
    "Index": 1007,
    "Full Name": "Signal Generator"
  },
  "Self-destruct Interrupter": {
    "Slot": "N/A",
    "Name": "Self-destruct Interrupter",
    "Type": "Item",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Life": "50",
    "Description": "Remotely deactivates self-destruction routines employed by 0b10 robots in some scenarios. Drop to activate, retrieve to deactivate.",
    "Index": 1008,
    "Full Name": "Self-destruct Interrupter"
  },
  "Sapper Charge": {
    "Slot": "N/A",
    "Name": "Sapper Charge",
    "Type": "Item",
    "Rating": "7",
    "Size": "1",
    "Integrity": "50",
    "Description": "If on the ground at current position use > or right-click on self to start timer. Automatically detonates after 8 turns. Thermal explosion inflicts 110 damage with a radius of 4 (falloff: 10). Deadly heat transfer.",
    "Index": 1009,
    "Full Name": "Sapper Charge"
  },
  "Deploy-a-Sentry": {
    "Slot": "N/A",
    "Name": "Deploy-a-Sentry",
    "Type": "Item",
    "Rating": "7",
    "Size": "1",
    "Integrity": "200",
    "Description": "Drop on the ground and use > or right-click on self to prepare for deployment, then move aside.",
    "Index": 1010,
    "Full Name": "Deploy-a-Sentry"
  },
  "GAL Module": {
    "Slot": "N/A",
    "Name": "GAL Module",
    "Type": "Item",
    "Rating": "8",
    "Size": "1",
    "Integrity": "20",
    "Description": "Module given by V3-CT5, from a project to improve the Hypervelocity EM Gauss Rifle.",
    "Index": 1011,
    "Full Name": "GAL Module"
  },
  "Portable AFG": {
    "Slot": "N/A",
    "Name": "Portable AFG",
    "Type": "Item",
    "Rating": "9",
    "Size": "1",
    "Integrity": "40",
    "Life": "100",
    "Description": "Attracts any loose items within a range of 16. Drop to activate, retrieve to deactivate.",
    "Index": 1012,
    "Full Name": "Portable AFG"
  },
  "SGEMP Prototype": {
    "Slot": "N/A",
    "Name": "SGEMP Prototype",
    "Type": "Item",
    "Rating": "10",
    "Size": "2",
    "Integrity": "100",
    "Description": "There does not seem to be any way to use it.",
    "Index": 1013,
    "Full Name": "SGEMP Prototype"
  },
  "Terrabomb Derivative": {
    "Slot": "N/A",
    "Name": "Terrabomb Derivative",
    "Type": "Item",
    "Rating": "10",
    "Size": "2",
    "Integrity": "100",
    "Description": "There does not seem to be any way to use it.",
    "Index": 1014,
    "Full Name": "Terrabomb Derivative"
  },
  "Sigix Containment Pod": {
    "Slot": "N/A",
    "Name": "Sigix Containment Pod",
    "Type": "Item",
    "Rating": "10",
    "Size": "2",
    "Integrity": "100",
    "Description": "Pod contains a live Sigix.",
    "Index": 1015,
    "Full Name": "Sigix Containment Pod"
  },
  "Sigix Corpse": {
    "Slot": "N/A",
    "Name": "Sigix Corpse",
    "Type": "Item",
    "Rating": "10",
    "Size": "1",
    "Integrity": "10",
    "Description": "The post-autopsy corpse of a Sigix Warrior.",
    "Index": 1016,
    "Full Name": "Sigix Corpse"
  },
  "Meganuke": {
    "Slot": "N/A",
    "Name": "Meganuke",
    "Type": "Item",
    "Rating": "10",
    "Size": "1",
    "Integrity": "100",
    "Description": "If on the ground at current position use > or right-click on self to detonate. Thermal explosion inflicts 2000 damage with a radius of 35 (falloff: 10). Massive heat transfer.",
    "Index": 1017,
    "Full Name": "Meganuke"
  },
  "Gamma Refractor": {
    "Slot": "N/A",
    "Name": "Gamma Refractor",
    "Type": "Item",
    "Rating": "10",
    "Size": "1",
    "Integrity": "100",
    "Description": "If on the ground at current position use > or right-click on self to detonate. Electromagnetic explosion inflicts 200 damage with a radius of 25 (falloff: 1), piercing any walls or barriers. Fine spectrum.",
    "Index": 1018,
    "Full Name": "Gamma Refractor"
  },
  "T-thruster": {
    "Slot": "Propulsion",
    "Name": "T-thruster",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "10",
    "Coverage": "5",
    "Time/Move": "3",
    "Mod/Extra": "-3",
    "Support": "1",
    "Penalty": "200",
    "Index": 1019,
    "Full Name": "T-thruster"
  },
  "Mak. Microthruster": {
    "Slot": "Propulsion",
    "Name": "Mak. Microthruster",
    "Type": "Flight Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "10",
    "Time/Move": "20",
    "Mod/Extra": "0",
    "Support": "1",
    "Penalty": "200",
    "Index": 1020,
    "Full Name": "Makshift Microthruster"
  },
  "Integrated Tracker Drive": {
    "Slot": "Propulsion",
    "Name": "Integrated Tracker Drive",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "10",
    "Time/Move": "15",
    "Mod/Extra": "-3",
    "Energy/Move": "2",
    "Heat/Move": "2",
    "Support": "22",
    "Penalty": "200",
    "Index": 1021,
    "Full Name": "Integrated Tracker Drive"
  },
  "Detonator": {
    "Slot": "Weapon",
    "Name": "Detonator",
    "Type": "Special Melee Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "2",
    "Targeting": "1000",
    "Index": 1022,
    "Full Name": "Detonator"
  },
  "Splice Injector": {
    "Slot": "Weapon",
    "Name": "Splice Injector",
    "Type": "Special Melee Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "5",
    "Description": "Performs a random hack on any standard 0b10 Swarmer, Cutter, Grunt, Brawler, Duelist, Sentry, Demolisher, Specialist, Hunter, Heavy, or Behemoth variant.\n <no_stack>",
    "Range": "2",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "5",
    "Damage Type": "Piercing",
    "Index": 1023,
    "Full Name": "Splice Injector"
  },
  "Mni. Tearclaws": {
    "Slot": "Weapon",
    "Name": "Mni. Tearclaws",
    "Type": "Slashing Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "20",
    "Description": "50% chance to rip component off target.",
    "Range": "2",
    "Shot Energy": "30",
    "Shot Heat": "10",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "10",
    "Damage Type": "Slashing",
    "Index": 1024,
    "Full Name": "Mini Tearclaws"
  },
  "DAS Cannon": {
    "Slot": "Weapon",
    "Name": "DAS Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "30",
    "Integrity": "300",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "10",
    "Shot Heat": "60",
    "Recoil": "5",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "70",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-10",
    "Index": 1026,
    "Full Name": "DAS Cannon"
  },
  "Compactor": {
    "Slot": "Weapon",
    "Name": "Compactor",
    "Type": "Impact Weapon",
    "Rating": "6",
    "Size": "4",
    "Mass": "20",
    "Integrity": "500",
    "Coverage": "400",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "15",
    "Targeting": "20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "60",
    "Damage Type": "Kinetic",
    "Critical": "50% Destroy",
    "Index": 1027,
    "Full Name": "Compactor"
  },
  "Asb. Blade": {
    "Slot": "Weapon",
    "Name": "Asb. Blade",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "36",
    "Damage Type": "Slashing",
    "Critical": "5% Sever",
    "Index": 1028,
    "Full Name": "Assembled Blade"
  },
  "Asb. F-torch": {
    "Slot": "Weapon",
    "Name": "Asb. F-torch",
    "Type": "Special Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "20",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Disruption": "25",
    "Salvage": "-5",
    "Index": 1029,
    "Full Name": "Assembled F-torch"
  },
  "Asb. Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Asb. Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "3% Destroy",
    "Penetration": "65",
    "Index": 1030,
    "Full Name": "Assembled Gauss Rifle"
  },
  "Asb. Heavy Rifle": {
    "Slot": "Weapon",
    "Name": "Asb. Heavy Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "25",
    "Recoil": "3",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Index": 1031,
    "Full Name": "Assembled Heavy Rifle"
  },
  "Asb. Hover System": {
    "Slot": "Propulsion",
    "Name": "Asb. Hover System",
    "Type": "Hover Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "45",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "11",
    "Penalty": "60",
    "Index": 1032,
    "Full Name": "Assembled Hover System"
  },
  "Asb. Hover Unit": {
    "Slot": "Propulsion",
    "Name": "Asb. Hover Unit",
    "Type": "Hover Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "9",
    "Penalty": "60",
    "Index": 1033,
    "Full Name": "Assembled Hover Unit"
  },
  "Asb. Maul": {
    "Slot": "Weapon",
    "Name": "Asb. Maul",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "56",
    "Coverage": "20",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "36",
    "Damage Type": "Impact",
    "Index": 1034,
    "Full Name": "Assembled Maul"
  },
  "Asb. P-maul": {
    "Slot": "Weapon",
    "Name": "Asb. P-maul",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "69",
    "Coverage": "20",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "48",
    "Damage Type": "Impact",
    "Index": 1035,
    "Full Name": "Assembled P-maul"
  },
  "Asb. P-torch": {
    "Slot": "Weapon",
    "Name": "Asb. P-torch",
    "Type": "Special Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Disruption": "40",
    "Salvage": "-8",
    "Index": 1036,
    "Full Name": "Assembled P-torch"
  },
  "Asb. P-sword": {
    "Slot": "Weapon",
    "Name": "Asb. P-sword",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "5% Sever",
    "Index": 1037,
    "Full Name": "Assembled P-sword"
  },
  "Asb. Rifle": {
    "Slot": "Weapon",
    "Name": "Asb. Rifle",
    "Type": "Ballistic Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "20",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "15",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Index": 1038,
    "Full Name": "Assembled Rifle"
  },
  "Asb. Shotgun": {
    "Slot": "Weapon",
    "Name": "Asb. Shotgun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "12",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "10",
    "Targeting": "-10",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-2",
    "Index": 1039,
    "Full Name": "Assembled Shotgun"
  },
  "Vortex Shredder": {
    "Slot": "Weapon",
    "Name": "Vortex Shredder",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "6",
    "Mass": "200",
    "Integrity": "1000",
    "Coverage": "600",
    "Range": "2",
    "Targeting": "1000",
    "Projectile Count": "1",
    "Damage Min": "9999",
    "Damage Max": "9999",
    "Damage Type": "Entropic",
    "Index": 1040,
    "Full Name": "Vortex Shredder"
  },
  "Centrium Claws": {
    "Slot": "Weapon",
    "Name": "Centrium Claws",
    "Type": "Slashing Weapon",
    "Rating": "8",
    "Size": "2",
    "Mass": "4",
    "Integrity": "100",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "80",
    "Damage Type": "Slashing",
    "Critical": "10% Destroy",
    "Index": 1041,
    "Full Name": "Centrium Claws"
  },
  "T.R.O.L.L. Exoskeleton": {
    "Slot": "Propulsion",
    "Name": "T.R.O.L.L. Exoskeleton",
    "Type": "Leg",
    "Rating": "8",
    "Size": "3",
    "Integrity": "1",
    "Description": "Each active leg slot provides a 20% chance to kick targets out of the way instead of ramming them, resulting in no damage to self. Not applicable against huge targets.",
    "Time/Move": "40",
    "Drag": "30",
    "Energy/Move": "10",
    "Support": "85",
    "Penalty": "40",
    "Index": 1042,
    "Full Name": "T.R.O.L.L. Exoskeleton"
  }
};
},{}],"json/item_categories.json":[function(require,module,exports) {
module.exports = {
  "Matter": [],
  "Data Core": ["0b10"],
  "Derelict Log": ["Derelict"],
  "Schematic Archive": ["Derelict"],
  "Imprinter Data Core": ["Spoiler"],
  "A2 Data Core": ["Architects", "Redacted"],
  "A7 Data Core": ["Architects", "Spoiler"],
  "Architect Data Core": ["Redacted"],
  "MAIN.C Data Core": ["0b10", "Redacted"],
  "Scrap": ["Derelict"],
  "Protomatter": [],
  "Ion Engine": ["0b10"],
  "Lgt. Ion Engine": ["0b10"],
  "Backup Power I": ["0b10"],
  "Imp. Ion Engine": ["0b10"],
  "Rnf. Ion Engine": ["0b10"],
  "Hvy. Ion Engine": ["0b10"],
  "Cld. Ion Engine": ["0b10"],
  "Deuterium Engine": ["0b10"],
  "Lgt. Deuterium Engine": ["0b10"],
  "Backup Power III": ["0b10"],
  "Nuclear Core": ["0b10"],
  "Lgt. Nuclear Core": ["0b10"],
  "Imp. Deuterium Engine": ["0b10"],
  "Rnf. Deuterium Engine": ["0b10"],
  "Hyb. Deuterium Engine": ["0b10"],
  "Hvy. Deuterium Engine": ["0b10"],
  "Cld. Deuterium Engine": ["0b10"],
  "Enh. Nuclear Core": ["0b10"],
  "Mic. Nuclear Core": ["0b10"],
  "Mak. Power Source": ["Derelict"],
  "Angular Momentum Engine": ["0b10"],
  "Lgt. Angular Momentum Engine": ["0b10"],
  "F-cell Engine": ["0b10"],
  "Hyb. Fission Core": ["0b10"],
  "Fission Core": ["0b10"],
  "Lgt. Fission Core": ["0b10"],
  "Cold Fusion Reactor": ["0b10"],
  "Neutrino Core": ["0b10"],
  "Lgt. Neutrino Core": ["0b10"],
  "Rnf. Fission Core": ["0b10"],
  "Enh. Fission Core": ["0b10"],
  "Cld. Fission Core": ["0b10"],
  "Mic. Fission Core": ["0b10"],
  "Fusion Reactor": ["0b10"],
  "Antimatter Reactor": ["0b10"],
  "Hyb. Antimatter Reactor": ["0b10"],
  "Mic. Antimatter Reactor": ["0b10"],
  "Lgt. Antimatter Reactor": ["0b10"],
  "Rnf. Antimatter Reactor": ["0b10"],
  "Backup Power VII": ["0b10"],
  "Hvy. Antimatter Reactor": ["0b10"],
  "Mni. Fusion Reactor": ["0b10"],
  "Mic. Neutrino Core": ["0b10"],
  "Zio. Light DM Reactor": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Heavy DM Reactor": ["Derelict", "Spoiler", "Zionite"],
  "Particle Reactor": ["0b10"],
  "Lgt. Particle Reactor": ["0b10"],
  "Com. Particle Reactor": ["0b10"],
  "Cld. Antimatter Reactor": ["0b10"],
  "Graviton Reactor": ["0b10"],
  "Asb. Flux Generator": ["Golem", "Spoiler"],
  "Quantum Reactor": ["0b10"],
  "Lgt. Quantum Reactor": ["0b10"],
  "Rnf. Quantum Reactor": ["0b10"],
  "Imp. Quantum Reactor": ["0b10"],
  "Zero-point Reactor": ["0b10"],
  "Vortex Chain Reactor": ["0b10"],
  "Singularity Reactor": ["0b10"],
  "Lgt. Treads": ["0b10"],
  "Imp. Treads": ["0b10"],
  "Spk. Treads": ["Derelict"],
  "Arm. Treads": ["0b10"],
  "Adv. Treads": ["0b10"],
  "Med. Treads": ["0b10"],
  "Imp. Medium Treads": ["0b10"],
  "Spk. Medium Treads": ["Derelict"],
  "Arm. Medium Treads": ["0b10"],
  "Hvy. Treads": ["0b10"],
  "Adv. Medium Treads": ["0b10"],
  "Enh. Armored Medium Treads": ["0b10"],
  "Imp. Heavy Treads": ["0b10"],
  "Hvy. Siege Treads": ["0b10"],
  "Spk. Heavy Treads": ["Derelict"],
  "Biometal Medium Treads": ["0b10"],
  "Arm. Heavy Treads": ["0b10"],
  "Adv. Heavy Treads": ["0b10"],
  "Imp. Heavy Siege Treads": ["0b10"],
  "Centrium Heavy Treads": ["0b10"],
  "Megatreads": ["Derelict", "Spoiler"],
  "Biometal Heavy Treads": ["0b10"],
  "Exp. Biometal Heavy Treads": ["0b10"],
  "Enh. Armored Heavy Treads": ["0b10"],
  "Adv. Heavy Siege Treads": ["0b10"],
  "Hdn. Centrium Heavy Treads": ["0b10"],
  "Exp. Biometal Medium Treads": ["0b10"],
  "Aluminum Leg": ["0b10"],
  "Imp. Aluminum Leg": ["0b10"],
  "Carbon-fiber Leg": ["0b10"],
  "Titanium Leg": ["0b10"],
  "VSS Leg": ["0b10"],
  "Imp. Carbon-fiber Leg": ["0b10"],
  "Imp. Titanium Leg": ["0b10"],
  "Mak. Leg": ["Derelict"],
  "Flexi-carbon Leg": ["0b10"],
  "Arm. Leg": ["0b10"],
  "Imp. VSS Leg": ["0b10"],
  "Zio. Composite Leg I": ["Derelict", "Spoiler", "Zionite"],
  "Enh. Flexi-carbon Leg": ["0b10"],
  "Enh. Armored Leg": ["0b10"],
  "Myomer Leg": ["0b10"],
  "Adv. VSS Leg": ["0b10"],
  "Adv. Myomer Leg": ["0b10"],
  "Exp. Flexi-carbon Leg": ["0b10"],
  "Zio. Composite Leg II": ["Derelict", "Spoiler", "Zionite"],
  "Etherial Tendrils": ["Unobtainable"],
  "Biometal Leg": ["0b10"],
  "Enh. Biometal Leg": ["0b10"],
  "Exp. Myomer Leg": ["0b10"],
  "T.R.O.L.L. Exoskeleton": ["Derelict", "Spoiler", "Unobtainable"],
  "Asb. Alloy Leg": ["Golem", "Spoiler"],
  "Centrium Leg": ["0b10"],
  "Hdn. Centrium Leg": ["0b10"],
  "Exp. Biometal Leg": ["0b10"],
  "Zio. Supercomposite Leg": ["Derelict", "Spoiler", "Zionite"],
  "Potential Leg": ["Exile"],
  "Myomer Exoskeleton": ["Spoiler", "Testing"],
  "Wheel": ["0b10"],
  "Com. Wheel": ["0b10"],
  "Arm. Wheel": ["0b10"],
  "Arm. Huge Wheel": ["0b10"],
  "Centrium Wheel": ["0b10"],
  "Hdn. Centrium Wheel": ["0b10"],
  "Hover Unit": ["0b10"],
  "Backup Propulsion I": ["0b10"],
  "Imp. Hover Unit": ["0b10"],
  "Airjet": ["0b10"],
  "Aerolev Unit": ["0b10"],
  "Backup Propulsion III": ["0b10"],
  "Gravmag System": ["0b10"],
  "Asb. Hover System": ["Unobtainable"],
  "Imp. Airjet": ["0b10"],
  "Cld. Airjet": ["0b10"],
  "Imp. Gravmag System": ["0b10"],
  "Cld. Aerolev Unit": ["0b10"],
  "Cmb. Airjet": ["0b10"],
  "Gravmag Array": ["0b10"],
  "Mak. Hover Unit": ["Derelict"],
  "Zio. Glidesys I": ["Derelict", "Spoiler", "Zionite"],
  "Antigrav System": ["0b10"],
  "Gyrokinetic Inverter": ["0b10"],
  "Linear Gravjet": ["0b10"],
  "Cld. Gravmag System": ["0b10"],
  "Cmb. Gravmag System": ["0b10"],
  "Imp. Antigrav System": ["0b10"],
  "Imp. Gyrokinetic Inverter": ["0b10"],
  "Imp. Linear Gravjet": ["0b10"],
  "Backup Propulsion VII": ["0b10"],
  "Zio. Glidesys II": ["Derelict", "Spoiler", "Zionite"],
  "Cld. Antigrav System": ["0b10"],
  "Cmb. Antigrav System": ["0b10"],
  "Antigrav Array": ["0b10"],
  "Exp. Gyrokinetic Inverter": ["0b10"],
  "Cld. Linear Gravjet": ["0b10"],
  "Cmb. Linear Gravjet": ["0b10"],
  "Flight Unit": ["0b10"],
  "VTOL Module": ["0b10"],
  "Imp. Flight Unit": ["0b10"],
  "Cesium-ion Thruster": ["0b10"],
  "Surge Thruster": ["0b10"],
  "Imp. VTOL Module": ["0b10"],
  "Xenon Bombardment Thruster": ["0b10"],
  "Imp. Cesium-ion Thruster": ["0b10"],
  "Cld. VTOL Module": ["0b10"],
  "Mak. Flight Unit": ["Derelict"],
  "Nuclear Pulse Thruster": ["0b10"],
  "Imp. Surge Thruster": ["0b10"],
  "Mni. Nuclear Pulse Thruster": ["0b10"],
  "Cld. Cesium-ion Thruster": ["0b10"],
  "Biomechanical Wings": ["0b10"],
  "Field Propulsion Drive": ["0b10"],
  "Cld. Nuclear Pulse Thruster": ["0b10"],
  "Exp. Cesium-ion Thruster": ["0b10"],
  "Nuclear Pulse Array": ["0b10"],
  "Impulse Thruster": ["0b10"],
  "Adv. Surge Thruster": ["0b10"],
  "Cld. Field Propulsion Drive": ["0b10"],
  "Field Propulsion Array": ["0b10"],
  "Diametric Drive": ["0b10"],
  "Flying Fortress v7": ["Exile"],
  "T-thruster": ["Exile", "Unobtainable"],
  "Integrated Tracker Drive": ["Spoiler", "Unobtainable"],
  "Q-thruster": ["0b10"],
  "Electron Diverter": ["0b10"],
  "Imp. Diametric Drive": ["0b10"],
  "Cld. Impulse Thruster": ["0b10"],
  "Impulse Thruster Array": ["0b10"],
  "Imp. Q-thruster": ["0b10"],
  "Cld. Q-thruster": ["0b10"],
  "Exp. Q-thruster": ["0b10"],
  "Desublimator": ["Architects", "Redacted"],
  "Fusion Compressor": ["0b10"],
  "Imp. Fusion Compressor": ["0b10"],
  "Power Amplifier": ["0b10"],
  "Adv. Power Amplifier": ["0b10"],
  "Exp. Power Amplifier": ["0b10"],
  "Thermal Converter": ["0b10"],
  "Imp. Thermal Converter": ["0b10"],
  "Exp. Thermal Converter": ["0b10"],
  "Thermal Generator": ["0b10"],
  "Imp. Thermal Generator": ["0b10"],
  "Adv. Thermal Generator": ["0b10"],
  "Exp. Thermal Generator": ["0b10"],
  "Heat Shielding": ["0b10"],
  "Imp. Heat Shielding": ["0b10"],
  "Cryofiber Web": ["0b10"],
  "Imp. Cryofiber Web": ["0b10"],
  "Adv. Cryofiber Web": ["0b10"],
  "Heat Sink": ["0b10"],
  "Imp. Heat Sink": ["0b10"],
  "Adv. Heat Sink": ["0b10"],
  "Exp. Heat Sink": ["0b10"],
  "Cooling System": ["0b10"],
  "Imp. Cooling System": ["0b10"],
  "Adv. Cooling System": ["0b10"],
  "Exp. Cooling System": ["0b10"],
  "Coolant Network": ["0b10"],
  "Asb. Nanovents": ["Golem", "Spoiler"],
  "2N-1CE's Frost Array": ["Spoiler", "Heroes", "Testing"],
  "Disposable Heat Sink": ["0b10"],
  "Coolant Injector": ["0b10"],
  "Imp. Coolant Injector": ["0b10"],
  "Adv. Coolant Injector": ["0b10"],
  "Exp. Coolant Injector": ["0b10"],
  "Sml. Storage Unit": ["0b10"],
  "Med. Storage Unit": ["0b10"],
  "Lrg. Storage Unit": ["0b10"],
  "Hcp. Storage Unit": ["0b10"],
  "Huge Storage Unit": ["0b10"],
  "Cargo Storage Unit": ["0b10"],
  "Humpback": ["Derelict"],
  "Lightpack 2.0": ["Exile"],
  "Sml. Battery": ["0b10"],
  "Med. Battery": ["0b10"],
  "Lrg. Battery": ["0b10"],
  "Hcp. Battery": ["0b10"],
  "Com. Battery": ["0b10"],
  "Energy Well": ["0b10"],
  "Imp. Energy Well": ["0b10"],
  "Adv. Energy Well": ["0b10"],
  "Exp. Energy Well": ["0b10"],
  "Zio. Biocell": ["Derelict", "Spoiler", "Zionite"],
  "Asb. Biocell Array": ["Golem", "Spoiler"],
  "Zio. Biocell Array": ["Derelict", "Spoiler", "Zionite"],
  "Superbattery": ["Exile"],
  "Sml. Matter Pod": ["0b10"],
  "Med. Matter Pod": ["0b10"],
  "Lrg. Matter Pod": ["0b10"],
  "Hcp. Matter Pod": ["0b10"],
  "Com. Matter Pod": ["0b10"],
  "YI-UF0's Bottomless Matter Pit": ["Derelict"],
  "Matter Compressor": ["0b10"],
  "Imp. Matter Compressor": ["0b10"],
  "Adv. Matter Compressor": ["0b10"],
  "Exp. Matter Compressor": ["0b10"],
  "Weight Redist. System": ["0b10"],
  "Adv. Weight Redist. System": ["0b10"],
  "Gravity Neutralizer": ["0b10"],
  "Adv. Gravity Neutralizer": ["0b10"],
  "Quantum Shading Machine": ["0b10"],
  "Adv. Quantum Shading Machine": ["0b10"],
  "Asb. Suspension Frame": ["Golem", "Spoiler"],
  "Asb. Metafiber Network": ["Golem", "Spoiler"],
  "Zio. Metafield Generator": ["Derelict", "Spoiler", "Zionite"],
  "ST Field Compressor": ["Architects", "Redacted"],
  "Structural Scanner": ["0b10"],
  "Trap Scanner": ["0b10"],
  "Imp. Trap Scanner": ["0b10"],
  "Mak. Trap Scanner": ["0b10"],
  "Adv. Trap Scanner": ["0b10"],
  "Triangulator": ["0b10"],
  "Visual Processing Unit": ["0b10"],
  "Adv. Visual Processing Unit": ["0b10"],
  "Enh. Optical Array": ["0b10"],
  "Exp. Optical Array": ["0b10"],
  "Spectral Analyzer": ["0b10"],
  "Sensor Array": ["0b10"],
  "Imp. Sensor Array": ["0b10"],
  "Adv. Sensor Array": ["0b10"],
  "Lrn. Sensor Array": ["0b10"],
  "Mak. Sensor Array": ["Derelict"],
  "Exp. Sensor Array": ["0b10"],
  "Signal Interpreter": ["0b10"],
  "Imp. Signal Interpreter": ["0b10"],
  "Adv. Signal Interpreter": ["0b10"],
  "Exp. Signal Interpreter": ["0b10"],
  "Active Sensor Suite": ["0b10"],
  "Terrain Scanner": ["0b10"],
  "Imp. Terrain Scanner": ["0b10"],
  "Adv. Terrain Scanner": ["0b10"],
  "Mak. Terrain Scanner": ["Derelict"],
  "Lrn. Terrain Scanner": ["0b10"],
  "Exp. Terrain Scanner": ["0b10"],
  "Surveybot 24 Scanner": ["Derelict", "Spoiler"],
  "Seismic Detector": ["0b10"],
  "Terrain Scan Processor": ["0b10"],
  "Imp. Terrain Scan Processor": ["0b10"],
  "Mak. Terrain Scan Processor": ["Derelict"],
  "Adv. Terrain Scan Processor": ["0b10"],
  "Exp. Terrain Scan Processor": ["0b10"],
  "Surveybot 24 Chip": ["Derelict", "Spoiler"],
  "Transport Network Coupler": ["0b10"],
  "Machine Analyzer": ["0b10"],
  "Modified TNC": ["Exile"],
  "0b10 Decoder Chip [Generic]": ["Derelict"],
  "0b10 Decoder Chip [Looter]": ["Derelict"],
  "0b10 Decoder Chip [Scout]": ["Derelict"],
  "0b10 Decoder Chip [Skirmisher]": ["Derelict"],
  "0b10 Alert Chip": ["Exile"],
  "Salvage Targeting Computer": ["0b10"],
  "Imp. Salvage Targeting Computer": ["0b10"],
  "Mak. Salvage Targeting Computer": ["Derelict"],
  "Adv. Salvage Targeting Computer": ["0b10"],
  "Asb. Combat Suite": ["Golem", "Spoiler"],
  "Targeting Computer": ["0b10"],
  "Imp. Targeting Computer": ["0b10"],
  "Adv. Targeting Computer": ["0b10"],
  "Exp. Targeting Computer": ["0b10"],
  "Tactical Coordination Suite": ["Derelict"],
  "Melee Analysis Suite": ["0b10"],
  "Imp. Melee Analysis Suite": ["0b10"],
  "Adv. Melee Analysis Suite": ["0b10"],
  "Exp. Melee Analysis Suite": ["0b10"],
  "Launcher Guidance Computer": ["0b10"],
  "Imp. Launcher Guidance Computer": ["0b10"],
  "Adv. Launcher Guidance Computer": ["0b10"],
  "Target Analyzer": ["0b10"],
  "Imp. Target Analyzer": ["0b10"],
  "Adv. Target Analyzer": ["0b10"],
  "Exp. Target Analyzer": ["0b10"],
  "Core Analyzer": ["0b10"],
  "Imp. Core Analyzer": ["0b10"],
  "Adv. Core Analyzer": ["0b10"],
  "Exp. Core Analyzer": ["0b10"],
  "Armor Integrity Analyzer": ["0b10"],
  "Imp. Armor Integrity Analyzer": ["0b10"],
  "Adv. Armor Integrity Analyzer": ["0b10"],
  "Exp. Armor Integrity Analyzer": ["0b10"],
  "Recoil Stabilizer": ["0b10"],
  "Recoil Nullifier": ["0b10"],
  "Matter Filter": ["0b10"],
  "Prc. Matter Filter": ["0b10"],
  "Energy Filter": ["0b10"],
  "Prc. Energy Filter": ["0b10"],
  "Particle Charger": ["0b10"],
  "Imp. Particle Charger": ["0b10"],
  "Adv. Particle Charger": ["0b10"],
  "Particle Accelerator": ["0b10"],
  "Imp. Particle Accelerator": ["0b10"],
  "Adv. Particle Accelerator": ["0b10"],
  "Kinecellerator": ["0b10"],
  "Imp. Kinecellerator": ["0b10"],
  "Adv. Kinecellerator": ["0b10"],
  "Launcher Loader": ["0b10"],
  "Quantum Capacitor": ["0b10"],
  "Weapon Cycler": ["0b10"],
  "Imp. Weapon Cycler": ["0b10"],
  "Adv. Weapon Cycler": ["0b10"],
  "Exp. Weapon Cycler": ["0b10"],
  "Microactuators": ["0b10"],
  "Nanoactuators": ["0b10"],
  "Femtoactuators": ["0b10"],
  "Actuator Array": ["0b10"],
  "Imp. Actuator Array": ["0b10"],
  "Adv. Actuator Array": ["0b10"],
  "Exp. Actuator Array": ["0b10"],
  "Force Booster": ["0b10"],
  "Imp. Force Booster": ["0b10"],
  "Adv. Force Booster": ["0b10"],
  "Stasis Canceller": ["0b10"],
  "Imp. Stasis Canceller": ["0b10"],
  "Transmission Jammer": ["0b10"],
  "Mak. Transmission Jammer": ["Derelict"],
  "Imp. Transmission Jammer": ["0b10"],
  "Adv. Transmission Jammer": ["0b10"],
  "Exp. Transmission Jammer": ["0b10"],
  "ECM Suite": ["0b10"],
  "Imp. ECM Suite": ["0b10"],
  "Mak. ECM Suite": ["0b10"],
  "Adv. ECM Suite": ["0b10"],
  "Exp. ECM Suite": ["0b10"],
  "Reaction Control System": ["0b10"],
  "Imp. Reaction Control System": ["0b10"],
  "Adv. Reaction Control System": ["0b10"],
  "Exp. Reaction Control System": ["0b10"],
  "Graphene Brace": ["0b10"],
  "Phase Shifter": ["0b10"],
  "Imp. Phase Shifter": ["0b10"],
  "Adv. Phase Shifter": ["0b10"],
  "Exp. Phase Shifter": ["0b10"],
  "Cloaking Device": ["0b10"],
  "Mak. Cloaking Device": ["Derelict"],
  "Imp. Cloaking Device": ["0b10"],
  "Adv. Cloaking Device": ["0b10"],
  "Exp. Cloaking Device": ["0b10"],
  "Cloak of Protection": ["Exile"],
  "5H-AD0's Cloak": ["Derelict", "Spoiler"],
  "Core Shielding": ["0b10"],
  "Imp. Core Shielding": ["0b10"],
  "Exp. Core Shielding": ["0b10"],
  "Power Shielding": ["0b10"],
  "Imp. Power Shielding": ["0b10"],
  "Exp. Power Shielding": ["0b10"],
  "Propulsion Shielding": ["0b10"],
  "Imp. Propulsion Shielding": ["0b10"],
  "Exp. Propulsion Shielding": ["0b10"],
  "Utility Shielding": ["0b10"],
  "Imp. Utility Shielding": ["0b10"],
  "Exp. Utility Shielding": ["0b10"],
  "Weapon Shielding": ["0b10"],
  "Imp. Weapon Shielding": ["0b10"],
  "Exp. Weapon Shielding": ["0b10"],
  "Zio. Weapon Casing": ["Derelict", "Spoiler", "Zionite"],
  "Lgt. Armor Plating": ["0b10"],
  "Med. Armor Plating": ["0b10"],
  "Hvy. Armor Plating": ["0b10"],
  "Zio. Light Carapace": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Heavy Carapace": ["Derelict", "Spoiler", "Zionite"],
  "Hrd. Light Armor Plating": ["0b10"],
  "Hrd. Medium Armor Plating": ["0b10"],
  "Hrd. Heavy Armor Plating": ["0b10"],
  "Imp. Light Armor Plating": ["0b10"],
  "Imp. Medium Armor Plating": ["0b10"],
  "Imp. Heavy Armor Plating": ["0b10"],
  "Lyr. Light Armor Plating": ["0b10"],
  "Mak. Armor Plating": ["Derelict"],
  "Mak. Ablative Armor": ["Derelict"],
  "Lyr. Medium Armor Plating": ["0b10"],
  "Lyr. Heavy Armor Plating": ["0b10"],
  "Centrium Light Armor Plating": ["0b10"],
  "Centrium Medium Armor Plating": ["0b10"],
  "Centrium Heavy Armor Plating": ["0b10"],
  "Centrium Linked Plating": ["Architects", "Redacted"],
  "Reactive Plating": ["0b10"],
  "Med. Reactive Plating": ["0b10"],
  "Mak. Kinetic Plating": ["Derelict"],
  "Hvy. Reactive Plating": ["0b10"],
  "Reflective Plating": ["0b10"],
  "Med. Reflective Plating": ["0b10"],
  "Mak. Thermal Plating": ["Derelict"],
  "Hvy. Reflective Plating": ["0b10"],
  "8R-AWN's Armor/TH": ["Exile", "Spoiler"],
  "8R-AWN's Armor/EX": ["Exile", "Spoiler"],
  "Insulated Plating": ["0b10"],
  "Med. Insulated Plating": ["0b10"],
  "Hvy. Insulated Plating": ["0b10"],
  "Damper Plating": ["0b10"],
  "Zio. Shade Carapace": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Shade Armor": ["Derelict", "Spoiler", "Zionite"],
  "Asb. Alloy Armor": ["Golem", "Spoiler"],
  "Active Cooling Armor": ["0b10"],
  "Powered Armor": ["0b10"],
  "Imp. Powered Armor": ["0b10"],
  "Adv. Powered Armor": ["0b10"],
  "Exp. Powered Armor": ["Lab", "0b10"],
  "1C-UTU's Buckler": ["Derelict", "Heroes", "Spoiler"],
  "Lgt. Regenerative Plating": ["0b10", "Spoiler"],
  "Med. Regenerative Plating": ["0b10", "Lab", "Spoiler"],
  "Hvy. Regenerative Plating": ["0b10", "Lab", "Spoiler"],
  "SHELL Armor": ["Spoiler", "Testing"],
  "Phase Armor": ["Alien", "Quarantine", "Spoiler"],
  "Focal Shield": ["0b10"],
  "Imp. Focal Shield": ["0b10"],
  "Adv. Focal Shield": ["0b10"],
  "Exp. Focal Shield": ["0b10"],
  "Thermal Shield": ["0b10"],
  "Imp. Thermal Shield": ["0b10"],
  "Adv. Thermal Shield": ["0b10"],
  "Exp. Thermal Shield": ["0b10"],
  "Thermal Barrier": ["0b10"],
  "Beam Splitter": ["0b10"],
  "Thermal Defense Suite": ["0b10"],
  "Imp. Thermal Defense Suite": ["0b10"],
  "Adv. Thermal Defense Suite": ["0b10"],
  "Exp. Thermal Defense Suite": ["0b10"],
  "Shock Absorption System": ["0b10"],
  "Imp. Shock Absorption System": ["0b10"],
  "Exp. Shock Absorption System": ["0b10"],
  "EM Shield": ["0b10"],
  "EM Disruption Field": ["0b10"],
  "Adv. EM Disruption Field": ["0b10"],
  "Exp. EM Disruption Field": ["0b10"],
  "ME-RLN's Chromatic Screen": ["Derelict", "Heroes", "Spoiler"],
  "Hardlight Generator": ["0b10"],
  "Imp. Hardlight Generator": ["0b10"],
  "Adv. Hardlight Generator": ["0b10"],
  "Exp. Hardlight Generator": ["Spoiler", "Testing"],
  "Shield Generator": ["0b10"],
  "Imp. Shield Generator": ["0b10"],
  "Adv. Shield Generator": ["0b10"],
  "Exp. Shield Generator": ["0b10"],
  "Force Field": ["0b10"],
  "Imp. Force Field": ["0b10"],
  "Adv. Force Field": ["0b10"],
  "Exp. Force Field": ["0b10"],
  "7V-RTL's Ultimate Field": ["Derelict", "Heroes", "Spoiler"],
  "Vortex Field Projector": ["Derelict", "Spoiler"],
  "Remote Shield": ["0b10"],
  "Imp. Remote Shield": ["0b10"],
  "Adv. Remote Shield": ["0b10"],
  "Remote Force Field": ["0b10"],
  "Imp. Remote Force Field": ["0b10"],
  "Energy Mantle": ["0b10"],
  "Imp. Energy Mantle": ["0b10"],
  "AEGIS Remote Shield": ["Lab", "Spoiler", "Testing"],
  "Phase Redirector": ["Alien", "Quarantine", "Spoiler"],
  "Point Defense System": ["0b10"],
  "Point Defense Array": ["0b10"],
  "Antimissile System": ["0b10"],
  "EX Chip 1": ["Exile"],
  "Hacking Suite": ["0b10"],
  "Mak. Hacking Suite": ["Derelict"],
  "Imp. Hacking Suite": ["0b10"],
  "Adv. Hacking Suite": ["0b10"],
  "Exp. Hacking Suite": ["0b10"],
  "System Mapper": ["Spoiler", "Testing"],
  "Deep Network Scanner": ["Lab", "Spoiler"],
  "Architect God Chip A": ["Architects", "Redacted"],
  "EX Chip 2": ["Exile"],
  "System Shield": ["0b10"],
  "Mak. System Shield": ["Derelict"],
  "Imp. System Shield": ["0b10"],
  "Adv. System Shield": ["0b10"],
  "Exp. System Shield": ["0b10"],
  "Ghost Barrier": ["Spoiler", "Testing"],
  "Quantum Router": ["Lab", "Spoiler"],
  "Architect God Chip D": ["Architects", "Redacted"],
  "Authchip [R/Combat]": ["0b10"],
  "Authchip [R/NC]": ["0b10"],
  "Authchip [Armor]": ["0b10"],
  "Authchip [Device]": ["0b10"],
  "Authchip [Power]": ["0b10"],
  "Authchip [Processor]": ["0b10"],
  "Authchip [Propulsion]": ["0b10"],
  "Authchip [Storage]": ["0b10"],
  "Authchip [Weapon]": ["0b10"],
  "Relay Coupler [NC]": ["0b10"],
  "Relay Coupler [C]": ["0b10"],
  "Relay Coupler [ARC]": ["0b10"],
  "Relay Coupler [Swarmer]": ["0b10"],
  "Relay Coupler [Cutter]": ["0b10"],
  "Relay Coupler [Grunt]": ["0b10"],
  "Relay Coupler [Brawler]": ["0b10"],
  "Relay Coupler [Duelist]": ["0b10"],
  "Relay Coupler [Sentry]": ["0b10"],
  "Relay Coupler [Demolisher]": ["0b10"],
  "Relay Coupler [Specialist]": ["0b10"],
  "Relay Coupler [Hunter]": ["0b10"],
  "Relay Coupler [Heavy]": ["0b10"],
  "Relay Coupler [Behemoth]": ["0b10"],
  "Relay Coupler [Programmer]": ["0b10", "Spoiler", "Zion"],
  "Skeleton Box": ["Exile"],
  "01-MTF's Autohacker": ["Derelict", "Spoiler"],
  "Component Analysis Suite": ["0b10"],
  "Imp. Component Analysis Suite": ["0b10"],
  "Adv. Component Analysis Suite": ["0b10"],
  "Dynamic Insulation System": ["0b10"],
  "Imp. Dynamic Insulation System": ["0b10"],
  "Adv. Dynamic Insulation System": ["0b10"],
  "System Guard": ["0b10"],
  "Imp. System Guard": ["0b10"],
  "Exp. System Guard": ["0b10"],
  "Corruption Screen": ["0b10"],
  "Imp. Corruption Screen": ["0b10"],
  "Adv. Corruption Screen": ["0b10"],
  "Mak. System Restoration Module": ["Derelict"],
  "System Restoration Module": ["0b10"],
  "Imp. System Restoration Module": ["0b10"],
  "Adv. System Restoration Module": ["0b10"],
  "System Purifier": ["0b10"],
  "Exp. System Purifier": ["0b10"],
  "Tractor Beam": ["0b10"],
  "Hpw. Tractor Beam": ["0b10"],
  "Lrn. Tractor Beam": ["0b10"],
  "Mobile Refinery Mk. CCLXVII": ["Derelict", "Spoiler", "Zion"],
  "Trap Extractor": ["0b10"],
  "Imp. Trap Extractor": ["0b10"],
  "Adv. Trap Extractor": ["0b10"],
  "Trap Reconfigurator": ["Exile"],
  "Recalibrator": ["0b10"],
  "Imp. Recalibrator": ["0b10"],
  "Adv. Recalibrator": ["0b10"],
  "Field Recycling Unit": ["0b10"],
  "Imp. Field Recycling Unit": ["0b10"],
  "Adv. Field Recycling Unit": ["0b10"],
  "Exp. Field Recycling Unit": ["0b10"],
  "Drone Bay": ["0b10"],
  "Z-Drone Bay": ["Derelict", "Spoiler", "Zionite"],
  "Mni. Drone Bay": ["0b10"],
  "Mapping Drone Bay": ["Derelict"],
  "Adv. Drone Bay": ["0b10"],
  "Bomb Drone Bay": ["Derelict"],
  "Thief Drone Bay": ["Derelict"],
  "Decoy Drone Bay": ["Derelict"],
  "Splice Drone Bay": ["Derelict"],
  "Combat Drone Bay": ["Derelict", "Spoiler"],
  "Stealth Drone Bay": ["0b10"],
  "Assault Drone Bay": ["Derelict", "Spoiler"],
  "Supersonic Drone Bay": ["Exile"],
  "Sensor Drone Bay": ["Derelict"],
  "Hacking Drone Bay": ["Derelict", "Spoiler", "Zion"],
  "Army-in-a-Box": ["Exile"],
  "Minesniffer Drone Bay": ["Derelict", "Spoiler", "Warlord"],
  "Wardrone Bay": ["Derelict", "Spoiler"],
  "Bomb Factory No. 2": ["Derelict", "Spoiler"],
  "Mobile Assembly Unit": ["Spoiler"],
  "Heart of Steel": ["Derelict", "Spoiler"],
  "GOLEM Unit": ["Golem", "Spoiler"],
  "PSU Rigger": ["Exile"],
  "Phasing AFG": ["Derelict", "Spoiler", "Zion"],
  "AS-neutralizer No. 17b": ["Exile", "Spoiler"],
  "Chronowheel": ["Exile"],
  "Dimensional Node Initializer": ["Alien", "Quarantine", "Spoiler"],
  "Transdimensional Reconstructor": ["Alien", "Lab", "Quarantine", "S7 Hangar", "Spoiler"],
  "Hpw. Transdimensional Reconstructor": ["Alien", "Quarantine", "S7 Hangar", "Spoiler"],
  "Core Expander": ["Alien", "Lab", "S7 LRC Lab", "Spoiler"],
  "Core Regenerator": ["Alien", "Lab", "S7 Guarded", "Redacted"],
  "Integrity Redistributor": ["Alien", "S7 LRC Lab", "S7 Unguarded", "Redacted"],
  "Integrated Dissipator": ["Alien", "Lab", "S7 LRC Lab", "S7 Unguarded", "Spoiler"],
  "Supercharged Integrated Dissipator": ["Alien", "Spoiler"],
  "Integrated Thermoelectric Network": ["Alien", "S7 Guarded", "Spoiler"],
  "Integrated Reactor": ["Alien", "Lab", "S7 Unguarded", "S7 LRC Lab", "Spoiler"],
  "Supercharged Integrated Reactor": ["Alien", "Spoiler"],
  "Core Membrane": ["Alien", "S7 Guarded", "Redacted"],
  "Navigation Efficiency Matrix": ["Alien", "S7 Guarded", "Redacted"],
  "Core Reset Matrix": ["Alien", "Lab", "Quarantine", "S7 Unguarded", "Spoiler"],
  "Subatomic Replicator": ["Alien", "Quarantine", "Spoiler"],
  "Terrabomb": ["Alien", "Quarantine", "S7 Hangar", "Spoiler"],
  "Matter Drive": ["Alien", "Quarantine", "S7 Hangar", "Spoiler"],
  "LRC Armor": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Storage": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Energy Well": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Matter Compressor": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Boosters": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Insulator": ["Alien", "S7 LRC Lab", "Redacted"],
  "Integrated Mediator": ["Alien", "Lab", "S7 Unguarded", "Redacted"],
  "Core Physics Calibrator": ["Alien", "S7 Guarded", "Redacted"],
  "Spacefold Activator": ["Alien", "S7 Unguarded", "Redacted"],
  "LC Capacitor": ["Alien", "Lab", "Redacted"],
  "Microwarp Drive": ["Alien", "S7 Unguarded", "Redacted"],
  "EM Pulse Gun": ["0b10"],
  "Hvy. EM Pulse Gun": ["0b10"],
  "EM Shotgun": ["0b10"],
  "Imp. EM Shotgun": ["0b10"],
  "Shock Rifle": ["0b10"],
  "Riot Gun": ["Derelict"],
  "Hvy. EM Shotgun": ["0b10"],
  "Lightning Gun": ["0b10"],
  "Hvy. Riot Gun": ["Derelict"],
  "Arc Projector": ["0b10"],
  "Prc. Shock Rifle": ["0b10"],
  "Hpw. Shock Rifle": ["0b10"],
  "Arc Thrower": ["Derelict"],
  "Imp. Lightning Gun": ["0b10"],
  "Tesla Rifle": ["0b10"],
  "Imp. Arc Projector": ["0b10"],
  "Hvy. Tesla Rifle": ["0b10"],
  "Hyp. EM Gauss Rifle": ["Lab", "Spoiler", "Testing"],
  "Imp. Arc Thrower": ["0b10"],
  "01-MTF's Shockpuncher": ["Derelict", "Spoiler"],
  "Gamma Rifle": ["0b10"],
  "Tachyon Dispersion Ray": ["Lab", "Spoiler", "Testing"],
  "Immobilizer": ["0b10"],
  "Modified EM Gauss Rifle": ["Spoiler"],
  "AWS/EX-DEC": ["Exile"],
  "Enh. Gamma Rifle": ["0b10"],
  "Med. Laser": ["0b10"],
  "Sml. Laser": ["0b10"],
  "Backup Laser I": ["0b10"],
  "Beam Rifle": ["0b10"],
  "Particle Gun": ["0b10"],
  "Spread Laser": ["0b10"],
  "Imp. Medium Laser": ["0b10"],
  "Pulse Rifle": ["0b10"],
  "Field Laser": ["0b10"],
  "Backup Laser III": ["0b10"],
  "Hvy. Particle Gun": ["0b10"],
  "Prc. Beam Rifle": ["0b10"],
  "Adv. Beam Rifle": ["0b10"],
  "Hvy. Laser": ["0b10"],
  "Gatling Laser": ["0b10"],
  "Cld. Pulse Rifle": ["0b10"],
  "Hpw. Field Laser": ["0b10"],
  "Imp. Spread Laser": ["0b10"],
  "Mak. Laser": ["Derelict"],
  "Plasma Rifle": ["0b10"],
  "Thermic Laser": ["0b10"],
  "Force Rifle": ["0b10"],
  "Beamcaster": ["Derelict"],
  "Storm Laser": ["Derelict", "Spoiler", "Zion"],
  "Imp. Heavy Laser": ["0b10"],
  "Zio. Laser-S": ["Derelict", "Spoiler", "Zionite"],
  "Wave Gun": ["0b10"],
  "Variable Charge Gun": ["0b10"],
  "Hvy. Beamcaster": ["Derelict"],
  "Cld. Plasma Rifle": ["0b10"],
  "Enh. Force Rifle": ["0b10"],
  "Hvy. Gatling Laser": ["0b10"],
  "Zio. Phaser-S": ["Derelict", "Spoiler", "Zionite"],
  "Phase Gun": ["0b10"],
  "Dispersion Rifle": ["0b10"],
  "PD Laser": ["0b10"],
  "Backup Laser VII": ["0b10"],
  "Plasma Storm": ["Derelict", "Spoiler", "Warlord"],
  "Adv. Plasma Rifle": ["0b10"],
  "Hvy. Wave Gun": ["0b10"],
  "Adv. Variable Charge Gun": ["0b10"],
  "Cld. Phase Gun": ["0b10"],
  "Lrn. Gatling Laser": ["Architects", "Redacted"],
  "Warp Gun": ["Spoiler", "Testing"],
  "Vortex Rifle": ["Derelict", "Spoiler", "Warlord"],
  "Zio. Laser-M": ["Derelict", "Spoiler", "Zionite"],
  "AWS/Thermal": ["Exile"],
  "Quantum Rifle": ["0b10"],
  "Prc. Phase Gun": ["0b10"],
  "Hvy. Dispersion Rifle": ["0b10"],
  "Vortex Shotgun": ["Derelict", "Spoiler", "Warlord"],
  "Vortex Rail": ["Derelict", "Spoiler", "Warlord"],
  "Zio. Phaser-M": ["Derelict", "Spoiler", "Zionite"],
  "Enh. Quantum Rifle": ["0b10"],
  "Hvy. Quantum Rifle": ["Spoiler", "Testing"],
  "Zio. Laser-H": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Phaser-H": ["Derelict", "Spoiler", "Zionite"],
  "Gatling Beam": ["Architects", "Redacted"],
  "Sigix Sheargun": ["Alien", "S7 Hangar", "Redacted"],
  "Sigix Shearcannon": ["Alien", "S7 Guarded", "S7 Hangar", "Redacted"],
  "Drained L-Cannon": ["Alien", "S7 Hangar", "Redacted"],
  "L-Cannon": ["Alien", "Redacted"],
  "Modified Sigix Sheargun": ["Alien", "Architects", "Redacted"],
  "Lgt. EM Pulse Cannon": ["0b10"],
  "EM Pulse Cannon": ["0b10"],
  "Imp. EM Pulse Cannon": ["0b10"],
  "Proton Cannon": ["0b10"],
  "Lrn. Proton Cannon": ["0b10"],
  "Disruptor Cannon": ["0b10"],
  "Hvy. Proton Cannon": ["0b10"],
  "HERF Cannon": ["0b10"],
  "Hvy. Disruptor Cannon": ["0b10"],
  "Cld. Proton Cannon": ["0b10"],
  "Proton Burst Cannon": ["0b10"],
  "Com. HERF Cannon": ["0b10"],
  "Latent Energy Streamer": ["Exile"],
  "NK-0LA's Tesla Doomcannon": ["Derelict", "Heroes", "Spoiler"],
  "EMDS": ["Spoiler"],
  "Hpw. Disruptor Cannon": ["Spoiler", "Testing"],
  "Beam Cannon": ["0b10"],
  "Particle Cannon": ["0b10"],
  "Adv. Beam Cannon": ["0b10"],
  "Hvy. Particle Cannon": ["0b10"],
  "Ion Cannon": ["0b10"],
  "Hvy. Ion Cannon": ["0b10"],
  "Plasma Cannon": ["0b10"],
  "Cld. Particle Cannon": ["0b10"],
  "Phase Cannon": ["0b10"],
  "Hvy. Plasma Cannon": ["0b10"],
  "Cld. Plasma Cannon": ["0b10"],
  "Com. Ion Cannon": ["0b10"],
  "Ion Burst Cannon": ["0b10"],
  "Adv. Plasma Cannon": ["0b10"],
  "Hvy. Phase Cannon": ["0b10"],
  "Neutron Cannon": ["0b10"],
  "Matter Neutralizer": ["0b10"],
  "Hvy. Neutron Cannon": ["0b10"],
  "Lrn. Phase Cannon": ["0b10"],
  "Cld. Phase Cannon": ["0b10"],
  "Vortex Cannon": ["Derelict", "Spoiler", "Warlord"],
  "Gui. Plasma Cannon": ["Exile"],
  "Nova Cannon": ["0b10"],
  "Imp. Matter Neutralizer": ["0b10"],
  "Vortex Driver": ["Derelict", "Spoiler", "Warlord"],
  "Zio. Alpha Cannon": ["Derelict", "Spoiler", "Zionite"],
  "Asb. Focal Cannon": ["Golem", "Spoiler"],
  "Enh. Nova Cannon": ["0b10"],
  "Firepult": ["Exile"],
  "YOLO Cannon": ["Exile"],
  "Potential Cannon": ["Lab", "Spoiler", "Testing"],
  "Warp Cannon": ["Lab", "Redacted"],
  "Cld. Nova Cannon": ["Spoiler", "Testing"],
  "Null Cannon": ["Spoiler", "Testing"],
  "Imp. Potential Cannon": ["Spoiler", "Testing"],
  "Disintegrator": ["Spoiler", "Testing"],
  "Core Cannon": ["Alien", "Quarantine", "Spoiler"],
  "Zio. Alpha Cannon Mk. II": ["Derelict", "Spoiler", "Zionite"],
  "BFG-9k Vortex Edition": ["Exile", "Spoiler", "Warlord"],
  "Assault Rifle": ["0b10"],
  "Lgt. Assault Rifle": ["0b10"],
  "Hvy. Assault Rifle": ["0b10"],
  "Autogun": ["0b10"],
  "Shotgun": ["0b10"],
  "Battle Rifle": ["Derelict"],
  "Imp. Assault Rifle": ["0b10"],
  "Minigun": ["0b10"],
  "Hpw. Shotgun": ["0b10"],
  "Asb. Shotgun": ["Unobtainable"],
  "Barrage Gun": ["Derelict"],
  "Enh. Autogun": ["0b10"],
  "Gauss Rifle": ["0b10"],
  "Asb. Gauss Rifle": ["Unobtainable"],
  "Flak Gun": ["0b10"],
  "Prc. Assault Rifle": ["0b10"],
  "Hvy. Battle Rifle": ["Derelict"],
  "Mak. Shrapnel Gun": ["Derelict"],
  "Coil Gun": ["0b10"],
  "Hyp. Gauss Rifle": ["0b10"],
  "Hvy. Machine Gun": ["0b10"],
  "Imp. Heavy Machine Gun": ["0b10"],
  "Com. Gauss Rifle": ["0b10", "Spoiler", "Unobtainable"],
  "XL Autogun Subcomponent": ["Exile"],
  "KE Penetrator": ["0b10"],
  "Hyp. Coil Gun": ["0b10"],
  "Enh. Coil Gun": ["0b10"],
  "Com. Coil Gun": ["0b10", "Spoiler", "Unobtainable"],
  "Railgun": ["0b10"],
  "Imp. KE Penetrator": ["0b10"],
  "Linked Autogun": ["0b10"],
  "AWS/Gauss": ["Exile"],
  "Hyp. Railgun": ["0b10"],
  "Adv. KE Penetrator": ["0b10"],
  "Helical Railgun": ["0b10"],
  "Com. Railgun": ["0b10", "Spoiler", "Unobtainable"],
  "XL Autogun Array": ["Exile"],
  "12-ASH's Boomstick": ["Derelict", "Heroes", "Spoiler"],
  "8R-AWN's Boregun": ["Exile", "Spoiler"],
  "Multirail": ["0b10"],
  "Hyp. Multirail": ["Spoiler", "Testing"],
  "5H-AD0's Sniper Rifle": ["Derelict", "Spoiler"],
  "A3's Sniper Rifle": ["Architects", "Redacted"],
  "Lgt. Cannon": ["0b10"],
  "Imp. Light Cannon": ["0b10"],
  "Battle Cannon": ["Derelict"],
  "Assault Cannon": ["0b10"],
  "Hvy. Assault Cannon": ["0b10"],
  "Flak Cannon": ["0b10"],
  "Adv. Assault Cannon": ["0b10"],
  "Gauss Cannon": ["0b10"],
  "Slug Cannon": ["Derelict"],
  "Mni. Assault Cannon": ["0b10"],
  "Magnetic Acceleration Cannon": ["0b10"],
  "Hvy. Flak Cannon": ["0b10"],
  "Bore Cannon": ["Derelict"],
  "Antimatter Cannon": ["0b10"],
  "Mass Driver": ["0b10"],
  "Hvy. Mass Driver": ["0b10"],
  "Enh. Gauss Cannon": ["0b10"],
  "Hyp. Gauss Cannon": ["0b10"],
  "Tri-rail Accelerator": ["0b10"],
  "Hardcell Cannon": ["0b10"],
  "Hvy. Gauss Cannon": ["0b10"],
  "Hyp. Mass Driver": ["0b10"],
  "Hvy. Autocannon": ["0b10"],
  "Lgt. Antimatter Cannon": ["0b10"],
  "Linear Accelerator": ["0b10"],
  "Hvy. Linear Accelerator": ["0b10"],
  "Com. Mass Driver": ["0b10"],
  "Hvy. Hardcell Cannon": ["0b10"],
  "Com. Linear Accelerator": ["0b10"],
  "Hyp. Linear Accelerator": ["Architects", "Redacted"],
  "Hcl. Linear Accelerator": ["0b10", "Spoiler"],
  "Graviton Cannon": ["0b10"],
  "Blast Cannon": ["Derelict", "Redacted", "Warlord"],
  "P1-3CE's Gatling Flakker": ["Derelict", "Heroes", "Spoiler"],
  "AWS/Autocannon": ["Exile"],
  "Perforator": ["Spoiler", "Testing"],
  "Omega Cannon": ["Spoiler", "Testing"],
  "EMP Blaster": ["0b10"],
  "Shock Bomb Launcher": ["0b10"],
  "Adv. EMP Blaster": ["0b10"],
  "Proton Missile Launcher": ["0b10"],
  "Imp. Proton Missile Launcher": ["0b10"],
  "Gui. EMP Blaster": ["0b10"],
  "Hvy. Shock Bomb Launcher": ["0b10"],
  "Tesla Bomb Launcher": ["0b10"],
  "Hvy. Proton Missile Launcher": ["0b10"],
  "Com. Tesla Bomb Launcher": ["0b10"],
  "Gamma Bomb Array": ["0b10"],
  "Enh. Gamma Bomb Array": ["0b10"],
  "Grenade Launcher": ["0b10"],
  "Rocket Launcher": ["0b10"],
  "Mni. Grenade Launcher": ["0b10"],
  "Imp. Grenade Launcher": ["0b10"],
  "Missile Launcher": ["0b10"],
  "Concussive RPG": ["0b10"],
  "YI-UF0's Doublenader": ["Derelict"],
  "Hvy. Rocket Launcher": ["0b10"],
  "Hvy. Missile Launcher": ["0b10"],
  "Gui. Missile Launcher": ["Derelict"],
  "Prc. Grenade Launcher": ["0b10"],
  "Rocket Array": ["0b10"],
  "Lrn. Missile Launcher": ["0b10"],
  "Imp. Concussive RPG": ["0b10"],
  "Prc. Rocket Launcher": ["0b10"],
  "Scatter Rocket Array": ["0b10"],
  "Thermoblaster": ["Derelict", "Warlord"],
  "Smartbomb Launcher": ["0b10"],
  "Mni. Smartbomb Launcher": ["0b10"],
  "Tiamat Missile Launcher": ["0b10"],
  "Micro-nuke Launcher": ["0b10"],
  "Adv. Concussive RPG": ["0b10"],
  "Neutron Missile Launcher": ["0b10"],
  "Fusion Bomb Launcher": ["0b10"],
  "Hellfire Missile Launcher": ["0b10"],
  "Adv. Micro-nuke Launcher": ["0b10"],
  "Tactical Quantum Warhead": ["0b10"],
  "Vortex Catalyst Activator": ["Derelict", "Spoiler", "Warlord"],
  "Chain Missile Launcher": ["Spoiler"],
  "Ragnarok Missile Launcher": ["0b10"],
  "Point Singularity Launcher": ["0b10"],
  "Gui. Micro-nuke Launcher": ["0b10"],
  "99-TNT's Nukerbomber": ["Derelict", "Heroes", "Spoiler"],
  "Z-bomb Delivery System": ["Spoiler", "Testing"],
  "Sigix Terminator": ["Alien", "Quarantine", "Spoiler"],
  "Supercharged Sigix Terminator": ["Alien", "Spoiler"],
  "Containment Facilitator": ["0b10"],
  "Datajack": ["0b10"],
  "Imp. Datajack": ["0b10"],
  "Adv. Datajack": ["0b10"],
  "Dirty Datajack": ["Derelict"],
  "Remote Datajack": ["0b10"],
  "Imp. Remote Datajack": ["0b10"],
  "Adv. Remote Datajack": ["0b10"],
  "Exp. Remote Datajack": ["0b10"],
  "Gui. Remote Datajack": ["Lab", "Spoiler", "Testing"],
  "ME-RLN's Wand": ["Derelict", "Spoiler"],
  "Field Lobotomy Kit": ["Exile"],
  "Mining Laser": ["0b10"],
  "Welding Torch": ["0b10"],
  "Plasma Cutter": ["0b10"],
  "Imp. Plasma Cutter": ["0b10"],
  "Flamer": ["Derelict"],
  "Enh. Flamer": ["Derelict"],
  "Plasma Flamer": ["Derelict"],
  "RU-N14's Throwing Claymores": ["Derelict", "Spoiler", "Zion"],
  "RU-N14's Throwing Claymores v3": ["Derelict", "Spoiler", "Warlord"],
  "Asb. P-torch": ["Unobtainable"],
  "AD-0RF's Magmablaster": ["Derelict", "Heroes", "Spoiler"],
  "Stasis Beam": ["0b10"],
  "Stasis Projector": ["0b10"],
  "Exp. Stasis Projector": ["0b10"],
  "Molecular Deconstructor": ["Derelict", "Spoiler"],
  "Hammer": ["0b10"],
  "Mace": ["0b10"],
  "Flail": ["0b10"],
  "Maul": ["0b10"],
  "Asb. Maul": ["Unobtainable"],
  "Hvy. Hammer": ["0b10"],
  "Hvy. Mace": ["0b10"],
  "Hvy. Flail": ["0b10"],
  "Great Maul": ["0b10"],
  "Powered Hammer": ["0b10"],
  "Mak. Hammer": ["Derelict"],
  "Power Maul": ["0b10"],
  "Asb. P-maul": ["Unobtainable"],
  "Impact Mace": ["0b10"],
  "Shock Maul": ["0b10"],
  "Thunder Hammer": ["0b10"],
  "Compactor": ["0b10", "Unobtainable"],
  "Gravity Flail": ["0b10"],
  "CL-ANK's Mallet": ["Derelict", "Heroes", "Spoiler"],
  "Core Stripper": ["Alien", "Quarantine", "Spoiler"],
  "Mining Claw": ["0b10"],
  "Etherial Claws": ["Unobtainable"],
  "Katana": ["0b10"],
  "Scythe": ["0b10"],
  "Axe": ["0b10"],
  "Blade Saw": ["0b10"],
  "Chainsword": ["0b10"],
  "Ripper": ["Derelict"],
  "Mak. Axe": ["Derelict"],
  "Mak. Sword": ["Derelict"],
  "Great Axe": ["0b10"],
  "Greatsword": ["0b10"],
  "Power Sword": ["0b10"],
  "Asb. P-sword": ["Unobtainable"],
  "Falx": ["0b10"],
  "Carbide Saw": ["0b10"],
  "Segregator": ["0b10"],
  "Tearclaws": ["Derelict"],
  "Phasing Sabre": ["Derelict"],
  "Plasma Sword": ["0b10"],
  "Ionic Axe": ["0b10"],
  "Dual-blade Saw": ["0b10"],
  "Vibroblade": ["0b10"],
  "Molecular Scythe": ["0b10"],
  "Centrium Greatsword": ["0b10"],
  "Master Tearclaws": ["Derelict", "Spoiler"],
  "Longsword +1": ["Exile"],
  "Nanosword": ["0b10"],
  "Particle Cleaver": ["Derelict", "Spoiler"],
  "Centrium Claws": ["Derelict", "Spoiler", "Unobtainable"],
  "1C-UTU's Sword \"Lootmaker\"": ["Derelict", "Heroes", "Spoiler"],
  "1C-UTU's Sword \"Choppy\"": ["Derelict", "Heroes", "Spoiler"],
  "Vortex Shredder": ["Derelict", "Spoiler", "Unobtainable", "Warlord"],
  "Sigix Broadsword": ["Alien", "Quarantine", "Spoiler"],
  "Spear": ["0b10"],
  "Mak. Spear": ["Derelict"],
  "CR-A16's Pointy Stick": ["Derelict", "Spoiler", "Zion"],
  "Hvy. Pick": ["0b10"],
  "Lance": ["0b10"],
  "Kinetic Spear": ["0b10"],
  "Force Lance": ["0b10"],
  "Plasma Lance": ["0b10"],
  "Enh. Force Lance": ["0b10"],
  "Vortex Lance": ["Derelict", "Spoiler"],
  "CR-A16's Behemoth Slayer": ["Derelict", "Spoiler", "Zion"],
  "Blade Trap": ["0b10"],
  "Segregator Trap": ["0b10"],
  "Explosive Trap": ["0b10"],
  "Heavy Explosive Trap": ["0b10"],
  "Tiamat Bomb Trap": ["0b10"],
  "Fusion Bomb Trap": ["0b10"],
  "Hellfire Trap": ["0b10"],
  "Armageddon Trap": ["0b10"],
  "Dirty Bomb Trap": ["Derelict"],
  "EMP Trap": ["0b10"],
  "Proton Bomb Trap": ["0b10"],
  "Tesla Bomb Trap": ["0b10"],
  "Gamma Bomb Trap": ["0b10"],
  "Shock Trap": ["0b10"],
  "EM Surge Trap": ["0b10"],
  "Fire Trap": ["0b10"],
  "Stasis Trap": ["0b10"],
  "Signal Generator": ["Derelict"],
  "Self-destruct Interrupter": ["Derelict"],
  "Deploy-a-Sentry": ["Exile"],
  "GAL Module": ["Derelict"],
  "Portable AFG": ["Spoiler", "Testing"],
  "SGEMP Prototype": ["Spoiler", "Testing"],
  "Terrabomb Derivative": ["Spoiler", "Testing"],
  "Sigix Containment Pod": ["Alien", "Quarantine", "Spoiler"],
  "Sigix Corpse": ["Alien", "Quarantine", "Spoiler"],
  "Sapper Charge": ["Derelict", "Warlord"],
  "Gamma Refractor": ["Redacted"],
  "Meganuke": ["Exile", "Redacted"],
  "Mak. Microthruster": ["Derelict"],
  "Detonator": ["Derelict"],
  "Splice Injector": ["Derelict"],
  "Mni. Tearclaws": ["Derelict"],
  "Swarm Drone Bay": ["Spoiler"],
  "DAS Cannon": ["Exile", "Spoiler"],
  "Asb. Blade": ["Unobtainable"],
  "Asb. F-torch": ["Unobtainable"],
  "Asb. Heavy Rifle": ["Unobtainable"],
  "Asb. Hover Unit": ["Unobtainable"],
  "Asb. Rifle": ["Unobtainable"],
  "Sigix Exoskeleton": ["Redacted", "S7 Hangar"]
};
},{}],"json/bot_categories.json":[function(require,module,exports) {
module.exports = {
  "01-MTF": ["Derelict", "Spoilers"],
  "12-ASH": ["Derelict", "Spoilers"],
  "1C-UTU": ["Derelict", "Spoilers"],
  "5H-AD0": ["Derelict", "Spoilers"],
  "7V-RTL": ["Derelict", "Spoilers"],
  "8R-AWN": ["Exiles", "Derelict", "Spoilers"],
  "99-TNT": ["Derelict", "Spoilers"],
  "A-02 Transporter": ["0b10"],
  "A-15 Conveyor": ["0b10"],
  "A-27 Freighter": ["0b10"],
  "A2": ["Architect", "Redacted"],
  "A3": ["Architect", "Redacted"],
  "A4": ["Architect", "Redacted"],
  "A5": ["Architect", "Redacted"],
  "A6": ["Architect", "Redacted"],
  "A7": ["Architect", "Spoilers"],
  "A8": ["Architect", "Spoilers"],
  "AD-0RF": ["Derelict", "Spoilers"],
  "Alpha 7": ["0b10", "Prototype", "Spoilers"],
  "Advanced Drone": ["0b10"],
  "Architect": ["Architect", "Redacted"],
  "Army Drone": ["Drone", "Exiles"],
  "Assault Drone": ["Derelict", "Spoilers"],
  "Assembled (4)": ["Derelict"],
  "Assembled (7)": ["Derelict"],
  "Assembler": ["Derelict", "Spoilers"],
  "B-36 Bruiser": ["0b10"],
  "B-48 Gladiator": ["0b10"],
  "B-60 Warrior": ["0b10"],
  "B-74 Champion": ["0b10"],
  "B-75 Beast": ["0b10"],
  "B-86 Titan": ["0b10"],
  "B-90 Cyclops": ["0b10"],
  "B-99 Colossus": ["0b10"],
  "Bomb Drone": ["Derelict"],
  "Borebot": ["Derelict", "Spoilers", "Warlord"],
  "Bouncer": ["Derelict", "Spoilers", "Warlord"],
  "Butcher (5)": ["Derelict"],
  "Butcher (7)": ["Derelict"],
  "C-17 Slicer": ["0b10"],
  "C-30 ARC": ["0b10"],
  "C-35 Carver": ["0b10"],
  "C-40 Crusher": ["0b10"],
  "C-55 Analyst": ["0b10"],
  "C-57 Dissector": ["0b10"],
  "C-65 Expert": ["0b10"],
  "Cetus Guard": ["0b10", "Prototype", "Spoilers"],
  "CL-ANK": ["Derelict", "Spoilers"],
  "Combat Drone": ["Derelict", "Spoilers"],
  "Combat Programmer": ["0b10", "Prototype", "Spoilers"],
  "Commander": ["Derelict"],
  "D-53 Grenadier": ["0b10"],
  "D-63 Destroyer": ["0b10"],
  "D-83 Annihilator": ["0b10"],
  "DAS Turret": ["Derelict", "Exiles"],
  "Data Miner": ["Architect", "Spoilers"],
  "Decomposer": ["Derelict"],
  "Decoy Drone": ["Derelict"],
  "Demented": ["Derelict"],
  "Dragon": ["Derelict", "Spoilers", "Warlord"],
  "Drone": ["0b10"],
  "E-15 Imp": ["0b10"],
  "Enhanced Demolisher": ["Architect", "Spoilers"],
  "Enhanced Grunt": ["Architect", "Spoilers"],
  "Enhanced Hunter": ["Architect", "Redacted"],
  "Enhanced Programmer": ["Architect", "Redacted"],
  "Enhanced Q-Series": ["Architect", "Redacted"],
  "Enhanced Q-Series Ex 1": ["Architect", "Redacted"],
  "Enhanced Q-Series Ex 2": ["Architect", "Redacted"],
  "Enhanced Q-Series Ex 3": ["Architect", "Redacted"],
  "Enhanced Sentry": ["Architect", "Redacted"],
  "EX-BIN": ["Derelict", "Exiles"],
  "EX-DEC": ["Derelict", "Exiles"],
  "EX-HEX": ["Derelict", "Exiles"],
  "Executioner": ["0b10", "Prototype", "Spoilers"],
  "Fireman (5)": ["Derelict"],
  "Fireman (7)": ["Derelict"],
  "Fortress": ["0b10", "Prototype", "Redacted"],
  "Furnace": ["Derelict"],
  "G-34 Mercenary": ["0b10"],
  "G-47 Trooper": ["0b10"],
  "G-50 Soldier": ["0b10"],
  "G-67 Veteran": ["0b10"],
  "G-73 Enforcer": ["0b10"],
  "God Mode": ["Derelict", "Spoilers", "Warlord"],
  "God Mode (Fake)": ["Derelict", "Spoilers", "Warlord"],
  "Golem": ["Derelict", "Spoilers"],
  "Golem (Naked)": ["Derelict", "Spoilers"],
  "Guerrilla (5)": ["Derelict"],
  "Guerrilla (7)": ["Derelict"],
  "H-55 Commando": ["0b10"],
  "H-61 Shepherd": ["0b10"],
  "H-66 Slayer": ["0b10"],
  "H-71 Marshal": ["0b10"],
  "H-77 Assassin": ["0b10"],
  "H-81 Overseer": ["0b10"],
  "H-88 Terminator": ["0b10"],
  "Hacking Drone": ["Derelict", "Spoilers"],
  "Hydra": ["Derelict", "Spoilers", "Warlord"],
  "I-25 Savior": ["0b10"],
  "I-36 Angel": ["0b10"],
  "I-47 Archangel": ["0b10"],
  "Imprinter": ["Derelict", "Spoilers", "Zionite"],
  "Investigator": ["0b10", "Prototype", "Spoilers"],
  "K-01 Serf": ["0b10"],
  "Knight": ["Derelict", "Spoilers", "Warlord"],
  "L-31 Rogue": ["0b10"],
  "L-41 Fighter": ["0b10"],
  "L-61 Swordsman": ["0b10"],
  "Lightning": ["0b10", "Prototype", "Spoilers"],
  "LRC-V4": ["0b10", "Prototype", "Redacted"],
  "LRC-V5": ["0b10", "Prototype", "Redacted"],
  "LRC-V6": ["0b10", "Prototype", "Redacted"],
  "M Guard": ["0b10", "Prototype", "Redacted"],
  "M Shell/Atk": ["0b10", "Redacted"],
  "M Shell/Def": ["0b10", "Redacted"],
  "M-13 Machinist": ["0b10"],
  "M-14 Sweeper": ["0b10"],
  "M-22 Extractor": ["0b10"],
  "M-28 Smith": ["0b10"],
  "M-30 Cleanser": ["0b10"],
  "M-36 Artificer": ["0b10"],
  "MAIN.C": ["0b10", "Redacted"],
  "MAIN.C (Shell)": ["0b10", "Redacted"],
  "Mapping Drone": ["Derelict"],
  "Marauder (6)": ["Derelict"],
  "Marauder (8)": ["Derelict"],
  "Martyr (5)": ["Derelict"],
  "Martyr (7)": ["Derelict"],
  "Master Thief": ["Derelict", "Spoilers"],
  "ME-RLN": ["Derelict", "Spoilers"],
  "Minesniffer Drone": ["Derelict", "Spoilers", "Warlord"],
  "Mutant (5)": ["Derelict"],
  "Mutant (6)": ["Derelict"],
  "Mutant (7)": ["Derelict"],
  "Mutant (8)": ["Derelict"],
  "Mini Drone": ["0b10"],
  "N-00 Fly": ["0b10"],
  "N-01 Spotter": ["0b10"],
  "NK-0LA": ["Derelict", "Spoilers"],
  "O-16 Technician": ["0b10"],
  "O-24 Administrator": ["0b10"],
  "O-32 Director": ["0b10"],
  "P-60 Hacker": ["0b10"],
  "P-70 Sage": ["0b10"],
  "P-80 Master": ["0b10"],
  "P1-3CE": ["Derelict", "Spoilers"],
  "Packrat": ["Derelict"],
  "Parasite": ["Derelict"],
  "Perun": ["Derelict", "Spoilers", "Zhirov"],
  "PL-HR7": ["Derelict"],
  "Protovariant D": ["0b10", "Prototype", "Spoilers"],
  "Protovariant G": ["0b10", "Prototype", "Spoilers"],
  "Protovariant H": ["0b10", "Prototype", "Spoilers"],
  "Protovariant L": ["0b10", "Prototype", "Spoilers"],
  "Protovariant P": ["0b10", "Prototype", "Spoilers"],
  "Protovariant X": ["0b10", "Prototype", "Spoilers"],
  "Protovariant Y": ["0b10", "Prototype", "Spoilers"],
  "Q-Series": ["0b10", "Spoilers"],
  "Q-Series Example 1": ["0b10", "Spoilers"],
  "Q-Series Example 2": ["0b10", "Spoilers"],
  "Q-Series Example 3": ["0b10", "Spoilers"],
  "Quarantine Guard": ["0b10", "Prototype", "Spoilers"],
  "R-06 Scavenger": ["0b10"],
  "R-10 Processor": ["0b10"],
  "Revision": ["Derelict", "Spoilers"],
  "Revision 17": ["Derelict", "Spoilers"],
  "Revision 17++": ["Derelict", "Spoilers"],
  "S7 Guard": ["0b10", "Prototype", "Redacted"],
  "S-10 Pest": ["0b10"],
  "S-27 Virus": ["0b10"],
  "S-43 Plague": ["0b10"],
  "Samaritan": ["Derelict"],
  "Sapper": ["Derelict"],
  "Savage (5)": ["Derelict"],
  "Savage (7)": ["Derelict"],
  "Sensor Drone": ["Derelict"],
  "Sigix Warrior": ["Alien", "Redacted"],
  "Splice Drone": ["Derelict"],
  "Stealth Drone": ["0b10"],
  "Striker": ["0b10", "Prototype", "Spoilers"],
  "Superbehemoth": ["0b10", "Prototype", "Spoilers"],
  "Surgeon (4)": ["Derelict"],
  "Surgeon (6)": ["Derelict"],
  "Surveybot 24": ["Derelict", "Spoilers"],
  "Svarog": ["Derelict", "Spoilers", "Zhirov"],
  "Swarm Drone": ["0b10", "Spoilers"],
  "T-07 Excavator": ["0b10"],
  "Target Drone": ["0b10"],
  "Thief": ["Derelict"],
  "Thief Drone": ["Derelict"],
  "Thug (5)": ["Derelict"],
  "Thug (7)": ["Derelict"],
  "Tinkerer": ["Derelict"],
  "Tracker": ["0b10", "Prototype", "Spoilers"],
  "Trailblazer": ["Drone", "Exiles"],
  "Troll": ["Derelict", "Spoilers"],
  "U-05 Engineer": ["0b10"],
  "W-16 Scout": ["0b10"],
  "W-25 Informer": ["0b10"],
  "W-44 Eye": ["0b10"],
  "Warbot": ["Derelict", "Spoilers"],
  "Wardrone": ["Drone", "Spoilers", "Warlord"],
  "Warlord": ["Derelict", "Spoilers", "Warlord"],
  "Warlord (Command)": ["Derelict", "Redacted", "Warlord"],
  "Warlord 4Z-XS3": ["Derelict", "Redacted"],
  "Warlord AM-PH4": ["Derelict", "Redacted"],
  "Warlord D3-CKR": ["Derelict", "Redacted"],
  "Warlord HL-1SK": ["Derelict", "Redacted"],
  "Warlord KY-Z71": ["Derelict", "Redacted"],
  "Warlord MG-163": ["Derelict", "Redacted"],
  "Warlord SH-K8T": ["Derelict", "Redacted"],
  "Warlord Statue": ["Derelict"],
  "Wasp (5)": ["Derelict"],
  "Wasp (7)": ["Derelict"],
  "Wizard (5)": ["Derelict"],
  "Wizard (7)": ["Derelict"],
  "X-57 Shotgunner": ["0b10"],
  "X-62 Marksman": ["0b10"],
  "X-67 Chaingunner": ["0b10"],
  "X-72 Disruptor": ["0b10"],
  "X-77 Beamer": ["0b10"],
  "X-82 Rainmaker": ["0b10"],
  "X-87 Electro": ["0b10"],
  "Y-45 Defender": ["0b10"],
  "Y-54 Guardian": ["0b10"],
  "Y-64 Sentinel": ["0b10"],
  "Y-72 Warden": ["0b10"],
  "YI-UF0": ["Derelict"],
  "Z-Courier": ["Derelict", "Spoilers", "Zionite"],
  "Z-Drone": ["Derelict", "Drone", "Spoilers", "Zionite"],
  "Z-Experimental (8)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Experimental (10)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Heavy (5)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Heavy (7)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Heavy (9)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Imprinter": ["Derelict", "Spoilers", "Zionite"],
  "Z-Light (5)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Light (7)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Light (9)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Technician": ["Derelict", "Spoilers", "Zionite"],
  "Zhirov": ["Derelict", "Spoilers", "Zhirov"],
  "Zionite": ["Derelict", "Spoilers", "Zionite"]
};
},{}],"ts/itemTypes.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Critical = exports.Spectrum = exports.SiegeMode = exports.ItemType = exports.ItemRatingCategory = exports.HeatTransfer = exports.DamageType = void 0;
var DamageType;

(function (DamageType) {
  DamageType["Electromagnetic"] = "Electromagnetic";
  DamageType["Entropic"] = "Entropic";
  DamageType["Explosive"] = "Explosive";
  DamageType["Impact"] = "Impact";
  DamageType["Kinetic"] = "Kinetic";
  DamageType["Phasic"] = "Phasic";
  DamageType["Piercing"] = "Piercing";
  DamageType["Slashing"] = "Slashing";
  DamageType["Special"] = "Special";
  DamageType["Thermal"] = "Thermal";
})(DamageType = exports.DamageType || (exports.DamageType = {}));

var HeatTransfer;

(function (HeatTransfer) {
  HeatTransfer["Minimal"] = "Minimal (5)";
  HeatTransfer["Low"] = "Low (25)";
  HeatTransfer["Medium"] = "Medium (37)";
  HeatTransfer["High"] = "High (50)";
  HeatTransfer["Massive"] = "Massive (80)";
})(HeatTransfer = exports.HeatTransfer || (exports.HeatTransfer = {}));

var ItemRatingCategory;

(function (ItemRatingCategory) {
  ItemRatingCategory["Alien"] = "Alien";
  ItemRatingCategory["Prototype"] = "Prototype";
  ItemRatingCategory["None"] = "";
})(ItemRatingCategory = exports.ItemRatingCategory || (exports.ItemRatingCategory = {}));

var ItemType;

(function (ItemType) {
  ItemType["Artifact"] = "Artifact";
  ItemType["BallisticCannon"] = "Ballistic Cannon";
  ItemType["BallisticGun"] = "Ballistic Gun";
  ItemType["DataCore"] = "Data Core";
  ItemType["Device"] = "Device";
  ItemType["EnergyCannon"] = "Energy Cannon";
  ItemType["EnergyGun"] = "Energy Gun";
  ItemType["Engine"] = "Engine";
  ItemType["FlightUnit"] = "Flight Unit";
  ItemType["Hackware"] = "Hackware";
  ItemType["HoverUnit"] = "Hover Unit";
  ItemType["ImpactWeapon"] = "Impact Weapon";
  ItemType["Item"] = "Item";
  ItemType["Launcher"] = "Launcher";
  ItemType["Leg"] = "Leg";
  ItemType["Matter"] = "Matter";
  ItemType["PiercingWeapon"] = "Piercing Weapon";
  ItemType["PowerCore"] = "Power Core";
  ItemType["Processor"] = "Processor";
  ItemType["Protection"] = "Protection";
  ItemType["Protomatter"] = "Protomatter";
  ItemType["Reactor"] = "Reactor";
  ItemType["Scrap"] = "Scrap";
  ItemType["SlashingWeapon"] = "Slashing Weapon";
  ItemType["SpecialMeleeWeapon"] = "Special Melee Weapon";
  ItemType["SpecialWeapon"] = "Special Weapon";
  ItemType["Storage"] = "Storage";
  ItemType["Trap"] = "Trap";
  ItemType["Treads"] = "Treads";
  ItemType["Wheel"] = "Wheel";
})(ItemType = exports.ItemType || (exports.ItemType = {}));

var SiegeMode;

(function (SiegeMode) {
  SiegeMode["High"] = "High";
  SiegeMode["Standard"] = "Standard";
})(SiegeMode = exports.SiegeMode || (exports.SiegeMode = {}));

var Spectrum;

(function (Spectrum) {
  Spectrum["Wide"] = "Wide (10)";
  Spectrum["Intermediate"] = "Intermediate (30)";
  Spectrum["Narrow"] = "Narrow (50)";
  Spectrum["Fine"] = "Fine (100)";
})(Spectrum = exports.Spectrum || (exports.Spectrum = {}));

var Critical;

(function (Critical) {
  Critical["Blast"] = "Blast";
  Critical["Burn"] = "Burn";
  Critical["Corrupt"] = "Corrupt";
  Critical["Destroy"] = "Destroy";
  Critical["Detonate"] = "Detonate";
  Critical["Meltdown"] = "Meltdown";
  Critical["Impale"] = "Impale";
  Critical["Intensify"] = "Intensify";
  Critical["Phase"] = "Phase";
  Critical["Smash"] = "Smash";
  Critical["Sever"] = "Sever";
  Critical["Sunder"] = "Sunder";
})(Critical = exports.Critical || (exports.Critical = {}));
},{}],"ts/specialItemProperties.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.specialItemProperties = void 0;
exports.specialItemProperties = {
  // Actuator
  Microactuators: {
    active: "Part Active",
    trait: {
      kind: "Actuator",
      amount: 0.2
    }
  },
  Nanoactuators: {
    active: "Part Active",
    trait: {
      kind: "Actuator",
      amount: 0.3
    }
  },
  Femtoactuators: {
    active: "Part Active",
    trait: {
      kind: "Actuator",
      amount: 0.5
    }
  },
  // Airborne Speed doubling
  "ST Field Compressor": {
    active: "Part Active",
    trait: {
      kind: "AirborneSpeedDoubling"
    }
  },
  "Zio. Metafield Generator": {
    active: "Part Active",
    trait: {
      kind: "AirborneSpeedDoubling"
    }
  },
  // Energy filter
  "Energy Filter": {
    active: "Part Active",
    trait: {
      kind: "EnergyFilter",
      percent: 0.3
    }
  },
  "Prc. Energy Filter": {
    active: "Part Active",
    trait: {
      kind: "EnergyFilter",
      percent: 0.5
    }
  },
  // Energy storage
  "Sml. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 100
    }
  },
  "Med. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 150
    }
  },
  "Lrg. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 200
    }
  },
  "Com. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 200
    }
  },
  "Hcp. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 250
    }
  },
  "Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 350
    }
  },
  "Imp. Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 400
    }
  },
  "Adv. Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 500
    }
  },
  "Exp. Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 600
    }
  },
  "Asb. Biocell Array": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 1000
    }
  },
  "Zio. Biocell": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 600
    }
  },
  "Zio. Biocell Array": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 750
    }
  },
  Superbattery: {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 1500
    }
  },
  // Fusion compressor
  "Fusion Compressor": {
    active: "Part Active",
    trait: {
      kind: "FusionCompressor",
      energyPerTurn: 20
    }
  },
  "Imp. Fusion Compressor": {
    active: "Part Active",
    trait: {
      kind: "FusionCompressor",
      energyPerTurn: 30
    }
  },
  // Heat dissipation
  "2N-1CE's Frost Array": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 100
    }
  },
  "Active Cooling Armor": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 60
    }
  },
  "Coolant Network": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 90
    }
  },
  "Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 22
    }
  },
  "Imp. Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 27
    }
  },
  "Adv. Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 31
    }
  },
  "Exp. Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 38
    }
  },
  "Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 10
    }
  },
  "Imp. Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 14
    }
  },
  "Adv. Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 19
    }
  },
  "Exp. Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 26
    }
  },
  // Mass support
  "Weight Redist. System": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 6
    }
  },
  "Adv. Weight Redist. System": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 9
    }
  },
  "Gravity Neutralizer": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 12
    }
  },
  "Adv. Gravity Neutralizer": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 16
    }
  },
  "Quantum Shading Machine": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 20
    }
  },
  "Adv. Quantum Shading Machine": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 25
    }
  },
  "Asb. Suspension Frame": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 20
    }
  },
  // Metafiber
  "Asb. Metafiber Network": {
    active: "Part Active",
    trait: {
      kind: "Metafiber"
    }
  },
  // Ranged weapon cycling
  "Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.15
    }
  },
  "Imp. Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.2
    }
  },
  "Adv. Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.25
    }
  },
  "Exp. Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.3
    }
  },
  "Launcher Loader": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.5
    }
  },
  "Quantum Capacitor": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.5
    }
  },
  // Power amplifiers
  "Power Amplifier": {
    active: "Always",
    trait: {
      kind: "PowerAmplifier",
      percent: 0.2
    }
  },
  "Adv. Power Amplifier": {
    active: "Always",
    trait: {
      kind: "PowerAmplifier",
      percent: 0.3
    }
  },
  "Exp. Power Amplifier": {
    active: "Always",
    trait: {
      kind: "PowerAmplifier",
      percent: 0.4
    }
  },
  // Weapon regen
  "Sigix Broadsword": {
    active: "Part Active",
    trait: {
      kind: "WeaponRegen",
      energyPerTurn: 5,
      integrityPerTurn: 2
    }
  }
};
},{}],"ts/common.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.valueOrDefault = exports.randomInt = exports.parseIntOrDefault = exports.nameToId = exports.leetSpeakMatchTransform = exports.isPartMelee = exports.initData = exports.hasActiveSpecialProperty = exports.getNoPrefixName = exports.getValuePerTus = exports.getMovementText = exports.getItemByFullName = exports.getItem = exports.getBot = exports.gallerySort = exports.flatten = exports.escapeHtml = exports.createItemDataContent = exports.createBotDataContent = exports.canShowPart = exports.assertUnreachable = exports.entityMap = exports.itemData = exports.botData = void 0; // Common code

const itemCategories = __importStar(require("../json/item_categories.json"));

const botCategories = __importStar(require("../json/bot_categories.json"));

const itemTypes_1 = require("./itemTypes");

const specialItemProperties_1 = require("./specialItemProperties"); // Color schemes


var ColorScheme;

(function (ColorScheme) {
  ColorScheme["LowGood"] = "lowGood";
  ColorScheme["HighGood"] = "highGood";
  ColorScheme["Green"] = "green";
  ColorScheme["Red"] = "red";
})(ColorScheme || (ColorScheme = {}));

const colorSchemes = {
  lowGood: {
    low: "range-green",
    midLow: "range-yellow",
    midHigh: "range-orange",
    high: "range-red"
  },
  highGood: {
    low: "range-red",
    midLow: "range-orange",
    midHigh: "range-yellow",
    high: "range-green"
  },
  green: {
    low: "range-green",
    midLow: "range-green",
    midHigh: "range-green",
    high: "range-green"
  },
  red: {
    low: "range-red",
    midLow: "range-red",
    midHigh: "range-red",
    high: "range-red"
  }
}; // Character -> escape character map

exports.entityMap = {
  "&": "&amp;",
  "<": "ᐸ",
  ">": "ᐳ",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;",
  "`": "&#x60;",
  "=": "&#x3D;",
  "\n": "<br />"
}; // Compile-time assert that code is unreachable
// eslint-disable-next-line @typescript-eslint/no-unused-vars

function assertUnreachable(_) {
  throw new Error("Invalid");
}

exports.assertUnreachable = assertUnreachable; // Determines if the given part can be shown based on the current spoilers state

function canShowPart(part, spoilersState) {
  if (spoilersState === "None") {
    // No spoilers, check that none of the categories are spoilers/redacted
    if (!part.categories.every(c => c !== "Spoiler" && c !== "Redacted")) {
      return false;
    }
  } else if (spoilersState == "Spoilers") {
    // Spoilers allowed, check only for redacted category
    if (!part.categories.every(c => c != "Redacted")) {
      return false;
    }
  } else {
    // Redacted, no checks
    return true;
  }

  return true;
}

exports.canShowPart = canShowPart; // Ceil the number to the nearest multiple

function ceilToMultiple(num, multiple) {
  return Math.ceil(num / multiple) * multiple;
} // Creates a range line from minVal to maxVal using filled squares with the given color scheme with no unit


function rangeLine(category, valueString, value, defaultValueString, minValue, maxValue, colorScheme) {
  return rangeLineUnit(category, valueString, value, "", defaultValueString, minValue, maxValue, colorScheme);
} // Creates a range line from minVal to maxVal using filled squares with the given color scheme


function rangeLineUnit(category, valueString, value, unitString, defaultValueString, minValue, maxValue, colorScheme) {
  let valueHtml;

  if (valueString === undefined || value === undefined) {
    valueString = defaultValueString;
    value = 0;
    valueHtml = `<span class="dim-text">${defaultValueString}${unitString}</span>`;
  } else {
    valueHtml = valueString + unitString;
  } // Determine bars and spacing


  const maxBars = 22;
  const numSpaces = 23 - 1 - 1 - category.length - valueString.length - unitString.length;
  let valuePercentage;

  if (maxValue - minValue === 0) {
    valuePercentage = 1;
  } else {
    valuePercentage = value / (maxValue - minValue);
  }

  let fullBars = Math.min(Math.floor(maxBars * valuePercentage), 22); // Always round away from 0
  // This allows for things like 1/100 to show 1 bar rather than 0

  if (fullBars === 0 && value != minValue) {
    fullBars = 1;
  }

  if (minValue === maxValue) {
    fullBars = 0;
  }

  const emptyBars = maxBars - fullBars; // Determine color

  let colorClass;

  if (valuePercentage < 0.25) {
    colorClass = colorSchemes[colorScheme].low;
  } else if (valuePercentage < 0.5) {
    colorClass = colorSchemes[colorScheme].midLow;
  } else if (valuePercentage < 0.75) {
    colorClass = colorSchemes[colorScheme].midHigh;
  } else {
    colorClass = colorSchemes[colorScheme].high;
  } // Create bars HTML string


  let barsHtml;

  if (emptyBars > 0) {
    barsHtml = `<span class="${colorClass}">${"▮".repeat(fullBars)}</span><span class="range-dim">${"▯".repeat(emptyBars)}</span>`;
  } else {
    barsHtml = `<span class=${colorClass}>${"▮".repeat(fullBars)}</span>`;
  } // Return full HTML


  return `
    <pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueHtml} ${barsHtml}</pre>
    `;
} // Create a summary line


function summaryLine(text) {
  return `<pre class="popover-summary">${text}</pre>`;
} // Creates a summary line with an optional projectile multiplier


function summaryProjectileLine(item, category) {
  if (item.projectileCount > 1) {
    return `<pre class="popover-summary">${category}${" ".repeat(13)}<span class="projectile-num"> x${item.projectileCount} </span></pre>`;
  } else {
    return summaryLine(category);
  }
} // Create a text line with no value and default style


function textLine(category, text) {
  const numSpaces = 23 - 1 - category.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${text}</pre>`;
} // Create a text line with no value and dim style


function textLineDim(category, text) {
  const numSpaces = 23 - 1 - category.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}<span class="dim-text">${text}</span></pre>`;
} // Create a text line with no value  and a default


function textLineWithDefault(category, textString, defaultString) {
  if (typeof textString != "string") {
    textString = `<span class="dim-text">${defaultString}</span>`;
  }

  const numSpaces = 23 - 1 - category.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${textString}</pre>`;
} // Create a text line with a value and a given HTML string for the text


function textValueHtmlLine(category, valueString, valueClass, textHtml) {
  const numSpaces = 23 - 1 - 1 - category.length - valueString.length;
  let valueHtml;

  if (typeof valueClass === "string" && valueClass.length > 0) {
    valueHtml = `<span class="${valueClass}">${valueString}</span>`;
  } else {
    valueHtml = valueString;
  }

  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueHtml} ${textHtml}</pre>`;
} // Create a value line with no text


function valueLine(category, valueString) {
  const numSpaces = 23 - 1 - category.length - 1 - valueString.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString}</pre>`;
} // Create a value line with units, no text, and a default


function valueLineUnitsWithDefault(category, valueString, unitString, defaultString) {
  let valueLength;

  if (valueString === undefined) {
    valueString = `<span class="dim-text">${defaultString}${unitString}</span>`;
    valueLength = defaultString.length + unitString.length;
  } else {
    valueString += unitString;
    valueLength = valueString.length;
  }

  const numSpaces = 23 - 1 - category.length - 1 - valueLength;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString}</pre>`;
} // Create a value line with units, text, and a default


function valueLineUnitsTextWithDefault(category, valueString, unitString, defaultString, text) {
  let valueLength;

  if (valueString === undefined) {
    valueString = `<span class="dim-text">${defaultString}${unitString}</span>`;
    valueLength = defaultString.length + unitString.length;
  } else {
    valueString += unitString;
    valueLength = valueString.length;
  }

  const numSpaces = 23 - 1 - category.length - 1 - valueLength;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString} ${text}</pre>`;
} // Create a value line with no text and a default


function valueLineWithDefault(category, valueString, defaultString) {
  let valueLength;

  if (typeof valueString != "string") {
    valueString = `<span class="dim-text">${defaultString}</span>`;
    valueLength = defaultString.length;
  } else {
    valueLength = valueString.length;
  }

  const numSpaces = 23 - 1 - category.length - 1 - valueLength;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString}</pre>`;
}
/* eslint-disable prettier/prettier */
// Creates a HTML string representing a bot


function createBotDataContent(bot) {
  var _a;

  function createItemHtml(data) {
    let line = `${escapeHtml(data.name)} (${data.coverage}%)`;

    if (data.number > 1) {
      line += " x" + data.number;
    }

    return `${itemLine(line)}`;
  }

  function createItemOptionHtml(data) {
    // Add all options
    let html = "";

    for (let i = 0; i < data.length; i++) {
      const item = data[i];
      let line;

      if (item.name === "None") {
        line = "None";
      } else {
        line = `${item.name} (${item.coverage}%)`;
      }

      if (item.number > 1) {
        line += " x" + item.number;
      }

      html += itemLineOption(line, i);
    }

    return html;
  }

  function getFabricationMatterString(stats) {
    const matter = stats.matter;
    const siphonMatter = Math.floor(parseInt(matter) * .75).toString();
    return `${matter} (With siphon: ${siphonMatter})`;
  }

  function getRatingValue(bot) {
    const ratingString = bot.rating;
    const ratingArray = ratingString.split("-").map(s => s.trim()).map(s => parseInt(s));
    return ratingArray.reduce((sum, val) => sum + val, 0) / ratingArray.length;
  }

  function itemLine(itemString) {
    itemString = itemString.padEnd(46);
    return "" + '<pre class="popover-part">' + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">[</span>' + `${itemString}` + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">]</span>' + '</pre>';
  }

  function itemLineOption(itemString, i) {
    itemString = itemString.padEnd(43);
    return "" + '<pre class="popover-line">' + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">[</span>' + `<span class="popover-option">${String.fromCharCode(97 + i)}) </span>` + `<span>${itemString}</span>` + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">]</span>' + '</pre>';
  }

  const emptyLine = `<pre class="popover-line">
    
</pre>`; // Create overview

  let html = `
        <pre class="popover-title">${escapeHtml(bot.name)}</pre>
        ${emptyLine}
        ${summaryLine("Overview")}
        ${textLine("Class", bot.class)}
        ${textLine("Size", bot.size)}
        ${textLine("Profile", bot.profile)}
        ${rangeLine("Rating", bot.rating, getRatingValue(bot), undefined, 0, 165, ColorScheme.LowGood)}
        ${textLine("Tier", bot.tier)}
        ${textLine("Threat", bot.threat)}
        ${textLine("Value", bot.value.toString())}
        ${textLine("Visual Range", bot.visualRange)}
        ${textLine("Memory", bot.memory)}
        ${textLine("Spot %", bot.spotPercent)}
        ${textLine("Movement", bot.movement)}
        ${rangeLine("Core Integrity", bot.coreIntegrity.toString(), bot.coreIntegrity, undefined, 0, bot.coreIntegrity, ColorScheme.Green)}
        ${rangeLineUnit("Core Exposure", bot.coreExposure.toString(), bot.coreExposure, "%", undefined, 0, 100, ColorScheme.LowGood)}
        ${textLine("Salvage Potential", bot.salvagePotential)}
        ${emptyLine}
        ${summaryLine("Armament")}
        `; // Add armament items and options

  if (bot.armament.length > 0) {
    bot.armamentData.forEach(data => {
      html += createItemHtml(data);
    });

    for (let i = 0; i < bot.armamentOptionData.length; i++) {
      if (i != 0 || bot.armamentData.length > 0) {
        html += emptyLine;
      }

      html += createItemOptionHtml(bot.armamentOptionData[i]);
    }
  } else {
    html += itemLine("None");
  } // Add component items


  html += `
    ${emptyLine}
    ${summaryLine("Components")}
    `;

  if (bot.components.length > 0) {
    bot.componentData.forEach(data => {
      html += createItemHtml(data);
    });

    for (let i = 0; i < bot.componentOptionData.length; i++) {
      if (i != 0 || bot.componentData.length > 0) {
        html += `${emptyLine}`;
      }

      html += createItemOptionHtml(bot.componentOptionData[i]);
    }
  } else {
    html += itemLine("N/A");
  } // Add Resistances/immunities


  const resistances = Object.keys(valueOrDefault(bot.resistances, {}));
  const immunities = bot.immunities;

  if (resistances.length > 0 || immunities.length > 0) {
    html += `
        ${emptyLine}
        ${summaryLine("Resistances")}
        `;
    resistances.forEach(damageType => {
      const resistValue = bot.resistances[damageType];

      if (resistValue === undefined) {
        return;
      }

      if (resistValue > 0) {
        html += rangeLine(damageType, resistValue.toString() + "%", resistValue, undefined, 0, 100, ColorScheme.Green);
      } else {
        html += rangeLine(damageType, resistValue.toString() + "%", resistValue, undefined, 0, -100, ColorScheme.Red);
      }
    });
    immunities.forEach(immunity => {
      html += textLineDim(immunity, "IMMUNE");
    });
  } // Add traits


  const traits = bot.traits;

  if (traits.length > 0) {
    html += `
        ${emptyLine}
        ${summaryLine("Traits")}
        `;
    traits.forEach(trait => {
      html += `<span class="popover-description">${trait}</span>\n`;
    });
  } // Add fabrication stats if present


  if (bot.fabrication != null) {
    const number = bot.fabrication.number;
    html += `${emptyLine}`;

    if (number === "1") {
      html += summaryLine("Fabrication");
    } else {
      html += summaryLine(`Fabrication x${number}`);
    }

    html += `
        ${textLine("Time", bot.fabrication.time)}
        ${((_a = bot.fabrication) === null || _a === void 0 ? void 0 : _a.matter) !== undefined ? textLine("Matter", getFabricationMatterString(bot.fabrication)) : ""}
        ${textLine("Components", "None")}
        `;
  } // Add description


  const description = escapeHtml(valueOrDefault(bot.description, ""));

  if (description.length > 0) {
    html += `
        ${emptyLine}
        ${summaryLine("Description")}
        <span class="popover-description">${description}</span>
        `;
  }

  return html;
}

exports.createBotDataContent = createBotDataContent; // Creates an HTML string representing an item

function createItemDataContent(baseItem) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19;

  function getDamageValue(item) {
    const damageString = item.damage;
    const damageArray = damageString.split("-").map(s => s.trim()).map(s => parseInt(s));
    return damageArray.reduce((sum, val) => sum + val, 0) / damageArray.length;
  }

  function getDelayString(item) {
    if (item.delay === undefined) {
      return undefined;
    } else {
      if (item.delay > 0) {
        return "+" + item.delay;
      }

      return item.delay.toString();
    }
  }

  function getExplosionValue(item) {
    const damageString = item.explosionDamage;
    const damageArray = damageString.split("-").map(s => s.trim()).map(s => parseInt(s));
    return damageArray.reduce((sum, val) => sum + val, 0) / damageArray.length;
  }

  function getFabricationMatterString(stats) {
    const matter = stats.matter;
    const siphonMatter = Math.floor(parseInt(matter) * .75).toString();
    return `${matter} (With siphon: ${siphonMatter})`;
  }

  function getPenetrationTextHtml(item) {
    const penetrationString = item.penetration;

    if (penetrationString === undefined) {
      return "";
    }

    const penetrationArray = penetrationString.split("/").map(s => s.trim());
    return penetrationArray.join(" / ");
  }

  function getPenetrationValueClass(item) {
    if (item.penetration !== undefined) {
      return "";
    }

    return "dim-text";
  }

  function getPenetrationValue(item) {
    const penetrationString = item.penetration;

    if (penetrationString === undefined) {
      return "x0";
    }

    if (penetrationString === "Unlimited") {
      return "x*";
    }

    const penetrationArray = penetrationString.split("/").map(s => s.trim());
    return "x" + penetrationArray.length;
  }

  function getRatingHtml(item) {
    switch (item.category) {
      case itemTypes_1.ItemRatingCategory.Alien:
        return '<span class="rating-alien"> Alien </span>';

      case itemTypes_1.ItemRatingCategory.Prototype:
        return '<span class="rating-prototype"> Prototype </span>';

      case itemTypes_1.ItemRatingCategory.None:
        return '<span class="dim-text">Standard</span>';
    }
  }

  function getSchematicString(item) {
    if (item.hackable) {
      return "Hackable";
    } else if (item.fabrication != null) {
      return "Not Hackable";
    }

    return undefined;
  }

  function getSlotString(item) {
    let slotType = item.slot;

    if (slotType == "N/A") {
      // Take care of item special cases
      if (item.type == itemTypes_1.ItemType.Item || item.type == itemTypes_1.ItemType.Trap) {
        slotType = "Inventory";
      } else {
        return `<span class="dim-text">N/A</span>`;
      }
    }

    if (item.size > 1) {
      return `${slotType} x${item.size}`;
    }

    return slotType;
  }

  const emptyLine = `<pre class="popover-line">
    
</pre>`; // Create overview

  let html = `
    <pre class="popover-title">${escapeHtml(baseItem.name)}</pre>
    ${emptyLine}
    ${summaryLine("Overview")}
    ${textLine("Type", baseItem.type)}
    ${textLine("Slot", getSlotString(baseItem))}
    ${rangeLine("Mass", (_a = baseItem.mass) === null || _a === void 0 ? void 0 : _a.toString(), baseItem.mass, "N/A", 0, 15, ColorScheme.LowGood)}
    ${textValueHtmlLine("Rating", baseItem.ratingString.replace("**", "").replace("*", ""), "", getRatingHtml(baseItem))}
    ${rangeLine("Integrity", (_b = baseItem.integrity) === null || _b === void 0 ? void 0 : _b.toString(), 1, undefined, 0, 1, ColorScheme.Green)}
    ${valueLine("Coverage", (_d = (_c = baseItem.coverage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : "0")}
    ${textLineWithDefault("Schematic", getSchematicString(baseItem), "N/A")}
    `;

  switch (baseItem.slot) {
    case "Power":
      {
        const item = baseItem; // Add power-unique categories

        html += `
                ${emptyLine}
                ${summaryLine("Active Upkeep")}
                ${rangeLine("Energy", undefined, 0, "-0", 0, 0, ColorScheme.LowGood)}
                ${rangeLine("Matter", item.matterUpkeep === undefined ? undefined : "-" + item.matterUpkeep, item.matterUpkeep, "-0", 0, 25, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatGeneration, item.heatGeneration, "+0", 0, 20, ColorScheme.LowGood)}
                ${emptyLine}
                ${summaryLine("Power")}
                ${rangeLine("Supply", item.energyGeneration === undefined || item.energyGeneration === 0 ? undefined : "+" + item.energyGeneration, item.energyGeneration, "0", 0, 30, ColorScheme.Green)}
                ${rangeLine("Storage", (_e = item.energyStorage) === null || _e === void 0 ? void 0 : _e.toString(), item.energyStorage, "0", 0, 300, ColorScheme.Green)}
                ${rangeLine("Stability", item.powerStability + "%", item.powerStability, "N/A", 0, 100, ColorScheme.HighGood)}
                `;
        break;
      }

    case "Propulsion":
      {
        const item = baseItem; // Add propulsion-unique categories

        html += `
                ${emptyLine}
                ${summaryLine("Active Upkeep")}
                ${rangeLine("Energy", "-" + item.energyUpkeep, item.energyUpkeep, "-0", 0, 20, ColorScheme.LowGood)}
                ${rangeLine("Matter", undefined, 0, "-0", 0, 0, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatGeneration, item.heatGeneration, "+0", 0, 20, ColorScheme.LowGood)}
                ${emptyLine}
                ${summaryLine("Propulsion")}
                ${rangeLine("Time/Move", item.timePerMove.toString(), item.timePerMove, undefined, 0, 150, ColorScheme.LowGood)}
                ${item.modPerExtra == undefined ? valueLine("Drag", (_g = (_f = item.drag) === null || _f === void 0 ? void 0 : _f.toString()) !== null && _g !== void 0 ? _g : "0") : valueLine(" Mod/Extra", item.modPerExtra.toString())}
                ${rangeLine("Energy", "-" + item.energyPerMove, item.energyPerMove, "-0", 0, 10, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatPerMove, item.heatPerMove, "+0", 0, 10, ColorScheme.LowGood)}
                ${rangeLine("Support", (_h = item.support) === null || _h === void 0 ? void 0 : _h.toString(), item.support, undefined, 0, 20, ColorScheme.HighGood)}
                ${rangeLine(" Penalty", (_j = item.penalty) === null || _j === void 0 ? void 0 : _j.toString(), item.penalty, "0", 0, 60, ColorScheme.LowGood)}
                ${item.type === itemTypes_1.ItemType.Treads ? textLineWithDefault("Siege", item.siege, "N/A") : rangeLine("Burnout", item.burnout, parseInt((_k = item.burnout) !== null && _k !== void 0 ? _k : ""), "N/A", 0, 100, ColorScheme.LowGood)}
                `;
        break;
      }

    case "Utility":
      {
        const item = baseItem; // Add utility-unique categories

        html += `
                ${emptyLine}
                ${summaryLine("Active Upkeep")}
                ${rangeLine("Energy", "-" + item.energyUpkeep, item.energyUpkeep, "-0", 0, 20, ColorScheme.LowGood)}
                ${rangeLine("Matter", "-" + item.matterUpkeep, item.matterUpkeep, "-0", 0, 25, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatGeneration, item.heatGeneration, "+0", 0, 20, ColorScheme.LowGood)}
                `;
        break;
      }

    case "Weapon":
      {
        const item = baseItem; // Add weapon-unique categories

        switch (item.type) {
          case itemTypes_1.ItemType.BallisticCannon:
          case itemTypes_1.ItemType.BallisticGun:
          case itemTypes_1.ItemType.EnergyCannon:
          case itemTypes_1.ItemType.EnergyGun:
            html += `
                        ${emptyLine}
                        ${summaryLine("Shot")}
                        ${rangeLine("Range", item.range.toString(), item.range, undefined, 0, 20, ColorScheme.HighGood)}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineWithDefault("Recoil", (_l = item.recoil) === null || _l === void 0 ? void 0 : _l.toString(), "0")}
                        ${valueLineUnitsWithDefault("Targeting", (_m = item.targeting) === null || _m === void 0 ? void 0 : _m.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${rangeLine("Stability", (_o = item.overloadStability) === null || _o === void 0 ? void 0 : _o.toString(), item.overloadStability, "N/A", 0, 100, ColorScheme.HighGood)}
                        ${item.waypoints === undefined ? valueLineWithDefault("Arc", (_p = item.arc) === null || _p === void 0 ? void 0 : _p.toString(), "N/A") : valueLine("Waypoints", item.waypoints)}
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Projectile")}
                        ${rangeLine("Damage", item.damage, getDamageValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${textLine("Type", item.damageType)}
                        ${valueLineUnitsTextWithDefault("Critical", (_q = item.critical) === null || _q === void 0 ? void 0 : _q.toString(), "%", "0", (_s = (_r = item.criticalType) === null || _r === void 0 ? void 0 : _r.toString()) !== null && _s !== void 0 ? _s : "")}
                        ${textValueHtmlLine("Penetration", getPenetrationValue(item), getPenetrationValueClass(item), getPenetrationTextHtml(item))}
                        ${item.heatTransfer === undefined ? textLineWithDefault("Spectrum", item.spectrum, "N/A") : textLine("Heat Transfer", item.heatTransfer)}
                        ${rangeLineUnit("Disruption", (_t = item.disruption) === null || _t === void 0 ? void 0 : _t.toString(), item.disruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", (_u = item.salvage) === null || _u === void 0 ? void 0 : _u.toString(), "0")}
                        `;
            break;

          case itemTypes_1.ItemType.Launcher:
            html += `
                        ${emptyLine}
                        ${summaryLine("Shot")}
                        ${rangeLine("Range", item.range.toString(), item.range, undefined, 0, 20, ColorScheme.HighGood)}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineWithDefault("Recoil", (_v = item.recoil) === null || _v === void 0 ? void 0 : _v.toString(), "0")}
                        ${valueLineUnitsWithDefault("Targeting", (_w = item.targeting) === null || _w === void 0 ? void 0 : _w.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${rangeLine("Stability", (_x = item.overloadStability) === null || _x === void 0 ? void 0 : _x.toString(), item.overloadStability, "N/A", 0, 100, ColorScheme.HighGood)}
                        ${item.waypoints === undefined ? valueLineWithDefault("Arc", (_y = item.arc) === null || _y === void 0 ? void 0 : _y.toString(), "N/A") : valueLine("Waypoints", item.waypoints)}
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Explosion")}
                        ${rangeLine("Radius", (_z = item.explosionRadius) === null || _z === void 0 ? void 0 : _z.toString(), item.explosionRadius, undefined, 0, 8, ColorScheme.Green)}
                        ${rangeLine("Damage", item.explosionDamage, getExplosionValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${valueLineWithDefault(" Falloff", item.falloff === undefined ? undefined : "-" + item.falloff, "0")}
                        ${textLine("Type", item.explosionType)}
                        ${item.explosionHeatTransfer === undefined ? textLineWithDefault("Spectrum", item.explosionSpectrum, "N/A") : textLine("Heat Transfer", item.explosionHeatTransfer)}
                        ${rangeLineUnit("Disruption", (_0 = item.explosionDisruption) === null || _0 === void 0 ? void 0 : _0.toString(), item.explosionDisruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", item.explosionSalvage, "0")}
                        `;
            break;

          case itemTypes_1.ItemType.SpecialMeleeWeapon:
            html += `
                        ${emptyLine}
                        ${summaryLine("Attack")}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineUnitsWithDefault("Targeting", (_1 = item.targeting) === null || _1 === void 0 ? void 0 : _1.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        `;
            break;

          case itemTypes_1.ItemType.SpecialWeapon:
            html += `
                        ${emptyLine}
                        ${summaryLine("Shot")}
                        ${rangeLine("Range", item.range.toString(), item.range, undefined, 0, 20, ColorScheme.HighGood)}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineWithDefault("Recoil", (_2 = item.recoil) === null || _2 === void 0 ? void 0 : _2.toString(), "0")}
                        ${valueLineUnitsWithDefault("Targeting", (_3 = item.targeting) === null || _3 === void 0 ? void 0 : _3.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${rangeLine("Stability", (_4 = item.overloadStability) === null || _4 === void 0 ? void 0 : _4.toString(), item.overloadStability, "N/A", 0, 100, ColorScheme.HighGood)}
                        ${item.waypoints === undefined ? valueLineWithDefault("Arc", (_5 = item.arc) === null || _5 === void 0 ? void 0 : _5.toString(), "N/A") : valueLine("Waypoints", item.waypoints)}
                        `;

            if (item.explosionDamage !== undefined) {
              html += `
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Explosion")}
                        ${rangeLine("Radius", (_6 = item.explosionRadius) === null || _6 === void 0 ? void 0 : _6.toString(), item.explosionRadius, undefined, 0, 8, ColorScheme.Green)}
                        ${rangeLine("Damage", item.explosionDamage, getExplosionValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${valueLineWithDefault(" Falloff", item.falloff === undefined ? undefined : "-" + item.falloff, "0")}
                        ${textLine("Type", item.explosionType)}
                        ${textLineWithDefault("Spectrum", item.explosionSpectrum, "N/A")}
                        ${rangeLineUnit("Disruption", (_7 = item.explosionDisruption) === null || _7 === void 0 ? void 0 : _7.toString(), item.explosionDisruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", item.explosionSalvage, "0")}
                        `;
            } else if (item.damage !== undefined) {
              // Only some special weapons have a damage section
              html += `
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Projectile")}
                        ${rangeLine("Damage", item.damage, getDamageValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${textLine("Type", item.damageType)}
                        ${valueLineUnitsTextWithDefault("Critical", (_8 = item.critical) === null || _8 === void 0 ? void 0 : _8.toString(), "%", "0", (_10 = (_9 = item.criticalType) === null || _9 === void 0 ? void 0 : _9.toString()) !== null && _10 !== void 0 ? _10 : "")}

                        ${textValueHtmlLine("Penetration", getPenetrationValue(item), getPenetrationValueClass(item), getPenetrationTextHtml(item))}
                        ${item.heatTransfer === undefined ? textLineWithDefault("Spectrum", item.spectrum, "N/A") : textLine("Heat Transfer", item.heatTransfer)}
                        ${rangeLineUnit("Disruption", (_11 = item.disruption) === null || _11 === void 0 ? void 0 : _11.toString(), item.disruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", (_12 = item.salvage) === null || _12 === void 0 ? void 0 : _12.toString(), "0")}
                        `;
            }

            break;

          case itemTypes_1.ItemType.ImpactWeapon:
          case itemTypes_1.ItemType.SlashingWeapon:
          case itemTypes_1.ItemType.PiercingWeapon:
            html += `
                        ${emptyLine}
                        ${summaryLine("Attack")}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineUnitsWithDefault("Targeting", (_13 = item.targeting) === null || _13 === void 0 ? void 0 : _13.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${emptyLine}
                        ${summaryLine("Hit")}
                        ${rangeLine("Damage", item.damage, getDamageValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${textLine("Type", item.damageType)}
                        ${valueLineUnitsTextWithDefault("Critical", (_14 = item.critical) === null || _14 === void 0 ? void 0 : _14.toString(), "%", "0", (_16 = (_15 = item.criticalType) === null || _15 === void 0 ? void 0 : _15.toString()) !== null && _16 !== void 0 ? _16 : "")}
                        ${rangeLineUnit("Disruption", (_17 = item.disruption) === null || _17 === void 0 ? void 0 : _17.toString(), item.disruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", (_18 = item.salvage) === null || _18 === void 0 ? void 0 : _18.toString(), "0")}
                        `;
            break;

          default:
            throw "Unhandled weapon type";
        }
      }
  } // Add effect/description if present


  if (baseItem.effect !== undefined || baseItem.description !== undefined) {
    html += `
        ${emptyLine}
        ${summaryLine("Effect")}
        `;

    if (baseItem.effect !== undefined) {
      html += `<span class="popover-description">${escapeHtml(baseItem.effect)}</span>`;

      if (baseItem.description !== undefined) {
        html += `${emptyLine}`;
      }
    }

    if (baseItem.description !== undefined) {
      html += `<span class="popover-description">${escapeHtml(baseItem.description)}</span>`;
    }
  } // Add fabrication stats if present


  if (baseItem.fabrication != null) {
    const number = baseItem.fabrication.number;
    html += `${emptyLine}`;

    if (number === "1") {
      html += summaryLine("Fabrication");
    } else {
      html += summaryLine(`Fabrication x${number}`);
    }

    html += `
        ${textLine("Time", baseItem.fabrication.time)}
        ${((_19 = baseItem.fabrication) === null || _19 === void 0 ? void 0 : _19.matter) !== undefined ? textLine("Matter", getFabricationMatterString(baseItem.fabrication)) : ""}
        ${textLine("Components", "None")}
        `;
  }

  return html;
}

exports.createItemDataContent = createItemDataContent;
/* eslint-enable prettier/prettier */
// Escapes the given string for HTML

function escapeHtml(string) {
  return String(string).replace(/[&<>"'`=\/\n]/g, function (s) {
    return exports.entityMap[s];
  });
}

exports.escapeHtml = escapeHtml; // Flatten an array of arrays into a single array

function flatten(arrays) {
  const array = [];
  return array.concat(...arrays);
}

exports.flatten = flatten; // Do a lexicographical sort based on the no-prefix item name

function gallerySort(a, b) {
  const noPrefixA = getNoPrefixName(a);
  const noPrefixB = getNoPrefixName(b);
  let res = noPrefixA < noPrefixB ? -1 : noPrefixA > noPrefixB ? 1 : 0;

  if (res === 0) {
    // If no-prefix names match then use index in gallery export
    // There may be some formula to determine the real order or
    // it may be a hand-crafted list, I couldn't tell either way.
    // The export index will always be ordered for different prefix
    // versions of the same parts so this is the best way to sort
    // them how the in-game gallery does.
    res = getItem(a).index - getItem(b).index;
  }

  return res;
}

exports.gallerySort = gallerySort; // Tries to get an item by the name

function getBot(botName) {
  if (botName in exports.botData) {
    return exports.botData[botName];
  }

  console.trace();
  throw `${botName} not a valid bot`;
}

exports.getBot = getBot; // Tries to get an item by name

function getItem(itemName) {
  if (itemName in exports.itemData) {
    return exports.itemData[itemName];
  }

  console.trace();
  throw `${itemName} not a valid item`;
}

exports.getItem = getItem; // Tries to get an item by its full name

function getItemByFullName(itemName) {
  const items = Object.keys(exports.itemData).map(name => exports.itemData[name]).filter(item => item.fullName == itemName);

  if (items.length === 0) {
    console.trace();
    throw `${itemName} not a valid item`;
  }

  return items[0];
}

exports.getItemByFullName = getItemByFullName; // Gets the movement name given a propulsion type

function getMovementText(propulsionType) {
  switch (propulsionType) {
    case itemTypes_1.ItemType.FlightUnit:
      return "Flying";

    case itemTypes_1.ItemType.HoverUnit:
      return "Hovering";

    case itemTypes_1.ItemType.Leg:
      return "Walking";

    case itemTypes_1.ItemType.Treads:
      return "Treading";

    case itemTypes_1.ItemType.Wheel:
      return "Rolling";

    default:
      return "Core";
  }
}

exports.getMovementText = getMovementText; // Gets a per-TU value scaled to the given number of TUs

function getValuePerTus(baseValue, numTus) {
  return baseValue * numTus / 100;
}

exports.getValuePerTus = getValuePerTus; // Removes the prefix from an item name

const noPrefixRegex = /\w{3}\. (.*)/;

function getNoPrefixName(name) {
  const newName = name.replace(noPrefixRegex, "$1");
  return newName;
}

exports.getNoPrefixName = getNoPrefixName; // Checks if a part has an active special property of the given type

function hasActiveSpecialProperty(part, partActive, propertyType) {
  if (part.specialProperty === undefined) {
    return false;
  }

  if (part.specialProperty.trait.kind !== propertyType) {
    return false;
  }

  if (part.specialProperty.active === "Part Active" && !partActive) {
    return false;
  }

  return true;
}

exports.hasActiveSpecialProperty = hasActiveSpecialProperty; // Initialize all item and bot data

function initData(items, bots) {
  // Load external files
  exports.botData = {};
  exports.itemData = {}; // Create items

  Object.keys(items).forEach((itemName, index) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;

    if (itemName === "default") {
      // Not sure why this "default" pops up but it messes things up
      // Maybe an artifact of being imported as a JSON file
      return;
    }

    const item = items[itemName];
    let newItem;
    let category = itemTypes_1.ItemRatingCategory[(_a = item.Category) !== null && _a !== void 0 ? _a : ""];

    if (category === undefined) {
      category = itemTypes_1.ItemRatingCategory.None;
    }

    let rating = (_b = parseIntOrUndefined(item.Rating)) !== null && _b !== void 0 ? _b : 1;
    if (category == itemTypes_1.ItemRatingCategory.Alien) rating += 0.75;else if (category == itemTypes_1.ItemRatingCategory.Prototype) rating += 0.5;
    const ratingString = item.Rating;
    const fabrication = item["Fabrication Number"] === undefined ? undefined : {
      matter: item["Fabrication Matter"],
      number: item["Fabrication Number"],
      time: item["Fabrication Time"]
    };
    let categories;

    if (!(itemName in itemCategories)) {
      console.log(`Need to add categories for ${itemName}`);
      categories = [];
    } else {
      categories = itemCategories[itemName];
    }

    const coverage = (_c = parseIntOrUndefined(item.Coverage)) !== null && _c !== void 0 ? _c : 0;
    const hackable = (_d = !!parseIntOrUndefined(item["Hackable Schematic"])) !== null && _d !== void 0 ? _d : 0;
    const integrity = (_e = parseIntOrUndefined(item.Integrity)) !== null && _e !== void 0 ? _e : 0;
    const mass = parseIntOrUndefined(item.Mass);
    const noPrefixName = getNoPrefixName(itemName);
    const size = (_f = parseIntOrUndefined(item.Size)) !== null && _f !== void 0 ? _f : 1;
    const specialProperty = specialItemProperties_1.specialItemProperties[itemName];

    switch (item["Slot"]) {
      case "N/A":
        const otherItem = {
          slot: "N/A",
          category: category,
          coverage: undefined,
          hackable: hackable,
          integrity: integrity,
          mass: undefined,
          name: item.Name,
          fullName: item["Full Name"],
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          description: item.Description,
          categories: categories,
          life: item.Life,
          index: index,
          specialProperty: specialProperty
        };
        newItem = otherItem;
        break;

      case "Power":
        const powerItem = {
          slot: "Power",
          category: category,
          coverage: coverage,
          energyGeneration: parseIntOrDefault(item["Energy Generation"], 0),
          energyStorage: parseIntOrUndefined(item["Energy Storage"]),
          hackable: hackable,
          heatGeneration: parseIntOrUndefined(item["Heat Generation"]),
          matterUpkeep: parseIntOrUndefined(item["Matter Upkeep"]),
          integrity: integrity,
          mass: mass,
          name: item.Name,
          fullName: item["Full Name"],
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          description: item.Description,
          categories: categories,
          effect: item.Effect,
          fabrication: fabrication,
          powerStability: item["Power Stability"] == null ? undefined : parseIntOrUndefined(item["Power Stability"].slice(0, -1)),
          explosionRadius: parseIntOrDefault(item["Explosion Radius"], 0),
          explosionDamage: item["Explosion Damage"],
          explosionDamageMax: parseIntOrDefault(item["Explosion Damage Max"], 0),
          explosionDamageMin: parseIntOrDefault(item["Explosion Damage Min"], 0),
          explosionDisruption: parseIntOrDefault(item["Explosion Disruption"], 0),
          explosionHeatTransfer: item["Explosion Heat Transfer"],
          explosionSalvage: item["Explosion Salvage"],
          explosionSpectrum: item["Explosion Spectrum"],
          explosionType: item["Explosion Type"],
          index: index,
          specialProperty: specialProperty
        };
        newItem = powerItem;
        break;

      case "Propulsion":
        const propItem = {
          slot: "Propulsion",
          category: category,
          coverage: coverage,
          energyPerMove: parseFloatOrUndefined(item["Energy/Move"]),
          hackable: hackable,
          integrity: integrity,
          name: item.Name,
          fullName: item["Full Name"],
          mass: mass,
          noPrefixName: noPrefixName,
          penalty: parseInt(item.Penalty),
          rating: rating,
          ratingString: ratingString,
          size: size,
          support: parseInt(item.Support),
          timePerMove: parseInt(item["Time/Move"]),
          type: item.Type,
          fabrication: fabrication,
          burnout: item.Burnout,
          description: item.Description,
          categories: categories,
          effect: item.Effect,
          drag: parseIntOrUndefined(item.Drag),
          energyUpkeep: parseFloatOrUndefined(item["Energy Upkeep"]),
          heatGeneration: parseIntOrUndefined(item["Heat Generation"]),
          heatPerMove: parseIntOrUndefined(item["Heat/Move"]),
          matterUpkeep: parseIntOrUndefined(item["Matter Upkeep"]),
          modPerExtra: parseIntOrUndefined(item["Mod/Extra"]),
          siege: item.Siege,
          index: index,
          specialProperty: specialProperty
        };
        newItem = propItem;
        break;

      case "Utility":
        const utilItem = {
          slot: "Utility",
          category: category,
          coverage: coverage,
          hackable: hackable,
          integrity: integrity,
          name: item.Name,
          fullName: item["Full Name"],
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          fabrication: fabrication,
          description: item.Description,
          effect: item.Effect,
          categories: categories,
          energyUpkeep: parseIntOrUndefined(item["Energy Upkeep"]),
          heatGeneration: parseIntOrUndefined(item["Heat Generation"]),
          matterUpkeep: parseIntOrUndefined(item["Matter Upkeep"]),
          mass: (_g = parseIntOrUndefined(item.Mass)) !== null && _g !== void 0 ? _g : 0,
          specialTrait: item["Special Trait"],
          index: index,
          specialProperty: specialProperty
        };
        newItem = utilItem;
        break;

      case "Weapon":
        let critical;
        let criticalType;

        if (item.Critical !== undefined) {
          if (item.Critical.includes("%")) {
            // B11-type critical
            const result = /(\d*)% (\w*)/.exec(item.Critical);

            if (result === null) {
              critical = undefined;
              criticalType = undefined;
            } else {
              critical = parseInt(result[1]);
              criticalType = result[2];
            }
          } else {
            // Pre-B11-type critical
            critical = parseIntOrUndefined(item.Critical);
            criticalType = itemTypes_1.Critical.Destroy;
          }
        }

        const weaponItem = {
          slot: "Weapon",
          category: category,
          coverage: coverage,
          hackable: hackable,
          integrity: integrity,
          name: item.Name,
          fullName: item["Full Name"],
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          fabrication: fabrication,
          description: item.Description,
          effect: item.Effect,
          categories: categories,
          mass: (_h = parseIntOrUndefined(item.Mass)) !== null && _h !== void 0 ? _h : 0,
          specialTrait: item["Special Trait"],
          critical: critical,
          criticalType: criticalType,
          criticalString: item.Critical,
          delay: parseIntOrUndefined(item.Delay),
          explosionHeatTransfer: item["Explosion Heat Transfer"],
          explosionType: item["Explosion Type"],
          penetration: item.Penetration,
          projectileCount: (_j = parseIntOrUndefined(item["Projectile Count"])) !== null && _j !== void 0 ? _j : 1,
          range: parseInt(item.Range),
          shotEnergy: parseIntOrUndefined(item["Shot Energy"]),
          shotHeat: parseIntOrUndefined(item["Shot Heat"]),
          targeting: parseIntOrUndefined(item.Targeting),
          damage: item["Damage"] === undefined ? item["Damage Min"] !== undefined ? `${item["Damage Min"]}-${item["Damage Max"]}` : undefined : item["Damage"],
          damageMin: parseIntOrUndefined(item["Damage Min"]),
          damageMax: parseIntOrUndefined(item["Damage Max"]),
          damageType: item["Damage Type"],
          disruption: parseIntOrUndefined(item.Disruption),
          explosionDamage: item["Explosion Damage"] === undefined ? item["Explosion Damage Max"] !== undefined ? `${item["Explosion Damage Min"]}-${item["Explosion Damage Max"]}` : undefined : item["Explosion Damage"],
          explosionDisruption: parseIntOrUndefined(item["Explosion Disruption"]),
          explosionRadius: parseIntOrUndefined(item["Explosion Radius"]),
          explosionSalvage: item["Explosion Salvage"],
          explosionSpectrum: item["Explosion Spectrum"],
          falloff: item.Falloff,
          heatTransfer: item["Heat Transfer"],
          life: item.Life,
          overloadStability: item["Overload Stability"] == null ? undefined : parseIntOrUndefined(item["Overload Stability"].slice(0, -1)),
          recoil: parseIntOrUndefined(item.Recoil),
          salvage: parseIntOrUndefined(item.Salvage),
          shotMatter: parseIntOrUndefined(item["Shot Matter"]),
          spectrum: item.Spectrum,
          waypoints: item.Waypoints,
          arc: parseIntOrUndefined(item.Arc),
          index: index,
          specialProperty: specialProperty
        };
        newItem = weaponItem;
        break;
    }

    exports.itemData[itemName] = newItem;
  });

  if (bots !== undefined) {
    // Create bots
    Object.keys(bots).forEach(botName => {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;

      if (botName === "default") {
        // Not sure why this "default" pops up but it messes things up
        // Maybe an artifact of being imported as a JSON file
        return;
      }

      function sumItemCoverage(sum, data) {
        if (typeof data === "string") {
          // Item name, just parse coverage
          return getItem(data).coverage + sum;
        } else {
          // Option, return largest sum of items
          let largest = 0;
          data.forEach(optionData => {
            var _a;

            if (optionData.name === "None") {
              return;
            }

            const number = (_a = optionData.number) !== null && _a !== void 0 ? _a : 1;
            const item = getItem(optionData.name);
            const optionCoverage = item.coverage * number;
            largest = Math.max(largest, optionCoverage);
          });
          return largest + sum;
        }
      }

      const bot = bots[botName];
      const itemCoverage = ((_b = (_a = bot.Armament) === null || _a === void 0 ? void 0 : _a.reduce(sumItemCoverage, 0)) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = bot.Components) === null || _c === void 0 ? void 0 : _c.reduce(sumItemCoverage, 0)) !== null && _d !== void 0 ? _d : 0);
      let roughCoreCoverage = 100.0 / (100.0 - parseInt(bot["Core Exposure %"])) * itemCoverage - itemCoverage;

      if (isNaN(roughCoreCoverage)) {
        roughCoreCoverage = 1;
      }

      const estimatedCoreCoverage = ceilToMultiple(roughCoreCoverage, 10);
      const totalCoverage = estimatedCoreCoverage + itemCoverage;

      function addPartData(data, partData, partOptionData) {
        if (typeof data === "string") {
          const itemName = data; // Item name, add to part data

          const result = partData.find(p => p.name === data);

          if (result === undefined) {
            const item = getItem(itemName);
            partData.push({
              name: itemName,
              number: 1,
              coverage: Math.floor(100.0 * item.coverage / totalCoverage),
              integrity: item.integrity
            });
          } else {
            result.number += 1;
          }
        } else {
          // Option, add all options
          const options = [];
          data.forEach(optionData => {
            var _a;

            const itemName = optionData.name;
            let coverage = 0;
            const item = getItem(itemName);

            if (itemName !== "None") {
              coverage = Math.floor(100.0 * item.coverage / totalCoverage);
            }

            options.push({
              name: itemName,
              number: (_a = optionData.number) !== null && _a !== void 0 ? _a : 1,
              coverage: coverage,
              integrity: item.integrity
            });
          });
          partOptionData.push(options);
        }
      } // Add armament and component data


      const armamentData = [];
      const armamentOptionData = [];
      (_e = bot.Armament) === null || _e === void 0 ? void 0 : _e.forEach(data => addPartData(data, armamentData, armamentOptionData));
      const componentData = [];
      const componentOptionData = [];
      (_f = bot.Components) === null || _f === void 0 ? void 0 : _f.forEach(data => addPartData(data, componentData, componentOptionData));
      let categories;

      if (!(botName in botCategories)) {
        console.log(`Need to add categories for ${botName}`);
        categories = [];
      } else {
        categories = botCategories[botName];
      }

      const fabrication = bot["Fabrication Count"] === undefined ? undefined : {
        matter: bot["Fabrication Matter"],
        number: bot["Fabrication Count"],
        time: bot["Fabrication Time"]
      };
      exports.botData[botName] = {
        armament: (_g = bot.Armament) !== null && _g !== void 0 ? _g : [],
        armamentData: armamentData,
        armamentOptionData: armamentOptionData,
        armamentString: (_h = bot["Armament String"]) !== null && _h !== void 0 ? _h : "",
        categories: categories,
        class: bot.Class,
        componentData: componentData,
        componentOptionData: componentOptionData,
        components: (_j = bot.Components) !== null && _j !== void 0 ? _j : [],
        componentsString: (_k = bot["Components String"]) !== null && _k !== void 0 ? _k : "",
        coreCoverage: roughCoreCoverage,
        coreExposure: parseInt(bot["Core Exposure %"]),
        coreIntegrity: parseInt(bot["Core Integrity"]),
        description: (_l = bot.Analysis) !== null && _l !== void 0 ? _l : "",
        fabrication: fabrication,
        immunities: (_m = bot.Immunities) !== null && _m !== void 0 ? _m : [],
        immunitiesString: (_p = (_o = bot.Immunities) === null || _o === void 0 ? void 0 : _o.join(", ")) !== null && _p !== void 0 ? _p : "",
        memory: bot.Memory,
        movement: `${bot.Movement} (${bot.Speed})${bot["Overload Speed"] !== undefined ? ` Ovrload (${bot["Overload Speed"]})` : ""}`,
        name: botName,
        profile: bot.Profile,
        rating: bot.Rating,
        resistances: bot.Resistances,
        salvagePotential: bot["Salvage Potential"],
        spotPercent: (_q = bot["Spot %"]) !== null && _q !== void 0 ? _q : "100",
        size: bot["Size Class"],
        threat: bot.Threat,
        totalCoverage: totalCoverage,
        tier: bot.Tier,
        traits: (_r = bot.Traits) !== null && _r !== void 0 ? _r : [],
        traitsString: (_t = (_s = bot.Traits) === null || _s === void 0 ? void 0 : _s.join(", ")) !== null && _t !== void 0 ? _t : "",
        value: parseIntOrDefault(bot.Value, 0),
        visualRange: bot["Sight Range"]
      };
    });
  }
}

exports.initData = initData; // Determines if the given item type is melee

function isPartMelee(part) {
  if (part.type === itemTypes_1.ItemType.ImpactWeapon || part.type === itemTypes_1.ItemType.PiercingWeapon || part.type === itemTypes_1.ItemType.SlashingWeapon || part.type === itemTypes_1.ItemType.SpecialMeleeWeapon) {
    return true;
  }

  return false;
}

exports.isPartMelee = isPartMelee; // Converts leetspeak numbers in a string to characters

function leetSpeakMatchTransform(name) {
  return name.replace(/0/, "o").replace(/1/, "i").replace(/3/, "e").replace(/4/, "a").replace(/7/, "t").replace(/5/, "s").replace(/8/, "b");
}

exports.leetSpeakMatchTransform = leetSpeakMatchTransform; // Converts an item or bot's name to an HTML id

const nameToIdRegex = /[ /.'"\]\[]]*/g;

function nameToId(name) {
  const id = `item${name.replace(nameToIdRegex, "")}`;
  return id;
}

exports.nameToId = nameToId; // Parses the string into a number or null if invalid

function parseFloatOrUndefined(value) {
  const int = parseFloat(value !== null && value !== void 0 ? value : "");

  if (isNaN(int)) {
    return undefined;
  }

  return int;
} // Attempts to parse an int from the string, otherwise uses the default value


function parseIntOrDefault(string, defaultVal) {
  const value = parseInt(string);

  if (isNaN(value)) {
    return defaultVal;
  }

  return value;
}

exports.parseIntOrDefault = parseIntOrDefault; // Parses the string into a number or null if invalid

function parseIntOrUndefined(value) {
  const int = parseInt(value !== null && value !== void 0 ? value : "");

  if (isNaN(int)) {
    return undefined;
  }

  return int;
} // Gets a random integer between the min and max values (inclusive)


function randomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

exports.randomInt = randomInt; // Returns the value if it's not undefined, otherwise return defaultVal

function valueOrDefault(val, defaultVal) {
  if (val === undefined) {
    return defaultVal;
  }

  return val;
}

exports.valueOrDefault = valueOrDefault;
},{"../json/item_categories.json":"json/item_categories.json","../json/bot_categories.json":"json/bot_categories.json","./itemTypes":"ts/itemTypes.ts","./specialItemProperties":"ts/specialItemProperties.ts"}],"ts/commonTypes.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pageTypes = void 0;
exports.pageTypes = ["About", "Bots", "Build", "Hacks", "Parts", "Simulator"];
},{}],"../node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"../node_modules/jquery/dist/jquery.js":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
var define;
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

},{"process":"../node_modules/process/browser.js"}],"../node_modules/popper.js/dist/esm/popper.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];

  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }

  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }

    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/

var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */

function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */


function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  } // NOTE: 1 DOM access here


  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */


function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }

  return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */


function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;

    case '#document':
      return element.body;
  } // Firefox want us to check `-x` and `-y` variations as well


  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}
/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */


function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */

function isIE(version) {
  if (version === 11) {
    return isIE11;
  }

  if (version === 10) {
    return isIE10;
  }

  return isIE11 || isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */


function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here

  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent

  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  } // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...


  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }

  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */


function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */


function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  } // Here we make sure to give as "start" the element that comes first in the DOM


  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1; // Get common ancestor container

  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  } // one of the nodes is inside shadowDOM, find which one


  var element1root = getRoot(element1);

  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */


function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */


function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */


function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */


function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */


function getBoundingClientRect(element) {
  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11

  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  }; // subtract scrollbar size from sizes

  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;
  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons

  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);
  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc

  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }

  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.

  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them

    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };
  return getClientRect(offset);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */


function isFixed(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }

  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }

  var parentNode = getParentNode(element);

  if (!parentNode) {
    return false;
  }

  return isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */


function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }

  var el = element.parentElement;

  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }

  return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */


function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here

  var boundaries = {
    top: 0,
    left: 0
  };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); // Handle viewport case

  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;

    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));

      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation

    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  } // Add paddings


  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;
  return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });
  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split('-')[1];
  return computedPlacement + (variation ? '-' + variation : '');
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */


function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */


function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */


function getOppositePlacement(placement) {
  var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
  };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */


function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0]; // Get popper node sizes

  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object

  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  }; // depending by the popper placement we have to compute its offsets slightly differently

  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;

  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  } // use `filter` to obtain the same behavior of `find`


  return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  } // use `find` + `indexOf` if `findIndex` isn't supported


  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */


function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }

    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation

    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */


function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  }; // compute reference element offsets

  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`

  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed; // compute the popper offsets

  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers

  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback

  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */


function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */


function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;

    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }

  return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */


function destroy() {
  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled

  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners(); // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it

  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }

  return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */


function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, {
    passive: true
  });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }

  scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, {
    passive: true
  }); // Scroll event listener on scroll parents

  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */


function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents

  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  }); // Reset state

  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */


function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */


function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = ''; // add unit if the value is numeric and is one of the following

    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }

    element.style[prop] = styles[prop] + unit;
  });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];

    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */


function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element

  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties

  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */


function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations

  setStyles(popper, {
    position: options.positionFixed ? 'fixed' : 'absolute'
  });
  return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */


function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);
  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;

  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }

  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles

  var styles = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed

  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.

  var left = void 0,
      top = void 0;

  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }

  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }

  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  } // Attributes


  var attributes = {
    'x-placement': data.placement
  }; // Update `data` attributes, styles and arrowStyles

  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */


function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';

    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }

  return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function arrow(data, options) {
  var _data$offsets$arrow; // arrow depends on keepTogether in order to work


  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector

  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier

    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isVertical = ['left', 'right'].indexOf(placement) !== -1;
  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len]; //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //
  // top/left side

  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  } // bottom/right side


  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }

  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper

  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available

  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper

  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
  return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */


function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }

  return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */


var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`

var validPlacements = placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */

function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';
  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;

    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;

    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;

    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here

    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required

    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries

    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries

    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future

      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }

  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */


function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2]; // If it's not a number it's an operator, I guess

  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;

    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;

      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;

    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }

    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */


function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one

  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)

  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  }); // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space

  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  } // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.


  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations

  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, []) // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  }); // Loop trough the offsets arrays and execute the operations

  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */


function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var basePlacement = placement.split('-')[0];
  var offsets = void 0;

  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken

  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  } // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself


  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification

  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];
  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed

  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;
  options.boundaries = boundaries;
  var order = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary(placement) {
      var value = popper[placement];

      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }

      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];

      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }

      return defineProperty({}, mainSide, value);
    }
  };
  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier

  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;
    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */


var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: offset,

    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: preventOverflow,

    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],

    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: arrow,

    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: flip,

    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',

    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',

    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,

    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,

    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,

    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: computeStyle,

    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,

    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',

    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: applyStyle,

    /** @prop {Function} */
    onLoad: applyStyleOnLoad,

    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */

var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */
// Utils
// Methods

var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    }; // make update() debounced, so that it only runs at most once-per-tick


    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it

    this.options = _extends({}, Popper.Defaults, options); // init state

    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    }; // get reference and popper elements (allow jQuery wrappers)

    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options

    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    }); // Refactoring modifiers' list (Object => Array)

    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    }) // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    }); // fire the first update to position the popper in the right place

    this.update();
    var eventsEnabled = this.options.eventsEnabled;

    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  } // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }
    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
var _default = Popper;
exports.default = _default;
},{}],"../node_modules/bootstrap/dist/js/bootstrap.js":[function(require,module,exports) {
var define;
var global = arguments[3];
/*!
  * Bootstrap v4.5.3 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery'), require('popper.js')) :
  typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.bootstrap = {}, global.jQuery, global.Popper));
}(this, (function (exports, $, Popper) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var $__default = /*#__PURE__*/_interopDefaultLegacy($);
  var Popper__default = /*#__PURE__*/_interopDefaultLegacy(Popper);

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.5.3): util.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */

  var TRANSITION_END = 'transitionend';
  var MAX_UID = 1000000;
  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

  function toType(obj) {
    if (obj === null || typeof obj === 'undefined') {
      return "" + obj;
    }

    return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
  }

  function getSpecialTransitionEndEvent() {
    return {
      bindType: TRANSITION_END,
      delegateType: TRANSITION_END,
      handle: function handle(event) {
        if ($__default['default'](event.target).is(this)) {
          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
        }

        return undefined;
      }
    };
  }

  function transitionEndEmulator(duration) {
    var _this = this;

    var called = false;
    $__default['default'](this).one(Util.TRANSITION_END, function () {
      called = true;
    });
    setTimeout(function () {
      if (!called) {
        Util.triggerTransitionEnd(_this);
      }
    }, duration);
    return this;
  }

  function setTransitionEndSupport() {
    $__default['default'].fn.emulateTransitionEnd = transitionEndEmulator;
    $__default['default'].event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
  }
  /**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */


  var Util = {
    TRANSITION_END: 'bsTransitionEnd',
    getUID: function getUID(prefix) {
      do {
        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
      } while (document.getElementById(prefix));

      return prefix;
    },
    getSelectorFromElement: function getSelectorFromElement(element) {
      var selector = element.getAttribute('data-target');

      if (!selector || selector === '#') {
        var hrefAttr = element.getAttribute('href');
        selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';
      }

      try {
        return document.querySelector(selector) ? selector : null;
      } catch (_) {
        return null;
      }
    },
    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {
      if (!element) {
        return 0;
      } // Get transition-duration of the element


      var transitionDuration = $__default['default'](element).css('transition-duration');
      var transitionDelay = $__default['default'](element).css('transition-delay');
      var floatTransitionDuration = parseFloat(transitionDuration);
      var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

      if (!floatTransitionDuration && !floatTransitionDelay) {
        return 0;
      } // If multiple durations are defined, take the first


      transitionDuration = transitionDuration.split(',')[0];
      transitionDelay = transitionDelay.split(',')[0];
      return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
    },
    reflow: function reflow(element) {
      return element.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(element) {
      $__default['default'](element).trigger(TRANSITION_END);
    },
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(TRANSITION_END);
    },
    isElement: function isElement(obj) {
      return (obj[0] || obj).nodeType;
    },
    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
      for (var property in configTypes) {
        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
          var expectedTypes = configTypes[property];
          var value = config[property];
          var valueType = value && Util.isElement(value) ? 'element' : toType(value);

          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));
          }
        }
      }
    },
    findShadowRoot: function findShadowRoot(element) {
      if (!document.documentElement.attachShadow) {
        return null;
      } // Can find the shadow root otherwise it'll return the document


      if (typeof element.getRootNode === 'function') {
        var root = element.getRootNode();
        return root instanceof ShadowRoot ? root : null;
      }

      if (element instanceof ShadowRoot) {
        return element;
      } // when we don't find a shadow root


      if (!element.parentNode) {
        return null;
      }

      return Util.findShadowRoot(element.parentNode);
    },
    jQueryDetection: function jQueryDetection() {
      if (typeof $__default['default'] === 'undefined') {
        throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.');
      }

      var version = $__default['default'].fn.jquery.split(' ')[0].split('.');
      var minMajor = 1;
      var ltMajor = 2;
      var minMinor = 9;
      var minPatch = 1;
      var maxMajor = 4;

      if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {
        throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');
      }
    }
  };
  Util.jQueryDetection();
  setTransitionEndSupport();

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'alert';
  var VERSION = '4.5.3';
  var DATA_KEY = 'bs.alert';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $__default['default'].fn[NAME];
  var SELECTOR_DISMISS = '[data-dismiss="alert"]';
  var EVENT_CLOSE = "close" + EVENT_KEY;
  var EVENT_CLOSED = "closed" + EVENT_KEY;
  var EVENT_CLICK_DATA_API = "click" + EVENT_KEY + DATA_API_KEY;
  var CLASS_NAME_ALERT = 'alert';
  var CLASS_NAME_FADE = 'fade';
  var CLASS_NAME_SHOW = 'show';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Alert = /*#__PURE__*/function () {
    function Alert(element) {
      this._element = element;
    } // Getters


    var _proto = Alert.prototype;

    // Public
    _proto.close = function close(element) {
      var rootElement = this._element;

      if (element) {
        rootElement = this._getRootElement(element);
      }

      var customEvent = this._triggerCloseEvent(rootElement);

      if (customEvent.isDefaultPrevented()) {
        return;
      }

      this._removeElement(rootElement);
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY);
      this._element = null;
    } // Private
    ;

    _proto._getRootElement = function _getRootElement(element) {
      var selector = Util.getSelectorFromElement(element);
      var parent = false;

      if (selector) {
        parent = document.querySelector(selector);
      }

      if (!parent) {
        parent = $__default['default'](element).closest("." + CLASS_NAME_ALERT)[0];
      }

      return parent;
    };

    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {
      var closeEvent = $__default['default'].Event(EVENT_CLOSE);
      $__default['default'](element).trigger(closeEvent);
      return closeEvent;
    };

    _proto._removeElement = function _removeElement(element) {
      var _this = this;

      $__default['default'](element).removeClass(CLASS_NAME_SHOW);

      if (!$__default['default'](element).hasClass(CLASS_NAME_FADE)) {
        this._destroyElement(element);

        return;
      }

      var transitionDuration = Util.getTransitionDurationFromElement(element);
      $__default['default'](element).one(Util.TRANSITION_END, function (event) {
        return _this._destroyElement(element, event);
      }).emulateTransitionEnd(transitionDuration);
    };

    _proto._destroyElement = function _destroyElement(element) {
      $__default['default'](element).detach().trigger(EVENT_CLOSED).remove();
    } // Static
    ;

    Alert._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY);

        if (!data) {
          data = new Alert(this);
          $element.data(DATA_KEY, data);
        }

        if (config === 'close') {
          data[config](this);
        }
      });
    };

    Alert._handleDismiss = function _handleDismiss(alertInstance) {
      return function (event) {
        if (event) {
          event.preventDefault();
        }

        alertInstance.close(this);
      };
    };

    _createClass(Alert, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }]);

    return Alert;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API, SELECTOR_DISMISS, Alert._handleDismiss(new Alert()));
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME] = Alert._jQueryInterface;
  $__default['default'].fn[NAME].Constructor = Alert;

  $__default['default'].fn[NAME].noConflict = function () {
    $__default['default'].fn[NAME] = JQUERY_NO_CONFLICT;
    return Alert._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$1 = 'button';
  var VERSION$1 = '4.5.3';
  var DATA_KEY$1 = 'bs.button';
  var EVENT_KEY$1 = "." + DATA_KEY$1;
  var DATA_API_KEY$1 = '.data-api';
  var JQUERY_NO_CONFLICT$1 = $__default['default'].fn[NAME$1];
  var CLASS_NAME_ACTIVE = 'active';
  var CLASS_NAME_BUTTON = 'btn';
  var CLASS_NAME_FOCUS = 'focus';
  var SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^="button"]';
  var SELECTOR_DATA_TOGGLES = '[data-toggle="buttons"]';
  var SELECTOR_DATA_TOGGLE = '[data-toggle="button"]';
  var SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle="buttons"] .btn';
  var SELECTOR_INPUT = 'input:not([type="hidden"])';
  var SELECTOR_ACTIVE = '.active';
  var SELECTOR_BUTTON = '.btn';
  var EVENT_CLICK_DATA_API$1 = "click" + EVENT_KEY$1 + DATA_API_KEY$1;
  var EVENT_FOCUS_BLUR_DATA_API = "focus" + EVENT_KEY$1 + DATA_API_KEY$1 + " " + ("blur" + EVENT_KEY$1 + DATA_API_KEY$1);
  var EVENT_LOAD_DATA_API = "load" + EVENT_KEY$1 + DATA_API_KEY$1;
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Button = /*#__PURE__*/function () {
    function Button(element) {
      this._element = element;
      this.shouldAvoidTriggerChange = false;
    } // Getters


    var _proto = Button.prototype;

    // Public
    _proto.toggle = function toggle() {
      var triggerChangeEvent = true;
      var addAriaPressed = true;
      var rootElement = $__default['default'](this._element).closest(SELECTOR_DATA_TOGGLES)[0];

      if (rootElement) {
        var input = this._element.querySelector(SELECTOR_INPUT);

        if (input) {
          if (input.type === 'radio') {
            if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {
              triggerChangeEvent = false;
            } else {
              var activeElement = rootElement.querySelector(SELECTOR_ACTIVE);

              if (activeElement) {
                $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE);
              }
            }
          }

          if (triggerChangeEvent) {
            // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input
            if (input.type === 'checkbox' || input.type === 'radio') {
              input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE);
            }

            if (!this.shouldAvoidTriggerChange) {
              $__default['default'](input).trigger('change');
            }
          }

          input.focus();
          addAriaPressed = false;
        }
      }

      if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {
        if (addAriaPressed) {
          this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE));
        }

        if (triggerChangeEvent) {
          $__default['default'](this._element).toggleClass(CLASS_NAME_ACTIVE);
        }
      }
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$1);
      this._element = null;
    } // Static
    ;

    Button._jQueryInterface = function _jQueryInterface(config, avoidTriggerChange) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$1);

        if (!data) {
          data = new Button(this);
          $element.data(DATA_KEY$1, data);
        }

        data.shouldAvoidTriggerChange = avoidTriggerChange;

        if (config === 'toggle') {
          data[config]();
        }
      });
    };

    _createClass(Button, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$1;
      }
    }]);

    return Button;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE_CARROT, function (event) {
    var button = event.target;
    var initialButton = button;

    if (!$__default['default'](button).hasClass(CLASS_NAME_BUTTON)) {
      button = $__default['default'](button).closest(SELECTOR_BUTTON)[0];
    }

    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {
      event.preventDefault(); // work around Firefox bug #1540995
    } else {
      var inputBtn = button.querySelector(SELECTOR_INPUT);

      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {
        event.preventDefault(); // work around Firefox bug #1540995

        return;
      }

      if (initialButton.tagName === 'INPUT' || button.tagName !== 'LABEL') {
        Button._jQueryInterface.call($__default['default'](button), 'toggle', initialButton.tagName === 'INPUT');
      }
    }
  }).on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {
    var button = $__default['default'](event.target).closest(SELECTOR_BUTTON)[0];
    $__default['default'](button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type));
  });
  $__default['default'](window).on(EVENT_LOAD_DATA_API, function () {
    // ensure correct active class is set to match the controls' actual values/states
    // find all checkboxes/readio buttons inside data-toggle groups
    var buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));

    for (var i = 0, len = buttons.length; i < len; i++) {
      var button = buttons[i];
      var input = button.querySelector(SELECTOR_INPUT);

      if (input.checked || input.hasAttribute('checked')) {
        button.classList.add(CLASS_NAME_ACTIVE);
      } else {
        button.classList.remove(CLASS_NAME_ACTIVE);
      }
    } // find all button toggles


    buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));

    for (var _i = 0, _len = buttons.length; _i < _len; _i++) {
      var _button = buttons[_i];

      if (_button.getAttribute('aria-pressed') === 'true') {
        _button.classList.add(CLASS_NAME_ACTIVE);
      } else {
        _button.classList.remove(CLASS_NAME_ACTIVE);
      }
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$1] = Button._jQueryInterface;
  $__default['default'].fn[NAME$1].Constructor = Button;

  $__default['default'].fn[NAME$1].noConflict = function () {
    $__default['default'].fn[NAME$1] = JQUERY_NO_CONFLICT$1;
    return Button._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$2 = 'carousel';
  var VERSION$2 = '4.5.3';
  var DATA_KEY$2 = 'bs.carousel';
  var EVENT_KEY$2 = "." + DATA_KEY$2;
  var DATA_API_KEY$2 = '.data-api';
  var JQUERY_NO_CONFLICT$2 = $__default['default'].fn[NAME$2];
  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key

  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key

  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

  var SWIPE_THRESHOLD = 40;
  var Default = {
    interval: 5000,
    keyboard: true,
    slide: false,
    pause: 'hover',
    wrap: true,
    touch: true
  };
  var DefaultType = {
    interval: '(number|boolean)',
    keyboard: 'boolean',
    slide: '(boolean|string)',
    pause: '(string|boolean)',
    wrap: 'boolean',
    touch: 'boolean'
  };
  var DIRECTION_NEXT = 'next';
  var DIRECTION_PREV = 'prev';
  var DIRECTION_LEFT = 'left';
  var DIRECTION_RIGHT = 'right';
  var EVENT_SLIDE = "slide" + EVENT_KEY$2;
  var EVENT_SLID = "slid" + EVENT_KEY$2;
  var EVENT_KEYDOWN = "keydown" + EVENT_KEY$2;
  var EVENT_MOUSEENTER = "mouseenter" + EVENT_KEY$2;
  var EVENT_MOUSELEAVE = "mouseleave" + EVENT_KEY$2;
  var EVENT_TOUCHSTART = "touchstart" + EVENT_KEY$2;
  var EVENT_TOUCHMOVE = "touchmove" + EVENT_KEY$2;
  var EVENT_TOUCHEND = "touchend" + EVENT_KEY$2;
  var EVENT_POINTERDOWN = "pointerdown" + EVENT_KEY$2;
  var EVENT_POINTERUP = "pointerup" + EVENT_KEY$2;
  var EVENT_DRAG_START = "dragstart" + EVENT_KEY$2;
  var EVENT_LOAD_DATA_API$1 = "load" + EVENT_KEY$2 + DATA_API_KEY$2;
  var EVENT_CLICK_DATA_API$2 = "click" + EVENT_KEY$2 + DATA_API_KEY$2;
  var CLASS_NAME_CAROUSEL = 'carousel';
  var CLASS_NAME_ACTIVE$1 = 'active';
  var CLASS_NAME_SLIDE = 'slide';
  var CLASS_NAME_RIGHT = 'carousel-item-right';
  var CLASS_NAME_LEFT = 'carousel-item-left';
  var CLASS_NAME_NEXT = 'carousel-item-next';
  var CLASS_NAME_PREV = 'carousel-item-prev';
  var CLASS_NAME_POINTER_EVENT = 'pointer-event';
  var SELECTOR_ACTIVE$1 = '.active';
  var SELECTOR_ACTIVE_ITEM = '.active.carousel-item';
  var SELECTOR_ITEM = '.carousel-item';
  var SELECTOR_ITEM_IMG = '.carousel-item img';
  var SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';
  var SELECTOR_INDICATORS = '.carousel-indicators';
  var SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';
  var SELECTOR_DATA_RIDE = '[data-ride="carousel"]';
  var PointerType = {
    TOUCH: 'touch',
    PEN: 'pen'
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Carousel = /*#__PURE__*/function () {
    function Carousel(element, config) {
      this._items = null;
      this._interval = null;
      this._activeElement = null;
      this._isPaused = false;
      this._isSliding = false;
      this.touchTimeout = null;
      this.touchStartX = 0;
      this.touchDeltaX = 0;
      this._config = this._getConfig(config);
      this._element = element;
      this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS);
      this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;
      this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);

      this._addEventListeners();
    } // Getters


    var _proto = Carousel.prototype;

    // Public
    _proto.next = function next() {
      if (!this._isSliding) {
        this._slide(DIRECTION_NEXT);
      }
    };

    _proto.nextWhenVisible = function nextWhenVisible() {
      var $element = $__default['default'](this._element); // Don't call next when the page isn't visible
      // or the carousel or its parent isn't visible

      if (!document.hidden && $element.is(':visible') && $element.css('visibility') !== 'hidden') {
        this.next();
      }
    };

    _proto.prev = function prev() {
      if (!this._isSliding) {
        this._slide(DIRECTION_PREV);
      }
    };

    _proto.pause = function pause(event) {
      if (!event) {
        this._isPaused = true;
      }

      if (this._element.querySelector(SELECTOR_NEXT_PREV)) {
        Util.triggerTransitionEnd(this._element);
        this.cycle(true);
      }

      clearInterval(this._interval);
      this._interval = null;
    };

    _proto.cycle = function cycle(event) {
      if (!event) {
        this._isPaused = false;
      }

      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }

      if (this._config.interval && !this._isPaused) {
        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
      }
    };

    _proto.to = function to(index) {
      var _this = this;

      this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);

      var activeIndex = this._getItemIndex(this._activeElement);

      if (index > this._items.length - 1 || index < 0) {
        return;
      }

      if (this._isSliding) {
        $__default['default'](this._element).one(EVENT_SLID, function () {
          return _this.to(index);
        });
        return;
      }

      if (activeIndex === index) {
        this.pause();
        this.cycle();
        return;
      }

      var direction = index > activeIndex ? DIRECTION_NEXT : DIRECTION_PREV;

      this._slide(direction, this._items[index]);
    };

    _proto.dispose = function dispose() {
      $__default['default'](this._element).off(EVENT_KEY$2);
      $__default['default'].removeData(this._element, DATA_KEY$2);
      this._items = null;
      this._config = null;
      this._element = null;
      this._interval = null;
      this._isPaused = null;
      this._isSliding = null;
      this._activeElement = null;
      this._indicatorsElement = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default, config);
      Util.typeCheckConfig(NAME$2, config, DefaultType);
      return config;
    };

    _proto._handleSwipe = function _handleSwipe() {
      var absDeltax = Math.abs(this.touchDeltaX);

      if (absDeltax <= SWIPE_THRESHOLD) {
        return;
      }

      var direction = absDeltax / this.touchDeltaX;
      this.touchDeltaX = 0; // swipe left

      if (direction > 0) {
        this.prev();
      } // swipe right


      if (direction < 0) {
        this.next();
      }
    };

    _proto._addEventListeners = function _addEventListeners() {
      var _this2 = this;

      if (this._config.keyboard) {
        $__default['default'](this._element).on(EVENT_KEYDOWN, function (event) {
          return _this2._keydown(event);
        });
      }

      if (this._config.pause === 'hover') {
        $__default['default'](this._element).on(EVENT_MOUSEENTER, function (event) {
          return _this2.pause(event);
        }).on(EVENT_MOUSELEAVE, function (event) {
          return _this2.cycle(event);
        });
      }

      if (this._config.touch) {
        this._addTouchEventListeners();
      }
    };

    _proto._addTouchEventListeners = function _addTouchEventListeners() {
      var _this3 = this;

      if (!this._touchSupported) {
        return;
      }

      var start = function start(event) {
        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {
          _this3.touchStartX = event.originalEvent.clientX;
        } else if (!_this3._pointerEvent) {
          _this3.touchStartX = event.originalEvent.touches[0].clientX;
        }
      };

      var move = function move(event) {
        // ensure swiping with one touch and not pinching
        if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {
          _this3.touchDeltaX = 0;
        } else {
          _this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX;
        }
      };

      var end = function end(event) {
        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {
          _this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX;
        }

        _this3._handleSwipe();

        if (_this3._config.pause === 'hover') {
          // If it's a touch-enabled device, mouseenter/leave are fired as
          // part of the mouse compatibility events on first tap - the carousel
          // would stop cycling until user tapped out of it;
          // here, we listen for touchend, explicitly pause the carousel
          // (as if it's the second time we tap on it, mouseenter compat event
          // is NOT fired) and after a timeout (to allow for mouse compatibility
          // events to fire) we explicitly restart cycling
          _this3.pause();

          if (_this3.touchTimeout) {
            clearTimeout(_this3.touchTimeout);
          }

          _this3.touchTimeout = setTimeout(function (event) {
            return _this3.cycle(event);
          }, TOUCHEVENT_COMPAT_WAIT + _this3._config.interval);
        }
      };

      $__default['default'](this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START, function (e) {
        return e.preventDefault();
      });

      if (this._pointerEvent) {
        $__default['default'](this._element).on(EVENT_POINTERDOWN, function (event) {
          return start(event);
        });
        $__default['default'](this._element).on(EVENT_POINTERUP, function (event) {
          return end(event);
        });

        this._element.classList.add(CLASS_NAME_POINTER_EVENT);
      } else {
        $__default['default'](this._element).on(EVENT_TOUCHSTART, function (event) {
          return start(event);
        });
        $__default['default'](this._element).on(EVENT_TOUCHMOVE, function (event) {
          return move(event);
        });
        $__default['default'](this._element).on(EVENT_TOUCHEND, function (event) {
          return end(event);
        });
      }
    };

    _proto._keydown = function _keydown(event) {
      if (/input|textarea/i.test(event.target.tagName)) {
        return;
      }

      switch (event.which) {
        case ARROW_LEFT_KEYCODE:
          event.preventDefault();
          this.prev();
          break;

        case ARROW_RIGHT_KEYCODE:
          event.preventDefault();
          this.next();
          break;
      }
    };

    _proto._getItemIndex = function _getItemIndex(element) {
      this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) : [];
      return this._items.indexOf(element);
    };

    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {
      var isNextDirection = direction === DIRECTION_NEXT;
      var isPrevDirection = direction === DIRECTION_PREV;

      var activeIndex = this._getItemIndex(activeElement);

      var lastItemIndex = this._items.length - 1;
      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;

      if (isGoingToWrap && !this._config.wrap) {
        return activeElement;
      }

      var delta = direction === DIRECTION_PREV ? -1 : 1;
      var itemIndex = (activeIndex + delta) % this._items.length;
      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
    };

    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {
      var targetIndex = this._getItemIndex(relatedTarget);

      var fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));

      var slideEvent = $__default['default'].Event(EVENT_SLIDE, {
        relatedTarget: relatedTarget,
        direction: eventDirectionName,
        from: fromIndex,
        to: targetIndex
      });
      $__default['default'](this._element).trigger(slideEvent);
      return slideEvent;
    };

    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {
      if (this._indicatorsElement) {
        var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE$1));
        $__default['default'](indicators).removeClass(CLASS_NAME_ACTIVE$1);

        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];

        if (nextIndicator) {
          $__default['default'](nextIndicator).addClass(CLASS_NAME_ACTIVE$1);
        }
      }
    };

    _proto._slide = function _slide(direction, element) {
      var _this4 = this;

      var activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);

      var activeElementIndex = this._getItemIndex(activeElement);

      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);

      var nextElementIndex = this._getItemIndex(nextElement);

      var isCycling = Boolean(this._interval);
      var directionalClassName;
      var orderClassName;
      var eventDirectionName;

      if (direction === DIRECTION_NEXT) {
        directionalClassName = CLASS_NAME_LEFT;
        orderClassName = CLASS_NAME_NEXT;
        eventDirectionName = DIRECTION_LEFT;
      } else {
        directionalClassName = CLASS_NAME_RIGHT;
        orderClassName = CLASS_NAME_PREV;
        eventDirectionName = DIRECTION_RIGHT;
      }

      if (nextElement && $__default['default'](nextElement).hasClass(CLASS_NAME_ACTIVE$1)) {
        this._isSliding = false;
        return;
      }

      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

      if (slideEvent.isDefaultPrevented()) {
        return;
      }

      if (!activeElement || !nextElement) {
        // Some weirdness is happening, so we bail
        return;
      }

      this._isSliding = true;

      if (isCycling) {
        this.pause();
      }

      this._setActiveIndicatorElement(nextElement);

      var slidEvent = $__default['default'].Event(EVENT_SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName,
        from: activeElementIndex,
        to: nextElementIndex
      });

      if ($__default['default'](this._element).hasClass(CLASS_NAME_SLIDE)) {
        $__default['default'](nextElement).addClass(orderClassName);
        Util.reflow(nextElement);
        $__default['default'](activeElement).addClass(directionalClassName);
        $__default['default'](nextElement).addClass(directionalClassName);
        var nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);

        if (nextElementInterval) {
          this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
          this._config.interval = nextElementInterval;
        } else {
          this._config.interval = this._config.defaultInterval || this._config.interval;
        }

        var transitionDuration = Util.getTransitionDurationFromElement(activeElement);
        $__default['default'](activeElement).one(Util.TRANSITION_END, function () {
          $__default['default'](nextElement).removeClass(directionalClassName + " " + orderClassName).addClass(CLASS_NAME_ACTIVE$1);
          $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE$1 + " " + orderClassName + " " + directionalClassName);
          _this4._isSliding = false;
          setTimeout(function () {
            return $__default['default'](_this4._element).trigger(slidEvent);
          }, 0);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE$1);
        $__default['default'](nextElement).addClass(CLASS_NAME_ACTIVE$1);
        this._isSliding = false;
        $__default['default'](this._element).trigger(slidEvent);
      }

      if (isCycling) {
        this.cycle();
      }
    } // Static
    ;

    Carousel._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$2);

        var _config = _extends({}, Default, $__default['default'](this).data());

        if (typeof config === 'object') {
          _config = _extends({}, _config, config);
        }

        var action = typeof config === 'string' ? config : _config.slide;

        if (!data) {
          data = new Carousel(this, _config);
          $__default['default'](this).data(DATA_KEY$2, data);
        }

        if (typeof config === 'number') {
          data.to(config);
        } else if (typeof action === 'string') {
          if (typeof data[action] === 'undefined') {
            throw new TypeError("No method named \"" + action + "\"");
          }

          data[action]();
        } else if (_config.interval && _config.ride) {
          data.pause();
          data.cycle();
        }
      });
    };

    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {
      var selector = Util.getSelectorFromElement(this);

      if (!selector) {
        return;
      }

      var target = $__default['default'](selector)[0];

      if (!target || !$__default['default'](target).hasClass(CLASS_NAME_CAROUSEL)) {
        return;
      }

      var config = _extends({}, $__default['default'](target).data(), $__default['default'](this).data());

      var slideIndex = this.getAttribute('data-slide-to');

      if (slideIndex) {
        config.interval = false;
      }

      Carousel._jQueryInterface.call($__default['default'](target), config);

      if (slideIndex) {
        $__default['default'](target).data(DATA_KEY$2).to(slideIndex);
      }

      event.preventDefault();
    };

    _createClass(Carousel, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$2;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Carousel;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$2, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler);
  $__default['default'](window).on(EVENT_LOAD_DATA_API$1, function () {
    var carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));

    for (var i = 0, len = carousels.length; i < len; i++) {
      var $carousel = $__default['default'](carousels[i]);

      Carousel._jQueryInterface.call($carousel, $carousel.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$2] = Carousel._jQueryInterface;
  $__default['default'].fn[NAME$2].Constructor = Carousel;

  $__default['default'].fn[NAME$2].noConflict = function () {
    $__default['default'].fn[NAME$2] = JQUERY_NO_CONFLICT$2;
    return Carousel._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$3 = 'collapse';
  var VERSION$3 = '4.5.3';
  var DATA_KEY$3 = 'bs.collapse';
  var EVENT_KEY$3 = "." + DATA_KEY$3;
  var DATA_API_KEY$3 = '.data-api';
  var JQUERY_NO_CONFLICT$3 = $__default['default'].fn[NAME$3];
  var Default$1 = {
    toggle: true,
    parent: ''
  };
  var DefaultType$1 = {
    toggle: 'boolean',
    parent: '(string|element)'
  };
  var EVENT_SHOW = "show" + EVENT_KEY$3;
  var EVENT_SHOWN = "shown" + EVENT_KEY$3;
  var EVENT_HIDE = "hide" + EVENT_KEY$3;
  var EVENT_HIDDEN = "hidden" + EVENT_KEY$3;
  var EVENT_CLICK_DATA_API$3 = "click" + EVENT_KEY$3 + DATA_API_KEY$3;
  var CLASS_NAME_SHOW$1 = 'show';
  var CLASS_NAME_COLLAPSE = 'collapse';
  var CLASS_NAME_COLLAPSING = 'collapsing';
  var CLASS_NAME_COLLAPSED = 'collapsed';
  var DIMENSION_WIDTH = 'width';
  var DIMENSION_HEIGHT = 'height';
  var SELECTOR_ACTIVES = '.show, .collapsing';
  var SELECTOR_DATA_TOGGLE$1 = '[data-toggle="collapse"]';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Collapse = /*#__PURE__*/function () {
    function Collapse(element, config) {
      this._isTransitioning = false;
      this._element = element;
      this._config = this._getConfig(config);
      this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));
      var toggleList = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$1));

      for (var i = 0, len = toggleList.length; i < len; i++) {
        var elem = toggleList[i];
        var selector = Util.getSelectorFromElement(elem);
        var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {
          return foundElem === element;
        });

        if (selector !== null && filterElement.length > 0) {
          this._selector = selector;

          this._triggerArray.push(elem);
        }
      }

      this._parent = this._config.parent ? this._getParent() : null;

      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray);
      }

      if (this._config.toggle) {
        this.toggle();
      }
    } // Getters


    var _proto = Collapse.prototype;

    // Public
    _proto.toggle = function toggle() {
      if ($__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)) {
        this.hide();
      } else {
        this.show();
      }
    };

    _proto.show = function show() {
      var _this = this;

      if (this._isTransitioning || $__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)) {
        return;
      }

      var actives;
      var activesData;

      if (this._parent) {
        actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function (elem) {
          if (typeof _this._config.parent === 'string') {
            return elem.getAttribute('data-parent') === _this._config.parent;
          }

          return elem.classList.contains(CLASS_NAME_COLLAPSE);
        });

        if (actives.length === 0) {
          actives = null;
        }
      }

      if (actives) {
        activesData = $__default['default'](actives).not(this._selector).data(DATA_KEY$3);

        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = $__default['default'].Event(EVENT_SHOW);
      $__default['default'](this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      if (actives) {
        Collapse._jQueryInterface.call($__default['default'](actives).not(this._selector), 'hide');

        if (!activesData) {
          $__default['default'](actives).data(DATA_KEY$3, null);
        }
      }

      var dimension = this._getDimension();

      $__default['default'](this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);
      this._element.style[dimension] = 0;

      if (this._triggerArray.length) {
        $__default['default'](this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', true);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        $__default['default'](_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE + " " + CLASS_NAME_SHOW$1);
        _this._element.style[dimension] = '';

        _this.setTransitioning(false);

        $__default['default'](_this._element).trigger(EVENT_SHOWN);
      };

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = "scroll" + capitalizedDimension;
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      this._element.style[dimension] = this._element[scrollSize] + "px";
    };

    _proto.hide = function hide() {
      var _this2 = this;

      if (this._isTransitioning || !$__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)) {
        return;
      }

      var startEvent = $__default['default'].Event(EVENT_HIDE);
      $__default['default'](this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      var dimension = this._getDimension();

      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";
      Util.reflow(this._element);
      $__default['default'](this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(CLASS_NAME_COLLAPSE + " " + CLASS_NAME_SHOW$1);
      var triggerArrayLength = this._triggerArray.length;

      if (triggerArrayLength > 0) {
        for (var i = 0; i < triggerArrayLength; i++) {
          var trigger = this._triggerArray[i];
          var selector = Util.getSelectorFromElement(trigger);

          if (selector !== null) {
            var $elem = $__default['default']([].slice.call(document.querySelectorAll(selector)));

            if (!$elem.hasClass(CLASS_NAME_SHOW$1)) {
              $__default['default'](trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', false);
            }
          }
        }
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this2.setTransitioning(false);

        $__default['default'](_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);
      };

      this._element.style[dimension] = '';
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
    };

    _proto.setTransitioning = function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$3);
      this._config = null;
      this._parent = null;
      this._element = null;
      this._triggerArray = null;
      this._isTransitioning = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$1, config);
      config.toggle = Boolean(config.toggle); // Coerce string values

      Util.typeCheckConfig(NAME$3, config, DefaultType$1);
      return config;
    };

    _proto._getDimension = function _getDimension() {
      var hasWidth = $__default['default'](this._element).hasClass(DIMENSION_WIDTH);
      return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT;
    };

    _proto._getParent = function _getParent() {
      var _this3 = this;

      var parent;

      if (Util.isElement(this._config.parent)) {
        parent = this._config.parent; // It's a jQuery object

        if (typeof this._config.parent.jquery !== 'undefined') {
          parent = this._config.parent[0];
        }
      } else {
        parent = document.querySelector(this._config.parent);
      }

      var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";
      var children = [].slice.call(parent.querySelectorAll(selector));
      $__default['default'](children).each(function (i, element) {
        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
      });
      return parent;
    };

    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {
      var isOpen = $__default['default'](element).hasClass(CLASS_NAME_SHOW$1);

      if (triggerArray.length) {
        $__default['default'](triggerArray).toggleClass(CLASS_NAME_COLLAPSED, !isOpen).attr('aria-expanded', isOpen);
      }
    } // Static
    ;

    Collapse._getTargetFromElement = function _getTargetFromElement(element) {
      var selector = Util.getSelectorFromElement(element);
      return selector ? document.querySelector(selector) : null;
    };

    Collapse._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$3);

        var _config = _extends({}, Default$1, $element.data(), typeof config === 'object' && config ? config : {});

        if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {
          _config.toggle = false;
        }

        if (!data) {
          data = new Collapse(this, _config);
          $element.data(DATA_KEY$3, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Collapse, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$3;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$1;
      }
    }]);

    return Collapse;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$1, function (event) {
    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
    if (event.currentTarget.tagName === 'A') {
      event.preventDefault();
    }

    var $trigger = $__default['default'](this);
    var selector = Util.getSelectorFromElement(this);
    var selectors = [].slice.call(document.querySelectorAll(selector));
    $__default['default'](selectors).each(function () {
      var $target = $__default['default'](this);
      var data = $target.data(DATA_KEY$3);
      var config = data ? 'toggle' : $trigger.data();

      Collapse._jQueryInterface.call($target, config);
    });
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$3] = Collapse._jQueryInterface;
  $__default['default'].fn[NAME$3].Constructor = Collapse;

  $__default['default'].fn[NAME$3].noConflict = function () {
    $__default['default'].fn[NAME$3] = JQUERY_NO_CONFLICT$3;
    return Collapse._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$4 = 'dropdown';
  var VERSION$4 = '4.5.3';
  var DATA_KEY$4 = 'bs.dropdown';
  var EVENT_KEY$4 = "." + DATA_KEY$4;
  var DATA_API_KEY$4 = '.data-api';
  var JQUERY_NO_CONFLICT$4 = $__default['default'].fn[NAME$4];
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key

  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key

  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key

  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key

  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)

  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + "|" + ARROW_DOWN_KEYCODE + "|" + ESCAPE_KEYCODE);
  var EVENT_HIDE$1 = "hide" + EVENT_KEY$4;
  var EVENT_HIDDEN$1 = "hidden" + EVENT_KEY$4;
  var EVENT_SHOW$1 = "show" + EVENT_KEY$4;
  var EVENT_SHOWN$1 = "shown" + EVENT_KEY$4;
  var EVENT_CLICK = "click" + EVENT_KEY$4;
  var EVENT_CLICK_DATA_API$4 = "click" + EVENT_KEY$4 + DATA_API_KEY$4;
  var EVENT_KEYDOWN_DATA_API = "keydown" + EVENT_KEY$4 + DATA_API_KEY$4;
  var EVENT_KEYUP_DATA_API = "keyup" + EVENT_KEY$4 + DATA_API_KEY$4;
  var CLASS_NAME_DISABLED = 'disabled';
  var CLASS_NAME_SHOW$2 = 'show';
  var CLASS_NAME_DROPUP = 'dropup';
  var CLASS_NAME_DROPRIGHT = 'dropright';
  var CLASS_NAME_DROPLEFT = 'dropleft';
  var CLASS_NAME_MENURIGHT = 'dropdown-menu-right';
  var CLASS_NAME_POSITION_STATIC = 'position-static';
  var SELECTOR_DATA_TOGGLE$2 = '[data-toggle="dropdown"]';
  var SELECTOR_FORM_CHILD = '.dropdown form';
  var SELECTOR_MENU = '.dropdown-menu';
  var SELECTOR_NAVBAR_NAV = '.navbar-nav';
  var SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';
  var PLACEMENT_TOP = 'top-start';
  var PLACEMENT_TOPEND = 'top-end';
  var PLACEMENT_BOTTOM = 'bottom-start';
  var PLACEMENT_BOTTOMEND = 'bottom-end';
  var PLACEMENT_RIGHT = 'right-start';
  var PLACEMENT_LEFT = 'left-start';
  var Default$2 = {
    offset: 0,
    flip: true,
    boundary: 'scrollParent',
    reference: 'toggle',
    display: 'dynamic',
    popperConfig: null
  };
  var DefaultType$2 = {
    offset: '(number|string|function)',
    flip: 'boolean',
    boundary: '(string|element)',
    reference: '(string|element)',
    display: 'string',
    popperConfig: '(null|object)'
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Dropdown = /*#__PURE__*/function () {
    function Dropdown(element, config) {
      this._element = element;
      this._popper = null;
      this._config = this._getConfig(config);
      this._menu = this._getMenuElement();
      this._inNavbar = this._detectNavbar();

      this._addEventListeners();
    } // Getters


    var _proto = Dropdown.prototype;

    // Public
    _proto.toggle = function toggle() {
      if (this._element.disabled || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED)) {
        return;
      }

      var isActive = $__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2);

      Dropdown._clearMenus();

      if (isActive) {
        return;
      }

      this.show(true);
    };

    _proto.show = function show(usePopper) {
      if (usePopper === void 0) {
        usePopper = false;
      }

      if (this._element.disabled || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED) || $__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2)) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var showEvent = $__default['default'].Event(EVENT_SHOW$1, relatedTarget);

      var parent = Dropdown._getParentFromElement(this._element);

      $__default['default'](parent).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      } // Disable totally Popper.js for Dropdown in Navbar


      if (!this._inNavbar && usePopper) {
        /**
         * Check for Popper dependency
         * Popper - https://popper.js.org
         */
        if (typeof Popper__default['default'] === 'undefined') {
          throw new TypeError('Bootstrap\'s dropdowns require Popper.js (https://popper.js.org/)');
        }

        var referenceElement = this._element;

        if (this._config.reference === 'parent') {
          referenceElement = parent;
        } else if (Util.isElement(this._config.reference)) {
          referenceElement = this._config.reference; // Check if it's jQuery element

          if (typeof this._config.reference.jquery !== 'undefined') {
            referenceElement = this._config.reference[0];
          }
        } // If boundary is not `scrollParent`, then set position to `static`
        // to allow the menu to "escape" the scroll parent's boundaries
        // https://github.com/twbs/bootstrap/issues/24251


        if (this._config.boundary !== 'scrollParent') {
          $__default['default'](parent).addClass(CLASS_NAME_POSITION_STATIC);
        }

        this._popper = new Popper__default['default'](referenceElement, this._menu, this._getPopperConfig());
      } // If this is a touch-enabled device we add extra
      // empty mouseover listeners to the body's immediate children;
      // only needed because of broken event delegation on iOS
      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


      if ('ontouchstart' in document.documentElement && $__default['default'](parent).closest(SELECTOR_NAVBAR_NAV).length === 0) {
        $__default['default'](document.body).children().on('mouseover', null, $__default['default'].noop);
      }

      this._element.focus();

      this._element.setAttribute('aria-expanded', true);

      $__default['default'](this._menu).toggleClass(CLASS_NAME_SHOW$2);
      $__default['default'](parent).toggleClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_SHOWN$1, relatedTarget));
    };

    _proto.hide = function hide() {
      if (this._element.disabled || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED) || !$__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2)) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var hideEvent = $__default['default'].Event(EVENT_HIDE$1, relatedTarget);

      var parent = Dropdown._getParentFromElement(this._element);

      $__default['default'](parent).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      if (this._popper) {
        this._popper.destroy();
      }

      $__default['default'](this._menu).toggleClass(CLASS_NAME_SHOW$2);
      $__default['default'](parent).toggleClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_HIDDEN$1, relatedTarget));
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$4);
      $__default['default'](this._element).off(EVENT_KEY$4);
      this._element = null;
      this._menu = null;

      if (this._popper !== null) {
        this._popper.destroy();

        this._popper = null;
      }
    };

    _proto.update = function update() {
      this._inNavbar = this._detectNavbar();

      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Private
    ;

    _proto._addEventListeners = function _addEventListeners() {
      var _this = this;

      $__default['default'](this._element).on(EVENT_CLICK, function (event) {
        event.preventDefault();
        event.stopPropagation();

        _this.toggle();
      });
    };

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, this.constructor.Default, $__default['default'](this._element).data(), config);
      Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType);
      return config;
    };

    _proto._getMenuElement = function _getMenuElement() {
      if (!this._menu) {
        var parent = Dropdown._getParentFromElement(this._element);

        if (parent) {
          this._menu = parent.querySelector(SELECTOR_MENU);
        }
      }

      return this._menu;
    };

    _proto._getPlacement = function _getPlacement() {
      var $parentDropdown = $__default['default'](this._element.parentNode);
      var placement = PLACEMENT_BOTTOM; // Handle dropup

      if ($parentDropdown.hasClass(CLASS_NAME_DROPUP)) {
        placement = $__default['default'](this._menu).hasClass(CLASS_NAME_MENURIGHT) ? PLACEMENT_TOPEND : PLACEMENT_TOP;
      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPRIGHT)) {
        placement = PLACEMENT_RIGHT;
      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPLEFT)) {
        placement = PLACEMENT_LEFT;
      } else if ($__default['default'](this._menu).hasClass(CLASS_NAME_MENURIGHT)) {
        placement = PLACEMENT_BOTTOMEND;
      }

      return placement;
    };

    _proto._detectNavbar = function _detectNavbar() {
      return $__default['default'](this._element).closest('.navbar').length > 0;
    };

    _proto._getOffset = function _getOffset() {
      var _this2 = this;

      var offset = {};

      if (typeof this._config.offset === 'function') {
        offset.fn = function (data) {
          data.offsets = _extends({}, data.offsets, _this2._config.offset(data.offsets, _this2._element) || {});
          return data;
        };
      } else {
        offset.offset = this._config.offset;
      }

      return offset;
    };

    _proto._getPopperConfig = function _getPopperConfig() {
      var popperConfig = {
        placement: this._getPlacement(),
        modifiers: {
          offset: this._getOffset(),
          flip: {
            enabled: this._config.flip
          },
          preventOverflow: {
            boundariesElement: this._config.boundary
          }
        }
      }; // Disable Popper.js if we have a static display

      if (this._config.display === 'static') {
        popperConfig.modifiers.applyStyle = {
          enabled: false
        };
      }

      return _extends({}, popperConfig, this._config.popperConfig);
    } // Static
    ;

    Dropdown._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$4);

        var _config = typeof config === 'object' ? config : null;

        if (!data) {
          data = new Dropdown(this, _config);
          $__default['default'](this).data(DATA_KEY$4, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    Dropdown._clearMenus = function _clearMenus(event) {
      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {
        return;
      }

      var toggles = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$2));

      for (var i = 0, len = toggles.length; i < len; i++) {
        var parent = Dropdown._getParentFromElement(toggles[i]);

        var context = $__default['default'](toggles[i]).data(DATA_KEY$4);
        var relatedTarget = {
          relatedTarget: toggles[i]
        };

        if (event && event.type === 'click') {
          relatedTarget.clickEvent = event;
        }

        if (!context) {
          continue;
        }

        var dropdownMenu = context._menu;

        if (!$__default['default'](parent).hasClass(CLASS_NAME_SHOW$2)) {
          continue;
        }

        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $__default['default'].contains(parent, event.target)) {
          continue;
        }

        var hideEvent = $__default['default'].Event(EVENT_HIDE$1, relatedTarget);
        $__default['default'](parent).trigger(hideEvent);

        if (hideEvent.isDefaultPrevented()) {
          continue;
        } // If this is a touch-enabled device we remove the extra
        // empty mouseover listeners we added for iOS support


        if ('ontouchstart' in document.documentElement) {
          $__default['default'](document.body).children().off('mouseover', null, $__default['default'].noop);
        }

        toggles[i].setAttribute('aria-expanded', 'false');

        if (context._popper) {
          context._popper.destroy();
        }

        $__default['default'](dropdownMenu).removeClass(CLASS_NAME_SHOW$2);
        $__default['default'](parent).removeClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_HIDDEN$1, relatedTarget));
      }
    };

    Dropdown._getParentFromElement = function _getParentFromElement(element) {
      var parent;
      var selector = Util.getSelectorFromElement(element);

      if (selector) {
        parent = document.querySelector(selector);
      }

      return parent || element.parentNode;
    } // eslint-disable-next-line complexity
    ;

    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {
      // If not input/textarea:
      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command
      // If input/textarea:
      //  - If space key => not a dropdown command
      //  - If key is other than escape
      //    - If key is not up or down => not a dropdown command
      //    - If trigger inside the menu => not a dropdown command
      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $__default['default'](event.target).closest(SELECTOR_MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {
        return;
      }

      if (this.disabled || $__default['default'](this).hasClass(CLASS_NAME_DISABLED)) {
        return;
      }

      var parent = Dropdown._getParentFromElement(this);

      var isActive = $__default['default'](parent).hasClass(CLASS_NAME_SHOW$2);

      if (!isActive && event.which === ESCAPE_KEYCODE) {
        return;
      }

      event.preventDefault();
      event.stopPropagation();

      if (!isActive || event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE) {
        if (event.which === ESCAPE_KEYCODE) {
          $__default['default'](parent.querySelector(SELECTOR_DATA_TOGGLE$2)).trigger('focus');
        }

        $__default['default'](this).trigger('click');
        return;
      }

      var items = [].slice.call(parent.querySelectorAll(SELECTOR_VISIBLE_ITEMS)).filter(function (item) {
        return $__default['default'](item).is(':visible');
      });

      if (items.length === 0) {
        return;
      }

      var index = items.indexOf(event.target);

      if (event.which === ARROW_UP_KEYCODE && index > 0) {
        // Up
        index--;
      }

      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {
        // Down
        index++;
      }

      if (index < 0) {
        index = 0;
      }

      items[index].focus();
    };

    _createClass(Dropdown, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$4;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$2;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$2;
      }
    }]);

    return Dropdown;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$2, Dropdown._dataApiKeydownHandler).on(EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown._dataApiKeydownHandler).on(EVENT_CLICK_DATA_API$4 + " " + EVENT_KEYUP_DATA_API, Dropdown._clearMenus).on(EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$2, function (event) {
    event.preventDefault();
    event.stopPropagation();

    Dropdown._jQueryInterface.call($__default['default'](this), 'toggle');
  }).on(EVENT_CLICK_DATA_API$4, SELECTOR_FORM_CHILD, function (e) {
    e.stopPropagation();
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$4] = Dropdown._jQueryInterface;
  $__default['default'].fn[NAME$4].Constructor = Dropdown;

  $__default['default'].fn[NAME$4].noConflict = function () {
    $__default['default'].fn[NAME$4] = JQUERY_NO_CONFLICT$4;
    return Dropdown._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$5 = 'modal';
  var VERSION$5 = '4.5.3';
  var DATA_KEY$5 = 'bs.modal';
  var EVENT_KEY$5 = "." + DATA_KEY$5;
  var DATA_API_KEY$5 = '.data-api';
  var JQUERY_NO_CONFLICT$5 = $__default['default'].fn[NAME$5];
  var ESCAPE_KEYCODE$1 = 27; // KeyboardEvent.which value for Escape (Esc) key

  var Default$3 = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: true
  };
  var DefaultType$3 = {
    backdrop: '(boolean|string)',
    keyboard: 'boolean',
    focus: 'boolean',
    show: 'boolean'
  };
  var EVENT_HIDE$2 = "hide" + EVENT_KEY$5;
  var EVENT_HIDE_PREVENTED = "hidePrevented" + EVENT_KEY$5;
  var EVENT_HIDDEN$2 = "hidden" + EVENT_KEY$5;
  var EVENT_SHOW$2 = "show" + EVENT_KEY$5;
  var EVENT_SHOWN$2 = "shown" + EVENT_KEY$5;
  var EVENT_FOCUSIN = "focusin" + EVENT_KEY$5;
  var EVENT_RESIZE = "resize" + EVENT_KEY$5;
  var EVENT_CLICK_DISMISS = "click.dismiss" + EVENT_KEY$5;
  var EVENT_KEYDOWN_DISMISS = "keydown.dismiss" + EVENT_KEY$5;
  var EVENT_MOUSEUP_DISMISS = "mouseup.dismiss" + EVENT_KEY$5;
  var EVENT_MOUSEDOWN_DISMISS = "mousedown.dismiss" + EVENT_KEY$5;
  var EVENT_CLICK_DATA_API$5 = "click" + EVENT_KEY$5 + DATA_API_KEY$5;
  var CLASS_NAME_SCROLLABLE = 'modal-dialog-scrollable';
  var CLASS_NAME_SCROLLBAR_MEASURER = 'modal-scrollbar-measure';
  var CLASS_NAME_BACKDROP = 'modal-backdrop';
  var CLASS_NAME_OPEN = 'modal-open';
  var CLASS_NAME_FADE$1 = 'fade';
  var CLASS_NAME_SHOW$3 = 'show';
  var CLASS_NAME_STATIC = 'modal-static';
  var SELECTOR_DIALOG = '.modal-dialog';
  var SELECTOR_MODAL_BODY = '.modal-body';
  var SELECTOR_DATA_TOGGLE$3 = '[data-toggle="modal"]';
  var SELECTOR_DATA_DISMISS = '[data-dismiss="modal"]';
  var SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';
  var SELECTOR_STICKY_CONTENT = '.sticky-top';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Modal = /*#__PURE__*/function () {
    function Modal(element, config) {
      this._config = this._getConfig(config);
      this._element = element;
      this._dialog = element.querySelector(SELECTOR_DIALOG);
      this._backdrop = null;
      this._isShown = false;
      this._isBodyOverflowing = false;
      this._ignoreBackdropClick = false;
      this._isTransitioning = false;
      this._scrollbarWidth = 0;
    } // Getters


    var _proto = Modal.prototype;

    // Public
    _proto.toggle = function toggle(relatedTarget) {
      return this._isShown ? this.hide() : this.show(relatedTarget);
    };

    _proto.show = function show(relatedTarget) {
      var _this = this;

      if (this._isShown || this._isTransitioning) {
        return;
      }

      if ($__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)) {
        this._isTransitioning = true;
      }

      var showEvent = $__default['default'].Event(EVENT_SHOW$2, {
        relatedTarget: relatedTarget
      });
      $__default['default'](this._element).trigger(showEvent);

      if (this._isShown || showEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = true;

      this._checkScrollbar();

      this._setScrollbar();

      this._adjustDialog();

      this._setEscapeEvent();

      this._setResizeEvent();

      $__default['default'](this._element).on(EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, function (event) {
        return _this.hide(event);
      });
      $__default['default'](this._dialog).on(EVENT_MOUSEDOWN_DISMISS, function () {
        $__default['default'](_this._element).one(EVENT_MOUSEUP_DISMISS, function (event) {
          if ($__default['default'](event.target).is(_this._element)) {
            _this._ignoreBackdropClick = true;
          }
        });
      });

      this._showBackdrop(function () {
        return _this._showElement(relatedTarget);
      });
    };

    _proto.hide = function hide(event) {
      var _this2 = this;

      if (event) {
        event.preventDefault();
      }

      if (!this._isShown || this._isTransitioning) {
        return;
      }

      var hideEvent = $__default['default'].Event(EVENT_HIDE$2);
      $__default['default'](this._element).trigger(hideEvent);

      if (!this._isShown || hideEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = false;
      var transition = $__default['default'](this._element).hasClass(CLASS_NAME_FADE$1);

      if (transition) {
        this._isTransitioning = true;
      }

      this._setEscapeEvent();

      this._setResizeEvent();

      $__default['default'](document).off(EVENT_FOCUSIN);
      $__default['default'](this._element).removeClass(CLASS_NAME_SHOW$3);
      $__default['default'](this._element).off(EVENT_CLICK_DISMISS);
      $__default['default'](this._dialog).off(EVENT_MOUSEDOWN_DISMISS);

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $__default['default'](this._element).one(Util.TRANSITION_END, function (event) {
          return _this2._hideModal(event);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        this._hideModal();
      }
    };

    _proto.dispose = function dispose() {
      [window, this._element, this._dialog].forEach(function (htmlElement) {
        return $__default['default'](htmlElement).off(EVENT_KEY$5);
      });
      /**
       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`
       * Do not move `document` in `htmlElements` array
       * It will remove `EVENT_CLICK_DATA_API` event that should remain
       */

      $__default['default'](document).off(EVENT_FOCUSIN);
      $__default['default'].removeData(this._element, DATA_KEY$5);
      this._config = null;
      this._element = null;
      this._dialog = null;
      this._backdrop = null;
      this._isShown = null;
      this._isBodyOverflowing = null;
      this._ignoreBackdropClick = null;
      this._isTransitioning = null;
      this._scrollbarWidth = null;
    };

    _proto.handleUpdate = function handleUpdate() {
      this._adjustDialog();
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$3, config);
      Util.typeCheckConfig(NAME$5, config, DefaultType$3);
      return config;
    };

    _proto._triggerBackdropTransition = function _triggerBackdropTransition() {
      var _this3 = this;

      if (this._config.backdrop === 'static') {
        var hideEventPrevented = $__default['default'].Event(EVENT_HIDE_PREVENTED);
        $__default['default'](this._element).trigger(hideEventPrevented);

        if (hideEventPrevented.isDefaultPrevented()) {
          return;
        }

        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

        if (!isModalOverflowing) {
          this._element.style.overflowY = 'hidden';
        }

        this._element.classList.add(CLASS_NAME_STATIC);

        var modalTransitionDuration = Util.getTransitionDurationFromElement(this._dialog);
        $__default['default'](this._element).off(Util.TRANSITION_END);
        $__default['default'](this._element).one(Util.TRANSITION_END, function () {
          _this3._element.classList.remove(CLASS_NAME_STATIC);

          if (!isModalOverflowing) {
            $__default['default'](_this3._element).one(Util.TRANSITION_END, function () {
              _this3._element.style.overflowY = '';
            }).emulateTransitionEnd(_this3._element, modalTransitionDuration);
          }
        }).emulateTransitionEnd(modalTransitionDuration);

        this._element.focus();
      } else {
        this.hide();
      }
    };

    _proto._showElement = function _showElement(relatedTarget) {
      var _this4 = this;

      var transition = $__default['default'](this._element).hasClass(CLASS_NAME_FADE$1);
      var modalBody = this._dialog ? this._dialog.querySelector(SELECTOR_MODAL_BODY) : null;

      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
        // Don't move modal's DOM position
        document.body.appendChild(this._element);
      }

      this._element.style.display = 'block';

      this._element.removeAttribute('aria-hidden');

      this._element.setAttribute('aria-modal', true);

      this._element.setAttribute('role', 'dialog');

      if ($__default['default'](this._dialog).hasClass(CLASS_NAME_SCROLLABLE) && modalBody) {
        modalBody.scrollTop = 0;
      } else {
        this._element.scrollTop = 0;
      }

      if (transition) {
        Util.reflow(this._element);
      }

      $__default['default'](this._element).addClass(CLASS_NAME_SHOW$3);

      if (this._config.focus) {
        this._enforceFocus();
      }

      var shownEvent = $__default['default'].Event(EVENT_SHOWN$2, {
        relatedTarget: relatedTarget
      });

      var transitionComplete = function transitionComplete() {
        if (_this4._config.focus) {
          _this4._element.focus();
        }

        _this4._isTransitioning = false;
        $__default['default'](_this4._element).trigger(shownEvent);
      };

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);
        $__default['default'](this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);
      } else {
        transitionComplete();
      }
    };

    _proto._enforceFocus = function _enforceFocus() {
      var _this5 = this;

      $__default['default'](document).off(EVENT_FOCUSIN) // Guard against infinite focus loop
      .on(EVENT_FOCUSIN, function (event) {
        if (document !== event.target && _this5._element !== event.target && $__default['default'](_this5._element).has(event.target).length === 0) {
          _this5._element.focus();
        }
      });
    };

    _proto._setEscapeEvent = function _setEscapeEvent() {
      var _this6 = this;

      if (this._isShown) {
        $__default['default'](this._element).on(EVENT_KEYDOWN_DISMISS, function (event) {
          if (_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {
            event.preventDefault();

            _this6.hide();
          } else if (!_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {
            _this6._triggerBackdropTransition();
          }
        });
      } else if (!this._isShown) {
        $__default['default'](this._element).off(EVENT_KEYDOWN_DISMISS);
      }
    };

    _proto._setResizeEvent = function _setResizeEvent() {
      var _this7 = this;

      if (this._isShown) {
        $__default['default'](window).on(EVENT_RESIZE, function (event) {
          return _this7.handleUpdate(event);
        });
      } else {
        $__default['default'](window).off(EVENT_RESIZE);
      }
    };

    _proto._hideModal = function _hideModal() {
      var _this8 = this;

      this._element.style.display = 'none';

      this._element.setAttribute('aria-hidden', true);

      this._element.removeAttribute('aria-modal');

      this._element.removeAttribute('role');

      this._isTransitioning = false;

      this._showBackdrop(function () {
        $__default['default'](document.body).removeClass(CLASS_NAME_OPEN);

        _this8._resetAdjustments();

        _this8._resetScrollbar();

        $__default['default'](_this8._element).trigger(EVENT_HIDDEN$2);
      });
    };

    _proto._removeBackdrop = function _removeBackdrop() {
      if (this._backdrop) {
        $__default['default'](this._backdrop).remove();
        this._backdrop = null;
      }
    };

    _proto._showBackdrop = function _showBackdrop(callback) {
      var _this9 = this;

      var animate = $__default['default'](this._element).hasClass(CLASS_NAME_FADE$1) ? CLASS_NAME_FADE$1 : '';

      if (this._isShown && this._config.backdrop) {
        this._backdrop = document.createElement('div');
        this._backdrop.className = CLASS_NAME_BACKDROP;

        if (animate) {
          this._backdrop.classList.add(animate);
        }

        $__default['default'](this._backdrop).appendTo(document.body);
        $__default['default'](this._element).on(EVENT_CLICK_DISMISS, function (event) {
          if (_this9._ignoreBackdropClick) {
            _this9._ignoreBackdropClick = false;
            return;
          }

          if (event.target !== event.currentTarget) {
            return;
          }

          _this9._triggerBackdropTransition();
        });

        if (animate) {
          Util.reflow(this._backdrop);
        }

        $__default['default'](this._backdrop).addClass(CLASS_NAME_SHOW$3);

        if (!callback) {
          return;
        }

        if (!animate) {
          callback();
          return;
        }

        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
        $__default['default'](this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);
      } else if (!this._isShown && this._backdrop) {
        $__default['default'](this._backdrop).removeClass(CLASS_NAME_SHOW$3);

        var callbackRemove = function callbackRemove() {
          _this9._removeBackdrop();

          if (callback) {
            callback();
          }
        };

        if ($__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)) {
          var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);

          $__default['default'](this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);
        } else {
          callbackRemove();
        }
      } else if (callback) {
        callback();
      }
    } // ----------------------------------------------------------------------
    // the following methods are used to handle overflowing modals
    // todo (fat): these should probably be refactored out of modal.js
    // ----------------------------------------------------------------------
    ;

    _proto._adjustDialog = function _adjustDialog() {
      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

      if (!this._isBodyOverflowing && isModalOverflowing) {
        this._element.style.paddingLeft = this._scrollbarWidth + "px";
      }

      if (this._isBodyOverflowing && !isModalOverflowing) {
        this._element.style.paddingRight = this._scrollbarWidth + "px";
      }
    };

    _proto._resetAdjustments = function _resetAdjustments() {
      this._element.style.paddingLeft = '';
      this._element.style.paddingRight = '';
    };

    _proto._checkScrollbar = function _checkScrollbar() {
      var rect = document.body.getBoundingClientRect();
      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;
      this._scrollbarWidth = this._getScrollbarWidth();
    };

    _proto._setScrollbar = function _setScrollbar() {
      var _this10 = this;

      if (this._isBodyOverflowing) {
        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set
        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set
        var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));
        var stickyContent = [].slice.call(document.querySelectorAll(SELECTOR_STICKY_CONTENT)); // Adjust fixed content padding

        $__default['default'](fixedContent).each(function (index, element) {
          var actualPadding = element.style.paddingRight;
          var calculatedPadding = $__default['default'](element).css('padding-right');
          $__default['default'](element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this10._scrollbarWidth + "px");
        }); // Adjust sticky content margin

        $__default['default'](stickyContent).each(function (index, element) {
          var actualMargin = element.style.marginRight;
          var calculatedMargin = $__default['default'](element).css('margin-right');
          $__default['default'](element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this10._scrollbarWidth + "px");
        }); // Adjust body padding

        var actualPadding = document.body.style.paddingRight;
        var calculatedPadding = $__default['default'](document.body).css('padding-right');
        $__default['default'](document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");
      }

      $__default['default'](document.body).addClass(CLASS_NAME_OPEN);
    };

    _proto._resetScrollbar = function _resetScrollbar() {
      // Restore fixed content padding
      var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));
      $__default['default'](fixedContent).each(function (index, element) {
        var padding = $__default['default'](element).data('padding-right');
        $__default['default'](element).removeData('padding-right');
        element.style.paddingRight = padding ? padding : '';
      }); // Restore sticky content

      var elements = [].slice.call(document.querySelectorAll("" + SELECTOR_STICKY_CONTENT));
      $__default['default'](elements).each(function (index, element) {
        var margin = $__default['default'](element).data('margin-right');

        if (typeof margin !== 'undefined') {
          $__default['default'](element).css('margin-right', margin).removeData('margin-right');
        }
      }); // Restore body padding

      var padding = $__default['default'](document.body).data('padding-right');
      $__default['default'](document.body).removeData('padding-right');
      document.body.style.paddingRight = padding ? padding : '';
    };

    _proto._getScrollbarWidth = function _getScrollbarWidth() {
      // thx d.walsh
      var scrollDiv = document.createElement('div');
      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;
      document.body.appendChild(scrollDiv);
      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarWidth;
    } // Static
    ;

    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$5);

        var _config = _extends({}, Default$3, $__default['default'](this).data(), typeof config === 'object' && config ? config : {});

        if (!data) {
          data = new Modal(this, _config);
          $__default['default'](this).data(DATA_KEY$5, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](relatedTarget);
        } else if (_config.show) {
          data.show(relatedTarget);
        }
      });
    };

    _createClass(Modal, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$5;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$3;
      }
    }]);

    return Modal;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$5, SELECTOR_DATA_TOGGLE$3, function (event) {
    var _this11 = this;

    var target;
    var selector = Util.getSelectorFromElement(this);

    if (selector) {
      target = document.querySelector(selector);
    }

    var config = $__default['default'](target).data(DATA_KEY$5) ? 'toggle' : _extends({}, $__default['default'](target).data(), $__default['default'](this).data());

    if (this.tagName === 'A' || this.tagName === 'AREA') {
      event.preventDefault();
    }

    var $target = $__default['default'](target).one(EVENT_SHOW$2, function (showEvent) {
      if (showEvent.isDefaultPrevented()) {
        // Only register focus restorer if modal will actually get shown
        return;
      }

      $target.one(EVENT_HIDDEN$2, function () {
        if ($__default['default'](_this11).is(':visible')) {
          _this11.focus();
        }
      });
    });

    Modal._jQueryInterface.call($__default['default'](target), config, this);
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$5] = Modal._jQueryInterface;
  $__default['default'].fn[NAME$5].Constructor = Modal;

  $__default['default'].fn[NAME$5].noConflict = function () {
    $__default['default'].fn[NAME$5] = JQUERY_NO_CONFLICT$5;
    return Modal._jQueryInterface;
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.5.3): tools/sanitizer.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];
  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  };
  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;
  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;

  function allowedAttribute(attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase();

    if (allowedAttributeList.indexOf(attrName) !== -1) {
      if (uriAttrs.indexOf(attrName) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
      }

      return true;
    }

    var regExp = allowedAttributeList.filter(function (attrRegex) {
      return attrRegex instanceof RegExp;
    }); // Check if a regular expression validates the attribute.

    for (var i = 0, len = regExp.length; i < len; i++) {
      if (attrName.match(regExp[i])) {
        return true;
      }
    }

    return false;
  }

  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
    if (unsafeHtml.length === 0) {
      return unsafeHtml;
    }

    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeHtml);
    }

    var domParser = new window.DOMParser();
    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');
    var whitelistKeys = Object.keys(whiteList);
    var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));

    var _loop = function _loop(i, len) {
      var el = elements[i];
      var elName = el.nodeName.toLowerCase();

      if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {
        el.parentNode.removeChild(el);
        return "continue";
      }

      var attributeList = [].slice.call(el.attributes);
      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);
      attributeList.forEach(function (attr) {
        if (!allowedAttribute(attr, whitelistedAttributes)) {
          el.removeAttribute(attr.nodeName);
        }
      });
    };

    for (var i = 0, len = elements.length; i < len; i++) {
      var _ret = _loop(i);

      if (_ret === "continue") continue;
    }

    return createdDocument.body.innerHTML;
  }

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$6 = 'tooltip';
  var VERSION$6 = '4.5.3';
  var DATA_KEY$6 = 'bs.tooltip';
  var EVENT_KEY$6 = "." + DATA_KEY$6;
  var JQUERY_NO_CONFLICT$6 = $__default['default'].fn[NAME$6];
  var CLASS_PREFIX = 'bs-tooltip';
  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');
  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];
  var DefaultType$4 = {
    animation: 'boolean',
    template: 'string',
    title: '(string|element|function)',
    trigger: 'string',
    delay: '(number|object)',
    html: 'boolean',
    selector: '(string|boolean)',
    placement: '(string|function)',
    offset: '(number|string|function)',
    container: '(string|element|boolean)',
    fallbackPlacement: '(string|array)',
    boundary: '(string|element)',
    sanitize: 'boolean',
    sanitizeFn: '(null|function)',
    whiteList: 'object',
    popperConfig: '(null|object)'
  };
  var AttachmentMap = {
    AUTO: 'auto',
    TOP: 'top',
    RIGHT: 'right',
    BOTTOM: 'bottom',
    LEFT: 'left'
  };
  var Default$4 = {
    animation: true,
    template: '<div class="tooltip" role="tooltip">' + '<div class="arrow"></div>' + '<div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    selector: false,
    placement: 'top',
    offset: 0,
    container: false,
    fallbackPlacement: 'flip',
    boundary: 'scrollParent',
    sanitize: true,
    sanitizeFn: null,
    whiteList: DefaultWhitelist,
    popperConfig: null
  };
  var HOVER_STATE_SHOW = 'show';
  var HOVER_STATE_OUT = 'out';
  var Event = {
    HIDE: "hide" + EVENT_KEY$6,
    HIDDEN: "hidden" + EVENT_KEY$6,
    SHOW: "show" + EVENT_KEY$6,
    SHOWN: "shown" + EVENT_KEY$6,
    INSERTED: "inserted" + EVENT_KEY$6,
    CLICK: "click" + EVENT_KEY$6,
    FOCUSIN: "focusin" + EVENT_KEY$6,
    FOCUSOUT: "focusout" + EVENT_KEY$6,
    MOUSEENTER: "mouseenter" + EVENT_KEY$6,
    MOUSELEAVE: "mouseleave" + EVENT_KEY$6
  };
  var CLASS_NAME_FADE$2 = 'fade';
  var CLASS_NAME_SHOW$4 = 'show';
  var SELECTOR_TOOLTIP_INNER = '.tooltip-inner';
  var SELECTOR_ARROW = '.arrow';
  var TRIGGER_HOVER = 'hover';
  var TRIGGER_FOCUS = 'focus';
  var TRIGGER_CLICK = 'click';
  var TRIGGER_MANUAL = 'manual';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tooltip = /*#__PURE__*/function () {
    function Tooltip(element, config) {
      if (typeof Popper__default['default'] === 'undefined') {
        throw new TypeError('Bootstrap\'s tooltips require Popper.js (https://popper.js.org/)');
      } // private


      this._isEnabled = true;
      this._timeout = 0;
      this._hoverState = '';
      this._activeTrigger = {};
      this._popper = null; // Protected

      this.element = element;
      this.config = this._getConfig(config);
      this.tip = null;

      this._setListeners();
    } // Getters


    var _proto = Tooltip.prototype;

    // Public
    _proto.enable = function enable() {
      this._isEnabled = true;
    };

    _proto.disable = function disable() {
      this._isEnabled = false;
    };

    _proto.toggleEnabled = function toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    };

    _proto.toggle = function toggle(event) {
      if (!this._isEnabled) {
        return;
      }

      if (event) {
        var dataKey = this.constructor.DATA_KEY;
        var context = $__default['default'](event.currentTarget).data(dataKey);

        if (!context) {
          context = new this.constructor(event.currentTarget, this._getDelegateConfig());
          $__default['default'](event.currentTarget).data(dataKey, context);
        }

        context._activeTrigger.click = !context._activeTrigger.click;

        if (context._isWithActiveTrigger()) {
          context._enter(null, context);
        } else {
          context._leave(null, context);
        }
      } else {
        if ($__default['default'](this.getTipElement()).hasClass(CLASS_NAME_SHOW$4)) {
          this._leave(null, this);

          return;
        }

        this._enter(null, this);
      }
    };

    _proto.dispose = function dispose() {
      clearTimeout(this._timeout);
      $__default['default'].removeData(this.element, this.constructor.DATA_KEY);
      $__default['default'](this.element).off(this.constructor.EVENT_KEY);
      $__default['default'](this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler);

      if (this.tip) {
        $__default['default'](this.tip).remove();
      }

      this._isEnabled = null;
      this._timeout = null;
      this._hoverState = null;
      this._activeTrigger = null;

      if (this._popper) {
        this._popper.destroy();
      }

      this._popper = null;
      this.element = null;
      this.config = null;
      this.tip = null;
    };

    _proto.show = function show() {
      var _this = this;

      if ($__default['default'](this.element).css('display') === 'none') {
        throw new Error('Please use show on visible elements');
      }

      var showEvent = $__default['default'].Event(this.constructor.Event.SHOW);

      if (this.isWithContent() && this._isEnabled) {
        $__default['default'](this.element).trigger(showEvent);
        var shadowRoot = Util.findShadowRoot(this.element);
        var isInTheDom = $__default['default'].contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);

        if (showEvent.isDefaultPrevented() || !isInTheDom) {
          return;
        }

        var tip = this.getTipElement();
        var tipId = Util.getUID(this.constructor.NAME);
        tip.setAttribute('id', tipId);
        this.element.setAttribute('aria-describedby', tipId);
        this.setContent();

        if (this.config.animation) {
          $__default['default'](tip).addClass(CLASS_NAME_FADE$2);
        }

        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;

        var attachment = this._getAttachment(placement);

        this.addAttachmentClass(attachment);

        var container = this._getContainer();

        $__default['default'](tip).data(this.constructor.DATA_KEY, this);

        if (!$__default['default'].contains(this.element.ownerDocument.documentElement, this.tip)) {
          $__default['default'](tip).appendTo(container);
        }

        $__default['default'](this.element).trigger(this.constructor.Event.INSERTED);
        this._popper = new Popper__default['default'](this.element, tip, this._getPopperConfig(attachment));
        $__default['default'](tip).addClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we add extra
        // empty mouseover listeners to the body's immediate children;
        // only needed because of broken event delegation on iOS
        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

        if ('ontouchstart' in document.documentElement) {
          $__default['default'](document.body).children().on('mouseover', null, $__default['default'].noop);
        }

        var complete = function complete() {
          if (_this.config.animation) {
            _this._fixTransition();
          }

          var prevHoverState = _this._hoverState;
          _this._hoverState = null;
          $__default['default'](_this.element).trigger(_this.constructor.Event.SHOWN);

          if (prevHoverState === HOVER_STATE_OUT) {
            _this._leave(null, _this);
          }
        };

        if ($__default['default'](this.tip).hasClass(CLASS_NAME_FADE$2)) {
          var transitionDuration = Util.getTransitionDurationFromElement(this.tip);
          $__default['default'](this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
        } else {
          complete();
        }
      }
    };

    _proto.hide = function hide(callback) {
      var _this2 = this;

      var tip = this.getTipElement();
      var hideEvent = $__default['default'].Event(this.constructor.Event.HIDE);

      var complete = function complete() {
        if (_this2._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {
          tip.parentNode.removeChild(tip);
        }

        _this2._cleanTipClass();

        _this2.element.removeAttribute('aria-describedby');

        $__default['default'](_this2.element).trigger(_this2.constructor.Event.HIDDEN);

        if (_this2._popper !== null) {
          _this2._popper.destroy();
        }

        if (callback) {
          callback();
        }
      };

      $__default['default'](this.element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      $__default['default'](tip).removeClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we remove the extra
      // empty mouseover listeners we added for iOS support

      if ('ontouchstart' in document.documentElement) {
        $__default['default'](document.body).children().off('mouseover', null, $__default['default'].noop);
      }

      this._activeTrigger[TRIGGER_CLICK] = false;
      this._activeTrigger[TRIGGER_FOCUS] = false;
      this._activeTrigger[TRIGGER_HOVER] = false;

      if ($__default['default'](this.tip).hasClass(CLASS_NAME_FADE$2)) {
        var transitionDuration = Util.getTransitionDurationFromElement(tip);
        $__default['default'](tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }

      this._hoverState = '';
    };

    _proto.update = function update() {
      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Protected
    ;

    _proto.isWithContent = function isWithContent() {
      return Boolean(this.getTitle());
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $__default['default'](this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $__default['default'](this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var tip = this.getTipElement();
      this.setElementContent($__default['default'](tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)), this.getTitle());
      $__default['default'](tip).removeClass(CLASS_NAME_FADE$2 + " " + CLASS_NAME_SHOW$4);
    };

    _proto.setElementContent = function setElementContent($element, content) {
      if (typeof content === 'object' && (content.nodeType || content.jquery)) {
        // Content is a DOM node or a jQuery
        if (this.config.html) {
          if (!$__default['default'](content).parent().is($element)) {
            $element.empty().append(content);
          }
        } else {
          $element.text($__default['default'](content).text());
        }

        return;
      }

      if (this.config.html) {
        if (this.config.sanitize) {
          content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);
        }

        $element.html(content);
      } else {
        $element.text(content);
      }
    };

    _proto.getTitle = function getTitle() {
      var title = this.element.getAttribute('data-original-title');

      if (!title) {
        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;
      }

      return title;
    } // Private
    ;

    _proto._getPopperConfig = function _getPopperConfig(attachment) {
      var _this3 = this;

      var defaultBsConfig = {
        placement: attachment,
        modifiers: {
          offset: this._getOffset(),
          flip: {
            behavior: this.config.fallbackPlacement
          },
          arrow: {
            element: SELECTOR_ARROW
          },
          preventOverflow: {
            boundariesElement: this.config.boundary
          }
        },
        onCreate: function onCreate(data) {
          if (data.originalPlacement !== data.placement) {
            _this3._handlePopperPlacementChange(data);
          }
        },
        onUpdate: function onUpdate(data) {
          return _this3._handlePopperPlacementChange(data);
        }
      };
      return _extends({}, defaultBsConfig, this.config.popperConfig);
    };

    _proto._getOffset = function _getOffset() {
      var _this4 = this;

      var offset = {};

      if (typeof this.config.offset === 'function') {
        offset.fn = function (data) {
          data.offsets = _extends({}, data.offsets, _this4.config.offset(data.offsets, _this4.element) || {});
          return data;
        };
      } else {
        offset.offset = this.config.offset;
      }

      return offset;
    };

    _proto._getContainer = function _getContainer() {
      if (this.config.container === false) {
        return document.body;
      }

      if (Util.isElement(this.config.container)) {
        return $__default['default'](this.config.container);
      }

      return $__default['default'](document).find(this.config.container);
    };

    _proto._getAttachment = function _getAttachment(placement) {
      return AttachmentMap[placement.toUpperCase()];
    };

    _proto._setListeners = function _setListeners() {
      var _this5 = this;

      var triggers = this.config.trigger.split(' ');
      triggers.forEach(function (trigger) {
        if (trigger === 'click') {
          $__default['default'](_this5.element).on(_this5.constructor.Event.CLICK, _this5.config.selector, function (event) {
            return _this5.toggle(event);
          });
        } else if (trigger !== TRIGGER_MANUAL) {
          var eventIn = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSEENTER : _this5.constructor.Event.FOCUSIN;
          var eventOut = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSELEAVE : _this5.constructor.Event.FOCUSOUT;
          $__default['default'](_this5.element).on(eventIn, _this5.config.selector, function (event) {
            return _this5._enter(event);
          }).on(eventOut, _this5.config.selector, function (event) {
            return _this5._leave(event);
          });
        }
      });

      this._hideModalHandler = function () {
        if (_this5.element) {
          _this5.hide();
        }
      };

      $__default['default'](this.element).closest('.modal').on('hide.bs.modal', this._hideModalHandler);

      if (this.config.selector) {
        this.config = _extends({}, this.config, {
          trigger: 'manual',
          selector: ''
        });
      } else {
        this._fixTitle();
      }
    };

    _proto._fixTitle = function _fixTitle() {
      var titleType = typeof this.element.getAttribute('data-original-title');

      if (this.element.getAttribute('title') || titleType !== 'string') {
        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');
        this.element.setAttribute('title', '');
      }
    };

    _proto._enter = function _enter(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $__default['default'](event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $__default['default'](event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
      }

      if ($__default['default'](context.getTipElement()).hasClass(CLASS_NAME_SHOW$4) || context._hoverState === HOVER_STATE_SHOW) {
        context._hoverState = HOVER_STATE_SHOW;
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_SHOW;

      if (!context.config.delay || !context.config.delay.show) {
        context.show();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_SHOW) {
          context.show();
        }
      }, context.config.delay.show);
    };

    _proto._leave = function _leave(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $__default['default'](event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $__default['default'](event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = false;
      }

      if (context._isWithActiveTrigger()) {
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_OUT;

      if (!context.config.delay || !context.config.delay.hide) {
        context.hide();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_OUT) {
          context.hide();
        }
      }, context.config.delay.hide);
    };

    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {
      for (var trigger in this._activeTrigger) {
        if (this._activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    };

    _proto._getConfig = function _getConfig(config) {
      var dataAttributes = $__default['default'](this.element).data();
      Object.keys(dataAttributes).forEach(function (dataAttr) {
        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {
          delete dataAttributes[dataAttr];
        }
      });
      config = _extends({}, this.constructor.Default, dataAttributes, typeof config === 'object' && config ? config : {});

      if (typeof config.delay === 'number') {
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      }

      if (typeof config.title === 'number') {
        config.title = config.title.toString();
      }

      if (typeof config.content === 'number') {
        config.content = config.content.toString();
      }

      Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType);

      if (config.sanitize) {
        config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);
      }

      return config;
    };

    _proto._getDelegateConfig = function _getDelegateConfig() {
      var config = {};

      if (this.config) {
        for (var key in this.config) {
          if (this.constructor.Default[key] !== this.config[key]) {
            config[key] = this.config[key];
          }
        }
      }

      return config;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $__default['default'](this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);

      if (tabClass !== null && tabClass.length) {
        $tip.removeClass(tabClass.join(''));
      }
    };

    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {
      this.tip = popperData.instance.popper;

      this._cleanTipClass();

      this.addAttachmentClass(this._getAttachment(popperData.placement));
    };

    _proto._fixTransition = function _fixTransition() {
      var tip = this.getTipElement();
      var initConfigAnimation = this.config.animation;

      if (tip.getAttribute('x-placement') !== null) {
        return;
      }

      $__default['default'](tip).removeClass(CLASS_NAME_FADE$2);
      this.config.animation = false;
      this.hide();
      this.show();
      this.config.animation = initConfigAnimation;
    } // Static
    ;

    Tooltip._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$6);

        var _config = typeof config === 'object' && config;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Tooltip(this, _config);
          $element.data(DATA_KEY$6, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tooltip, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$6;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$4;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME$6;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY$6;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY$6;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$4;
      }
    }]);

    return Tooltip;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $__default['default'].fn[NAME$6] = Tooltip._jQueryInterface;
  $__default['default'].fn[NAME$6].Constructor = Tooltip;

  $__default['default'].fn[NAME$6].noConflict = function () {
    $__default['default'].fn[NAME$6] = JQUERY_NO_CONFLICT$6;
    return Tooltip._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$7 = 'popover';
  var VERSION$7 = '4.5.3';
  var DATA_KEY$7 = 'bs.popover';
  var EVENT_KEY$7 = "." + DATA_KEY$7;
  var JQUERY_NO_CONFLICT$7 = $__default['default'].fn[NAME$7];
  var CLASS_PREFIX$1 = 'bs-popover';
  var BSCLS_PREFIX_REGEX$1 = new RegExp("(^|\\s)" + CLASS_PREFIX$1 + "\\S+", 'g');

  var Default$5 = _extends({}, Tooltip.Default, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip">' + '<div class="arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div></div>'
  });

  var DefaultType$5 = _extends({}, Tooltip.DefaultType, {
    content: '(string|element|function)'
  });

  var CLASS_NAME_FADE$3 = 'fade';
  var CLASS_NAME_SHOW$5 = 'show';
  var SELECTOR_TITLE = '.popover-header';
  var SELECTOR_CONTENT = '.popover-body';
  var Event$1 = {
    HIDE: "hide" + EVENT_KEY$7,
    HIDDEN: "hidden" + EVENT_KEY$7,
    SHOW: "show" + EVENT_KEY$7,
    SHOWN: "shown" + EVENT_KEY$7,
    INSERTED: "inserted" + EVENT_KEY$7,
    CLICK: "click" + EVENT_KEY$7,
    FOCUSIN: "focusin" + EVENT_KEY$7,
    FOCUSOUT: "focusout" + EVENT_KEY$7,
    MOUSEENTER: "mouseenter" + EVENT_KEY$7,
    MOUSELEAVE: "mouseleave" + EVENT_KEY$7
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Popover = /*#__PURE__*/function (_Tooltip) {
    _inheritsLoose(Popover, _Tooltip);

    function Popover() {
      return _Tooltip.apply(this, arguments) || this;
    }

    var _proto = Popover.prototype;

    // Overrides
    _proto.isWithContent = function isWithContent() {
      return this.getTitle() || this._getContent();
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $__default['default'](this.getTipElement()).addClass(CLASS_PREFIX$1 + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $__default['default'](this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var $tip = $__default['default'](this.getTipElement()); // We use append for html objects to maintain js events

      this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle());

      var content = this._getContent();

      if (typeof content === 'function') {
        content = content.call(this.element);
      }

      this.setElementContent($tip.find(SELECTOR_CONTENT), content);
      $tip.removeClass(CLASS_NAME_FADE$3 + " " + CLASS_NAME_SHOW$5);
    } // Private
    ;

    _proto._getContent = function _getContent() {
      return this.element.getAttribute('data-content') || this.config.content;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $__default['default'](this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX$1);

      if (tabClass !== null && tabClass.length > 0) {
        $tip.removeClass(tabClass.join(''));
      }
    } // Static
    ;

    Popover._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$7);

        var _config = typeof config === 'object' ? config : null;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Popover(this, _config);
          $__default['default'](this).data(DATA_KEY$7, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Popover, null, [{
      key: "VERSION",
      // Getters
      get: function get() {
        return VERSION$7;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$5;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME$7;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY$7;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event$1;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY$7;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$5;
      }
    }]);

    return Popover;
  }(Tooltip);
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $__default['default'].fn[NAME$7] = Popover._jQueryInterface;
  $__default['default'].fn[NAME$7].Constructor = Popover;

  $__default['default'].fn[NAME$7].noConflict = function () {
    $__default['default'].fn[NAME$7] = JQUERY_NO_CONFLICT$7;
    return Popover._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$8 = 'scrollspy';
  var VERSION$8 = '4.5.3';
  var DATA_KEY$8 = 'bs.scrollspy';
  var EVENT_KEY$8 = "." + DATA_KEY$8;
  var DATA_API_KEY$6 = '.data-api';
  var JQUERY_NO_CONFLICT$8 = $__default['default'].fn[NAME$8];
  var Default$6 = {
    offset: 10,
    method: 'auto',
    target: ''
  };
  var DefaultType$6 = {
    offset: 'number',
    method: 'string',
    target: '(string|element)'
  };
  var EVENT_ACTIVATE = "activate" + EVENT_KEY$8;
  var EVENT_SCROLL = "scroll" + EVENT_KEY$8;
  var EVENT_LOAD_DATA_API$2 = "load" + EVENT_KEY$8 + DATA_API_KEY$6;
  var CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';
  var CLASS_NAME_ACTIVE$2 = 'active';
  var SELECTOR_DATA_SPY = '[data-spy="scroll"]';
  var SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';
  var SELECTOR_NAV_LINKS = '.nav-link';
  var SELECTOR_NAV_ITEMS = '.nav-item';
  var SELECTOR_LIST_ITEMS = '.list-group-item';
  var SELECTOR_DROPDOWN = '.dropdown';
  var SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';
  var SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';
  var METHOD_OFFSET = 'offset';
  var METHOD_POSITION = 'position';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var ScrollSpy = /*#__PURE__*/function () {
    function ScrollSpy(element, config) {
      var _this = this;

      this._element = element;
      this._scrollElement = element.tagName === 'BODY' ? window : element;
      this._config = this._getConfig(config);
      this._selector = this._config.target + " " + SELECTOR_NAV_LINKS + "," + (this._config.target + " " + SELECTOR_LIST_ITEMS + ",") + (this._config.target + " " + SELECTOR_DROPDOWN_ITEMS);
      this._offsets = [];
      this._targets = [];
      this._activeTarget = null;
      this._scrollHeight = 0;
      $__default['default'](this._scrollElement).on(EVENT_SCROLL, function (event) {
        return _this._process(event);
      });
      this.refresh();

      this._process();
    } // Getters


    var _proto = ScrollSpy.prototype;

    // Public
    _proto.refresh = function refresh() {
      var _this2 = this;

      var autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;
      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;
      var offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;
      this._offsets = [];
      this._targets = [];
      this._scrollHeight = this._getScrollHeight();
      var targets = [].slice.call(document.querySelectorAll(this._selector));
      targets.map(function (element) {
        var target;
        var targetSelector = Util.getSelectorFromElement(element);

        if (targetSelector) {
          target = document.querySelector(targetSelector);
        }

        if (target) {
          var targetBCR = target.getBoundingClientRect();

          if (targetBCR.width || targetBCR.height) {
            // TODO (fat): remove sketch reliance on jQuery position/offset
            return [$__default['default'](target)[offsetMethod]().top + offsetBase, targetSelector];
          }
        }

        return null;
      }).filter(function (item) {
        return item;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).forEach(function (item) {
        _this2._offsets.push(item[0]);

        _this2._targets.push(item[1]);
      });
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$8);
      $__default['default'](this._scrollElement).off(EVENT_KEY$8);
      this._element = null;
      this._scrollElement = null;
      this._config = null;
      this._selector = null;
      this._offsets = null;
      this._targets = null;
      this._activeTarget = null;
      this._scrollHeight = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$6, typeof config === 'object' && config ? config : {});

      if (typeof config.target !== 'string' && Util.isElement(config.target)) {
        var id = $__default['default'](config.target).attr('id');

        if (!id) {
          id = Util.getUID(NAME$8);
          $__default['default'](config.target).attr('id', id);
        }

        config.target = "#" + id;
      }

      Util.typeCheckConfig(NAME$8, config, DefaultType$6);
      return config;
    };

    _proto._getScrollTop = function _getScrollTop() {
      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
    };

    _proto._getScrollHeight = function _getScrollHeight() {
      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    };

    _proto._getOffsetHeight = function _getOffsetHeight() {
      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
    };

    _proto._process = function _process() {
      var scrollTop = this._getScrollTop() + this._config.offset;

      var scrollHeight = this._getScrollHeight();

      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

      if (this._scrollHeight !== scrollHeight) {
        this.refresh();
      }

      if (scrollTop >= maxScroll) {
        var target = this._targets[this._targets.length - 1];

        if (this._activeTarget !== target) {
          this._activate(target);
        }

        return;
      }

      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
        this._activeTarget = null;

        this._clear();

        return;
      }

      for (var i = this._offsets.length; i--;) {
        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);

        if (isActiveTarget) {
          this._activate(this._targets[i]);
        }
      }
    };

    _proto._activate = function _activate(target) {
      this._activeTarget = target;

      this._clear();

      var queries = this._selector.split(',').map(function (selector) {
        return selector + "[data-target=\"" + target + "\"]," + selector + "[href=\"" + target + "\"]";
      });

      var $link = $__default['default']([].slice.call(document.querySelectorAll(queries.join(','))));

      if ($link.hasClass(CLASS_NAME_DROPDOWN_ITEM)) {
        $link.closest(SELECTOR_DROPDOWN).find(SELECTOR_DROPDOWN_TOGGLE).addClass(CLASS_NAME_ACTIVE$2);
        $link.addClass(CLASS_NAME_ACTIVE$2);
      } else {
        // Set triggered link as active
        $link.addClass(CLASS_NAME_ACTIVE$2); // Set triggered links parents as active
        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor

        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_LINKS + ", " + SELECTOR_LIST_ITEMS).addClass(CLASS_NAME_ACTIVE$2); // Handle special case when .nav-link is inside .nav-item

        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_ITEMS).children(SELECTOR_NAV_LINKS).addClass(CLASS_NAME_ACTIVE$2);
      }

      $__default['default'](this._scrollElement).trigger(EVENT_ACTIVATE, {
        relatedTarget: target
      });
    };

    _proto._clear = function _clear() {
      [].slice.call(document.querySelectorAll(this._selector)).filter(function (node) {
        return node.classList.contains(CLASS_NAME_ACTIVE$2);
      }).forEach(function (node) {
        return node.classList.remove(CLASS_NAME_ACTIVE$2);
      });
    } // Static
    ;

    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$8);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new ScrollSpy(this, _config);
          $__default['default'](this).data(DATA_KEY$8, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(ScrollSpy, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$8;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$6;
      }
    }]);

    return ScrollSpy;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](window).on(EVENT_LOAD_DATA_API$2, function () {
    var scrollSpys = [].slice.call(document.querySelectorAll(SELECTOR_DATA_SPY));
    var scrollSpysLength = scrollSpys.length;

    for (var i = scrollSpysLength; i--;) {
      var $spy = $__default['default'](scrollSpys[i]);

      ScrollSpy._jQueryInterface.call($spy, $spy.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$8] = ScrollSpy._jQueryInterface;
  $__default['default'].fn[NAME$8].Constructor = ScrollSpy;

  $__default['default'].fn[NAME$8].noConflict = function () {
    $__default['default'].fn[NAME$8] = JQUERY_NO_CONFLICT$8;
    return ScrollSpy._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$9 = 'tab';
  var VERSION$9 = '4.5.3';
  var DATA_KEY$9 = 'bs.tab';
  var EVENT_KEY$9 = "." + DATA_KEY$9;
  var DATA_API_KEY$7 = '.data-api';
  var JQUERY_NO_CONFLICT$9 = $__default['default'].fn[NAME$9];
  var EVENT_HIDE$3 = "hide" + EVENT_KEY$9;
  var EVENT_HIDDEN$3 = "hidden" + EVENT_KEY$9;
  var EVENT_SHOW$3 = "show" + EVENT_KEY$9;
  var EVENT_SHOWN$3 = "shown" + EVENT_KEY$9;
  var EVENT_CLICK_DATA_API$6 = "click" + EVENT_KEY$9 + DATA_API_KEY$7;
  var CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';
  var CLASS_NAME_ACTIVE$3 = 'active';
  var CLASS_NAME_DISABLED$1 = 'disabled';
  var CLASS_NAME_FADE$4 = 'fade';
  var CLASS_NAME_SHOW$6 = 'show';
  var SELECTOR_DROPDOWN$1 = '.dropdown';
  var SELECTOR_NAV_LIST_GROUP$1 = '.nav, .list-group';
  var SELECTOR_ACTIVE$2 = '.active';
  var SELECTOR_ACTIVE_UL = '> li > .active';
  var SELECTOR_DATA_TOGGLE$4 = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]';
  var SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';
  var SELECTOR_DROPDOWN_ACTIVE_CHILD = '> .dropdown-menu .active';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tab = /*#__PURE__*/function () {
    function Tab(element) {
      this._element = element;
    } // Getters


    var _proto = Tab.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $__default['default'](this._element).hasClass(CLASS_NAME_ACTIVE$3) || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED$1)) {
        return;
      }

      var target;
      var previous;
      var listElement = $__default['default'](this._element).closest(SELECTOR_NAV_LIST_GROUP$1)[0];
      var selector = Util.getSelectorFromElement(this._element);

      if (listElement) {
        var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE$2;
        previous = $__default['default'].makeArray($__default['default'](listElement).find(itemSelector));
        previous = previous[previous.length - 1];
      }

      var hideEvent = $__default['default'].Event(EVENT_HIDE$3, {
        relatedTarget: this._element
      });
      var showEvent = $__default['default'].Event(EVENT_SHOW$3, {
        relatedTarget: previous
      });

      if (previous) {
        $__default['default'](previous).trigger(hideEvent);
      }

      $__default['default'](this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {
        return;
      }

      if (selector) {
        target = document.querySelector(selector);
      }

      this._activate(this._element, listElement);

      var complete = function complete() {
        var hiddenEvent = $__default['default'].Event(EVENT_HIDDEN$3, {
          relatedTarget: _this._element
        });
        var shownEvent = $__default['default'].Event(EVENT_SHOWN$3, {
          relatedTarget: previous
        });
        $__default['default'](previous).trigger(hiddenEvent);
        $__default['default'](_this._element).trigger(shownEvent);
      };

      if (target) {
        this._activate(target, target.parentNode, complete);
      } else {
        complete();
      }
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$9);
      this._element = null;
    } // Private
    ;

    _proto._activate = function _activate(element, container, callback) {
      var _this2 = this;

      var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $__default['default'](container).find(SELECTOR_ACTIVE_UL) : $__default['default'](container).children(SELECTOR_ACTIVE$2);
      var active = activeElements[0];
      var isTransitioning = callback && active && $__default['default'](active).hasClass(CLASS_NAME_FADE$4);

      var complete = function complete() {
        return _this2._transitionComplete(element, active, callback);
      };

      if (active && isTransitioning) {
        var transitionDuration = Util.getTransitionDurationFromElement(active);
        $__default['default'](active).removeClass(CLASS_NAME_SHOW$6).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._transitionComplete = function _transitionComplete(element, active, callback) {
      if (active) {
        $__default['default'](active).removeClass(CLASS_NAME_ACTIVE$3);
        var dropdownChild = $__default['default'](active.parentNode).find(SELECTOR_DROPDOWN_ACTIVE_CHILD)[0];

        if (dropdownChild) {
          $__default['default'](dropdownChild).removeClass(CLASS_NAME_ACTIVE$3);
        }

        if (active.getAttribute('role') === 'tab') {
          active.setAttribute('aria-selected', false);
        }
      }

      $__default['default'](element).addClass(CLASS_NAME_ACTIVE$3);

      if (element.getAttribute('role') === 'tab') {
        element.setAttribute('aria-selected', true);
      }

      Util.reflow(element);

      if (element.classList.contains(CLASS_NAME_FADE$4)) {
        element.classList.add(CLASS_NAME_SHOW$6);
      }

      if (element.parentNode && $__default['default'](element.parentNode).hasClass(CLASS_NAME_DROPDOWN_MENU)) {
        var dropdownElement = $__default['default'](element).closest(SELECTOR_DROPDOWN$1)[0];

        if (dropdownElement) {
          var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(SELECTOR_DROPDOWN_TOGGLE$1));
          $__default['default'](dropdownToggleList).addClass(CLASS_NAME_ACTIVE$3);
        }

        element.setAttribute('aria-expanded', true);
      }

      if (callback) {
        callback();
      }
    } // Static
    ;

    Tab._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $__default['default'](this);
        var data = $this.data(DATA_KEY$9);

        if (!data) {
          data = new Tab(this);
          $this.data(DATA_KEY$9, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tab, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$9;
      }
    }]);

    return Tab;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$4, function (event) {
    event.preventDefault();

    Tab._jQueryInterface.call($__default['default'](this), 'show');
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$9] = Tab._jQueryInterface;
  $__default['default'].fn[NAME$9].Constructor = Tab;

  $__default['default'].fn[NAME$9].noConflict = function () {
    $__default['default'].fn[NAME$9] = JQUERY_NO_CONFLICT$9;
    return Tab._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$a = 'toast';
  var VERSION$a = '4.5.3';
  var DATA_KEY$a = 'bs.toast';
  var EVENT_KEY$a = "." + DATA_KEY$a;
  var JQUERY_NO_CONFLICT$a = $__default['default'].fn[NAME$a];
  var EVENT_CLICK_DISMISS$1 = "click.dismiss" + EVENT_KEY$a;
  var EVENT_HIDE$4 = "hide" + EVENT_KEY$a;
  var EVENT_HIDDEN$4 = "hidden" + EVENT_KEY$a;
  var EVENT_SHOW$4 = "show" + EVENT_KEY$a;
  var EVENT_SHOWN$4 = "shown" + EVENT_KEY$a;
  var CLASS_NAME_FADE$5 = 'fade';
  var CLASS_NAME_HIDE = 'hide';
  var CLASS_NAME_SHOW$7 = 'show';
  var CLASS_NAME_SHOWING = 'showing';
  var DefaultType$7 = {
    animation: 'boolean',
    autohide: 'boolean',
    delay: 'number'
  };
  var Default$7 = {
    animation: true,
    autohide: true,
    delay: 500
  };
  var SELECTOR_DATA_DISMISS$1 = '[data-dismiss="toast"]';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Toast = /*#__PURE__*/function () {
    function Toast(element, config) {
      this._element = element;
      this._config = this._getConfig(config);
      this._timeout = null;

      this._setListeners();
    } // Getters


    var _proto = Toast.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      var showEvent = $__default['default'].Event(EVENT_SHOW$4);
      $__default['default'](this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      }

      this._clearTimeout();

      if (this._config.animation) {
        this._element.classList.add(CLASS_NAME_FADE$5);
      }

      var complete = function complete() {
        _this._element.classList.remove(CLASS_NAME_SHOWING);

        _this._element.classList.add(CLASS_NAME_SHOW$7);

        $__default['default'](_this._element).trigger(EVENT_SHOWN$4);

        if (_this._config.autohide) {
          _this._timeout = setTimeout(function () {
            _this.hide();
          }, _this._config.delay);
        }
      };

      this._element.classList.remove(CLASS_NAME_HIDE);

      Util.reflow(this._element);

      this._element.classList.add(CLASS_NAME_SHOWING);

      if (this._config.animation) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto.hide = function hide() {
      if (!this._element.classList.contains(CLASS_NAME_SHOW$7)) {
        return;
      }

      var hideEvent = $__default['default'].Event(EVENT_HIDE$4);
      $__default['default'](this._element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      this._close();
    };

    _proto.dispose = function dispose() {
      this._clearTimeout();

      if (this._element.classList.contains(CLASS_NAME_SHOW$7)) {
        this._element.classList.remove(CLASS_NAME_SHOW$7);
      }

      $__default['default'](this._element).off(EVENT_CLICK_DISMISS$1);
      $__default['default'].removeData(this._element, DATA_KEY$a);
      this._element = null;
      this._config = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$7, $__default['default'](this._element).data(), typeof config === 'object' && config ? config : {});
      Util.typeCheckConfig(NAME$a, config, this.constructor.DefaultType);
      return config;
    };

    _proto._setListeners = function _setListeners() {
      var _this2 = this;

      $__default['default'](this._element).on(EVENT_CLICK_DISMISS$1, SELECTOR_DATA_DISMISS$1, function () {
        return _this2.hide();
      });
    };

    _proto._close = function _close() {
      var _this3 = this;

      var complete = function complete() {
        _this3._element.classList.add(CLASS_NAME_HIDE);

        $__default['default'](_this3._element).trigger(EVENT_HIDDEN$4);
      };

      this._element.classList.remove(CLASS_NAME_SHOW$7);

      if (this._config.animation) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._clearTimeout = function _clearTimeout() {
      clearTimeout(this._timeout);
      this._timeout = null;
    } // Static
    ;

    Toast._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$a);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new Toast(this, _config);
          $element.data(DATA_KEY$a, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](this);
        }
      });
    };

    _createClass(Toast, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$a;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$7;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$7;
      }
    }]);

    return Toast;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $__default['default'].fn[NAME$a] = Toast._jQueryInterface;
  $__default['default'].fn[NAME$a].Constructor = Toast;

  $__default['default'].fn[NAME$a].noConflict = function () {
    $__default['default'].fn[NAME$a] = JQUERY_NO_CONFLICT$a;
    return Toast._jQueryInterface;
  };

  exports.Alert = Alert;
  exports.Button = Button;
  exports.Carousel = Carousel;
  exports.Collapse = Collapse;
  exports.Dropdown = Dropdown;
  exports.Modal = Modal;
  exports.Popover = Popover;
  exports.Scrollspy = ScrollSpy;
  exports.Tab = Tab;
  exports.Toast = Toast;
  exports.Tooltip = Tooltip;
  exports.Util = Util;

  Object.defineProperty(exports, '__esModule', { value: true });

})));


},{"jquery":"../node_modules/jquery/dist/jquery.js","popper.js":"../node_modules/popper.js/dist/esm/popper.js"}],"ts/commonJquery.ts":[function(require,module,exports) {
"use strict"; // Common Jquery related code

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.temporarilySetValue = exports.setB11State = exports.setSpoilersState = exports.setActiveButtonGroupButton = exports.resetButtonGroup = exports.refreshSelectpicker = exports.registerDisableAutocomplete = exports.getSpoilersState = exports.getSelectedButtonId = exports.getB11State = exports.enableBotInfoItemPopovers = exports.createHeader = void 0;

const common_1 = require("./common");

const commonTypes_1 = require("./commonTypes");

const jQuery = __importStar(require("jquery"));

require("bootstrap");

const $ = jQuery.noConflict();
const headerLookup = {
  About: {
    name: "About",
    pageName: "about.html",
    helpText: undefined,
    spoilers: false,
    beta11Check: false
  },
  Bots: {
    name: "Bots",
    pageName: "bots.html",
    helpText: "A robot reference. This page contains a (should be) complete reference of " + "known bot information (parts, resistances, and other special stats) along with some basic search " + "filters. Bot names can be clicked to display bot information in a popup, and part names inside " + "of those popups can be clicked to display another part info popup.",
    spoilers: true,
    beta11Check: true
  },
  Build: {
    name: "Build",
    pageName: "build.html",
    helpText: "A build creator/planner. Allows for creating a build loadout and view some detailed stats " + "like the ones that are shown in-game. Some overall build summary stats are always shown up at " + 'the top, while more individual part stats are available through the "Part Info" buttons. ' + "All stats are updated whenever any part is added, removed, or modified.",
    spoilers: true,
    beta11Check: true
  },
  Hacks: {
    name: "Hacks",
    pageName: "hacks.html",
    helpText: "A machine hacking reference. Lists all available hacks for each type of machine as well " + "as their success rates. Entering hackware bonuses or other modifiers will update the odds " + "of each hack.",
    spoilers: true,
    beta11Check: false
  },
  Parts: {
    name: "Parts",
    pageName: "parts.html",
    helpText: "A parts reference. This page lists the stats of all known parts in Cogmind. Most parts " + "come directly from the in-game gallery export, and the remainder (usually enemy-unique " + "unequippable parts) are manually entered. There are many ways to sort and filter the parts, " + "as well as three ways to view and compare the parts (info popup, part-to-part comparison, " + "and spreadsheet).",
    spoilers: true,
    beta11Check: true
  },
  Simulator: {
    name: "Simulator",
    pageName: "simulator.html",
    helpText: "A combat simulator. This page allows simulating a 1-on-1 combat with any bot in the game " + "with a given offensive loadout. Select an enemy, weapons, and any number of other various " + "combat-related utilities/stats, and then hit the Simulate button to kick off the simulator. " + "once complete, a graph of the number of volleys to kill is shown. Multiple simulations can be " + 'compared by giving each dataset a name and clicking the "Add to comparison" button.',
    spoilers: true,
    beta11Check: true
  }
}; // Creates the header for a given page

function createHeader(page, headerContainer) {
  const info = headerLookup[page];
  const buttonsHtml = commonTypes_1.pageTypes.map(pageType => {
    const info = headerLookup[pageType];

    if (page === pageType) {
      return `<a href="${info.pageName}" class="btn btn-current-page">${info.name}</a>`;
    } else {
      return `<a href="${info.pageName}" class="btn">${info.name}</a>`;
    }
  }).join("");
  let spoilerHtml;

  if (info.spoilers) {
    spoilerHtml = `
<div class="d-flex align-self-center justify-content-center">
    <div class="spoilers-group btn-group">
        <div class="input-group-prepend" data-toggle="tooltip" title="What spoiler content to show.">
            <span class="input-group-text">Spoilers</span>
        </div>
        <button id="spoilers" class="btn btn-flex dropdown-toggle" type="button" data-toggle="dropdown">
            None
        </button>
        <div id="spoilersDropdown" class="dropdown-menu">
            <button class="dropdown-item" data-toggle="tooltip"
                title="No spoilers: Factory or higher depth branch content is hidden.">None</button>
            <button class="dropdown-item" data-toggle="tooltip"
                title="Moderate spoilers: Normal Factory and Research branch content is shown.">Spoilers</button>
            <button class="dropdown-item" data-toggle="tooltip"
                title="Full spoilers: All game content is shown.">Redacted</button>
        </div>
    </div>`; // Reinstate for beta 12
    // if (info.beta11Check) {

    if (false) {
      spoilerHtml += `
    <label class="align-self-center ml-2" style="margin-bottom: 0;" data-toggle="tooltip"
        title="Enable or disable experimental Beta 11 part changes.">
        <input id="beta11Checkbox" type="checkbox">Beta 11</input>
    </label>
        `;
    }

    spoilerHtml += `
</div>`;
  } else {
    spoilerHtml = "<div></div>";
  }

  const helpLabel = info.helpText === undefined ? "" : `<span class="input-group-text-block display-5" data-toggle="tooltip" title="${common_1.escapeHtml(info.helpText)}">?</span>`;
  headerContainer.append(`
<div class="title-grid mt-2">
    <div class="header d-flex align-items-center justify-content-center">
        <span class="display-5">Cog-Minder</span>
    </div>
    <h1 class="display-4 text-center title">${info.name} ${helpLabel}</h1>
    ${spoilerHtml}
</div>
<div class="mb-2 menu-buttons-grid">
    ${buttonsHtml}
</div>
    `);

  if (info.spoilers) {
    // Load spoilers saved state
    $("#spoilers").text(getSpoilersState());
  }

  headerContainer.find('[data-toggle="popover"]').popover();
}

exports.createHeader = createHeader;
const nameRegex = /\[([\w. '"\-/]*) \(\d/;
const optionNameRegex = /([\w. '"\-/]*) \(\d/; // Enables nested bot info popovers given a selector to the root bot popover

function enableBotInfoItemPopovers(selector) {
  selector.on("shown.bs.popover", e => {
    // Set up popovers for items on bots
    const body = $(`#${$(e.target).attr("aria-describedby")}`).children(".popover-body");
    const items = body.find(".popover-part");
    items.each((_, element) => {
      const selector = $(element);
      const result = nameRegex.exec(selector.text());

      if (result === null || !(result[1] in common_1.itemData)) {
        // Not a valid item
        return;
      } // Set up popover attributes


      const weapon = common_1.getItem(result[1]);
      selector.data("html", true);
      selector.data("content", common_1.createItemDataContent(weapon));
      selector.data("toggle", "popover");
      selector.addClass("bot-popover-item");
      selector.popover(); // Show/hide surrounding brackets to indicate selection

      selector.on("mouseenter", () => {
        selector.children("span").removeClass("bot-popover-item-bracket-invisible");
      });
      selector.on("mouseleave", () => {
        selector.children("span").addClass("bot-popover-item-bracket-invisible");
      });
      selector.data("toggle", "popover");
    });
    const optionItems = body.find(".popover-option").parent();
    optionItems.each((_, element) => {
      const selector = $(element);
      const result = optionNameRegex.exec(selector.find("span:nth-child(3)").text());

      if (result === null || !(result[1] in common_1.itemData)) {
        // Not a valid item
        return;
      } // Set up popover attributes


      const weapon = common_1.getItem(result[1]);
      selector.data("html", true);
      selector.data("content", common_1.createItemDataContent(weapon));
      selector.data("toggle", "popover");
      selector.addClass("bot-popover-item");
      selector.popover(); // Show/hide surrounding brackets to indicate selection

      selector.on("mouseenter", () => {
        selector.children(".bot-popover-item-bracket").removeClass("bot-popover-item-bracket-invisible");
      });
      selector.on("mouseleave", () => {
        selector.children(".bot-popover-item-bracket").addClass("bot-popover-item-bracket-invisible");
      });
      selector.data("toggle", "popover");
    });
  });
  selector.on("hide.bs.popover", e => {
    // Dispose nested popovers when the base popover is closed
    const body = $(`#${$(e.target).attr("aria-describedby")}`).children(".popover-body");
    const items = body.find(".bot-popover-item");
    items.popover("dispose");
  });
}

exports.enableBotInfoItemPopovers = enableBotInfoItemPopovers; // Gets the stored boolean state

function getB11State() {
  // return window.localStorage.getItem("b11") === "true";
  // Reinstate for beta 12
  return false;
}

exports.getB11State = getB11State; // Gets the ID of the selected button in a button group

function getSelectedButtonId(selector) {
  return selector.children(".active").attr("id");
}

exports.getSelectedButtonId = getSelectedButtonId; // Gets the stored spoilers state

function getSpoilersState() {
  let value = common_1.valueOrDefault(window.localStorage.getItem("spoilers"), "None");

  if (typeof value != "string" || value != "None" && value != "Spoilers" && value != "Redacted") {
    value = "None";
  }

  return value;
}

exports.getSpoilersState = getSpoilersState; // Registers a function on the document to disable autocomplete for all inputs

function registerDisableAutocomplete(document) {
  document.on("focus", ":input", e => {
    $(e.target).attr("autocomplete", "off");
  });
}

exports.registerDisableAutocomplete = registerDisableAutocomplete;

function refreshSelectpicker(selector) {
  selector.selectpicker("refresh"); // Minor hack, the btn-light class is auto-added to dropdowns with search
  // but it doesn't really fit with everything else

  selector.next().removeClass("btn-light");
}

exports.refreshSelectpicker = refreshSelectpicker; // Clears a button group's state and sets the first item to be active

function resetButtonGroup(group) {
  group.children().removeClass("active");
  group.find("input").prop("checked", false);
  group.children("label:first-of-type").addClass("active");
  group.children("label:first-of-type > input").prop("checked", true);
}

exports.resetButtonGroup = resetButtonGroup; // Clears a button group's state and sets the item at the selected index to be active

function setActiveButtonGroupButton(group, index) {
  group.children().removeClass("active");
  group.find("input").prop("checked", false);
  group.children(`label:nth-of-type(${index})`).addClass("active");
  group.children(`label:nth-of-type(${index}) > input`).prop("checked", true);
}

exports.setActiveButtonGroupButton = setActiveButtonGroupButton; // Gets the stored spoilers state

function setSpoilersState(state) {
  window.localStorage.setItem("spoilers", state);
}

exports.setSpoilersState = setSpoilersState; // Gets the stored boolean state

function setB11State(state) {
  return window.localStorage.setItem("b11", state.toString());
}

exports.setB11State = setB11State; // Temporarily set the text value of a selector for the specified timeout

function temporarilySetValue(selector, newValue, initialValue, time) {
  selector.text(newValue);
  setTimeout(() => selector.text(initialValue), time);
}

exports.temporarilySetValue = temporarilySetValue;
},{"./common":"ts/common.ts","./commonTypes":"ts/commonTypes.ts","jquery":"../node_modules/jquery/dist/jquery.js","bootstrap":"../node_modules/bootstrap/dist/js/bootstrap.js"}],"ts/botTypes.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BotSize = exports.BotImmunity = exports.BotCategory = void 0;
var BotCategory;

(function (BotCategory) {
  BotCategory["Alien"] = "Alien";
  BotCategory["Architect"] = "Architect";
  BotCategory["Derelict"] = "Derelict";
  BotCategory["Drone"] = "Drone";
  BotCategory["Exiles"] = "Exiles";
  BotCategory["Prototype"] = "Prototype";
  BotCategory["Redacted"] = "Redacted";
  BotCategory["Spoilers"] = "Spoilers";
  BotCategory["OB10"] = "0b10";
  BotCategory["Warlord"] = "Warlord";
  BotCategory["Zhirov"] = "Zhirov";
  BotCategory["Zionite"] = "Zionite";
})(BotCategory = exports.BotCategory || (exports.BotCategory = {}));

var BotImmunity;

(function (BotImmunity) {
  BotImmunity["Coring"] = "Coring";
  BotImmunity["Criticals"] = "Criticals";
  BotImmunity["Dismemberment"] = "Dismemberment";
  BotImmunity["Disruption"] = "Disruption";
  BotImmunity["Hacking"] = "Hacking";
  BotImmunity["Jamming"] = "Jamming";
  BotImmunity["Meltdown"] = "Meltdown";
})(BotImmunity = exports.BotImmunity || (exports.BotImmunity = {}));

var BotSize;

(function (BotSize) {
  BotSize["Huge"] = "Huge";
  BotSize["Large"] = "Large";
  BotSize["Medium"] = "Medium";
  BotSize["Small"] = "Small";
  BotSize["Tiny"] = "Tiny";
})(BotSize = exports.BotSize || (exports.BotSize = {}));
},{}],"ts/simulatorCalcs.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spectrumToNumber = exports.simulateCombat = exports.getRangedVolleyTime = exports.getRegen = exports.getRecoil = exports.getBotDefensiveState = exports.calculateResistDamage = exports.volleyTimeMap = exports.maxVolleys = void 0; // Battle simulation calculation functions/constants

const botTypes_1 = require("./botTypes");

const common_1 = require("./common");

const itemTypes_1 = require("./itemTypes");

const minAccuracy = 10;
const maxRangedAccuracy = 95;
const maxMeleeAccuracy = 100;
exports.maxVolleys = 100000; // Array of damage reducing parts to sort
// 11. Apply the first and only first defense applicable from the
// following list: phase wall, 75% personal shield (VFP etc),
// Force Field, Shield Generator, stasis bubble, active Stasis Trap,
// Remote Shield, 50% remote shield (Energy Mantle etc.), Hardlight Generator.

const damageReductionSortOrder = ["Phase Wall", "Vortex Field Projector", "7V-RTL'S Ultimate Field", "Force Field", "Imp. Force Field", "Adv. Force Field", "Exp. Force Field", "Shield Generator", "Imp. Shield Generator", "Adv. Shield Generator", "Exp. Shield Generator", "Stasis Bubble", "Stasis Trap", "Remote Shield", "Imp. Remote Shield", "Remote Force Field", "Imp. Remote Force Field", "Energy Mantle", "Imp. Energy Mantle", "AEGIS Remote Shield"];
const externalDamageReductionMap = {
  "Remote Shield": 0.75,
  "Stasis Trap": 0.75,
  "Phase Wall": 0.5,
  "Remote Force Field": 0.5,
  "Stasis Bubble": 0.5
}; // Array of force booster accuracy penalties

const forceBoosterAccuracyPenalty = [4, 6, 8]; // Array of melee analysis accuracy increases

const meleeAnalysisAccuracy = [5, 6, 8, 12]; // Map of spectrum values to engine explosion chance

const spectrumMap = {
  "Wide (10)": 10,
  "Intermediate (30)": 30,
  "Narrow (50)": 50,
  "Fine (100)": 100
};
const categoryAntimissile = 0;
const categoryAvoid = 1;
const categoryCorruptionIgnore = 2;
const categoryDamageReduction = 3;
const categoryResist = 4;
const categoryRangedAvoid = 5;
const categorySelfDamageReduction = 6;
const categoryShielding = 7;
const specialItems = {
  // Antimissile, chance to shoot down launcher projectiles per tile
  "Point Defense System": {
    category: categoryAntimissile,
    chance: 8
  },
  "Point Defense Array": {
    category: categoryAntimissile,
    chance: 16
  },
  "Antimissile System": {
    category: categoryAntimissile,
    chance: 24
  },
  // Avoid, - all weapon accuracy
  "Maneuvering Thrusters": {
    category: categoryAvoid,
    legs: 3,
    other: 6
  },
  "Imp. Maneuvering Thrusters": {
    category: categoryAvoid,
    legs: 5,
    other: 10
  },
  "Reaction Control System": {
    category: categoryAvoid,
    legs: 6,
    other: 12
  },
  "Adv. Reaction Control System": {
    category: categoryAvoid,
    legs: 7,
    other: 14
  },
  // Corruption ignore, % of ignoring corruption addition
  "Dynamic Insulation System": {
    category: categoryCorruptionIgnore,
    ignore: 50
  },
  "Imp. Dynamic Insulation System": {
    category: categoryCorruptionIgnore,
    ignore: 67
  },
  "Adv. Dynamic Insulation System": {
    category: categoryCorruptionIgnore,
    ignore: 75
  },
  // Damage reduction, (val * damage = reduced damage)
  "Adv. Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Exp. Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Imp. Remote Shield": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Imp. Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Remote Shield": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "AEGIS Remote Shield": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Adv. Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Exp. Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Energy Mantle": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Imp. Energy Mantle": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Imp. Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Imp. Remote Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Remote Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "7V-RTL's Ultimate Field": {
    category: categoryDamageReduction,
    reduction: 0.25
  },
  "Vortex Field Projector": {
    category: categoryDamageReduction,
    reduction: 0.25
  },
  // Resist, % of damage type resisted
  "Insulated Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 15
    }
  },
  "Med. Insulated Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 20
    }
  },
  "EM Shield": {
    category: categoryResist,
    resists: {
      electromagnetic: 25
    }
  },
  "Hvy. Insulated Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 30
    }
  },
  "EM Disruption": {
    category: categoryResist,
    resists: {
      electromagnetic: 50
    }
  },
  "EM Dispersion": {
    category: categoryResist,
    resists: {
      electromagnetic: 75
    }
  },
  "Damper Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 90
    }
  },
  "8R-AWN's Armor/EX": {
    category: categoryResist,
    resists: {
      explosive: 90
    }
  },
  "Shock Absorption System": {
    category: categoryResist,
    resists: {
      explosive: 25
    }
  },
  "Imp. Shock Absorption System": {
    category: categoryResist,
    resists: {
      explosive: 50
    }
  },
  "Exp. Shock Absorption System": {
    category: categoryResist,
    resists: {
      explosive: 75
    }
  },
  "Mak. Kinetic Plating": {
    category: categoryResist,
    resists: {
      kinetic: 20
    }
  },
  "Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 20
    }
  },
  "Reactive Plating": {
    category: categoryResist,
    resists: {
      kinetic: 20
    }
  },
  "Imp. Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 25
    }
  },
  "Adv. Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 30
    }
  },
  "Exp. Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 30
    }
  },
  "Med. Reactive Plating": {
    category: categoryResist,
    resists: {
      kinetic: 30
    }
  },
  "Hvy. Reactive Plating": {
    category: categoryResist,
    resists: {
      kinetic: 40
    }
  },
  "8R-AWN's Armor/TH": {
    category: categoryResist,
    resists: {
      thermal: 90
    }
  },
  "Mak. Thermal Plating": {
    category: categoryResist,
    resists: {
      thermal: 10
    }
  },
  "Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 20
    }
  },
  "Reflective Plating": {
    category: categoryResist,
    resists: {
      thermal: 10
    }
  },
  "Med. Reflective Plating": {
    category: categoryResist,
    resists: {
      thermal: 15
    }
  },
  "Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 20
    }
  },
  "Imp. Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 25
    }
  },
  "Imp. Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 25
    }
  },
  "Hvy. Reflective Plating": {
    category: categoryResist,
    resists: {
      thermal: 25
    }
  },
  "Adv. Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Adv. Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Exp. Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Exp. Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Thermal Barrier": {
    category: categoryResist,
    resists: {
      thermal: 50
    }
  },
  "Beam Splitter": {
    category: categoryResist,
    resists: {
      thermal: 75
    }
  },
  "ME-RLN's Chromatic Screen": {
    category: categoryResist,
    resists: {
      electromagnetic: 20,
      explosive: 20,
      impact: 20,
      kinetic: 20,
      piercing: 20,
      slashing: 20,
      thermal: 20
    }
  },
  "Zio. Shade Carapace": {
    category: categoryResist,
    resists: {
      electromagnetic: 20,
      explosive: 20,
      impact: 20,
      kinetic: 20,
      piercing: 20,
      slashing: 20,
      thermal: 20
    }
  },
  "Zio. Shade Armor": {
    category: categoryResist,
    resists: {
      electromagnetic: 30,
      explosive: 30,
      impact: 30,
      kinetic: 30,
      piercing: 30,
      slashing: 30,
      thermal: 30
    }
  },
  // Ranged avoid, - ranged weapon accuracy
  "Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 5
  },
  "Imp. Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 10
  },
  "Adv. Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 15
  },
  "Exp. Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 20
  },
  // Self damage reduction, damage reduction (val * damage = reduced damage)
  "1C-UTU's Buckler": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Imp. Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Adv. Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Exp. Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  // Part shielding, contains slot and percent of damage blocked
  "Core Shielding": {
    category: categoryShielding,
    slot: "Core",
    percent: 0.2
  },
  "Imp. Core Shielding": {
    category: categoryShielding,
    slot: "Core",
    percent: 0.3
  },
  "Exp. Core Shielding": {
    category: categoryShielding,
    slot: "Core",
    percent: 0.4
  },
  "Power Shielding": {
    category: categoryShielding,
    slot: "Power",
    percent: 0.33
  },
  "Imp. Power Shielding": {
    category: categoryShielding,
    slot: "Power",
    percent: 0.66
  },
  "Exp. Power Shielding": {
    category: categoryShielding,
    slot: "Power",
    percent: 0.9
  },
  "Propulsion Shielding": {
    category: categoryShielding,
    slot: "Propulsion",
    percent: 0.33
  },
  "Imp. Propulsion Shielding": {
    category: categoryShielding,
    slot: "Propulsion",
    percent: 0.66
  },
  "Exp. Propulsion Shielding": {
    category: categoryShielding,
    slot: "Propulsion",
    percent: 0.9
  },
  "Utility Shielding": {
    category: categoryShielding,
    slot: "Utility",
    percent: 0.33
  },
  "Imp. Utility Shielding": {
    category: categoryShielding,
    slot: "Utility",
    percent: 0.66
  },
  "Exp. Utility Shielding": {
    category: categoryShielding,
    slot: "Utility",
    percent: 0.9
  },
  "Weapon Shielding": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 0.33
  },
  "Imp. Weapon Shielding": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 0.66
  },
  "Exp. Weapon Shielding": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 0.9
  },
  "Zio. Weapon Casing": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 1.0
  }
}; // Weapon number to base volley time map

exports.volleyTimeMap = {
  1: 200,
  2: 300,
  3: 325,
  4: 350,
  5: 375,
  6: 400
}; // Applies a final calculated damage value to a bot, splitting into chunks if necessary

function applyDamage(state, botState, damage, critical, armorAnalyzed, disruptChance, spectrum, canOverflow, damageType) {
  const chunks = []; // Split into chunks each containing originalDamage for other calcs (9)

  if (damageType === itemTypes_1.DamageType.Explosive) {
    if (critical !== undefined) {
      throw "Explosive damage can't be a crit";
    } // Split explosive damage randomly into 1-3 chunks (9)
    // EX damage can never crit, ignore armor, disrupt, explicitly
    // target core, or have a spectrum
    // Note: The remainder from the division is explicitly thrown out


    const numChunks = common_1.randomInt(1, 3);

    for (let i = 0; i < numChunks; i++) {
      chunks.push({
        armorAnalyzed: false,
        critical: undefined,
        coreBonus: 0,
        damageType: damageType,
        disruptChance: 0,
        forceCore: false,
        originalDamage: Math.trunc(damage / numChunks),
        realDamage: 0,
        spectrum: 0
      });
    }
  } else {
    // Non-EX damage is done in a single chunk
    chunks.push({
      armorAnalyzed: armorAnalyzed,
      coreBonus: state.offensiveState.coreAnalyzerChance,
      critical: critical,
      damageType: damageType,
      disruptChance: disruptChance,
      forceCore: false,
      originalDamage: damage,
      realDamage: 0,
      spectrum: spectrum
    });
  } // Apply any additional damage reduction (10)


  const part = getDefensiveStatePart(botState.defensiveState.damageReduction);
  const multiplier = part != undefined ? part.reduction : 1;
  chunks.forEach(chunk => {
    chunk.realDamage = Math.trunc(chunk.originalDamage * multiplier);
  });

  function applyEngineExplosion(part) {
    if (part.def.slot !== "Power") {
      return;
    }

    const engine = part.def;

    if (engine.explosionDamageMax > 0 && engine.explosionType !== undefined) {
      // Apply engine explosion randomly as either 1 or 2 chunks (16)
      const baseDamage = common_1.randomInt(engine.explosionDamageMin, engine.explosionDamageMax);
      const chunks = common_1.randomInt(1, 2) === 1 ? [baseDamage] : [Math.trunc(baseDamage / 2), Math.trunc(baseDamage / 2)];
      chunks.forEach(damage => {
        applyDamageChunk(0, damage, engine.explosionType, undefined, false, false, engine.explosionDisruption, spectrumToNumber(engine.explosionSpectrum), false);
      });
    }
  }

  function applyDamageChunk(coreBonus, damage, damageType, critical, isOverflow, forceCore, disruptChance, spectrum, armorAnalyzed) {
    // Determine hit part (13)
    const {
      part,
      partIndex
    } = getHitPart(botState, coreBonus, damageType, isOverflow, forceCore, armorAnalyzed);
    applyDamageChunkToPart(damage, damageType, critical, disruptChance, spectrum, part, partIndex);
  }

  function applyDamageChunkToPart(damage, damageType, critical, disruptChance, spectrum, part, partIndex) {
    function doesCriticalDestroyPart(critical) {
      if (critical === itemTypes_1.Critical.Destroy || critical === itemTypes_1.Critical.Smash) {
        return true;
      }

      return false;
    }

    function destroyPart(partIndex, part, overflowDamage, critical, damageType) {
      botState.parts.splice(partIndex, 1);
      botState.armorAnalyzedCoverage -= part.armorAnalyzedCoverage;
      botState.totalCoverage -= part.coverage; // If the part was providing any damage resistances remove them now

      if (part.resistances !== undefined) {
        Object.keys(part.resistances).forEach(type => {
          if (type in botState.resistances) {
            botState.resistances[type] -= part.resistances[type];
          }
        });
      }

      if (overflowDamage > 0 && !part.protection && canOverflow) {
        // Handle overflow damage if excess damage was dealt
        // against a non-protection part (18)
        applyDamageChunk(0, overflowDamage, damageType, undefined, true, false, 0, 0, false);
      }

      if (damageType === itemTypes_1.DamageType.Impact) {
        // Apply 25-150% random corruption to the bot after
        // destroying a part (affected by EM resistance) (22)
        let corruption = common_1.randomInt(25, 150);
        corruption = calculateResistDamage(botState, corruption, itemTypes_1.DamageType.Electromagnetic);
        botState.corruption += corruption;
      }

      part.integrity = 0;
      updateWeaponsAccuracy(state);
    } // Remove all criticals from totally immune bots


    if (critical !== undefined) {
      if (botState.immunities.includes(botTypes_1.BotImmunity.Criticals)) {
        critical = undefined;
      }
    } // Apply meltdown as immediate death unless immune


    if (critical === itemTypes_1.Critical.Meltdown && !botState.immunities.includes(botTypes_1.BotImmunity.Meltdown)) {
      botState.coreIntegrity = 0;
      return;
    } // Apply intensify damage doubling here
    else if (critical === itemTypes_1.Critical.Intensify) {
        damage *= 2.0;
      } // Apply impale damage doubling and add delay of 1 turn
      else if (critical === itemTypes_1.Critical.Impale) {
          damage *= 2.0;
          state.tus += 100;
        } // Apply detonate crit
        else if (critical === itemTypes_1.Critical.Detonate) {
            let i;

            for (i = 0; i < botState.parts.length; i++) {
              if (botState.parts[i].def.slot === "Power") {
                break;
              }
            } // Destroy first engine found (if any)


            if (i < botState.parts.length) {
              const engine = botState.parts[i];
              destroyPart(i, engine, 0, undefined, itemTypes_1.DamageType.Entropic);
              applyEngineExplosion(engine);

              if (i === partIndex) {
                // If detonate exploded power we were targeting just exit
                return;
              }
            }
          } // Remove sever/sunder crit if target bot is immune
          else if ((critical === itemTypes_1.Critical.Sever || critical === itemTypes_1.Critical.Sunder) && botState.immunities.includes(botTypes_1.BotImmunity.Dismemberment)) {
              critical = undefined;
            } // Remove phase crit if bot is coring immune or has core shielding
            else if (critical === itemTypes_1.Critical.Phase && (botState.immunities.includes(botTypes_1.BotImmunity.Coring) || getShieldingType(botState, "Core") === undefined)) {
                critical = undefined;
              } // Handle core hit


    if (part === undefined) {
      // Try to get shielding
      const shielding = getShieldingType(botState, "Core"); // Remove crit types that apply to the core if immunity or shielding (14)

      if ((critical === itemTypes_1.Critical.Destroy || critical == itemTypes_1.Critical.Phase || critical == itemTypes_1.Critical.Smash || critical == itemTypes_1.Critical.Sunder || critical == itemTypes_1.Critical.Sever) && (botState.immunities.includes(botTypes_1.BotImmunity.Coring) || shielding !== undefined)) {
        critical = undefined;
      }

      if (shielding != undefined) {
        // Handle core shielding reduction
        // Note: shielding may absorb more damage than integrity
        const shieldingDamage = Math.trunc(shielding.reduction * damage);
        shielding.part.integrity -= shieldingDamage;

        if (shielding.part.integrity <= 0) {
          // Remove shielding if it has run out of integrity
          const index = botState.parts.indexOf(shielding.part);
          destroyPart(index, shielding.part, 0, undefined, itemTypes_1.DamageType.Entropic);
        }

        damage = damage - shieldingDamage;
      }

      if (critical === itemTypes_1.Critical.Destroy || critical === itemTypes_1.Critical.Smash) {
        botState.coreIntegrity = 0;
      } else {
        botState.coreIntegrity -= damage;
      }

      if (botState.coreIntegrity === 0) {
        return;
      } // Apply disruption (15)
      // Core disruption only has 50% of the usual chance


      if (!botState.immunities.includes(botTypes_1.BotImmunity.Disruption) && common_1.randomInt(0, 99) < disruptChance / 2) {
        botState.coreDisrupted = true;
      } // Apply relevant criticals not yet applied
      // Apply sever/sunder crits to other parts


      if (critical === itemTypes_1.Critical.Sever || critical === itemTypes_1.Critical.Sunder) {
        const numParts = critical === itemTypes_1.Critical.Sunder ? common_1.randomInt(1, 2) : 1;

        for (let i = 0; i < numParts; i++) {
          const {
            part,
            partIndex
          } = getRandomNonCorePart(botState, undefined);

          if (part === undefined || getShieldingType(botState, part.def.slot) !== undefined) {
            // Shielding protects against sever/sunder completely
            continue;
          }

          if (part.def.size > 1) {
            // Parts taking 2 or more slots can't be removed via sever/sunder
            // Technically sever does a very minor amount of damage to the part
            // Even if it isn't removed, but it isn't worth worrying about
            continue;
          }

          destroyPart(partIndex, part, 0, undefined, itemTypes_1.DamageType.Phasic);
        }

        return;
      } else if (critical === itemTypes_1.Critical.Blast) {
        const {
          part,
          partIndex
        } = getRandomNonCorePart(botState, undefined);

        if (part === undefined || getShieldingType(botState, part.def.slot) !== undefined) {
          // Shielding protects against blast completely
          return;
        }

        if (part.def.size === 1) {
          // Single-slot items get blasted off, treat as part destruction
          destroyPart(partIndex, part, 0, undefined, itemTypes_1.DamageType.Phasic);
        } else {
          // Multi-slot items don't get blasted off but still take damage
          applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, part, partIndex);
        }
      } else if (critical === itemTypes_1.Critical.Phase) {
        // Apply phasing damage to another random part
        const {
          part,
          partIndex
        } = getRandomNonCorePart(botState, undefined);
        applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, part, partIndex);
      }

      return;
    } // Handle non-core hit
    // Try to get shielding for non-protection parts


    const shielding = part.def.type === itemTypes_1.ItemType.Protection ? undefined : getShieldingType(botState, part.def.slot); // Check for crit immunity or shielding (14)

    if (shielding !== undefined && doesCriticalDestroyPart(critical)) {
      critical = undefined;
    } // Check for spectrum engine explosion (16)


    const engineExplosion = part.def.slot === "Power" && common_1.randomInt(0, 99) < spectrum; // Protection can't get instantly destroyed, only receives 20% more damage

    if (doesCriticalDestroyPart(critical) && part.protection) {
      critical = undefined;
      damage = Math.trunc(1.2 * damage);
    } // Reduce damage for powered armor/siege mode (17)
    // TODO enemy siege mode


    if (part.selfDamageReduction !== 0) {
      damage = damage * Math.trunc(part.selfDamageReduction);
    } // Apply disruption to non-core parts (17)
    // TODO


    if (shielding != undefined) {
      // Handle slot shielding reduction
      // Note: shielding may absorb more damage than integrity
      const shieldingDamage = Math.trunc(shielding.reduction * damage);
      shielding.part.integrity -= shieldingDamage;

      if (shielding.part.integrity <= 0) {
        // Remove shielding if it has run out of integrity
        const index = botState.parts.indexOf(shielding.part);
        destroyPart(index, shielding.part, 0, undefined, itemTypes_1.DamageType.Entropic);
      }

      damage = damage - shieldingDamage;
    }

    let destroyed = part.integrity <= damage || doesCriticalDestroyPart(critical) || engineExplosion; // Apply sever/sunder to instantly-remove (not destroy) part if it's a single slot and unshielded
    // Applied differently than other part destruction since this can't affect multislot
    // parts but can affect protection

    if (!destroyed && (critical === itemTypes_1.Critical.Sever || critical === itemTypes_1.Critical.Sunder) && part.def.size === 1 && shielding === undefined) {
      destroyed = true;
    }

    if (destroyed) {
      // Part destroyed, remove part and update bot state
      // Smash critical destroys the part instantly and deals full overflow damage
      const overflowDamage = critical === itemTypes_1.Critical.Smash ? damage : damage - part.integrity;
      destroyPart(partIndex, part, overflowDamage, critical, damageType);
    } else {
      // Part not destroyed, just reduce integrity
      part.integrity -= damage;
    } // Apply relevant criticals not yet applied


    const oldIndex = partIndex;

    if (critical === itemTypes_1.Critical.Blast) {
      const {
        part,
        partIndex
      } = getRandomNonCorePart(botState, destroyed ? oldIndex : undefined);

      if (part === undefined || shielding !== undefined) {
        // Shielding protects against blast completely
        return;
      }

      if (part.def.size === 1) {
        // Single-slot items get blasted off, treat as part destruction
        destroyPart(partIndex, part, 0, undefined, itemTypes_1.DamageType.Phasic);
      } else {
        // Multi-slot items don't get blasted off but still take damage
        applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, part, partIndex);
      }
    } else if (critical === itemTypes_1.Critical.Phase) {
      // Apply phasing damage to the core
      applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, undefined, -1);
    }

    if (engineExplosion) {
      applyEngineExplosion(part);
    }
  } // Apply damage


  chunks.forEach(chunk => {
    applyDamageChunk(chunk.coreBonus, chunk.realDamage, chunk.damageType, chunk.critical, false, chunk.forceCore, chunk.disruptChance, chunk.spectrum, chunk.armorAnalyzed); // Apply corruption (22)

    if (damageType === itemTypes_1.DamageType.Electromagnetic) {
      // Check for corruption ignore chance
      const corruptionIgnorePart = getDefensiveStatePart(botState.defensiveState.corruptionIgnore);
      const corruptCritical = critical === itemTypes_1.Critical.Corrupt && !botState.immunities.includes(botTypes_1.BotImmunity.Criticals);

      if (corruptionIgnorePart === undefined || common_1.randomInt(0, 99) >= corruptionIgnorePart.chance) {
        // Corruption critical always applies maximum 1.5 critical modifier
        const corruptionPercent = corruptCritical ? 1.5 : common_1.randomInt(50, 150) / 100;
        const corruption = chunk.originalDamage * corruptionPercent;
        botState.corruption += corruption;
      }
    }
  });
} // Returns a clone of a bot state
// This is not a deep copy, any fields that can be modified are deep-copied
// but immutable fields are not.


function cloneBotState(botState) {
  const resistances = {};
  Object.keys(botState.resistances).forEach(type => resistances[type] = botState.resistances[type]);
  const newState = {
    armorAnalyzedCoverage: botState.armorAnalyzedCoverage,
    coreCoverage: botState.coreCoverage,
    coreDisrupted: botState.coreDisrupted,
    coreIntegrity: botState.coreIntegrity,
    corruption: botState.corruption,
    def: botState.def,
    defensiveState: undefined,
    externalDamageReduction: botState.externalDamageReduction,
    immunities: botState.immunities,
    initialCoreIntegrity: botState.initialCoreIntegrity,
    parts: botState.parts.map(p => {
      return {
        armorAnalyzedCoverage: p.armorAnalyzedCoverage,
        coverage: p.coverage,
        def: p.def,
        integrity: p.integrity,
        protection: p.protection,
        selfDamageReduction: p.selfDamageReduction
      };
    }),
    regen: botState.regen,
    resistances: resistances,
    totalCoverage: botState.totalCoverage
  };
  newState.defensiveState = getBotDefensiveState(newState.parts, newState.externalDamageReduction);
  return newState;
} // Calculates the resisted damage for a bot given the initial damage value


function calculateResistDamage(botState, damage, damageType) {
  if (damageType in botState.resistances) {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    return Math.trunc(damage * (1 - botState.resistances[damageType] / 100));
  }

  return damage;
}

exports.calculateResistDamage = calculateResistDamage; // Returns a bot's defensive state based on parts, also adds new relevant
// properties to parts

function getBotDefensiveState(parts, externalDamageReduction) {
  const state = {
    antimissile: [],
    avoid: [],
    corruptionIgnore: [],
    damageReduction: [],
    rangedAvoid: [],
    shieldings: {
      Core: [],
      Power: [],
      Propulsion: [],
      Utility: [],
      Weapon: []
    }
  };
  parts.forEach(part => {
    const name = part.def.name;
    const specialItem = specialItems[name];

    if (specialItem === undefined) {
      return;
    }

    if (specialItem.category === categoryAntimissile) {
      // Antimissile System-like part
      state.antimissile.push({
        chance: specialItem.chance,
        part: part
      });
    } else if (specialItem.category === categoryAvoid) {
      // Reaction Control System-like part
      // Leg/hover/flight determination done at accuracy update time
      state.avoid.push({
        legs: specialItem.legs,
        other: specialItem.other,
        part: part
      });
    } else if (specialItem.category === categoryCorruptionIgnore) {
      // Dynamic Insulation System
      state.corruptionIgnore.push({
        chance: specialItem.ignore,
        part: part
      });
    } else if (specialItem.category === categoryDamageReduction) {
      // Force field-like part
      state.damageReduction.push({
        part: part,
        reduction: specialItem.reduction
      });
    } else if (specialItem.category === categoryResist) {
      // Damage type resist part
      part.resistances = specialItem.resists;
    } else if (specialItem.category === categoryRangedAvoid) {
      // Phase Shifters
      state.rangedAvoid.push({
        avoid: specialItem.avoid,
        part: part
      });
    } else if (specialItem.category === categorySelfDamageReduction) {
      // Powered armor-like part
      part.selfDamageReduction = specialItem.reduction;
    } else if (specialItem.category === categoryShielding) {
      // Core/slot shielding
      state.shieldings[specialItem.slot].push({
        part: part,
        reduction: specialItem.percent
      });
    }
  }); // Sort damage reduction (11)

  if (externalDamageReduction in externalDamageReductionMap) {
    const reduction = externalDamageReductionMap[externalDamageReduction];

    if (state.damageReduction.length === 0) {
      // If no other damage reduction no need to sort
      state.damageReduction.push({
        reduction: reduction,
        part: {
          armorAnalyzedCoverage: 0,
          coverage: 0,
          def: undefined,
          integrity: 1,
          protection: false,
          selfDamageReduction: 0
        }
      });
    } else {
      const existingIndex = damageReductionSortOrder.indexOf(state.damageReduction[0].part.def.name);
      const newIndex = damageReductionSortOrder.indexOf(externalDamageReduction); // Use sort order to decide to insert before or after

      if (newIndex < existingIndex) {
        state.damageReduction.unshift({
          reduction: reduction,
          part: {
            armorAnalyzedCoverage: 0,
            coverage: 0,
            def: undefined,
            integrity: 1,
            protection: false,
            selfDamageReduction: 0
          }
        });
      } else {
        state.damageReduction.push({
          reduction: reduction,
          part: {
            armorAnalyzedCoverage: 0,
            coverage: 0,
            def: undefined,
            integrity: 1,
            protection: false,
            selfDamageReduction: 0
          }
        });
      }
    }
  } // All other parts should technically be sorted as well.
  // However, in game no bot ever has duplicate mixed-level defenses,
  // some have multiples of the same level like 2 base weapon shieldings on
  // Warbot which, but that doesn't require sorting anyways.


  return state;
}

exports.getBotDefensiveState = getBotDefensiveState; // Tries to get a bot defensive state part from an array
// Parts will be removed from the array if their integrity has dropped below 0

function getDefensiveStatePart(array) {
  let part = undefined;

  while (array.length > 0) {
    if (array[0].part.integrity > 0) {
      // Found a good part, use it here
      part = array[0];
      break;
    } else {
      // Found destroyed part, remove from array
      array.shift();
    }
  }

  return part;
} // Determines the part that was hit by an attack


function getHitPart(botState, coreBonus, damageType, isOverflow, forceCore, armorAnalyzed) {
  let part = undefined;
  let partIndex = -1;

  if (forceCore) {
    return {
      part: part,
      partIndex: partIndex
    };
  }

  if (damageType === itemTypes_1.DamageType.Impact) {
    // Impact damage targets core and all parts with coverage relative to their slots
    function sum(a, b) {
      return a + b;
    }

    let coverageHit = common_1.randomInt(0, botState.parts.map(p => p.def.size).reduce(sum, 0));

    for (let i = 0; i < botState.parts.length; i++) {
      if (coverageHit < botState.parts[i].def.size) {
        partIndex = i;
        break;
      }

      coverageHit -= botState.parts[i].def.size;
    } // Assign part if non-core hit, otherwise leave undefined on core


    if (partIndex >= 0) {
      part = botState.parts[partIndex];
    }
  } else if (isOverflow) {
    const protectionParts = botState.parts.filter(p => p.protection && p.coverage > 0);

    if (protectionParts.length > 0) {
      // Handle overflow damage specially when there's armor,
      // overflow into a random armor piece based on coverage (19)
      let coverageHit = common_1.randomInt(0, protectionParts.reduce((prev, part) => prev + part.coverage, 0));

      for (let i = 0; i < protectionParts.length; i++) {
        coverageHit -= protectionParts[i].coverage;

        if (coverageHit < 0) {
          part = protectionParts[i];
          break;
        } // If it's a core hit we'll run through all parts and exit
        // the loop with part still equal to undefined

      }

      partIndex = botState.parts.indexOf(part);
    } // If no protection parts fall into standard coverage behavior

  } // Check to avoid rerolling an impact core hit


  if (part === undefined && damageType !== itemTypes_1.DamageType.Impact) {
    let totalCoverage = armorAnalyzed ? botState.armorAnalyzedCoverage : botState.totalCoverage;

    if (damageType == itemTypes_1.DamageType.Piercing) {
      // Not ideal to force this here because it means the user has to account for half_stack manually
      // Makes the UI very cluttered if we want to make the user choose all the possible combinations though
      coreBonus += 8;
    }

    if (coreBonus > 0) {
      // Apply any core exposure % increases
      totalCoverage -= botState.coreCoverage; // Cap boosted coverage at 99.9% to avoid wrapping around to giving a negative core bonus

      const coreCoveragePercentage = Math.min(botState.coreCoverage / botState.totalCoverage + coreBonus / 100, 0.999);
      const boostedCoreCoverage = botState.totalCoverage * coreCoveragePercentage;
      totalCoverage += boostedCoreCoverage;
    }

    let coverageHit = common_1.randomInt(0, totalCoverage - 1);

    for (partIndex = 0; partIndex < botState.parts.length; partIndex++) {
      // Subtract part's coverage to see if we got a hit
      coverageHit -= armorAnalyzed ? botState.parts[partIndex].armorAnalyzedCoverage : botState.parts[partIndex].coverage;

      if (coverageHit < 0) {
        part = botState.parts[partIndex];
        break;
      } // If it's a core hit we'll run through all parts and exit
      // the loop with part still equal to undefined

    }
  }

  return {
    part: part,
    partIndex: partIndex
  };
} // Gets a random (i.e. coverage-ignoring) non-core part, used for some crit effects


function getRandomNonCorePart(botState, ignoreIndex) {
  // Randomly target all parts, possibly excluding another specific index
  let partHit = common_1.randomInt(0, botState.parts.length - 1 - (ignoreIndex === undefined ? 0 : 1));

  if (ignoreIndex !== undefined && ignoreIndex > 0 && partHit >= ignoreIndex) {
    // Adjust the coverage index based on the ignored part
    partHit += 1;
  }

  if (partHit >= botState.parts.length) {
    return {
      part: undefined,
      partIndex: -1
    };
  }

  const part = botState.parts[partHit];
  return {
    part: part,
    partIndex: partHit
  };
} // Calculates a weapon's recoil based on the number of treads and other recoil reduction


function getRecoil(weaponDef, numTreads, recoilReduction) {
  let recoil = 0; // Add recoil if siege mode not active

  if (weaponDef.recoil !== undefined) {
    recoil += weaponDef.recoil;
    recoil -= numTreads;
    recoil -= recoilReduction;
  } // Make sure we don't have negative recoil


  return Math.max(recoil, 0);
}

exports.getRecoil = getRecoil;
const regenRegex = /Core Regeneration \((\d*)\)/; // Gets the core regen value for a bot, otherwise 0

function getRegen(bot) {
  const traits = bot.traits;

  for (let i = 0; i < traits.length; i++) {
    const result = regenRegex.exec(traits[i]);

    if (result != null) {
      return parseInt(result[1]);
    }
  }

  return 0;
}

exports.getRegen = getRegen; // Gets the volley time given an array of ranged weapons

function getRangedVolleyTime(weapons, cyclerModifier) {
  let volleyTime;

  if (weapons.length in exports.volleyTimeMap) {
    volleyTime = exports.volleyTimeMap[weapons.length];
  } else {
    // No additional penalty past 6 weapons
    volleyTime = 400;
  }

  weapons.forEach(weapon => {
    var _a; // Apply individual delays


    volleyTime += (_a = weapon.delay) !== null && _a !== void 0 ? _a : 0;
  });
  volleyTime *= cyclerModifier; // Min time is capped at 25

  return Math.trunc(Math.max(25, volleyTime));
}

exports.getRangedVolleyTime = getRangedVolleyTime; // Tries to get a bot's first shielding for a specific slot
// Parts will be removed from the array if their integrity has dropped below 0

function getShieldingType(botState, slot) {
  return getDefensiveStatePart(botState.defensiveState.shieldings[slot]);
}

const simulationEndConditions = {
  Kill: function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100;
  },
  "Kill or Core Disrupt": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.coreDisrupted;
  },
  "Kill or No Power": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.parts.every(part => part.def.slot != "Power");
  },
  "Kill or No Weapons": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.parts.every(part => part.def.slot != "Weapon");
  },
  "Kill or No TNC": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.parts.every(part => part.def.name != "Transport Network Coupler");
  },
  "Architect Tele (80% integrity, 1 weapon, or 1 prop)": function (botState) {
    return botState.coreIntegrity <= botState.initialCoreIntegrity * 0.8 || botState.parts.filter(part => part.def.slot === "Weapon").length === 1 || botState.parts.filter(part => part.def.slot === "Propulsion").length === 1;
  }
}; // Fully simulates rounds of combat to a kill a bot from an initial state

function simulateCombat(state) {
  // Clone initial bot state
  const botState = cloneBotState(state.initialBotState);
  state.botState = botState;
  const offensiveState = state.offensiveState;
  let volleys = 0;
  let oldTus = 0;
  state.tus = 0; // Update initial accuracy

  updateWeaponsAccuracy(state);
  const endCondition = simulationEndConditions[state.endCondition]; // Update initial sneak attack state

  offensiveState.sneakAttack = offensiveState.sneakAttackStrategy === "All" || offensiveState.sneakAttackStrategy === "First Only"; // Update initial momentum

  offensiveState.momentum.current = offensiveState.momentum.bonus + offensiveState.momentum.initial;

  while (!endCondition(botState)) {
    // Apply core regen
    const lastCompletedTurns = Math.trunc(oldTus / 100);
    const newCompletedTurns = Math.trunc(state.tus / 100);
    const regenIntegrity = botState.regen * (newCompletedTurns - lastCompletedTurns);
    botState.coreIntegrity = Math.min(botState.initialCoreIntegrity, botState.coreIntegrity + regenIntegrity); // Process each volley

    volleys += 1;
    let volleyTime = offensiveState.volleyTime;

    if (offensiveState.melee) {
      // Always do primary attack
      simulateWeapon(state, state.weapons[0]); // Handle followups chances

      for (let i = 1; i < state.weapons.length; i++) {
        if (common_1.randomInt(0, 99) < offensiveState.followupChances[i - 1]) {
          simulateWeapon(state, state.weapons[i]); // Add followup delay, 50% of normal

          volleyTime += 0.5 * state.weapons[i].delay;
        }
      } // Apply volley modifier (actuators) here since the total time
      // can't be known ahead of time


      volleyTime *= offensiveState.volleyTimeModifier;

      if (volleys === 1) {
        // Disable sneak attack if active only for the first turn
        if (offensiveState.sneakAttackStrategy === "First Only") {
          offensiveState.sneakAttack = false;
        } // Remove initial momentum


        offensiveState.momentum.current = offensiveState.momentum.bonus;
      }
    } else {
      state.weapons.forEach(weapon => simulateWeapon(state, weapon));
    }

    if (volleys >= exports.maxVolleys) {
      // Exceeded max volleys and combat will likely never complete
      // Just bail here
      return false;
    }

    if (offensiveState.ramming) {
      // Ramming is always the slower of 100 TUs or the movement speed time
      volleyTime = Math.max(100, offensiveState.speed);
    } // Update TUs and time based changes


    oldTus = state.tus;
    state.tus += volleyTime; // Update accuracy when crossing siege mode activation

    if (!offensiveState.melee && oldTus < offensiveState.siegeBonus.tus && state.tus > offensiveState.siegeBonus.tus) {
      updateWeaponsAccuracy(state);
    }
  } // Update kill dictionaries


  if (volleys in state.killVolleys) {
    state.killVolleys[volleys] += 1;
  } else {
    state.killVolleys[volleys] = 1;
  }

  if (state.tus in state.killTus) {
    state.killTus[state.tus] += 1;
  } else {
    state.killTus[state.tus] = 1;
  }

  return true;
}

exports.simulateCombat = simulateCombat; // Simulates 1 weapon's damage in a volley

function simulateWeapon(state, weapon) {
  const botState = state.botState;
  const offensiveState = state.offensiveState;

  if (offensiveState.ramming) {
    // Apply ramming damage specially
    const speedPercent = 100 / state.offensiveState.speed * 100;
    let damageMax = ((10 + weapon.def.mass) / 5 + 1) * (speedPercent / 100) * Math.max(state.offensiveState.momentum.current, 1);
    damageMax = Math.min(100, damageMax);
    let damage = common_1.randomInt(0, damageMax);
    damage = calculateResistDamage(botState, damage, itemTypes_1.DamageType.Impact);

    if (damage > 0) {
      applyDamage(state, botState, damage, undefined, false, weapon.disruption, weapon.spectrum, weapon.overflow, itemTypes_1.DamageType.Impact);
    }

    return;
  }

  for (let i = 0; i < weapon.numProjectiles; i++) {
    // Check if the attack was a sneak attack or was a hit.
    // Technically sneak attacks can miss, but not under any realistic
    // scenario I could find. Sneak attacks force a base accuracy of 120%,
    // seemingly overriding other penalties like size or defensive
    // utilities like Reaction Control Systems. The most it seems to
    // take into account is -targeting, the lowest of which
    // (CR-A16's Pointy Stick) only has -20%, making this always a
    // guaranteed hit.
    let hit = offensiveState.melee && offensiveState.sneakAttack || common_1.randomInt(0, 99) < weapon.accuracy;

    if (hit && weapon.isMissile) {
      // Check for an antimissile intercept
      const part = getDefensiveStatePart(botState.defensiveState.antimissile);

      if (part != undefined) {
        const intercept = part.chance; // Check once per tile
        // Note: even though the utilities have a range of 3 there are
        // still 4 attempts at an intercept because the projectile can
        // be intercepted on the same tile as the bot is currently on
        // before the damage is applied.
        // See below, @ is cogmind, i is intercept bot,
        // . is empty space, and x is intercept roll
        // @ . . . i
        // @ x . . i
        // @ . x . i
        // @ . . x i
        // @ . . . x

        const numChanges = Math.min(4, offensiveState.distance);

        for (let i = 0; i < numChanges; i++) {
          if (common_1.randomInt(0, 99) < intercept) {
            hit = false;
            break;
          }
        }
      }
    }

    if (!hit) {
      continue;
    }

    if (weapon.damageType != undefined) {
      // Calculate base damage, then apply overloads, momentum,
      // and sneak attacks (2)
      let damage = common_1.randomInt(weapon.damageMin, weapon.damageMax); // Apply overload damage doubling + additional bonus

      if (weapon.overloaded) {
        damage = Math.trunc(damage * (2 + offensiveState.overloadBonus));
      } // Apply momentum bonus
      // ([momentum] * [speed%] / 1200) * 40)


      if (offensiveState.melee && offensiveState.momentum.current > 0) {
        const speedPercent = 100 / offensiveState.speed * 100;
        let momentumMultiplier = offensiveState.momentum.current * speedPercent / 1200 * 40; // Cap at 1-40

        momentumMultiplier = Math.trunc(momentumMultiplier);
        momentumMultiplier = Math.max(1, momentumMultiplier);
        momentumMultiplier = Math.min(40, momentumMultiplier);

        if (weapon.damageType === itemTypes_1.DamageType.Piercing) {
          // Piercing gets double bonus (not double cap)
          momentumMultiplier *= 2;
        }

        momentumMultiplier = momentumMultiplier / 100 + 1;
        damage = Math.trunc(momentumMultiplier * damage);
      } // Apply double damage sneak attack bonus


      if (offensiveState.melee && offensiveState.sneakAttack) {
        damage *= 2;
      } // Add analysis (3)


      if (offensiveState.analysis) {
        damage = Math.trunc(1.1 * damage);
      } // Add accelerator (5)


      if (weapon.accelerated) {
        damage = Math.trunc(offensiveState.chargerBonus * damage);
      } // Apply resistances (6)


      damage = calculateResistDamage(botState, damage, weapon.damageType); // Check for armor integrity analyzer

      const armorAnalyzed = common_1.randomInt(0, 99) < offensiveState.armorAnalyzerChance; // Check for crit (8)

      const didCritical = common_1.randomInt(0, 99) < weapon.criticalChance;

      if (damage > 0) {
        applyDamage(state, botState, damage, didCritical ? weapon.criticalType : undefined, armorAnalyzed, weapon.disruption, weapon.spectrum, weapon.overflow, weapon.damageType);
      }
    }

    if (weapon.explosionType != undefined) {
      // Apply explosion damage (2)
      let damage = common_1.randomInt(weapon.explosionMin, weapon.explosionMax); // Apply resistances (6)

      damage = calculateResistDamage(botState, damage, weapon.explosionType);

      if (damage > 0) {
        applyDamage(state, botState, damage, undefined, false, weapon.disruption, weapon.explosionSpectrum, weapon.overflow, weapon.explosionType);
      }
    }
  }
} // Converts a spectrum value to a numeric value


function spectrumToNumber(spectrum) {
  if (spectrum === undefined) {
    return 0;
  }

  return spectrumMap[spectrum];
}

exports.spectrumToNumber = spectrumToNumber; // Updates all calculated weapon accuracies

function updateWeaponsAccuracy(state) {
  const offensiveState = state.offensiveState;
  const botState = state.botState;
  let perWeaponBonus = 0; // Flying/hovering enemy penalty
  // TODO handle bots becoming overweight

  const botDef = botState.def;
  const movement = botDef.movement;

  if (movement.includes("Hovering") || movement.includes("Flying")) {
    perWeaponBonus -= 10;
  } // Subtract always avoid util (reaction control system)


  const avoidPart = getDefensiveStatePart(botState.defensiveState.avoid);

  if (avoidPart != undefined) {
    if (movement.includes("Walking")) {
      perWeaponBonus -= avoidPart.legs;
    } else {
      // TODO - doesn't matter now but should make sure hover/flight is active here
      perWeaponBonus -= avoidPart.other;
    }
  }

  if (offensiveState.analysis) {
    perWeaponBonus += 5;
  }

  let siegeBonus = 0;

  if (offensiveState.melee) {
    // Add melee analysis bonuses
    for (let i = 0; i < meleeAnalysisAccuracy.length; i++) {
      perWeaponBonus += offensiveState.meleeAnalysis[i] * meleeAnalysisAccuracy[i];
    } // Subtract force booster penalty
    // Earlier code ensures that there are at most 2 boosters enabled in the array


    let numBoostersProcessed = 0;

    for (let i = offensiveState.forceBoosters.length - 1; i >= 0; i--) {
      if (offensiveState.forceBoosters[i] == 2) {
        perWeaponBonus -= 1.5 * forceBoosterAccuracyPenalty[i];
        numBoostersProcessed += 2;
      } else if (offensiveState.forceBoosters[i] == 1) {
        perWeaponBonus -= forceBoosterAccuracyPenalty[i] * numBoostersProcessed == 0 ? 1 : 0.5;
        numBoostersProcessed += 1;
      }
    }
  } else {
    // Add (low) distance bonus
    perWeaponBonus += offensiveState.distance < 6 ? (6 - offensiveState.distance) * 3 : 0; // Add siege bonus

    const siege = offensiveState.siegeBonus;

    if (state.tus >= siege.tus) {
      siegeBonus = siege.bonus;
    }

    perWeaponBonus += siegeBonus; // Subtract ranged avoid util (phase shifter)

    const rangedAvoidPart = getDefensiveStatePart(botState.defensiveState.rangedAvoid);

    if (rangedAvoidPart != undefined) {
      perWeaponBonus -= rangedAvoidPart.avoid;
    }
  }

  state.weapons.forEach(weapon => {
    if (weapon.def.waypoints !== undefined) {
      // Guided weapons always have 100% accuracy
      weapon.accuracy = 100;
      return;
    }

    let accuracy = weapon.baseAccuracy + perWeaponBonus;

    if (!offensiveState.melee && siegeBonus === 0) {
      // Subtract recoil if siege mode inactive
      accuracy -= offensiveState.recoil - getRecoil(weapon.def, offensiveState.numTreads, offensiveState.recoilReduction);
    } // Cap accuracy


    const max = offensiveState.melee ? maxMeleeAccuracy : maxRangedAccuracy;
    weapon.accuracy = Math.min(max, Math.max(accuracy, minAccuracy));
  });
}
},{"./botTypes":"ts/botTypes.ts","./common":"ts/common.ts","./itemTypes":"ts/itemTypes.ts"}],"../node_modules/moment/moment.js":[function(require,module,exports) {
var define;
var global = arguments[3];
//! moment.js
//! version : 2.29.1
//! authors : Tim Wood, Iskren Chernev, Moment.js contributors
//! license : MIT
//! momentjs.com

;(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
    typeof define === 'function' && define.amd ? define(factory) :
    global.moment = factory()
}(this, (function () { 'use strict';

    var hookCallback;

    function hooks() {
        return hookCallback.apply(null, arguments);
    }

    // This is done to register the method called with moment()
    // without creating circular dependencies.
    function setHookCallback(callback) {
        hookCallback = callback;
    }

    function isArray(input) {
        return (
            input instanceof Array ||
            Object.prototype.toString.call(input) === '[object Array]'
        );
    }

    function isObject(input) {
        // IE8 will treat undefined and null as object if it wasn't for
        // input != null
        return (
            input != null &&
            Object.prototype.toString.call(input) === '[object Object]'
        );
    }

    function hasOwnProp(a, b) {
        return Object.prototype.hasOwnProperty.call(a, b);
    }

    function isObjectEmpty(obj) {
        if (Object.getOwnPropertyNames) {
            return Object.getOwnPropertyNames(obj).length === 0;
        } else {
            var k;
            for (k in obj) {
                if (hasOwnProp(obj, k)) {
                    return false;
                }
            }
            return true;
        }
    }

    function isUndefined(input) {
        return input === void 0;
    }

    function isNumber(input) {
        return (
            typeof input === 'number' ||
            Object.prototype.toString.call(input) === '[object Number]'
        );
    }

    function isDate(input) {
        return (
            input instanceof Date ||
            Object.prototype.toString.call(input) === '[object Date]'
        );
    }

    function map(arr, fn) {
        var res = [],
            i;
        for (i = 0; i < arr.length; ++i) {
            res.push(fn(arr[i], i));
        }
        return res;
    }

    function extend(a, b) {
        for (var i in b) {
            if (hasOwnProp(b, i)) {
                a[i] = b[i];
            }
        }

        if (hasOwnProp(b, 'toString')) {
            a.toString = b.toString;
        }

        if (hasOwnProp(b, 'valueOf')) {
            a.valueOf = b.valueOf;
        }

        return a;
    }

    function createUTC(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, true).utc();
    }

    function defaultParsingFlags() {
        // We need to deep clone this object.
        return {
            empty: false,
            unusedTokens: [],
            unusedInput: [],
            overflow: -2,
            charsLeftOver: 0,
            nullInput: false,
            invalidEra: null,
            invalidMonth: null,
            invalidFormat: false,
            userInvalidated: false,
            iso: false,
            parsedDateParts: [],
            era: null,
            meridiem: null,
            rfc2822: false,
            weekdayMismatch: false,
        };
    }

    function getParsingFlags(m) {
        if (m._pf == null) {
            m._pf = defaultParsingFlags();
        }
        return m._pf;
    }

    var some;
    if (Array.prototype.some) {
        some = Array.prototype.some;
    } else {
        some = function (fun) {
            var t = Object(this),
                len = t.length >>> 0,
                i;

            for (i = 0; i < len; i++) {
                if (i in t && fun.call(this, t[i], i, t)) {
                    return true;
                }
            }

            return false;
        };
    }

    function isValid(m) {
        if (m._isValid == null) {
            var flags = getParsingFlags(m),
                parsedParts = some.call(flags.parsedDateParts, function (i) {
                    return i != null;
                }),
                isNowValid =
                    !isNaN(m._d.getTime()) &&
                    flags.overflow < 0 &&
                    !flags.empty &&
                    !flags.invalidEra &&
                    !flags.invalidMonth &&
                    !flags.invalidWeekday &&
                    !flags.weekdayMismatch &&
                    !flags.nullInput &&
                    !flags.invalidFormat &&
                    !flags.userInvalidated &&
                    (!flags.meridiem || (flags.meridiem && parsedParts));

            if (m._strict) {
                isNowValid =
                    isNowValid &&
                    flags.charsLeftOver === 0 &&
                    flags.unusedTokens.length === 0 &&
                    flags.bigHour === undefined;
            }

            if (Object.isFrozen == null || !Object.isFrozen(m)) {
                m._isValid = isNowValid;
            } else {
                return isNowValid;
            }
        }
        return m._isValid;
    }

    function createInvalid(flags) {
        var m = createUTC(NaN);
        if (flags != null) {
            extend(getParsingFlags(m), flags);
        } else {
            getParsingFlags(m).userInvalidated = true;
        }

        return m;
    }

    // Plugins that add properties should also add the key here (null value),
    // so we can properly clone ourselves.
    var momentProperties = (hooks.momentProperties = []),
        updateInProgress = false;

    function copyConfig(to, from) {
        var i, prop, val;

        if (!isUndefined(from._isAMomentObject)) {
            to._isAMomentObject = from._isAMomentObject;
        }
        if (!isUndefined(from._i)) {
            to._i = from._i;
        }
        if (!isUndefined(from._f)) {
            to._f = from._f;
        }
        if (!isUndefined(from._l)) {
            to._l = from._l;
        }
        if (!isUndefined(from._strict)) {
            to._strict = from._strict;
        }
        if (!isUndefined(from._tzm)) {
            to._tzm = from._tzm;
        }
        if (!isUndefined(from._isUTC)) {
            to._isUTC = from._isUTC;
        }
        if (!isUndefined(from._offset)) {
            to._offset = from._offset;
        }
        if (!isUndefined(from._pf)) {
            to._pf = getParsingFlags(from);
        }
        if (!isUndefined(from._locale)) {
            to._locale = from._locale;
        }

        if (momentProperties.length > 0) {
            for (i = 0; i < momentProperties.length; i++) {
                prop = momentProperties[i];
                val = from[prop];
                if (!isUndefined(val)) {
                    to[prop] = val;
                }
            }
        }

        return to;
    }

    // Moment prototype object
    function Moment(config) {
        copyConfig(this, config);
        this._d = new Date(config._d != null ? config._d.getTime() : NaN);
        if (!this.isValid()) {
            this._d = new Date(NaN);
        }
        // Prevent infinite loop in case updateOffset creates new moment
        // objects.
        if (updateInProgress === false) {
            updateInProgress = true;
            hooks.updateOffset(this);
            updateInProgress = false;
        }
    }

    function isMoment(obj) {
        return (
            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)
        );
    }

    function warn(msg) {
        if (
            hooks.suppressDeprecationWarnings === false &&
            typeof console !== 'undefined' &&
            console.warn
        ) {
            console.warn('Deprecation warning: ' + msg);
        }
    }

    function deprecate(msg, fn) {
        var firstTime = true;

        return extend(function () {
            if (hooks.deprecationHandler != null) {
                hooks.deprecationHandler(null, msg);
            }
            if (firstTime) {
                var args = [],
                    arg,
                    i,
                    key;
                for (i = 0; i < arguments.length; i++) {
                    arg = '';
                    if (typeof arguments[i] === 'object') {
                        arg += '\n[' + i + '] ';
                        for (key in arguments[0]) {
                            if (hasOwnProp(arguments[0], key)) {
                                arg += key + ': ' + arguments[0][key] + ', ';
                            }
                        }
                        arg = arg.slice(0, -2); // Remove trailing comma and space
                    } else {
                        arg = arguments[i];
                    }
                    args.push(arg);
                }
                warn(
                    msg +
                        '\nArguments: ' +
                        Array.prototype.slice.call(args).join('') +
                        '\n' +
                        new Error().stack
                );
                firstTime = false;
            }
            return fn.apply(this, arguments);
        }, fn);
    }

    var deprecations = {};

    function deprecateSimple(name, msg) {
        if (hooks.deprecationHandler != null) {
            hooks.deprecationHandler(name, msg);
        }
        if (!deprecations[name]) {
            warn(msg);
            deprecations[name] = true;
        }
    }

    hooks.suppressDeprecationWarnings = false;
    hooks.deprecationHandler = null;

    function isFunction(input) {
        return (
            (typeof Function !== 'undefined' && input instanceof Function) ||
            Object.prototype.toString.call(input) === '[object Function]'
        );
    }

    function set(config) {
        var prop, i;
        for (i in config) {
            if (hasOwnProp(config, i)) {
                prop = config[i];
                if (isFunction(prop)) {
                    this[i] = prop;
                } else {
                    this['_' + i] = prop;
                }
            }
        }
        this._config = config;
        // Lenient ordinal parsing accepts just a number in addition to
        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.
        // TODO: Remove "ordinalParse" fallback in next major release.
        this._dayOfMonthOrdinalParseLenient = new RegExp(
            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +
                '|' +
                /\d{1,2}/.source
        );
    }

    function mergeConfigs(parentConfig, childConfig) {
        var res = extend({}, parentConfig),
            prop;
        for (prop in childConfig) {
            if (hasOwnProp(childConfig, prop)) {
                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {
                    res[prop] = {};
                    extend(res[prop], parentConfig[prop]);
                    extend(res[prop], childConfig[prop]);
                } else if (childConfig[prop] != null) {
                    res[prop] = childConfig[prop];
                } else {
                    delete res[prop];
                }
            }
        }
        for (prop in parentConfig) {
            if (
                hasOwnProp(parentConfig, prop) &&
                !hasOwnProp(childConfig, prop) &&
                isObject(parentConfig[prop])
            ) {
                // make sure changes to properties don't modify parent config
                res[prop] = extend({}, res[prop]);
            }
        }
        return res;
    }

    function Locale(config) {
        if (config != null) {
            this.set(config);
        }
    }

    var keys;

    if (Object.keys) {
        keys = Object.keys;
    } else {
        keys = function (obj) {
            var i,
                res = [];
            for (i in obj) {
                if (hasOwnProp(obj, i)) {
                    res.push(i);
                }
            }
            return res;
        };
    }

    var defaultCalendar = {
        sameDay: '[Today at] LT',
        nextDay: '[Tomorrow at] LT',
        nextWeek: 'dddd [at] LT',
        lastDay: '[Yesterday at] LT',
        lastWeek: '[Last] dddd [at] LT',
        sameElse: 'L',
    };

    function calendar(key, mom, now) {
        var output = this._calendar[key] || this._calendar['sameElse'];
        return isFunction(output) ? output.call(mom, now) : output;
    }

    function zeroFill(number, targetLength, forceSign) {
        var absNumber = '' + Math.abs(number),
            zerosToFill = targetLength - absNumber.length,
            sign = number >= 0;
        return (
            (sign ? (forceSign ? '+' : '') : '-') +
            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +
            absNumber
        );
    }

    var formattingTokens = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,
        localFormattingTokens = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,
        formatFunctions = {},
        formatTokenFunctions = {};

    // token:    'M'
    // padded:   ['MM', 2]
    // ordinal:  'Mo'
    // callback: function () { this.month() + 1 }
    function addFormatToken(token, padded, ordinal, callback) {
        var func = callback;
        if (typeof callback === 'string') {
            func = function () {
                return this[callback]();
            };
        }
        if (token) {
            formatTokenFunctions[token] = func;
        }
        if (padded) {
            formatTokenFunctions[padded[0]] = function () {
                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);
            };
        }
        if (ordinal) {
            formatTokenFunctions[ordinal] = function () {
                return this.localeData().ordinal(
                    func.apply(this, arguments),
                    token
                );
            };
        }
    }

    function removeFormattingTokens(input) {
        if (input.match(/\[[\s\S]/)) {
            return input.replace(/^\[|\]$/g, '');
        }
        return input.replace(/\\/g, '');
    }

    function makeFormatFunction(format) {
        var array = format.match(formattingTokens),
            i,
            length;

        for (i = 0, length = array.length; i < length; i++) {
            if (formatTokenFunctions[array[i]]) {
                array[i] = formatTokenFunctions[array[i]];
            } else {
                array[i] = removeFormattingTokens(array[i]);
            }
        }

        return function (mom) {
            var output = '',
                i;
            for (i = 0; i < length; i++) {
                output += isFunction(array[i])
                    ? array[i].call(mom, format)
                    : array[i];
            }
            return output;
        };
    }

    // format date using native date object
    function formatMoment(m, format) {
        if (!m.isValid()) {
            return m.localeData().invalidDate();
        }

        format = expandFormat(format, m.localeData());
        formatFunctions[format] =
            formatFunctions[format] || makeFormatFunction(format);

        return formatFunctions[format](m);
    }

    function expandFormat(format, locale) {
        var i = 5;

        function replaceLongDateFormatTokens(input) {
            return locale.longDateFormat(input) || input;
        }

        localFormattingTokens.lastIndex = 0;
        while (i >= 0 && localFormattingTokens.test(format)) {
            format = format.replace(
                localFormattingTokens,
                replaceLongDateFormatTokens
            );
            localFormattingTokens.lastIndex = 0;
            i -= 1;
        }

        return format;
    }

    var defaultLongDateFormat = {
        LTS: 'h:mm:ss A',
        LT: 'h:mm A',
        L: 'MM/DD/YYYY',
        LL: 'MMMM D, YYYY',
        LLL: 'MMMM D, YYYY h:mm A',
        LLLL: 'dddd, MMMM D, YYYY h:mm A',
    };

    function longDateFormat(key) {
        var format = this._longDateFormat[key],
            formatUpper = this._longDateFormat[key.toUpperCase()];

        if (format || !formatUpper) {
            return format;
        }

        this._longDateFormat[key] = formatUpper
            .match(formattingTokens)
            .map(function (tok) {
                if (
                    tok === 'MMMM' ||
                    tok === 'MM' ||
                    tok === 'DD' ||
                    tok === 'dddd'
                ) {
                    return tok.slice(1);
                }
                return tok;
            })
            .join('');

        return this._longDateFormat[key];
    }

    var defaultInvalidDate = 'Invalid date';

    function invalidDate() {
        return this._invalidDate;
    }

    var defaultOrdinal = '%d',
        defaultDayOfMonthOrdinalParse = /\d{1,2}/;

    function ordinal(number) {
        return this._ordinal.replace('%d', number);
    }

    var defaultRelativeTime = {
        future: 'in %s',
        past: '%s ago',
        s: 'a few seconds',
        ss: '%d seconds',
        m: 'a minute',
        mm: '%d minutes',
        h: 'an hour',
        hh: '%d hours',
        d: 'a day',
        dd: '%d days',
        w: 'a week',
        ww: '%d weeks',
        M: 'a month',
        MM: '%d months',
        y: 'a year',
        yy: '%d years',
    };

    function relativeTime(number, withoutSuffix, string, isFuture) {
        var output = this._relativeTime[string];
        return isFunction(output)
            ? output(number, withoutSuffix, string, isFuture)
            : output.replace(/%d/i, number);
    }

    function pastFuture(diff, output) {
        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];
        return isFunction(format) ? format(output) : format.replace(/%s/i, output);
    }

    var aliases = {};

    function addUnitAlias(unit, shorthand) {
        var lowerCase = unit.toLowerCase();
        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;
    }

    function normalizeUnits(units) {
        return typeof units === 'string'
            ? aliases[units] || aliases[units.toLowerCase()]
            : undefined;
    }

    function normalizeObjectUnits(inputObject) {
        var normalizedInput = {},
            normalizedProp,
            prop;

        for (prop in inputObject) {
            if (hasOwnProp(inputObject, prop)) {
                normalizedProp = normalizeUnits(prop);
                if (normalizedProp) {
                    normalizedInput[normalizedProp] = inputObject[prop];
                }
            }
        }

        return normalizedInput;
    }

    var priorities = {};

    function addUnitPriority(unit, priority) {
        priorities[unit] = priority;
    }

    function getPrioritizedUnits(unitsObj) {
        var units = [],
            u;
        for (u in unitsObj) {
            if (hasOwnProp(unitsObj, u)) {
                units.push({ unit: u, priority: priorities[u] });
            }
        }
        units.sort(function (a, b) {
            return a.priority - b.priority;
        });
        return units;
    }

    function isLeapYear(year) {
        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;
    }

    function absFloor(number) {
        if (number < 0) {
            // -0 -> 0
            return Math.ceil(number) || 0;
        } else {
            return Math.floor(number);
        }
    }

    function toInt(argumentForCoercion) {
        var coercedNumber = +argumentForCoercion,
            value = 0;

        if (coercedNumber !== 0 && isFinite(coercedNumber)) {
            value = absFloor(coercedNumber);
        }

        return value;
    }

    function makeGetSet(unit, keepTime) {
        return function (value) {
            if (value != null) {
                set$1(this, unit, value);
                hooks.updateOffset(this, keepTime);
                return this;
            } else {
                return get(this, unit);
            }
        };
    }

    function get(mom, unit) {
        return mom.isValid()
            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()
            : NaN;
    }

    function set$1(mom, unit, value) {
        if (mom.isValid() && !isNaN(value)) {
            if (
                unit === 'FullYear' &&
                isLeapYear(mom.year()) &&
                mom.month() === 1 &&
                mom.date() === 29
            ) {
                value = toInt(value);
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](
                    value,
                    mom.month(),
                    daysInMonth(value, mom.month())
                );
            } else {
                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);
            }
        }
    }

    // MOMENTS

    function stringGet(units) {
        units = normalizeUnits(units);
        if (isFunction(this[units])) {
            return this[units]();
        }
        return this;
    }

    function stringSet(units, value) {
        if (typeof units === 'object') {
            units = normalizeObjectUnits(units);
            var prioritized = getPrioritizedUnits(units),
                i;
            for (i = 0; i < prioritized.length; i++) {
                this[prioritized[i].unit](units[prioritized[i].unit]);
            }
        } else {
            units = normalizeUnits(units);
            if (isFunction(this[units])) {
                return this[units](value);
            }
        }
        return this;
    }

    var match1 = /\d/, //       0 - 9
        match2 = /\d\d/, //      00 - 99
        match3 = /\d{3}/, //     000 - 999
        match4 = /\d{4}/, //    0000 - 9999
        match6 = /[+-]?\d{6}/, // -999999 - 999999
        match1to2 = /\d\d?/, //       0 - 99
        match3to4 = /\d\d\d\d?/, //     999 - 9999
        match5to6 = /\d\d\d\d\d\d?/, //   99999 - 999999
        match1to3 = /\d{1,3}/, //       0 - 999
        match1to4 = /\d{1,4}/, //       0 - 9999
        match1to6 = /[+-]?\d{1,6}/, // -999999 - 999999
        matchUnsigned = /\d+/, //       0 - inf
        matchSigned = /[+-]?\d+/, //    -inf - inf
        matchOffset = /Z|[+-]\d\d:?\d\d/gi, // +00:00 -00:00 +0000 -0000 or Z
        matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z
        matchTimestamp = /[+-]?\d+(\.\d{1,3})?/, // 123456789 123456789.123
        // any word (or two) characters or numbers including two/three word month in arabic.
        // includes scottish gaelic two word and hyphenated months
        matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,
        regexes;

    regexes = {};

    function addRegexToken(token, regex, strictRegex) {
        regexes[token] = isFunction(regex)
            ? regex
            : function (isStrict, localeData) {
                  return isStrict && strictRegex ? strictRegex : regex;
              };
    }

    function getParseRegexForToken(token, config) {
        if (!hasOwnProp(regexes, token)) {
            return new RegExp(unescapeFormat(token));
        }

        return regexes[token](config._strict, config._locale);
    }

    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript
    function unescapeFormat(s) {
        return regexEscape(
            s
                .replace('\\', '')
                .replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (
                    matched,
                    p1,
                    p2,
                    p3,
                    p4
                ) {
                    return p1 || p2 || p3 || p4;
                })
        );
    }

    function regexEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }

    var tokens = {};

    function addParseToken(token, callback) {
        var i,
            func = callback;
        if (typeof token === 'string') {
            token = [token];
        }
        if (isNumber(callback)) {
            func = function (input, array) {
                array[callback] = toInt(input);
            };
        }
        for (i = 0; i < token.length; i++) {
            tokens[token[i]] = func;
        }
    }

    function addWeekParseToken(token, callback) {
        addParseToken(token, function (input, array, config, token) {
            config._w = config._w || {};
            callback(input, config._w, config, token);
        });
    }

    function addTimeToArrayFromToken(token, input, config) {
        if (input != null && hasOwnProp(tokens, token)) {
            tokens[token](input, config._a, config, token);
        }
    }

    var YEAR = 0,
        MONTH = 1,
        DATE = 2,
        HOUR = 3,
        MINUTE = 4,
        SECOND = 5,
        MILLISECOND = 6,
        WEEK = 7,
        WEEKDAY = 8;

    function mod(n, x) {
        return ((n % x) + x) % x;
    }

    var indexOf;

    if (Array.prototype.indexOf) {
        indexOf = Array.prototype.indexOf;
    } else {
        indexOf = function (o) {
            // I know
            var i;
            for (i = 0; i < this.length; ++i) {
                if (this[i] === o) {
                    return i;
                }
            }
            return -1;
        };
    }

    function daysInMonth(year, month) {
        if (isNaN(year) || isNaN(month)) {
            return NaN;
        }
        var modMonth = mod(month, 12);
        year += (month - modMonth) / 12;
        return modMonth === 1
            ? isLeapYear(year)
                ? 29
                : 28
            : 31 - ((modMonth % 7) % 2);
    }

    // FORMATTING

    addFormatToken('M', ['MM', 2], 'Mo', function () {
        return this.month() + 1;
    });

    addFormatToken('MMM', 0, 0, function (format) {
        return this.localeData().monthsShort(this, format);
    });

    addFormatToken('MMMM', 0, 0, function (format) {
        return this.localeData().months(this, format);
    });

    // ALIASES

    addUnitAlias('month', 'M');

    // PRIORITY

    addUnitPriority('month', 8);

    // PARSING

    addRegexToken('M', match1to2);
    addRegexToken('MM', match1to2, match2);
    addRegexToken('MMM', function (isStrict, locale) {
        return locale.monthsShortRegex(isStrict);
    });
    addRegexToken('MMMM', function (isStrict, locale) {
        return locale.monthsRegex(isStrict);
    });

    addParseToken(['M', 'MM'], function (input, array) {
        array[MONTH] = toInt(input) - 1;
    });

    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {
        var month = config._locale.monthsParse(input, token, config._strict);
        // if we didn't find a month name, mark the date as invalid.
        if (month != null) {
            array[MONTH] = month;
        } else {
            getParsingFlags(config).invalidMonth = input;
        }
    });

    // LOCALES

    var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split(
            '_'
        ),
        defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split(
            '_'
        ),
        MONTHS_IN_FORMAT = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,
        defaultMonthsShortRegex = matchWord,
        defaultMonthsRegex = matchWord;

    function localeMonths(m, format) {
        if (!m) {
            return isArray(this._months)
                ? this._months
                : this._months['standalone'];
        }
        return isArray(this._months)
            ? this._months[m.month()]
            : this._months[
                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)
                      ? 'format'
                      : 'standalone'
              ][m.month()];
    }

    function localeMonthsShort(m, format) {
        if (!m) {
            return isArray(this._monthsShort)
                ? this._monthsShort
                : this._monthsShort['standalone'];
        }
        return isArray(this._monthsShort)
            ? this._monthsShort[m.month()]
            : this._monthsShort[
                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'
              ][m.month()];
    }

    function handleStrictParse(monthName, format, strict) {
        var i,
            ii,
            mom,
            llc = monthName.toLocaleLowerCase();
        if (!this._monthsParse) {
            // this is not used
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
            for (i = 0; i < 12; ++i) {
                mom = createUTC([2000, i]);
                this._shortMonthsParse[i] = this.monthsShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'MMM') {
                ii = indexOf.call(this._shortMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._longMonthsParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._longMonthsParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortMonthsParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeMonthsParse(monthName, format, strict) {
        var i, mom, regex;

        if (this._monthsParseExact) {
            return handleStrictParse.call(this, monthName, format, strict);
        }

        if (!this._monthsParse) {
            this._monthsParse = [];
            this._longMonthsParse = [];
            this._shortMonthsParse = [];
        }

        // TODO: add sorting
        // Sorting makes sure if one month (or abbr) is a prefix of another
        // see sorting in computeMonthsParse
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            if (strict && !this._longMonthsParse[i]) {
                this._longMonthsParse[i] = new RegExp(
                    '^' + this.months(mom, '').replace('.', '') + '$',
                    'i'
                );
                this._shortMonthsParse[i] = new RegExp(
                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',
                    'i'
                );
            }
            if (!strict && !this._monthsParse[i]) {
                regex =
                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');
                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'MMMM' &&
                this._longMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'MMM' &&
                this._shortMonthsParse[i].test(monthName)
            ) {
                return i;
            } else if (!strict && this._monthsParse[i].test(monthName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function setMonth(mom, value) {
        var dayOfMonth;

        if (!mom.isValid()) {
            // No op
            return mom;
        }

        if (typeof value === 'string') {
            if (/^\d+$/.test(value)) {
                value = toInt(value);
            } else {
                value = mom.localeData().monthsParse(value);
                // TODO: Another silent failure?
                if (!isNumber(value)) {
                    return mom;
                }
            }
        }

        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));
        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);
        return mom;
    }

    function getSetMonth(value) {
        if (value != null) {
            setMonth(this, value);
            hooks.updateOffset(this, true);
            return this;
        } else {
            return get(this, 'Month');
        }
    }

    function getDaysInMonth() {
        return daysInMonth(this.year(), this.month());
    }

    function monthsShortRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsShortStrictRegex;
            } else {
                return this._monthsShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsShortRegex')) {
                this._monthsShortRegex = defaultMonthsShortRegex;
            }
            return this._monthsShortStrictRegex && isStrict
                ? this._monthsShortStrictRegex
                : this._monthsShortRegex;
        }
    }

    function monthsRegex(isStrict) {
        if (this._monthsParseExact) {
            if (!hasOwnProp(this, '_monthsRegex')) {
                computeMonthsParse.call(this);
            }
            if (isStrict) {
                return this._monthsStrictRegex;
            } else {
                return this._monthsRegex;
            }
        } else {
            if (!hasOwnProp(this, '_monthsRegex')) {
                this._monthsRegex = defaultMonthsRegex;
            }
            return this._monthsStrictRegex && isStrict
                ? this._monthsStrictRegex
                : this._monthsRegex;
        }
    }

    function computeMonthsParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom;
        for (i = 0; i < 12; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, i]);
            shortPieces.push(this.monthsShort(mom, ''));
            longPieces.push(this.months(mom, ''));
            mixedPieces.push(this.months(mom, ''));
            mixedPieces.push(this.monthsShort(mom, ''));
        }
        // Sorting makes sure if one month (or abbr) is a prefix of another it
        // will match the longer piece.
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);
        for (i = 0; i < 12; i++) {
            shortPieces[i] = regexEscape(shortPieces[i]);
            longPieces[i] = regexEscape(longPieces[i]);
        }
        for (i = 0; i < 24; i++) {
            mixedPieces[i] = regexEscape(mixedPieces[i]);
        }

        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._monthsShortRegex = this._monthsRegex;
        this._monthsStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._monthsShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken('Y', 0, 0, function () {
        var y = this.year();
        return y <= 9999 ? zeroFill(y, 4) : '+' + y;
    });

    addFormatToken(0, ['YY', 2], 0, function () {
        return this.year() % 100;
    });

    addFormatToken(0, ['YYYY', 4], 0, 'year');
    addFormatToken(0, ['YYYYY', 5], 0, 'year');
    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');

    // ALIASES

    addUnitAlias('year', 'y');

    // PRIORITIES

    addUnitPriority('year', 1);

    // PARSING

    addRegexToken('Y', matchSigned);
    addRegexToken('YY', match1to2, match2);
    addRegexToken('YYYY', match1to4, match4);
    addRegexToken('YYYYY', match1to6, match6);
    addRegexToken('YYYYYY', match1to6, match6);

    addParseToken(['YYYYY', 'YYYYYY'], YEAR);
    addParseToken('YYYY', function (input, array) {
        array[YEAR] =
            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);
    });
    addParseToken('YY', function (input, array) {
        array[YEAR] = hooks.parseTwoDigitYear(input);
    });
    addParseToken('Y', function (input, array) {
        array[YEAR] = parseInt(input, 10);
    });

    // HELPERS

    function daysInYear(year) {
        return isLeapYear(year) ? 366 : 365;
    }

    // HOOKS

    hooks.parseTwoDigitYear = function (input) {
        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);
    };

    // MOMENTS

    var getSetYear = makeGetSet('FullYear', true);

    function getIsLeapYear() {
        return isLeapYear(this.year());
    }

    function createDate(y, m, d, h, M, s, ms) {
        // can't just apply() to create a date:
        // https://stackoverflow.com/q/181348
        var date;
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            date = new Date(y + 400, m, d, h, M, s, ms);
            if (isFinite(date.getFullYear())) {
                date.setFullYear(y);
            }
        } else {
            date = new Date(y, m, d, h, M, s, ms);
        }

        return date;
    }

    function createUTCDate(y) {
        var date, args;
        // the Date.UTC function remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            args = Array.prototype.slice.call(arguments);
            // preserve leap years using a full 400 year cycle, then reset
            args[0] = y + 400;
            date = new Date(Date.UTC.apply(null, args));
            if (isFinite(date.getUTCFullYear())) {
                date.setUTCFullYear(y);
            }
        } else {
            date = new Date(Date.UTC.apply(null, arguments));
        }

        return date;
    }

    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)
            fwd = 7 + dow - doy,
            // first-week day local weekday -- which local weekday is fwd
            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;

        return -fwdlw + fwd - 1;
    }

    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday
    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {
        var localWeekday = (7 + weekday - dow) % 7,
            weekOffset = firstWeekOffset(year, dow, doy),
            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,
            resYear,
            resDayOfYear;

        if (dayOfYear <= 0) {
            resYear = year - 1;
            resDayOfYear = daysInYear(resYear) + dayOfYear;
        } else if (dayOfYear > daysInYear(year)) {
            resYear = year + 1;
            resDayOfYear = dayOfYear - daysInYear(year);
        } else {
            resYear = year;
            resDayOfYear = dayOfYear;
        }

        return {
            year: resYear,
            dayOfYear: resDayOfYear,
        };
    }

    function weekOfYear(mom, dow, doy) {
        var weekOffset = firstWeekOffset(mom.year(), dow, doy),
            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,
            resWeek,
            resYear;

        if (week < 1) {
            resYear = mom.year() - 1;
            resWeek = week + weeksInYear(resYear, dow, doy);
        } else if (week > weeksInYear(mom.year(), dow, doy)) {
            resWeek = week - weeksInYear(mom.year(), dow, doy);
            resYear = mom.year() + 1;
        } else {
            resYear = mom.year();
            resWeek = week;
        }

        return {
            week: resWeek,
            year: resYear,
        };
    }

    function weeksInYear(year, dow, doy) {
        var weekOffset = firstWeekOffset(year, dow, doy),
            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);
        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;
    }

    // FORMATTING

    addFormatToken('w', ['ww', 2], 'wo', 'week');
    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');

    // ALIASES

    addUnitAlias('week', 'w');
    addUnitAlias('isoWeek', 'W');

    // PRIORITIES

    addUnitPriority('week', 5);
    addUnitPriority('isoWeek', 5);

    // PARSING

    addRegexToken('w', match1to2);
    addRegexToken('ww', match1to2, match2);
    addRegexToken('W', match1to2);
    addRegexToken('WW', match1to2, match2);

    addWeekParseToken(['w', 'ww', 'W', 'WW'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 1)] = toInt(input);
    });

    // HELPERS

    // LOCALES

    function localeWeek(mom) {
        return weekOfYear(mom, this._week.dow, this._week.doy).week;
    }

    var defaultLocaleWeek = {
        dow: 0, // Sunday is the first day of the week.
        doy: 6, // The week that contains Jan 6th is the first week of the year.
    };

    function localeFirstDayOfWeek() {
        return this._week.dow;
    }

    function localeFirstDayOfYear() {
        return this._week.doy;
    }

    // MOMENTS

    function getSetWeek(input) {
        var week = this.localeData().week(this);
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    function getSetISOWeek(input) {
        var week = weekOfYear(this, 1, 4).week;
        return input == null ? week : this.add((input - week) * 7, 'd');
    }

    // FORMATTING

    addFormatToken('d', 0, 'do', 'day');

    addFormatToken('dd', 0, 0, function (format) {
        return this.localeData().weekdaysMin(this, format);
    });

    addFormatToken('ddd', 0, 0, function (format) {
        return this.localeData().weekdaysShort(this, format);
    });

    addFormatToken('dddd', 0, 0, function (format) {
        return this.localeData().weekdays(this, format);
    });

    addFormatToken('e', 0, 0, 'weekday');
    addFormatToken('E', 0, 0, 'isoWeekday');

    // ALIASES

    addUnitAlias('day', 'd');
    addUnitAlias('weekday', 'e');
    addUnitAlias('isoWeekday', 'E');

    // PRIORITY
    addUnitPriority('day', 11);
    addUnitPriority('weekday', 11);
    addUnitPriority('isoWeekday', 11);

    // PARSING

    addRegexToken('d', match1to2);
    addRegexToken('e', match1to2);
    addRegexToken('E', match1to2);
    addRegexToken('dd', function (isStrict, locale) {
        return locale.weekdaysMinRegex(isStrict);
    });
    addRegexToken('ddd', function (isStrict, locale) {
        return locale.weekdaysShortRegex(isStrict);
    });
    addRegexToken('dddd', function (isStrict, locale) {
        return locale.weekdaysRegex(isStrict);
    });

    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {
        var weekday = config._locale.weekdaysParse(input, token, config._strict);
        // if we didn't get a weekday name, mark the date as invalid
        if (weekday != null) {
            week.d = weekday;
        } else {
            getParsingFlags(config).invalidWeekday = input;
        }
    });

    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {
        week[token] = toInt(input);
    });

    // HELPERS

    function parseWeekday(input, locale) {
        if (typeof input !== 'string') {
            return input;
        }

        if (!isNaN(input)) {
            return parseInt(input, 10);
        }

        input = locale.weekdaysParse(input);
        if (typeof input === 'number') {
            return input;
        }

        return null;
    }

    function parseIsoWeekday(input, locale) {
        if (typeof input === 'string') {
            return locale.weekdaysParse(input) % 7 || 7;
        }
        return isNaN(input) ? null : input;
    }

    // LOCALES
    function shiftWeekdays(ws, n) {
        return ws.slice(n, 7).concat(ws.slice(0, n));
    }

    var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split(
            '_'
        ),
        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),
        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),
        defaultWeekdaysRegex = matchWord,
        defaultWeekdaysShortRegex = matchWord,
        defaultWeekdaysMinRegex = matchWord;

    function localeWeekdays(m, format) {
        var weekdays = isArray(this._weekdays)
            ? this._weekdays
            : this._weekdays[
                  m && m !== true && this._weekdays.isFormat.test(format)
                      ? 'format'
                      : 'standalone'
              ];
        return m === true
            ? shiftWeekdays(weekdays, this._week.dow)
            : m
            ? weekdays[m.day()]
            : weekdays;
    }

    function localeWeekdaysShort(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysShort, this._week.dow)
            : m
            ? this._weekdaysShort[m.day()]
            : this._weekdaysShort;
    }

    function localeWeekdaysMin(m) {
        return m === true
            ? shiftWeekdays(this._weekdaysMin, this._week.dow)
            : m
            ? this._weekdaysMin[m.day()]
            : this._weekdaysMin;
    }

    function handleStrictParse$1(weekdayName, format, strict) {
        var i,
            ii,
            mom,
            llc = weekdayName.toLocaleLowerCase();
        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._minWeekdaysParse = [];

            for (i = 0; i < 7; ++i) {
                mom = createUTC([2000, 1]).day(i);
                this._minWeekdaysParse[i] = this.weekdaysMin(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._shortWeekdaysParse[i] = this.weekdaysShort(
                    mom,
                    ''
                ).toLocaleLowerCase();
                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();
            }
        }

        if (strict) {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        } else {
            if (format === 'dddd') {
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else if (format === 'ddd') {
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._minWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            } else {
                ii = indexOf.call(this._minWeekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._weekdaysParse, llc);
                if (ii !== -1) {
                    return ii;
                }
                ii = indexOf.call(this._shortWeekdaysParse, llc);
                return ii !== -1 ? ii : null;
            }
        }
    }

    function localeWeekdaysParse(weekdayName, format, strict) {
        var i, mom, regex;

        if (this._weekdaysParseExact) {
            return handleStrictParse$1.call(this, weekdayName, format, strict);
        }

        if (!this._weekdaysParse) {
            this._weekdaysParse = [];
            this._minWeekdaysParse = [];
            this._shortWeekdaysParse = [];
            this._fullWeekdaysParse = [];
        }

        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already

            mom = createUTC([2000, 1]).day(i);
            if (strict && !this._fullWeekdaysParse[i]) {
                this._fullWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdays(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._shortWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysShort(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
                this._minWeekdaysParse[i] = new RegExp(
                    '^' + this.weekdaysMin(mom, '').replace('.', '\\.?') + '$',
                    'i'
                );
            }
            if (!this._weekdaysParse[i]) {
                regex =
                    '^' +
                    this.weekdays(mom, '') +
                    '|^' +
                    this.weekdaysShort(mom, '') +
                    '|^' +
                    this.weekdaysMin(mom, '');
                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');
            }
            // test the regex
            if (
                strict &&
                format === 'dddd' &&
                this._fullWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'ddd' &&
                this._shortWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (
                strict &&
                format === 'dd' &&
                this._minWeekdaysParse[i].test(weekdayName)
            ) {
                return i;
            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {
                return i;
            }
        }
    }

    // MOMENTS

    function getSetDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
        if (input != null) {
            input = parseWeekday(input, this.localeData());
            return this.add(input - day, 'd');
        } else {
            return day;
        }
    }

    function getSetLocaleDayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;
        return input == null ? weekday : this.add(input - weekday, 'd');
    }

    function getSetISODayOfWeek(input) {
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }

        // behaves the same as moment#day except
        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)
        // as a setter, sunday should belong to the previous week.

        if (input != null) {
            var weekday = parseIsoWeekday(input, this.localeData());
            return this.day(this.day() % 7 ? weekday : weekday - 7);
        } else {
            return this.day() || 7;
        }
    }

    function weekdaysRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysStrictRegex;
            } else {
                return this._weekdaysRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                this._weekdaysRegex = defaultWeekdaysRegex;
            }
            return this._weekdaysStrictRegex && isStrict
                ? this._weekdaysStrictRegex
                : this._weekdaysRegex;
        }
    }

    function weekdaysShortRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysShortStrictRegex;
            } else {
                return this._weekdaysShortRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysShortRegex')) {
                this._weekdaysShortRegex = defaultWeekdaysShortRegex;
            }
            return this._weekdaysShortStrictRegex && isStrict
                ? this._weekdaysShortStrictRegex
                : this._weekdaysShortRegex;
        }
    }

    function weekdaysMinRegex(isStrict) {
        if (this._weekdaysParseExact) {
            if (!hasOwnProp(this, '_weekdaysRegex')) {
                computeWeekdaysParse.call(this);
            }
            if (isStrict) {
                return this._weekdaysMinStrictRegex;
            } else {
                return this._weekdaysMinRegex;
            }
        } else {
            if (!hasOwnProp(this, '_weekdaysMinRegex')) {
                this._weekdaysMinRegex = defaultWeekdaysMinRegex;
            }
            return this._weekdaysMinStrictRegex && isStrict
                ? this._weekdaysMinStrictRegex
                : this._weekdaysMinRegex;
        }
    }

    function computeWeekdaysParse() {
        function cmpLenRev(a, b) {
            return b.length - a.length;
        }

        var minPieces = [],
            shortPieces = [],
            longPieces = [],
            mixedPieces = [],
            i,
            mom,
            minp,
            shortp,
            longp;
        for (i = 0; i < 7; i++) {
            // make the regex if we don't have it already
            mom = createUTC([2000, 1]).day(i);
            minp = regexEscape(this.weekdaysMin(mom, ''));
            shortp = regexEscape(this.weekdaysShort(mom, ''));
            longp = regexEscape(this.weekdays(mom, ''));
            minPieces.push(minp);
            shortPieces.push(shortp);
            longPieces.push(longp);
            mixedPieces.push(minp);
            mixedPieces.push(shortp);
            mixedPieces.push(longp);
        }
        // Sorting makes sure if one weekday (or abbr) is a prefix of another it
        // will match the longer piece.
        minPieces.sort(cmpLenRev);
        shortPieces.sort(cmpLenRev);
        longPieces.sort(cmpLenRev);
        mixedPieces.sort(cmpLenRev);

        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._weekdaysShortRegex = this._weekdaysRegex;
        this._weekdaysMinRegex = this._weekdaysRegex;

        this._weekdaysStrictRegex = new RegExp(
            '^(' + longPieces.join('|') + ')',
            'i'
        );
        this._weekdaysShortStrictRegex = new RegExp(
            '^(' + shortPieces.join('|') + ')',
            'i'
        );
        this._weekdaysMinStrictRegex = new RegExp(
            '^(' + minPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    function hFormat() {
        return this.hours() % 12 || 12;
    }

    function kFormat() {
        return this.hours() || 24;
    }

    addFormatToken('H', ['HH', 2], 0, 'hour');
    addFormatToken('h', ['hh', 2], 0, hFormat);
    addFormatToken('k', ['kk', 2], 0, kFormat);

    addFormatToken('hmm', 0, 0, function () {
        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);
    });

    addFormatToken('hmmss', 0, 0, function () {
        return (
            '' +
            hFormat.apply(this) +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    addFormatToken('Hmm', 0, 0, function () {
        return '' + this.hours() + zeroFill(this.minutes(), 2);
    });

    addFormatToken('Hmmss', 0, 0, function () {
        return (
            '' +
            this.hours() +
            zeroFill(this.minutes(), 2) +
            zeroFill(this.seconds(), 2)
        );
    });

    function meridiem(token, lowercase) {
        addFormatToken(token, 0, 0, function () {
            return this.localeData().meridiem(
                this.hours(),
                this.minutes(),
                lowercase
            );
        });
    }

    meridiem('a', true);
    meridiem('A', false);

    // ALIASES

    addUnitAlias('hour', 'h');

    // PRIORITY
    addUnitPriority('hour', 13);

    // PARSING

    function matchMeridiem(isStrict, locale) {
        return locale._meridiemParse;
    }

    addRegexToken('a', matchMeridiem);
    addRegexToken('A', matchMeridiem);
    addRegexToken('H', match1to2);
    addRegexToken('h', match1to2);
    addRegexToken('k', match1to2);
    addRegexToken('HH', match1to2, match2);
    addRegexToken('hh', match1to2, match2);
    addRegexToken('kk', match1to2, match2);

    addRegexToken('hmm', match3to4);
    addRegexToken('hmmss', match5to6);
    addRegexToken('Hmm', match3to4);
    addRegexToken('Hmmss', match5to6);

    addParseToken(['H', 'HH'], HOUR);
    addParseToken(['k', 'kk'], function (input, array, config) {
        var kInput = toInt(input);
        array[HOUR] = kInput === 24 ? 0 : kInput;
    });
    addParseToken(['a', 'A'], function (input, array, config) {
        config._isPm = config._locale.isPM(input);
        config._meridiem = input;
    });
    addParseToken(['h', 'hh'], function (input, array, config) {
        array[HOUR] = toInt(input);
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
        getParsingFlags(config).bigHour = true;
    });
    addParseToken('Hmm', function (input, array, config) {
        var pos = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos));
        array[MINUTE] = toInt(input.substr(pos));
    });
    addParseToken('Hmmss', function (input, array, config) {
        var pos1 = input.length - 4,
            pos2 = input.length - 2;
        array[HOUR] = toInt(input.substr(0, pos1));
        array[MINUTE] = toInt(input.substr(pos1, 2));
        array[SECOND] = toInt(input.substr(pos2));
    });

    // LOCALES

    function localeIsPM(input) {
        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays
        // Using charAt should be more compatible.
        return (input + '').toLowerCase().charAt(0) === 'p';
    }

    var defaultLocaleMeridiemParse = /[ap]\.?m?\.?/i,
        // Setting the hour should keep the time, because the user explicitly
        // specified which hour they want. So trying to maintain the same hour (in
        // a new timezone) makes sense. Adding/subtracting hours does not follow
        // this rule.
        getSetHour = makeGetSet('Hours', true);

    function localeMeridiem(hours, minutes, isLower) {
        if (hours > 11) {
            return isLower ? 'pm' : 'PM';
        } else {
            return isLower ? 'am' : 'AM';
        }
    }

    var baseConfig = {
        calendar: defaultCalendar,
        longDateFormat: defaultLongDateFormat,
        invalidDate: defaultInvalidDate,
        ordinal: defaultOrdinal,
        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,
        relativeTime: defaultRelativeTime,

        months: defaultLocaleMonths,
        monthsShort: defaultLocaleMonthsShort,

        week: defaultLocaleWeek,

        weekdays: defaultLocaleWeekdays,
        weekdaysMin: defaultLocaleWeekdaysMin,
        weekdaysShort: defaultLocaleWeekdaysShort,

        meridiemParse: defaultLocaleMeridiemParse,
    };

    // internal storage for locale config files
    var locales = {},
        localeFamilies = {},
        globalLocale;

    function commonPrefix(arr1, arr2) {
        var i,
            minl = Math.min(arr1.length, arr2.length);
        for (i = 0; i < minl; i += 1) {
            if (arr1[i] !== arr2[i]) {
                return i;
            }
        }
        return minl;
    }

    function normalizeLocale(key) {
        return key ? key.toLowerCase().replace('_', '-') : key;
    }

    // pick the locale from the array
    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each
    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root
    function chooseLocale(names) {
        var i = 0,
            j,
            next,
            locale,
            split;

        while (i < names.length) {
            split = normalizeLocale(names[i]).split('-');
            j = split.length;
            next = normalizeLocale(names[i + 1]);
            next = next ? next.split('-') : null;
            while (j > 0) {
                locale = loadLocale(split.slice(0, j).join('-'));
                if (locale) {
                    return locale;
                }
                if (
                    next &&
                    next.length >= j &&
                    commonPrefix(split, next) >= j - 1
                ) {
                    //the next array item is better than a shallower substring of this one
                    break;
                }
                j--;
            }
            i++;
        }
        return globalLocale;
    }

    function loadLocale(name) {
        var oldLocale = null,
            aliasedRequire;
        // TODO: Find a better way to register and load all the locales in Node
        if (
            locales[name] === undefined &&
            typeof module !== 'undefined' &&
            module &&
            module.exports
        ) {
            try {
                oldLocale = globalLocale._abbr;
                aliasedRequire = require;
                aliasedRequire('./locale/' + name);
                getSetGlobalLocale(oldLocale);
            } catch (e) {
                // mark as not found to avoid repeating expensive file require call causing high CPU
                // when trying to find en-US, en_US, en-us for every format call
                locales[name] = null; // null means not found
            }
        }
        return locales[name];
    }

    // This function will load locale and then set the global locale.  If
    // no arguments are passed in, it will simply return the current global
    // locale key.
    function getSetGlobalLocale(key, values) {
        var data;
        if (key) {
            if (isUndefined(values)) {
                data = getLocale(key);
            } else {
                data = defineLocale(key, values);
            }

            if (data) {
                // moment.duration._locale = moment._locale = data;
                globalLocale = data;
            } else {
                if (typeof console !== 'undefined' && console.warn) {
                    //warn user if arguments are passed but the locale could not be set
                    console.warn(
                        'Locale ' + key + ' not found. Did you forget to load it?'
                    );
                }
            }
        }

        return globalLocale._abbr;
    }

    function defineLocale(name, config) {
        if (config !== null) {
            var locale,
                parentConfig = baseConfig;
            config.abbr = name;
            if (locales[name] != null) {
                deprecateSimple(
                    'defineLocaleOverride',
                    'use moment.updateLocale(localeName, config) to change ' +
                        'an existing locale. moment.defineLocale(localeName, ' +
                        'config) should only be used for creating a new locale ' +
                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'
                );
                parentConfig = locales[name]._config;
            } else if (config.parentLocale != null) {
                if (locales[config.parentLocale] != null) {
                    parentConfig = locales[config.parentLocale]._config;
                } else {
                    locale = loadLocale(config.parentLocale);
                    if (locale != null) {
                        parentConfig = locale._config;
                    } else {
                        if (!localeFamilies[config.parentLocale]) {
                            localeFamilies[config.parentLocale] = [];
                        }
                        localeFamilies[config.parentLocale].push({
                            name: name,
                            config: config,
                        });
                        return null;
                    }
                }
            }
            locales[name] = new Locale(mergeConfigs(parentConfig, config));

            if (localeFamilies[name]) {
                localeFamilies[name].forEach(function (x) {
                    defineLocale(x.name, x.config);
                });
            }

            // backwards compat for now: also set the locale
            // make sure we set the locale AFTER all child locales have been
            // created, so we won't end up with the child locale set.
            getSetGlobalLocale(name);

            return locales[name];
        } else {
            // useful for testing
            delete locales[name];
            return null;
        }
    }

    function updateLocale(name, config) {
        if (config != null) {
            var locale,
                tmpLocale,
                parentConfig = baseConfig;

            if (locales[name] != null && locales[name].parentLocale != null) {
                // Update existing child locale in-place to avoid memory-leaks
                locales[name].set(mergeConfigs(locales[name]._config, config));
            } else {
                // MERGE
                tmpLocale = loadLocale(name);
                if (tmpLocale != null) {
                    parentConfig = tmpLocale._config;
                }
                config = mergeConfigs(parentConfig, config);
                if (tmpLocale == null) {
                    // updateLocale is called for creating a new locale
                    // Set abbr so it will have a name (getters return
                    // undefined otherwise).
                    config.abbr = name;
                }
                locale = new Locale(config);
                locale.parentLocale = locales[name];
                locales[name] = locale;
            }

            // backwards compat for now: also set the locale
            getSetGlobalLocale(name);
        } else {
            // pass null for config to unupdate, useful for tests
            if (locales[name] != null) {
                if (locales[name].parentLocale != null) {
                    locales[name] = locales[name].parentLocale;
                    if (name === getSetGlobalLocale()) {
                        getSetGlobalLocale(name);
                    }
                } else if (locales[name] != null) {
                    delete locales[name];
                }
            }
        }
        return locales[name];
    }

    // returns locale data
    function getLocale(key) {
        var locale;

        if (key && key._locale && key._locale._abbr) {
            key = key._locale._abbr;
        }

        if (!key) {
            return globalLocale;
        }

        if (!isArray(key)) {
            //short-circuit everything else
            locale = loadLocale(key);
            if (locale) {
                return locale;
            }
            key = [key];
        }

        return chooseLocale(key);
    }

    function listLocales() {
        return keys(locales);
    }

    function checkOverflow(m) {
        var overflow,
            a = m._a;

        if (a && getParsingFlags(m).overflow === -2) {
            overflow =
                a[MONTH] < 0 || a[MONTH] > 11
                    ? MONTH
                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])
                    ? DATE
                    : a[HOUR] < 0 ||
                      a[HOUR] > 24 ||
                      (a[HOUR] === 24 &&
                          (a[MINUTE] !== 0 ||
                              a[SECOND] !== 0 ||
                              a[MILLISECOND] !== 0))
                    ? HOUR
                    : a[MINUTE] < 0 || a[MINUTE] > 59
                    ? MINUTE
                    : a[SECOND] < 0 || a[SECOND] > 59
                    ? SECOND
                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999
                    ? MILLISECOND
                    : -1;

            if (
                getParsingFlags(m)._overflowDayOfYear &&
                (overflow < YEAR || overflow > DATE)
            ) {
                overflow = DATE;
            }
            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {
                overflow = WEEK;
            }
            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {
                overflow = WEEKDAY;
            }

            getParsingFlags(m).overflow = overflow;
        }

        return m;
    }

    // iso 8601 regex
    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)
    var extendedIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        basicIsoRegex = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/,
        tzRegex = /Z|[+-]\d\d(?::?\d\d)?/,
        isoDates = [
            ['YYYYYY-MM-DD', /[+-]\d{6}-\d\d-\d\d/],
            ['YYYY-MM-DD', /\d{4}-\d\d-\d\d/],
            ['GGGG-[W]WW-E', /\d{4}-W\d\d-\d/],
            ['GGGG-[W]WW', /\d{4}-W\d\d/, false],
            ['YYYY-DDD', /\d{4}-\d{3}/],
            ['YYYY-MM', /\d{4}-\d\d/, false],
            ['YYYYYYMMDD', /[+-]\d{10}/],
            ['YYYYMMDD', /\d{8}/],
            ['GGGG[W]WWE', /\d{4}W\d{3}/],
            ['GGGG[W]WW', /\d{4}W\d{2}/, false],
            ['YYYYDDD', /\d{7}/],
            ['YYYYMM', /\d{6}/, false],
            ['YYYY', /\d{4}/, false],
        ],
        // iso time formats and regexes
        isoTimes = [
            ['HH:mm:ss.SSSS', /\d\d:\d\d:\d\d\.\d+/],
            ['HH:mm:ss,SSSS', /\d\d:\d\d:\d\d,\d+/],
            ['HH:mm:ss', /\d\d:\d\d:\d\d/],
            ['HH:mm', /\d\d:\d\d/],
            ['HHmmss.SSSS', /\d\d\d\d\d\d\.\d+/],
            ['HHmmss,SSSS', /\d\d\d\d\d\d,\d+/],
            ['HHmmss', /\d\d\d\d\d\d/],
            ['HHmm', /\d\d\d\d/],
            ['HH', /\d\d/],
        ],
        aspNetJsonRegex = /^\/?Date\((-?\d+)/i,
        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3
        rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,
        obsOffsets = {
            UT: 0,
            GMT: 0,
            EDT: -4 * 60,
            EST: -5 * 60,
            CDT: -5 * 60,
            CST: -6 * 60,
            MDT: -6 * 60,
            MST: -7 * 60,
            PDT: -7 * 60,
            PST: -8 * 60,
        };

    // date from iso format
    function configFromISO(config) {
        var i,
            l,
            string = config._i,
            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),
            allowTime,
            dateFormat,
            timeFormat,
            tzFormat;

        if (match) {
            getParsingFlags(config).iso = true;

            for (i = 0, l = isoDates.length; i < l; i++) {
                if (isoDates[i][1].exec(match[1])) {
                    dateFormat = isoDates[i][0];
                    allowTime = isoDates[i][2] !== false;
                    break;
                }
            }
            if (dateFormat == null) {
                config._isValid = false;
                return;
            }
            if (match[3]) {
                for (i = 0, l = isoTimes.length; i < l; i++) {
                    if (isoTimes[i][1].exec(match[3])) {
                        // match[2] should be 'T' or space
                        timeFormat = (match[2] || ' ') + isoTimes[i][0];
                        break;
                    }
                }
                if (timeFormat == null) {
                    config._isValid = false;
                    return;
                }
            }
            if (!allowTime && timeFormat != null) {
                config._isValid = false;
                return;
            }
            if (match[4]) {
                if (tzRegex.exec(match[4])) {
                    tzFormat = 'Z';
                } else {
                    config._isValid = false;
                    return;
                }
            }
            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');
            configFromStringAndFormat(config);
        } else {
            config._isValid = false;
        }
    }

    function extractFromRFC2822Strings(
        yearStr,
        monthStr,
        dayStr,
        hourStr,
        minuteStr,
        secondStr
    ) {
        var result = [
            untruncateYear(yearStr),
            defaultLocaleMonthsShort.indexOf(monthStr),
            parseInt(dayStr, 10),
            parseInt(hourStr, 10),
            parseInt(minuteStr, 10),
        ];

        if (secondStr) {
            result.push(parseInt(secondStr, 10));
        }

        return result;
    }

    function untruncateYear(yearStr) {
        var year = parseInt(yearStr, 10);
        if (year <= 49) {
            return 2000 + year;
        } else if (year <= 999) {
            return 1900 + year;
        }
        return year;
    }

    function preprocessRFC2822(s) {
        // Remove comments and folding whitespace and replace multiple-spaces with a single space
        return s
            .replace(/\([^)]*\)|[\n\t]/g, ' ')
            .replace(/(\s\s+)/g, ' ')
            .replace(/^\s\s*/, '')
            .replace(/\s\s*$/, '');
    }

    function checkWeekday(weekdayStr, parsedInput, config) {
        if (weekdayStr) {
            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.
            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),
                weekdayActual = new Date(
                    parsedInput[0],
                    parsedInput[1],
                    parsedInput[2]
                ).getDay();
            if (weekdayProvided !== weekdayActual) {
                getParsingFlags(config).weekdayMismatch = true;
                config._isValid = false;
                return false;
            }
        }
        return true;
    }

    function calculateOffset(obsOffset, militaryOffset, numOffset) {
        if (obsOffset) {
            return obsOffsets[obsOffset];
        } else if (militaryOffset) {
            // the only allowed military tz is Z
            return 0;
        } else {
            var hm = parseInt(numOffset, 10),
                m = hm % 100,
                h = (hm - m) / 100;
            return h * 60 + m;
        }
    }

    // date and time from ref 2822 format
    function configFromRFC2822(config) {
        var match = rfc2822.exec(preprocessRFC2822(config._i)),
            parsedArray;
        if (match) {
            parsedArray = extractFromRFC2822Strings(
                match[4],
                match[3],
                match[2],
                match[5],
                match[6],
                match[7]
            );
            if (!checkWeekday(match[1], parsedArray, config)) {
                return;
            }

            config._a = parsedArray;
            config._tzm = calculateOffset(match[8], match[9], match[10]);

            config._d = createUTCDate.apply(null, config._a);
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);

            getParsingFlags(config).rfc2822 = true;
        } else {
            config._isValid = false;
        }
    }

    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict
    function configFromString(config) {
        var matched = aspNetJsonRegex.exec(config._i);
        if (matched !== null) {
            config._d = new Date(+matched[1]);
            return;
        }

        configFromISO(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        configFromRFC2822(config);
        if (config._isValid === false) {
            delete config._isValid;
        } else {
            return;
        }

        if (config._strict) {
            config._isValid = false;
        } else {
            // Final attempt, use Input Fallback
            hooks.createFromInputFallback(config);
        }
    }

    hooks.createFromInputFallback = deprecate(
        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +
            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +
            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',
        function (config) {
            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));
        }
    );

    // Pick the first defined of two or three arguments.
    function defaults(a, b, c) {
        if (a != null) {
            return a;
        }
        if (b != null) {
            return b;
        }
        return c;
    }

    function currentDateArray(config) {
        // hooks is actually the exported moment object
        var nowValue = new Date(hooks.now());
        if (config._useUTC) {
            return [
                nowValue.getUTCFullYear(),
                nowValue.getUTCMonth(),
                nowValue.getUTCDate(),
            ];
        }
        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];
    }

    // convert an array to a date.
    // the array should mirror the parameters below
    // note: all values past the year are optional and will default to the lowest possible value.
    // [year, month, day , hour, minute, second, millisecond]
    function configFromArray(config) {
        var i,
            date,
            input = [],
            currentDate,
            expectedWeekday,
            yearToUse;

        if (config._d) {
            return;
        }

        currentDate = currentDateArray(config);

        //compute day of the year from weeks and weekdays
        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {
            dayOfYearFromWeekInfo(config);
        }

        //if the day of the year is set, figure out what it is
        if (config._dayOfYear != null) {
            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);

            if (
                config._dayOfYear > daysInYear(yearToUse) ||
                config._dayOfYear === 0
            ) {
                getParsingFlags(config)._overflowDayOfYear = true;
            }

            date = createUTCDate(yearToUse, 0, config._dayOfYear);
            config._a[MONTH] = date.getUTCMonth();
            config._a[DATE] = date.getUTCDate();
        }

        // Default to current date.
        // * if no year, month, day of month are given, default to today
        // * if day of month is given, default month and year
        // * if month is given, default only year
        // * if year is given, don't default anything
        for (i = 0; i < 3 && config._a[i] == null; ++i) {
            config._a[i] = input[i] = currentDate[i];
        }

        // Zero out whatever was not defaulted, including time
        for (; i < 7; i++) {
            config._a[i] = input[i] =
                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];
        }

        // Check for 24:00:00.000
        if (
            config._a[HOUR] === 24 &&
            config._a[MINUTE] === 0 &&
            config._a[SECOND] === 0 &&
            config._a[MILLISECOND] === 0
        ) {
            config._nextDay = true;
            config._a[HOUR] = 0;
        }

        config._d = (config._useUTC ? createUTCDate : createDate).apply(
            null,
            input
        );
        expectedWeekday = config._useUTC
            ? config._d.getUTCDay()
            : config._d.getDay();

        // Apply timezone offset from input. The actual utcOffset can be changed
        // with parseZone.
        if (config._tzm != null) {
            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);
        }

        if (config._nextDay) {
            config._a[HOUR] = 24;
        }

        // check for mismatching day of week
        if (
            config._w &&
            typeof config._w.d !== 'undefined' &&
            config._w.d !== expectedWeekday
        ) {
            getParsingFlags(config).weekdayMismatch = true;
        }
    }

    function dayOfYearFromWeekInfo(config) {
        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;

        w = config._w;
        if (w.GG != null || w.W != null || w.E != null) {
            dow = 1;
            doy = 4;

            // TODO: We need to take the current isoWeekYear, but that depends on
            // how we interpret now (local, utc, fixed offset). So create
            // a now version of current config (take local/utc/offset flags, and
            // create now).
            weekYear = defaults(
                w.GG,
                config._a[YEAR],
                weekOfYear(createLocal(), 1, 4).year
            );
            week = defaults(w.W, 1);
            weekday = defaults(w.E, 1);
            if (weekday < 1 || weekday > 7) {
                weekdayOverflow = true;
            }
        } else {
            dow = config._locale._week.dow;
            doy = config._locale._week.doy;

            curWeek = weekOfYear(createLocal(), dow, doy);

            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);

            // Default to current week.
            week = defaults(w.w, curWeek.week);

            if (w.d != null) {
                // weekday -- low day numbers are considered next week
                weekday = w.d;
                if (weekday < 0 || weekday > 6) {
                    weekdayOverflow = true;
                }
            } else if (w.e != null) {
                // local weekday -- counting starts from beginning of week
                weekday = w.e + dow;
                if (w.e < 0 || w.e > 6) {
                    weekdayOverflow = true;
                }
            } else {
                // default to beginning of week
                weekday = dow;
            }
        }
        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {
            getParsingFlags(config)._overflowWeeks = true;
        } else if (weekdayOverflow != null) {
            getParsingFlags(config)._overflowWeekday = true;
        } else {
            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);
            config._a[YEAR] = temp.year;
            config._dayOfYear = temp.dayOfYear;
        }
    }

    // constant that refers to the ISO standard
    hooks.ISO_8601 = function () {};

    // constant that refers to the RFC 2822 form
    hooks.RFC_2822 = function () {};

    // date from string and format string
    function configFromStringAndFormat(config) {
        // TODO: Move this to another part of the creation flow to prevent circular deps
        if (config._f === hooks.ISO_8601) {
            configFromISO(config);
            return;
        }
        if (config._f === hooks.RFC_2822) {
            configFromRFC2822(config);
            return;
        }
        config._a = [];
        getParsingFlags(config).empty = true;

        // This array is used to make a Date, either with `new Date` or `Date.UTC`
        var string = '' + config._i,
            i,
            parsedInput,
            tokens,
            token,
            skipped,
            stringLength = string.length,
            totalParsedInputLength = 0,
            era;

        tokens =
            expandFormat(config._f, config._locale).match(formattingTokens) || [];

        for (i = 0; i < tokens.length; i++) {
            token = tokens[i];
            parsedInput = (string.match(getParseRegexForToken(token, config)) ||
                [])[0];
            if (parsedInput) {
                skipped = string.substr(0, string.indexOf(parsedInput));
                if (skipped.length > 0) {
                    getParsingFlags(config).unusedInput.push(skipped);
                }
                string = string.slice(
                    string.indexOf(parsedInput) + parsedInput.length
                );
                totalParsedInputLength += parsedInput.length;
            }
            // don't parse if it's not a known token
            if (formatTokenFunctions[token]) {
                if (parsedInput) {
                    getParsingFlags(config).empty = false;
                } else {
                    getParsingFlags(config).unusedTokens.push(token);
                }
                addTimeToArrayFromToken(token, parsedInput, config);
            } else if (config._strict && !parsedInput) {
                getParsingFlags(config).unusedTokens.push(token);
            }
        }

        // add remaining unparsed input length to the string
        getParsingFlags(config).charsLeftOver =
            stringLength - totalParsedInputLength;
        if (string.length > 0) {
            getParsingFlags(config).unusedInput.push(string);
        }

        // clear _12h flag if hour is <= 12
        if (
            config._a[HOUR] <= 12 &&
            getParsingFlags(config).bigHour === true &&
            config._a[HOUR] > 0
        ) {
            getParsingFlags(config).bigHour = undefined;
        }

        getParsingFlags(config).parsedDateParts = config._a.slice(0);
        getParsingFlags(config).meridiem = config._meridiem;
        // handle meridiem
        config._a[HOUR] = meridiemFixWrap(
            config._locale,
            config._a[HOUR],
            config._meridiem
        );

        // handle era
        era = getParsingFlags(config).era;
        if (era !== null) {
            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);
        }

        configFromArray(config);
        checkOverflow(config);
    }

    function meridiemFixWrap(locale, hour, meridiem) {
        var isPm;

        if (meridiem == null) {
            // nothing to do
            return hour;
        }
        if (locale.meridiemHour != null) {
            return locale.meridiemHour(hour, meridiem);
        } else if (locale.isPM != null) {
            // Fallback
            isPm = locale.isPM(meridiem);
            if (isPm && hour < 12) {
                hour += 12;
            }
            if (!isPm && hour === 12) {
                hour = 0;
            }
            return hour;
        } else {
            // this is not supposed to happen
            return hour;
        }
    }

    // date from string and array of format strings
    function configFromStringAndArray(config) {
        var tempConfig,
            bestMoment,
            scoreToBeat,
            i,
            currentScore,
            validFormatFound,
            bestFormatIsValid = false;

        if (config._f.length === 0) {
            getParsingFlags(config).invalidFormat = true;
            config._d = new Date(NaN);
            return;
        }

        for (i = 0; i < config._f.length; i++) {
            currentScore = 0;
            validFormatFound = false;
            tempConfig = copyConfig({}, config);
            if (config._useUTC != null) {
                tempConfig._useUTC = config._useUTC;
            }
            tempConfig._f = config._f[i];
            configFromStringAndFormat(tempConfig);

            if (isValid(tempConfig)) {
                validFormatFound = true;
            }

            // if there is any input that was not parsed add a penalty for that format
            currentScore += getParsingFlags(tempConfig).charsLeftOver;

            //or tokens
            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;

            getParsingFlags(tempConfig).score = currentScore;

            if (!bestFormatIsValid) {
                if (
                    scoreToBeat == null ||
                    currentScore < scoreToBeat ||
                    validFormatFound
                ) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                    if (validFormatFound) {
                        bestFormatIsValid = true;
                    }
                }
            } else {
                if (currentScore < scoreToBeat) {
                    scoreToBeat = currentScore;
                    bestMoment = tempConfig;
                }
            }
        }

        extend(config, bestMoment || tempConfig);
    }

    function configFromObject(config) {
        if (config._d) {
            return;
        }

        var i = normalizeObjectUnits(config._i),
            dayOrDate = i.day === undefined ? i.date : i.day;
        config._a = map(
            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],
            function (obj) {
                return obj && parseInt(obj, 10);
            }
        );

        configFromArray(config);
    }

    function createFromConfig(config) {
        var res = new Moment(checkOverflow(prepareConfig(config)));
        if (res._nextDay) {
            // Adding is smart enough around DST
            res.add(1, 'd');
            res._nextDay = undefined;
        }

        return res;
    }

    function prepareConfig(config) {
        var input = config._i,
            format = config._f;

        config._locale = config._locale || getLocale(config._l);

        if (input === null || (format === undefined && input === '')) {
            return createInvalid({ nullInput: true });
        }

        if (typeof input === 'string') {
            config._i = input = config._locale.preparse(input);
        }

        if (isMoment(input)) {
            return new Moment(checkOverflow(input));
        } else if (isDate(input)) {
            config._d = input;
        } else if (isArray(format)) {
            configFromStringAndArray(config);
        } else if (format) {
            configFromStringAndFormat(config);
        } else {
            configFromInput(config);
        }

        if (!isValid(config)) {
            config._d = null;
        }

        return config;
    }

    function configFromInput(config) {
        var input = config._i;
        if (isUndefined(input)) {
            config._d = new Date(hooks.now());
        } else if (isDate(input)) {
            config._d = new Date(input.valueOf());
        } else if (typeof input === 'string') {
            configFromString(config);
        } else if (isArray(input)) {
            config._a = map(input.slice(0), function (obj) {
                return parseInt(obj, 10);
            });
            configFromArray(config);
        } else if (isObject(input)) {
            configFromObject(config);
        } else if (isNumber(input)) {
            // from milliseconds
            config._d = new Date(input);
        } else {
            hooks.createFromInputFallback(config);
        }
    }

    function createLocalOrUTC(input, format, locale, strict, isUTC) {
        var c = {};

        if (format === true || format === false) {
            strict = format;
            format = undefined;
        }

        if (locale === true || locale === false) {
            strict = locale;
            locale = undefined;
        }

        if (
            (isObject(input) && isObjectEmpty(input)) ||
            (isArray(input) && input.length === 0)
        ) {
            input = undefined;
        }
        // object construction must be done this way.
        // https://github.com/moment/moment/issues/1423
        c._isAMomentObject = true;
        c._useUTC = c._isUTC = isUTC;
        c._l = locale;
        c._i = input;
        c._f = format;
        c._strict = strict;

        return createFromConfig(c);
    }

    function createLocal(input, format, locale, strict) {
        return createLocalOrUTC(input, format, locale, strict, false);
    }

    var prototypeMin = deprecate(
            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other < this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        ),
        prototypeMax = deprecate(
            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',
            function () {
                var other = createLocal.apply(null, arguments);
                if (this.isValid() && other.isValid()) {
                    return other > this ? this : other;
                } else {
                    return createInvalid();
                }
            }
        );

    // Pick a moment m from moments so that m[fn](other) is true for all
    // other. This relies on the function fn to be transitive.
    //
    // moments should either be an array of moment objects or an array, whose
    // first element is an array of moment objects.
    function pickBy(fn, moments) {
        var res, i;
        if (moments.length === 1 && isArray(moments[0])) {
            moments = moments[0];
        }
        if (!moments.length) {
            return createLocal();
        }
        res = moments[0];
        for (i = 1; i < moments.length; ++i) {
            if (!moments[i].isValid() || moments[i][fn](res)) {
                res = moments[i];
            }
        }
        return res;
    }

    // TODO: Use [].sort instead?
    function min() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isBefore', args);
    }

    function max() {
        var args = [].slice.call(arguments, 0);

        return pickBy('isAfter', args);
    }

    var now = function () {
        return Date.now ? Date.now() : +new Date();
    };

    var ordering = [
        'year',
        'quarter',
        'month',
        'week',
        'day',
        'hour',
        'minute',
        'second',
        'millisecond',
    ];

    function isDurationValid(m) {
        var key,
            unitHasDecimal = false,
            i;
        for (key in m) {
            if (
                hasOwnProp(m, key) &&
                !(
                    indexOf.call(ordering, key) !== -1 &&
                    (m[key] == null || !isNaN(m[key]))
                )
            ) {
                return false;
            }
        }

        for (i = 0; i < ordering.length; ++i) {
            if (m[ordering[i]]) {
                if (unitHasDecimal) {
                    return false; // only allow non-integers for smallest unit
                }
                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {
                    unitHasDecimal = true;
                }
            }
        }

        return true;
    }

    function isValid$1() {
        return this._isValid;
    }

    function createInvalid$1() {
        return createDuration(NaN);
    }

    function Duration(duration) {
        var normalizedInput = normalizeObjectUnits(duration),
            years = normalizedInput.year || 0,
            quarters = normalizedInput.quarter || 0,
            months = normalizedInput.month || 0,
            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,
            days = normalizedInput.day || 0,
            hours = normalizedInput.hour || 0,
            minutes = normalizedInput.minute || 0,
            seconds = normalizedInput.second || 0,
            milliseconds = normalizedInput.millisecond || 0;

        this._isValid = isDurationValid(normalizedInput);

        // representation for dateAddRemove
        this._milliseconds =
            +milliseconds +
            seconds * 1e3 + // 1000
            minutes * 6e4 + // 1000 * 60
            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978
        // Because of dateAddRemove treats 24 hours as different from a
        // day when working around DST, we need to store them separately
        this._days = +days + weeks * 7;
        // It is impossible to translate months into days without knowing
        // which months you are are talking about, so we have to store
        // it separately.
        this._months = +months + quarters * 3 + years * 12;

        this._data = {};

        this._locale = getLocale();

        this._bubble();
    }

    function isDuration(obj) {
        return obj instanceof Duration;
    }

    function absRound(number) {
        if (number < 0) {
            return Math.round(-1 * number) * -1;
        } else {
            return Math.round(number);
        }
    }

    // compare two arrays, return the number of differences
    function compareArrays(array1, array2, dontConvert) {
        var len = Math.min(array1.length, array2.length),
            lengthDiff = Math.abs(array1.length - array2.length),
            diffs = 0,
            i;
        for (i = 0; i < len; i++) {
            if (
                (dontConvert && array1[i] !== array2[i]) ||
                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))
            ) {
                diffs++;
            }
        }
        return diffs + lengthDiff;
    }

    // FORMATTING

    function offset(token, separator) {
        addFormatToken(token, 0, 0, function () {
            var offset = this.utcOffset(),
                sign = '+';
            if (offset < 0) {
                offset = -offset;
                sign = '-';
            }
            return (
                sign +
                zeroFill(~~(offset / 60), 2) +
                separator +
                zeroFill(~~offset % 60, 2)
            );
        });
    }

    offset('Z', ':');
    offset('ZZ', '');

    // PARSING

    addRegexToken('Z', matchShortOffset);
    addRegexToken('ZZ', matchShortOffset);
    addParseToken(['Z', 'ZZ'], function (input, array, config) {
        config._useUTC = true;
        config._tzm = offsetFromString(matchShortOffset, input);
    });

    // HELPERS

    // timezone chunker
    // '+10:00' > ['10',  '00']
    // '-1530'  > ['-15', '30']
    var chunkOffset = /([\+\-]|\d\d)/gi;

    function offsetFromString(matcher, string) {
        var matches = (string || '').match(matcher),
            chunk,
            parts,
            minutes;

        if (matches === null) {
            return null;
        }

        chunk = matches[matches.length - 1] || [];
        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];
        minutes = +(parts[1] * 60) + toInt(parts[2]);

        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;
    }

    // Return a moment from input, that is local/utc/zone equivalent to model.
    function cloneWithOffset(input, model) {
        var res, diff;
        if (model._isUTC) {
            res = model.clone();
            diff =
                (isMoment(input) || isDate(input)
                    ? input.valueOf()
                    : createLocal(input).valueOf()) - res.valueOf();
            // Use low-level api, because this fn is low-level api.
            res._d.setTime(res._d.valueOf() + diff);
            hooks.updateOffset(res, false);
            return res;
        } else {
            return createLocal(input).local();
        }
    }

    function getDateOffset(m) {
        // On Firefox.24 Date#getTimezoneOffset returns a floating point.
        // https://github.com/moment/moment/pull/1871
        return -Math.round(m._d.getTimezoneOffset());
    }

    // HOOKS

    // This function will be called whenever a moment is mutated.
    // It is intended to keep the offset in sync with the timezone.
    hooks.updateOffset = function () {};

    // MOMENTS

    // keepLocalTime = true means only change the timezone, without
    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->
    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset
    // +0200, so we adjust the time as needed, to be valid.
    //
    // Keeping the time actually adds/subtracts (one hour)
    // from the actual represented time. That is why we call updateOffset
    // a second time. In case it wants us to change the offset again
    // _changeInProgress == true case, then we have to adjust, because
    // there is no such time in the given timezone.
    function getSetOffset(input, keepLocalTime, keepMinutes) {
        var offset = this._offset || 0,
            localAdjust;
        if (!this.isValid()) {
            return input != null ? this : NaN;
        }
        if (input != null) {
            if (typeof input === 'string') {
                input = offsetFromString(matchShortOffset, input);
                if (input === null) {
                    return this;
                }
            } else if (Math.abs(input) < 16 && !keepMinutes) {
                input = input * 60;
            }
            if (!this._isUTC && keepLocalTime) {
                localAdjust = getDateOffset(this);
            }
            this._offset = input;
            this._isUTC = true;
            if (localAdjust != null) {
                this.add(localAdjust, 'm');
            }
            if (offset !== input) {
                if (!keepLocalTime || this._changeInProgress) {
                    addSubtract(
                        this,
                        createDuration(input - offset, 'm'),
                        1,
                        false
                    );
                } else if (!this._changeInProgress) {
                    this._changeInProgress = true;
                    hooks.updateOffset(this, true);
                    this._changeInProgress = null;
                }
            }
            return this;
        } else {
            return this._isUTC ? offset : getDateOffset(this);
        }
    }

    function getSetZone(input, keepLocalTime) {
        if (input != null) {
            if (typeof input !== 'string') {
                input = -input;
            }

            this.utcOffset(input, keepLocalTime);

            return this;
        } else {
            return -this.utcOffset();
        }
    }

    function setOffsetToUTC(keepLocalTime) {
        return this.utcOffset(0, keepLocalTime);
    }

    function setOffsetToLocal(keepLocalTime) {
        if (this._isUTC) {
            this.utcOffset(0, keepLocalTime);
            this._isUTC = false;

            if (keepLocalTime) {
                this.subtract(getDateOffset(this), 'm');
            }
        }
        return this;
    }

    function setOffsetToParsedOffset() {
        if (this._tzm != null) {
            this.utcOffset(this._tzm, false, true);
        } else if (typeof this._i === 'string') {
            var tZone = offsetFromString(matchOffset, this._i);
            if (tZone != null) {
                this.utcOffset(tZone);
            } else {
                this.utcOffset(0, true);
            }
        }
        return this;
    }

    function hasAlignedHourOffset(input) {
        if (!this.isValid()) {
            return false;
        }
        input = input ? createLocal(input).utcOffset() : 0;

        return (this.utcOffset() - input) % 60 === 0;
    }

    function isDaylightSavingTime() {
        return (
            this.utcOffset() > this.clone().month(0).utcOffset() ||
            this.utcOffset() > this.clone().month(5).utcOffset()
        );
    }

    function isDaylightSavingTimeShifted() {
        if (!isUndefined(this._isDSTShifted)) {
            return this._isDSTShifted;
        }

        var c = {},
            other;

        copyConfig(c, this);
        c = prepareConfig(c);

        if (c._a) {
            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);
            this._isDSTShifted =
                this.isValid() && compareArrays(c._a, other.toArray()) > 0;
        } else {
            this._isDSTShifted = false;
        }

        return this._isDSTShifted;
    }

    function isLocal() {
        return this.isValid() ? !this._isUTC : false;
    }

    function isUtcOffset() {
        return this.isValid() ? this._isUTC : false;
    }

    function isUtc() {
        return this.isValid() ? this._isUTC && this._offset === 0 : false;
    }

    // ASP.NET json date format regex
    var aspNetRegex = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/,
        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html
        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere
        // and further modified to allow for strings containing both week and day
        isoRegex = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;

    function createDuration(input, key) {
        var duration = input,
            // matching against regexp is expensive, do it on demand
            match = null,
            sign,
            ret,
            diffRes;

        if (isDuration(input)) {
            duration = {
                ms: input._milliseconds,
                d: input._days,
                M: input._months,
            };
        } else if (isNumber(input) || !isNaN(+input)) {
            duration = {};
            if (key) {
                duration[key] = +input;
            } else {
                duration.milliseconds = +input;
            }
        } else if ((match = aspNetRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: 0,
                d: toInt(match[DATE]) * sign,
                h: toInt(match[HOUR]) * sign,
                m: toInt(match[MINUTE]) * sign,
                s: toInt(match[SECOND]) * sign,
                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match
            };
        } else if ((match = isoRegex.exec(input))) {
            sign = match[1] === '-' ? -1 : 1;
            duration = {
                y: parseIso(match[2], sign),
                M: parseIso(match[3], sign),
                w: parseIso(match[4], sign),
                d: parseIso(match[5], sign),
                h: parseIso(match[6], sign),
                m: parseIso(match[7], sign),
                s: parseIso(match[8], sign),
            };
        } else if (duration == null) {
            // checks for null or undefined
            duration = {};
        } else if (
            typeof duration === 'object' &&
            ('from' in duration || 'to' in duration)
        ) {
            diffRes = momentsDifference(
                createLocal(duration.from),
                createLocal(duration.to)
            );

            duration = {};
            duration.ms = diffRes.milliseconds;
            duration.M = diffRes.months;
        }

        ret = new Duration(duration);

        if (isDuration(input) && hasOwnProp(input, '_locale')) {
            ret._locale = input._locale;
        }

        if (isDuration(input) && hasOwnProp(input, '_isValid')) {
            ret._isValid = input._isValid;
        }

        return ret;
    }

    createDuration.fn = Duration.prototype;
    createDuration.invalid = createInvalid$1;

    function parseIso(inp, sign) {
        // We'd normally use ~~inp for this, but unfortunately it also
        // converts floats to ints.
        // inp may be undefined, so careful calling replace on it.
        var res = inp && parseFloat(inp.replace(',', '.'));
        // apply sign while we're at it
        return (isNaN(res) ? 0 : res) * sign;
    }

    function positiveMomentsDifference(base, other) {
        var res = {};

        res.months =
            other.month() - base.month() + (other.year() - base.year()) * 12;
        if (base.clone().add(res.months, 'M').isAfter(other)) {
            --res.months;
        }

        res.milliseconds = +other - +base.clone().add(res.months, 'M');

        return res;
    }

    function momentsDifference(base, other) {
        var res;
        if (!(base.isValid() && other.isValid())) {
            return { milliseconds: 0, months: 0 };
        }

        other = cloneWithOffset(other, base);
        if (base.isBefore(other)) {
            res = positiveMomentsDifference(base, other);
        } else {
            res = positiveMomentsDifference(other, base);
            res.milliseconds = -res.milliseconds;
            res.months = -res.months;
        }

        return res;
    }

    // TODO: remove 'name' arg after deprecation is removed
    function createAdder(direction, name) {
        return function (val, period) {
            var dur, tmp;
            //invert the arguments, but complain about it
            if (period !== null && !isNaN(+period)) {
                deprecateSimple(
                    name,
                    'moment().' +
                        name +
                        '(period, number) is deprecated. Please use moment().' +
                        name +
                        '(number, period). ' +
                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'
                );
                tmp = val;
                val = period;
                period = tmp;
            }

            dur = createDuration(val, period);
            addSubtract(this, dur, direction);
            return this;
        };
    }

    function addSubtract(mom, duration, isAdding, updateOffset) {
        var milliseconds = duration._milliseconds,
            days = absRound(duration._days),
            months = absRound(duration._months);

        if (!mom.isValid()) {
            // No op
            return;
        }

        updateOffset = updateOffset == null ? true : updateOffset;

        if (months) {
            setMonth(mom, get(mom, 'Month') + months * isAdding);
        }
        if (days) {
            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);
        }
        if (milliseconds) {
            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
        }
        if (updateOffset) {
            hooks.updateOffset(mom, days || months);
        }
    }

    var add = createAdder(1, 'add'),
        subtract = createAdder(-1, 'subtract');

    function isString(input) {
        return typeof input === 'string' || input instanceof String;
    }

    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined
    function isMomentInput(input) {
        return (
            isMoment(input) ||
            isDate(input) ||
            isString(input) ||
            isNumber(input) ||
            isNumberOrStringArray(input) ||
            isMomentInputObject(input) ||
            input === null ||
            input === undefined
        );
    }

    function isMomentInputObject(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'years',
                'year',
                'y',
                'months',
                'month',
                'M',
                'days',
                'day',
                'd',
                'dates',
                'date',
                'D',
                'hours',
                'hour',
                'h',
                'minutes',
                'minute',
                'm',
                'seconds',
                'second',
                's',
                'milliseconds',
                'millisecond',
                'ms',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function isNumberOrStringArray(input) {
        var arrayTest = isArray(input),
            dataTypeTest = false;
        if (arrayTest) {
            dataTypeTest =
                input.filter(function (item) {
                    return !isNumber(item) && isString(input);
                }).length === 0;
        }
        return arrayTest && dataTypeTest;
    }

    function isCalendarSpec(input) {
        var objectTest = isObject(input) && !isObjectEmpty(input),
            propertyTest = false,
            properties = [
                'sameDay',
                'nextDay',
                'lastDay',
                'nextWeek',
                'lastWeek',
                'sameElse',
            ],
            i,
            property;

        for (i = 0; i < properties.length; i += 1) {
            property = properties[i];
            propertyTest = propertyTest || hasOwnProp(input, property);
        }

        return objectTest && propertyTest;
    }

    function getCalendarFormat(myMoment, now) {
        var diff = myMoment.diff(now, 'days', true);
        return diff < -6
            ? 'sameElse'
            : diff < -1
            ? 'lastWeek'
            : diff < 0
            ? 'lastDay'
            : diff < 1
            ? 'sameDay'
            : diff < 2
            ? 'nextDay'
            : diff < 7
            ? 'nextWeek'
            : 'sameElse';
    }

    function calendar$1(time, formats) {
        // Support for single parameter, formats only overload to the calendar function
        if (arguments.length === 1) {
            if (!arguments[0]) {
                time = undefined;
                formats = undefined;
            } else if (isMomentInput(arguments[0])) {
                time = arguments[0];
                formats = undefined;
            } else if (isCalendarSpec(arguments[0])) {
                formats = arguments[0];
                time = undefined;
            }
        }
        // We want to compare the start of today, vs this.
        // Getting start-of-today depends on whether we're local/utc/offset or not.
        var now = time || createLocal(),
            sod = cloneWithOffset(now, this).startOf('day'),
            format = hooks.calendarFormat(this, sod) || 'sameElse',
            output =
                formats &&
                (isFunction(formats[format])
                    ? formats[format].call(this, now)
                    : formats[format]);

        return this.format(
            output || this.localeData().calendar(format, this, createLocal(now))
        );
    }

    function clone() {
        return new Moment(this);
    }

    function isAfter(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() > localInput.valueOf();
        } else {
            return localInput.valueOf() < this.clone().startOf(units).valueOf();
        }
    }

    function isBefore(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input);
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() < localInput.valueOf();
        } else {
            return this.clone().endOf(units).valueOf() < localInput.valueOf();
        }
    }

    function isBetween(from, to, units, inclusivity) {
        var localFrom = isMoment(from) ? from : createLocal(from),
            localTo = isMoment(to) ? to : createLocal(to);
        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {
            return false;
        }
        inclusivity = inclusivity || '()';
        return (
            (inclusivity[0] === '('
                ? this.isAfter(localFrom, units)
                : !this.isBefore(localFrom, units)) &&
            (inclusivity[1] === ')'
                ? this.isBefore(localTo, units)
                : !this.isAfter(localTo, units))
        );
    }

    function isSame(input, units) {
        var localInput = isMoment(input) ? input : createLocal(input),
            inputMs;
        if (!(this.isValid() && localInput.isValid())) {
            return false;
        }
        units = normalizeUnits(units) || 'millisecond';
        if (units === 'millisecond') {
            return this.valueOf() === localInput.valueOf();
        } else {
            inputMs = localInput.valueOf();
            return (
                this.clone().startOf(units).valueOf() <= inputMs &&
                inputMs <= this.clone().endOf(units).valueOf()
            );
        }
    }

    function isSameOrAfter(input, units) {
        return this.isSame(input, units) || this.isAfter(input, units);
    }

    function isSameOrBefore(input, units) {
        return this.isSame(input, units) || this.isBefore(input, units);
    }

    function diff(input, units, asFloat) {
        var that, zoneDelta, output;

        if (!this.isValid()) {
            return NaN;
        }

        that = cloneWithOffset(input, this);

        if (!that.isValid()) {
            return NaN;
        }

        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;

        units = normalizeUnits(units);

        switch (units) {
            case 'year':
                output = monthDiff(this, that) / 12;
                break;
            case 'month':
                output = monthDiff(this, that);
                break;
            case 'quarter':
                output = monthDiff(this, that) / 3;
                break;
            case 'second':
                output = (this - that) / 1e3;
                break; // 1000
            case 'minute':
                output = (this - that) / 6e4;
                break; // 1000 * 60
            case 'hour':
                output = (this - that) / 36e5;
                break; // 1000 * 60 * 60
            case 'day':
                output = (this - that - zoneDelta) / 864e5;
                break; // 1000 * 60 * 60 * 24, negate dst
            case 'week':
                output = (this - that - zoneDelta) / 6048e5;
                break; // 1000 * 60 * 60 * 24 * 7, negate dst
            default:
                output = this - that;
        }

        return asFloat ? output : absFloor(output);
    }

    function monthDiff(a, b) {
        if (a.date() < b.date()) {
            // end-of-month calculations work correct when the start month has more
            // days than the end month.
            return -monthDiff(b, a);
        }
        // difference in months
        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),
            // b is in (anchor - 1 month, anchor + 1 month)
            anchor = a.clone().add(wholeMonthDiff, 'months'),
            anchor2,
            adjust;

        if (b - anchor < 0) {
            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor - anchor2);
        } else {
            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');
            // linear across the month
            adjust = (b - anchor) / (anchor2 - anchor);
        }

        //check for negative zero, return zero if negative zero
        return -(wholeMonthDiff + adjust) || 0;
    }

    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';
    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';

    function toString() {
        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');
    }

    function toISOString(keepOffset) {
        if (!this.isValid()) {
            return null;
        }
        var utc = keepOffset !== true,
            m = utc ? this.clone().utc() : this;
        if (m.year() < 0 || m.year() > 9999) {
            return formatMoment(
                m,
                utc
                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'
                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'
            );
        }
        if (isFunction(Date.prototype.toISOString)) {
            // native implementation is ~50x faster, use it when we can
            if (utc) {
                return this.toDate().toISOString();
            } else {
                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)
                    .toISOString()
                    .replace('Z', formatMoment(m, 'Z'));
            }
        }
        return formatMoment(
            m,
            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'
        );
    }

    /**
     * Return a human readable representation of a moment that can
     * also be evaluated to get a new moment which is the same
     *
     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects
     */
    function inspect() {
        if (!this.isValid()) {
            return 'moment.invalid(/* ' + this._i + ' */)';
        }
        var func = 'moment',
            zone = '',
            prefix,
            year,
            datetime,
            suffix;
        if (!this.isLocal()) {
            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';
            zone = 'Z';
        }
        prefix = '[' + func + '("]';
        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';
        datetime = '-MM-DD[T]HH:mm:ss.SSS';
        suffix = zone + '[")]';

        return this.format(prefix + year + datetime + suffix);
    }

    function format(inputString) {
        if (!inputString) {
            inputString = this.isUtc()
                ? hooks.defaultFormatUtc
                : hooks.defaultFormat;
        }
        var output = formatMoment(this, inputString);
        return this.localeData().postformat(output);
    }

    function from(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ to: this, from: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function fromNow(withoutSuffix) {
        return this.from(createLocal(), withoutSuffix);
    }

    function to(time, withoutSuffix) {
        if (
            this.isValid() &&
            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())
        ) {
            return createDuration({ from: this, to: time })
                .locale(this.locale())
                .humanize(!withoutSuffix);
        } else {
            return this.localeData().invalidDate();
        }
    }

    function toNow(withoutSuffix) {
        return this.to(createLocal(), withoutSuffix);
    }

    // If passed a locale key, it will set the locale for this
    // instance.  Otherwise, it will return the locale configuration
    // variables for this instance.
    function locale(key) {
        var newLocaleData;

        if (key === undefined) {
            return this._locale._abbr;
        } else {
            newLocaleData = getLocale(key);
            if (newLocaleData != null) {
                this._locale = newLocaleData;
            }
            return this;
        }
    }

    var lang = deprecate(
        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',
        function (key) {
            if (key === undefined) {
                return this.localeData();
            } else {
                return this.locale(key);
            }
        }
    );

    function localeData() {
        return this._locale;
    }

    var MS_PER_SECOND = 1000,
        MS_PER_MINUTE = 60 * MS_PER_SECOND,
        MS_PER_HOUR = 60 * MS_PER_MINUTE,
        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;

    // actual modulo - handles negative numbers (for dates before 1970):
    function mod$1(dividend, divisor) {
        return ((dividend % divisor) + divisor) % divisor;
    }

    function localStartOfDate(y, m, d) {
        // the date constructor remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return new Date(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return new Date(y, m, d).valueOf();
        }
    }

    function utcStartOfDate(y, m, d) {
        // Date.UTC remaps years 0-99 to 1900-1999
        if (y < 100 && y >= 0) {
            // preserve leap years using a full 400 year cycle, then reset
            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;
        } else {
            return Date.UTC(y, m, d);
        }
    }

    function startOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year(), 0, 1);
                break;
            case 'quarter':
                time = startOfDate(
                    this.year(),
                    this.month() - (this.month() % 3),
                    1
                );
                break;
            case 'month':
                time = startOfDate(this.year(), this.month(), 1);
                break;
            case 'week':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - this.weekday()
                );
                break;
            case 'isoWeek':
                time = startOfDate(
                    this.year(),
                    this.month(),
                    this.date() - (this.isoWeekday() - 1)
                );
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date());
                break;
            case 'hour':
                time = this._d.valueOf();
                time -= mod$1(
                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                    MS_PER_HOUR
                );
                break;
            case 'minute':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_MINUTE);
                break;
            case 'second':
                time = this._d.valueOf();
                time -= mod$1(time, MS_PER_SECOND);
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function endOf(units) {
        var time, startOfDate;
        units = normalizeUnits(units);
        if (units === undefined || units === 'millisecond' || !this.isValid()) {
            return this;
        }

        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;

        switch (units) {
            case 'year':
                time = startOfDate(this.year() + 1, 0, 1) - 1;
                break;
            case 'quarter':
                time =
                    startOfDate(
                        this.year(),
                        this.month() - (this.month() % 3) + 3,
                        1
                    ) - 1;
                break;
            case 'month':
                time = startOfDate(this.year(), this.month() + 1, 1) - 1;
                break;
            case 'week':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - this.weekday() + 7
                    ) - 1;
                break;
            case 'isoWeek':
                time =
                    startOfDate(
                        this.year(),
                        this.month(),
                        this.date() - (this.isoWeekday() - 1) + 7
                    ) - 1;
                break;
            case 'day':
            case 'date':
                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;
                break;
            case 'hour':
                time = this._d.valueOf();
                time +=
                    MS_PER_HOUR -
                    mod$1(
                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),
                        MS_PER_HOUR
                    ) -
                    1;
                break;
            case 'minute':
                time = this._d.valueOf();
                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;
                break;
            case 'second':
                time = this._d.valueOf();
                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;
                break;
        }

        this._d.setTime(time);
        hooks.updateOffset(this, true);
        return this;
    }

    function valueOf() {
        return this._d.valueOf() - (this._offset || 0) * 60000;
    }

    function unix() {
        return Math.floor(this.valueOf() / 1000);
    }

    function toDate() {
        return new Date(this.valueOf());
    }

    function toArray() {
        var m = this;
        return [
            m.year(),
            m.month(),
            m.date(),
            m.hour(),
            m.minute(),
            m.second(),
            m.millisecond(),
        ];
    }

    function toObject() {
        var m = this;
        return {
            years: m.year(),
            months: m.month(),
            date: m.date(),
            hours: m.hours(),
            minutes: m.minutes(),
            seconds: m.seconds(),
            milliseconds: m.milliseconds(),
        };
    }

    function toJSON() {
        // new Date(NaN).toJSON() === null
        return this.isValid() ? this.toISOString() : null;
    }

    function isValid$2() {
        return isValid(this);
    }

    function parsingFlags() {
        return extend({}, getParsingFlags(this));
    }

    function invalidAt() {
        return getParsingFlags(this).overflow;
    }

    function creationData() {
        return {
            input: this._i,
            format: this._f,
            locale: this._locale,
            isUTC: this._isUTC,
            strict: this._strict,
        };
    }

    addFormatToken('N', 0, 0, 'eraAbbr');
    addFormatToken('NN', 0, 0, 'eraAbbr');
    addFormatToken('NNN', 0, 0, 'eraAbbr');
    addFormatToken('NNNN', 0, 0, 'eraName');
    addFormatToken('NNNNN', 0, 0, 'eraNarrow');

    addFormatToken('y', ['y', 1], 'yo', 'eraYear');
    addFormatToken('y', ['yy', 2], 0, 'eraYear');
    addFormatToken('y', ['yyy', 3], 0, 'eraYear');
    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');

    addRegexToken('N', matchEraAbbr);
    addRegexToken('NN', matchEraAbbr);
    addRegexToken('NNN', matchEraAbbr);
    addRegexToken('NNNN', matchEraName);
    addRegexToken('NNNNN', matchEraNarrow);

    addParseToken(['N', 'NN', 'NNN', 'NNNN', 'NNNNN'], function (
        input,
        array,
        config,
        token
    ) {
        var era = config._locale.erasParse(input, token, config._strict);
        if (era) {
            getParsingFlags(config).era = era;
        } else {
            getParsingFlags(config).invalidEra = input;
        }
    });

    addRegexToken('y', matchUnsigned);
    addRegexToken('yy', matchUnsigned);
    addRegexToken('yyy', matchUnsigned);
    addRegexToken('yyyy', matchUnsigned);
    addRegexToken('yo', matchEraYearOrdinal);

    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);
    addParseToken(['yo'], function (input, array, config, token) {
        var match;
        if (config._locale._eraYearOrdinalRegex) {
            match = input.match(config._locale._eraYearOrdinalRegex);
        }

        if (config._locale.eraYearOrdinalParse) {
            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);
        } else {
            array[YEAR] = parseInt(input, 10);
        }
    });

    function localeEras(m, format) {
        var i,
            l,
            date,
            eras = this._eras || getLocale('en')._eras;
        for (i = 0, l = eras.length; i < l; ++i) {
            switch (typeof eras[i].since) {
                case 'string':
                    // truncate time
                    date = hooks(eras[i].since).startOf('day');
                    eras[i].since = date.valueOf();
                    break;
            }

            switch (typeof eras[i].until) {
                case 'undefined':
                    eras[i].until = +Infinity;
                    break;
                case 'string':
                    // truncate time
                    date = hooks(eras[i].until).startOf('day').valueOf();
                    eras[i].until = date.valueOf();
                    break;
            }
        }
        return eras;
    }

    function localeErasParse(eraName, format, strict) {
        var i,
            l,
            eras = this.eras(),
            name,
            abbr,
            narrow;
        eraName = eraName.toUpperCase();

        for (i = 0, l = eras.length; i < l; ++i) {
            name = eras[i].name.toUpperCase();
            abbr = eras[i].abbr.toUpperCase();
            narrow = eras[i].narrow.toUpperCase();

            if (strict) {
                switch (format) {
                    case 'N':
                    case 'NN':
                    case 'NNN':
                        if (abbr === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNN':
                        if (name === eraName) {
                            return eras[i];
                        }
                        break;

                    case 'NNNNN':
                        if (narrow === eraName) {
                            return eras[i];
                        }
                        break;
                }
            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {
                return eras[i];
            }
        }
    }

    function localeErasConvertYear(era, year) {
        var dir = era.since <= era.until ? +1 : -1;
        if (year === undefined) {
            return hooks(era.since).year();
        } else {
            return hooks(era.since).year() + (year - era.offset) * dir;
        }
    }

    function getEraName() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].name;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].name;
            }
        }

        return '';
    }

    function getEraNarrow() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].narrow;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].narrow;
            }
        }

        return '';
    }

    function getEraAbbr() {
        var i,
            l,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (eras[i].since <= val && val <= eras[i].until) {
                return eras[i].abbr;
            }
            if (eras[i].until <= val && val <= eras[i].since) {
                return eras[i].abbr;
            }
        }

        return '';
    }

    function getEraYear() {
        var i,
            l,
            dir,
            val,
            eras = this.localeData().eras();
        for (i = 0, l = eras.length; i < l; ++i) {
            dir = eras[i].since <= eras[i].until ? +1 : -1;

            // truncate time
            val = this.clone().startOf('day').valueOf();

            if (
                (eras[i].since <= val && val <= eras[i].until) ||
                (eras[i].until <= val && val <= eras[i].since)
            ) {
                return (
                    (this.year() - hooks(eras[i].since).year()) * dir +
                    eras[i].offset
                );
            }
        }

        return this.year();
    }

    function erasNameRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNameRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNameRegex : this._erasRegex;
    }

    function erasAbbrRegex(isStrict) {
        if (!hasOwnProp(this, '_erasAbbrRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasAbbrRegex : this._erasRegex;
    }

    function erasNarrowRegex(isStrict) {
        if (!hasOwnProp(this, '_erasNarrowRegex')) {
            computeErasParse.call(this);
        }
        return isStrict ? this._erasNarrowRegex : this._erasRegex;
    }

    function matchEraAbbr(isStrict, locale) {
        return locale.erasAbbrRegex(isStrict);
    }

    function matchEraName(isStrict, locale) {
        return locale.erasNameRegex(isStrict);
    }

    function matchEraNarrow(isStrict, locale) {
        return locale.erasNarrowRegex(isStrict);
    }

    function matchEraYearOrdinal(isStrict, locale) {
        return locale._eraYearOrdinalRegex || matchUnsigned;
    }

    function computeErasParse() {
        var abbrPieces = [],
            namePieces = [],
            narrowPieces = [],
            mixedPieces = [],
            i,
            l,
            eras = this.eras();

        for (i = 0, l = eras.length; i < l; ++i) {
            namePieces.push(regexEscape(eras[i].name));
            abbrPieces.push(regexEscape(eras[i].abbr));
            narrowPieces.push(regexEscape(eras[i].narrow));

            mixedPieces.push(regexEscape(eras[i].name));
            mixedPieces.push(regexEscape(eras[i].abbr));
            mixedPieces.push(regexEscape(eras[i].narrow));
        }

        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');
        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');
        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');
        this._erasNarrowRegex = new RegExp(
            '^(' + narrowPieces.join('|') + ')',
            'i'
        );
    }

    // FORMATTING

    addFormatToken(0, ['gg', 2], 0, function () {
        return this.weekYear() % 100;
    });

    addFormatToken(0, ['GG', 2], 0, function () {
        return this.isoWeekYear() % 100;
    });

    function addWeekYearFormatToken(token, getter) {
        addFormatToken(0, [token, token.length], 0, getter);
    }

    addWeekYearFormatToken('gggg', 'weekYear');
    addWeekYearFormatToken('ggggg', 'weekYear');
    addWeekYearFormatToken('GGGG', 'isoWeekYear');
    addWeekYearFormatToken('GGGGG', 'isoWeekYear');

    // ALIASES

    addUnitAlias('weekYear', 'gg');
    addUnitAlias('isoWeekYear', 'GG');

    // PRIORITY

    addUnitPriority('weekYear', 1);
    addUnitPriority('isoWeekYear', 1);

    // PARSING

    addRegexToken('G', matchSigned);
    addRegexToken('g', matchSigned);
    addRegexToken('GG', match1to2, match2);
    addRegexToken('gg', match1to2, match2);
    addRegexToken('GGGG', match1to4, match4);
    addRegexToken('gggg', match1to4, match4);
    addRegexToken('GGGGG', match1to6, match6);
    addRegexToken('ggggg', match1to6, match6);

    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (
        input,
        week,
        config,
        token
    ) {
        week[token.substr(0, 2)] = toInt(input);
    });

    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {
        week[token] = hooks.parseTwoDigitYear(input);
    });

    // MOMENTS

    function getSetWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.week(),
            this.weekday(),
            this.localeData()._week.dow,
            this.localeData()._week.doy
        );
    }

    function getSetISOWeekYear(input) {
        return getSetWeekYearHelper.call(
            this,
            input,
            this.isoWeek(),
            this.isoWeekday(),
            1,
            4
        );
    }

    function getISOWeeksInYear() {
        return weeksInYear(this.year(), 1, 4);
    }

    function getISOWeeksInISOWeekYear() {
        return weeksInYear(this.isoWeekYear(), 1, 4);
    }

    function getWeeksInYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);
    }

    function getWeeksInWeekYear() {
        var weekInfo = this.localeData()._week;
        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);
    }

    function getSetWeekYearHelper(input, week, weekday, dow, doy) {
        var weeksTarget;
        if (input == null) {
            return weekOfYear(this, dow, doy).year;
        } else {
            weeksTarget = weeksInYear(input, dow, doy);
            if (week > weeksTarget) {
                week = weeksTarget;
            }
            return setWeekAll.call(this, input, week, weekday, dow, doy);
        }
    }

    function setWeekAll(weekYear, week, weekday, dow, doy) {
        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),
            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);

        this.year(date.getUTCFullYear());
        this.month(date.getUTCMonth());
        this.date(date.getUTCDate());
        return this;
    }

    // FORMATTING

    addFormatToken('Q', 0, 'Qo', 'quarter');

    // ALIASES

    addUnitAlias('quarter', 'Q');

    // PRIORITY

    addUnitPriority('quarter', 7);

    // PARSING

    addRegexToken('Q', match1);
    addParseToken('Q', function (input, array) {
        array[MONTH] = (toInt(input) - 1) * 3;
    });

    // MOMENTS

    function getSetQuarter(input) {
        return input == null
            ? Math.ceil((this.month() + 1) / 3)
            : this.month((input - 1) * 3 + (this.month() % 3));
    }

    // FORMATTING

    addFormatToken('D', ['DD', 2], 'Do', 'date');

    // ALIASES

    addUnitAlias('date', 'D');

    // PRIORITY
    addUnitPriority('date', 9);

    // PARSING

    addRegexToken('D', match1to2);
    addRegexToken('DD', match1to2, match2);
    addRegexToken('Do', function (isStrict, locale) {
        // TODO: Remove "ordinalParse" fallback in next major release.
        return isStrict
            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse
            : locale._dayOfMonthOrdinalParseLenient;
    });

    addParseToken(['D', 'DD'], DATE);
    addParseToken('Do', function (input, array) {
        array[DATE] = toInt(input.match(match1to2)[0]);
    });

    // MOMENTS

    var getSetDayOfMonth = makeGetSet('Date', true);

    // FORMATTING

    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');

    // ALIASES

    addUnitAlias('dayOfYear', 'DDD');

    // PRIORITY
    addUnitPriority('dayOfYear', 4);

    // PARSING

    addRegexToken('DDD', match1to3);
    addRegexToken('DDDD', match3);
    addParseToken(['DDD', 'DDDD'], function (input, array, config) {
        config._dayOfYear = toInt(input);
    });

    // HELPERS

    // MOMENTS

    function getSetDayOfYear(input) {
        var dayOfYear =
            Math.round(
                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5
            ) + 1;
        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');
    }

    // FORMATTING

    addFormatToken('m', ['mm', 2], 0, 'minute');

    // ALIASES

    addUnitAlias('minute', 'm');

    // PRIORITY

    addUnitPriority('minute', 14);

    // PARSING

    addRegexToken('m', match1to2);
    addRegexToken('mm', match1to2, match2);
    addParseToken(['m', 'mm'], MINUTE);

    // MOMENTS

    var getSetMinute = makeGetSet('Minutes', false);

    // FORMATTING

    addFormatToken('s', ['ss', 2], 0, 'second');

    // ALIASES

    addUnitAlias('second', 's');

    // PRIORITY

    addUnitPriority('second', 15);

    // PARSING

    addRegexToken('s', match1to2);
    addRegexToken('ss', match1to2, match2);
    addParseToken(['s', 'ss'], SECOND);

    // MOMENTS

    var getSetSecond = makeGetSet('Seconds', false);

    // FORMATTING

    addFormatToken('S', 0, 0, function () {
        return ~~(this.millisecond() / 100);
    });

    addFormatToken(0, ['SS', 2], 0, function () {
        return ~~(this.millisecond() / 10);
    });

    addFormatToken(0, ['SSS', 3], 0, 'millisecond');
    addFormatToken(0, ['SSSS', 4], 0, function () {
        return this.millisecond() * 10;
    });
    addFormatToken(0, ['SSSSS', 5], 0, function () {
        return this.millisecond() * 100;
    });
    addFormatToken(0, ['SSSSSS', 6], 0, function () {
        return this.millisecond() * 1000;
    });
    addFormatToken(0, ['SSSSSSS', 7], 0, function () {
        return this.millisecond() * 10000;
    });
    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {
        return this.millisecond() * 100000;
    });
    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {
        return this.millisecond() * 1000000;
    });

    // ALIASES

    addUnitAlias('millisecond', 'ms');

    // PRIORITY

    addUnitPriority('millisecond', 16);

    // PARSING

    addRegexToken('S', match1to3, match1);
    addRegexToken('SS', match1to3, match2);
    addRegexToken('SSS', match1to3, match3);

    var token, getSetMillisecond;
    for (token = 'SSSS'; token.length <= 9; token += 'S') {
        addRegexToken(token, matchUnsigned);
    }

    function parseMs(input, array) {
        array[MILLISECOND] = toInt(('0.' + input) * 1000);
    }

    for (token = 'S'; token.length <= 9; token += 'S') {
        addParseToken(token, parseMs);
    }

    getSetMillisecond = makeGetSet('Milliseconds', false);

    // FORMATTING

    addFormatToken('z', 0, 0, 'zoneAbbr');
    addFormatToken('zz', 0, 0, 'zoneName');

    // MOMENTS

    function getZoneAbbr() {
        return this._isUTC ? 'UTC' : '';
    }

    function getZoneName() {
        return this._isUTC ? 'Coordinated Universal Time' : '';
    }

    var proto = Moment.prototype;

    proto.add = add;
    proto.calendar = calendar$1;
    proto.clone = clone;
    proto.diff = diff;
    proto.endOf = endOf;
    proto.format = format;
    proto.from = from;
    proto.fromNow = fromNow;
    proto.to = to;
    proto.toNow = toNow;
    proto.get = stringGet;
    proto.invalidAt = invalidAt;
    proto.isAfter = isAfter;
    proto.isBefore = isBefore;
    proto.isBetween = isBetween;
    proto.isSame = isSame;
    proto.isSameOrAfter = isSameOrAfter;
    proto.isSameOrBefore = isSameOrBefore;
    proto.isValid = isValid$2;
    proto.lang = lang;
    proto.locale = locale;
    proto.localeData = localeData;
    proto.max = prototypeMax;
    proto.min = prototypeMin;
    proto.parsingFlags = parsingFlags;
    proto.set = stringSet;
    proto.startOf = startOf;
    proto.subtract = subtract;
    proto.toArray = toArray;
    proto.toObject = toObject;
    proto.toDate = toDate;
    proto.toISOString = toISOString;
    proto.inspect = inspect;
    if (typeof Symbol !== 'undefined' && Symbol.for != null) {
        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {
            return 'Moment<' + this.format() + '>';
        };
    }
    proto.toJSON = toJSON;
    proto.toString = toString;
    proto.unix = unix;
    proto.valueOf = valueOf;
    proto.creationData = creationData;
    proto.eraName = getEraName;
    proto.eraNarrow = getEraNarrow;
    proto.eraAbbr = getEraAbbr;
    proto.eraYear = getEraYear;
    proto.year = getSetYear;
    proto.isLeapYear = getIsLeapYear;
    proto.weekYear = getSetWeekYear;
    proto.isoWeekYear = getSetISOWeekYear;
    proto.quarter = proto.quarters = getSetQuarter;
    proto.month = getSetMonth;
    proto.daysInMonth = getDaysInMonth;
    proto.week = proto.weeks = getSetWeek;
    proto.isoWeek = proto.isoWeeks = getSetISOWeek;
    proto.weeksInYear = getWeeksInYear;
    proto.weeksInWeekYear = getWeeksInWeekYear;
    proto.isoWeeksInYear = getISOWeeksInYear;
    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;
    proto.date = getSetDayOfMonth;
    proto.day = proto.days = getSetDayOfWeek;
    proto.weekday = getSetLocaleDayOfWeek;
    proto.isoWeekday = getSetISODayOfWeek;
    proto.dayOfYear = getSetDayOfYear;
    proto.hour = proto.hours = getSetHour;
    proto.minute = proto.minutes = getSetMinute;
    proto.second = proto.seconds = getSetSecond;
    proto.millisecond = proto.milliseconds = getSetMillisecond;
    proto.utcOffset = getSetOffset;
    proto.utc = setOffsetToUTC;
    proto.local = setOffsetToLocal;
    proto.parseZone = setOffsetToParsedOffset;
    proto.hasAlignedHourOffset = hasAlignedHourOffset;
    proto.isDST = isDaylightSavingTime;
    proto.isLocal = isLocal;
    proto.isUtcOffset = isUtcOffset;
    proto.isUtc = isUtc;
    proto.isUTC = isUtc;
    proto.zoneAbbr = getZoneAbbr;
    proto.zoneName = getZoneName;
    proto.dates = deprecate(
        'dates accessor is deprecated. Use date instead.',
        getSetDayOfMonth
    );
    proto.months = deprecate(
        'months accessor is deprecated. Use month instead',
        getSetMonth
    );
    proto.years = deprecate(
        'years accessor is deprecated. Use year instead',
        getSetYear
    );
    proto.zone = deprecate(
        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',
        getSetZone
    );
    proto.isDSTShifted = deprecate(
        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',
        isDaylightSavingTimeShifted
    );

    function createUnix(input) {
        return createLocal(input * 1000);
    }

    function createInZone() {
        return createLocal.apply(null, arguments).parseZone();
    }

    function preParsePostFormat(string) {
        return string;
    }

    var proto$1 = Locale.prototype;

    proto$1.calendar = calendar;
    proto$1.longDateFormat = longDateFormat;
    proto$1.invalidDate = invalidDate;
    proto$1.ordinal = ordinal;
    proto$1.preparse = preParsePostFormat;
    proto$1.postformat = preParsePostFormat;
    proto$1.relativeTime = relativeTime;
    proto$1.pastFuture = pastFuture;
    proto$1.set = set;
    proto$1.eras = localeEras;
    proto$1.erasParse = localeErasParse;
    proto$1.erasConvertYear = localeErasConvertYear;
    proto$1.erasAbbrRegex = erasAbbrRegex;
    proto$1.erasNameRegex = erasNameRegex;
    proto$1.erasNarrowRegex = erasNarrowRegex;

    proto$1.months = localeMonths;
    proto$1.monthsShort = localeMonthsShort;
    proto$1.monthsParse = localeMonthsParse;
    proto$1.monthsRegex = monthsRegex;
    proto$1.monthsShortRegex = monthsShortRegex;
    proto$1.week = localeWeek;
    proto$1.firstDayOfYear = localeFirstDayOfYear;
    proto$1.firstDayOfWeek = localeFirstDayOfWeek;

    proto$1.weekdays = localeWeekdays;
    proto$1.weekdaysMin = localeWeekdaysMin;
    proto$1.weekdaysShort = localeWeekdaysShort;
    proto$1.weekdaysParse = localeWeekdaysParse;

    proto$1.weekdaysRegex = weekdaysRegex;
    proto$1.weekdaysShortRegex = weekdaysShortRegex;
    proto$1.weekdaysMinRegex = weekdaysMinRegex;

    proto$1.isPM = localeIsPM;
    proto$1.meridiem = localeMeridiem;

    function get$1(format, index, field, setter) {
        var locale = getLocale(),
            utc = createUTC().set(setter, index);
        return locale[field](utc, format);
    }

    function listMonthsImpl(format, index, field) {
        if (isNumber(format)) {
            index = format;
            format = undefined;
        }

        format = format || '';

        if (index != null) {
            return get$1(format, index, field, 'month');
        }

        var i,
            out = [];
        for (i = 0; i < 12; i++) {
            out[i] = get$1(format, i, field, 'month');
        }
        return out;
    }

    // ()
    // (5)
    // (fmt, 5)
    // (fmt)
    // (true)
    // (true, 5)
    // (true, fmt, 5)
    // (true, fmt)
    function listWeekdaysImpl(localeSorted, format, index, field) {
        if (typeof localeSorted === 'boolean') {
            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        } else {
            format = localeSorted;
            index = format;
            localeSorted = false;

            if (isNumber(format)) {
                index = format;
                format = undefined;
            }

            format = format || '';
        }

        var locale = getLocale(),
            shift = localeSorted ? locale._week.dow : 0,
            i,
            out = [];

        if (index != null) {
            return get$1(format, (index + shift) % 7, field, 'day');
        }

        for (i = 0; i < 7; i++) {
            out[i] = get$1(format, (i + shift) % 7, field, 'day');
        }
        return out;
    }

    function listMonths(format, index) {
        return listMonthsImpl(format, index, 'months');
    }

    function listMonthsShort(format, index) {
        return listMonthsImpl(format, index, 'monthsShort');
    }

    function listWeekdays(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');
    }

    function listWeekdaysShort(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');
    }

    function listWeekdaysMin(localeSorted, format, index) {
        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');
    }

    getSetGlobalLocale('en', {
        eras: [
            {
                since: '0001-01-01',
                until: +Infinity,
                offset: 1,
                name: 'Anno Domini',
                narrow: 'AD',
                abbr: 'AD',
            },
            {
                since: '0000-12-31',
                until: -Infinity,
                offset: 1,
                name: 'Before Christ',
                narrow: 'BC',
                abbr: 'BC',
            },
        ],
        dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
        ordinal: function (number) {
            var b = number % 10,
                output =
                    toInt((number % 100) / 10) === 1
                        ? 'th'
                        : b === 1
                        ? 'st'
                        : b === 2
                        ? 'nd'
                        : b === 3
                        ? 'rd'
                        : 'th';
            return number + output;
        },
    });

    // Side effect imports

    hooks.lang = deprecate(
        'moment.lang is deprecated. Use moment.locale instead.',
        getSetGlobalLocale
    );
    hooks.langData = deprecate(
        'moment.langData is deprecated. Use moment.localeData instead.',
        getLocale
    );

    var mathAbs = Math.abs;

    function abs() {
        var data = this._data;

        this._milliseconds = mathAbs(this._milliseconds);
        this._days = mathAbs(this._days);
        this._months = mathAbs(this._months);

        data.milliseconds = mathAbs(data.milliseconds);
        data.seconds = mathAbs(data.seconds);
        data.minutes = mathAbs(data.minutes);
        data.hours = mathAbs(data.hours);
        data.months = mathAbs(data.months);
        data.years = mathAbs(data.years);

        return this;
    }

    function addSubtract$1(duration, input, value, direction) {
        var other = createDuration(input, value);

        duration._milliseconds += direction * other._milliseconds;
        duration._days += direction * other._days;
        duration._months += direction * other._months;

        return duration._bubble();
    }

    // supports only 2.0-style add(1, 's') or add(duration)
    function add$1(input, value) {
        return addSubtract$1(this, input, value, 1);
    }

    // supports only 2.0-style subtract(1, 's') or subtract(duration)
    function subtract$1(input, value) {
        return addSubtract$1(this, input, value, -1);
    }

    function absCeil(number) {
        if (number < 0) {
            return Math.floor(number);
        } else {
            return Math.ceil(number);
        }
    }

    function bubble() {
        var milliseconds = this._milliseconds,
            days = this._days,
            months = this._months,
            data = this._data,
            seconds,
            minutes,
            hours,
            years,
            monthsFromDays;

        // if we have a mix of positive and negative values, bubble down first
        // check: https://github.com/moment/moment/issues/2166
        if (
            !(
                (milliseconds >= 0 && days >= 0 && months >= 0) ||
                (milliseconds <= 0 && days <= 0 && months <= 0)
            )
        ) {
            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;
            days = 0;
            months = 0;
        }

        // The following code bubbles up values, see the tests for
        // examples of what that means.
        data.milliseconds = milliseconds % 1000;

        seconds = absFloor(milliseconds / 1000);
        data.seconds = seconds % 60;

        minutes = absFloor(seconds / 60);
        data.minutes = minutes % 60;

        hours = absFloor(minutes / 60);
        data.hours = hours % 24;

        days += absFloor(hours / 24);

        // convert days to months
        monthsFromDays = absFloor(daysToMonths(days));
        months += monthsFromDays;
        days -= absCeil(monthsToDays(monthsFromDays));

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        data.days = days;
        data.months = months;
        data.years = years;

        return this;
    }

    function daysToMonths(days) {
        // 400 years have 146097 days (taking into account leap year rules)
        // 400 years have 12 months === 4800
        return (days * 4800) / 146097;
    }

    function monthsToDays(months) {
        // the reverse of daysToMonths
        return (months * 146097) / 4800;
    }

    function as(units) {
        if (!this.isValid()) {
            return NaN;
        }
        var days,
            months,
            milliseconds = this._milliseconds;

        units = normalizeUnits(units);

        if (units === 'month' || units === 'quarter' || units === 'year') {
            days = this._days + milliseconds / 864e5;
            months = this._months + daysToMonths(days);
            switch (units) {
                case 'month':
                    return months;
                case 'quarter':
                    return months / 3;
                case 'year':
                    return months / 12;
            }
        } else {
            // handle milliseconds separately because of floating point math errors (issue #1867)
            days = this._days + Math.round(monthsToDays(this._months));
            switch (units) {
                case 'week':
                    return days / 7 + milliseconds / 6048e5;
                case 'day':
                    return days + milliseconds / 864e5;
                case 'hour':
                    return days * 24 + milliseconds / 36e5;
                case 'minute':
                    return days * 1440 + milliseconds / 6e4;
                case 'second':
                    return days * 86400 + milliseconds / 1000;
                // Math.floor prevents floating point math errors here
                case 'millisecond':
                    return Math.floor(days * 864e5) + milliseconds;
                default:
                    throw new Error('Unknown unit ' + units);
            }
        }
    }

    // TODO: Use this.as('ms')?
    function valueOf$1() {
        if (!this.isValid()) {
            return NaN;
        }
        return (
            this._milliseconds +
            this._days * 864e5 +
            (this._months % 12) * 2592e6 +
            toInt(this._months / 12) * 31536e6
        );
    }

    function makeAs(alias) {
        return function () {
            return this.as(alias);
        };
    }

    var asMilliseconds = makeAs('ms'),
        asSeconds = makeAs('s'),
        asMinutes = makeAs('m'),
        asHours = makeAs('h'),
        asDays = makeAs('d'),
        asWeeks = makeAs('w'),
        asMonths = makeAs('M'),
        asQuarters = makeAs('Q'),
        asYears = makeAs('y');

    function clone$1() {
        return createDuration(this);
    }

    function get$2(units) {
        units = normalizeUnits(units);
        return this.isValid() ? this[units + 's']() : NaN;
    }

    function makeGetter(name) {
        return function () {
            return this.isValid() ? this._data[name] : NaN;
        };
    }

    var milliseconds = makeGetter('milliseconds'),
        seconds = makeGetter('seconds'),
        minutes = makeGetter('minutes'),
        hours = makeGetter('hours'),
        days = makeGetter('days'),
        months = makeGetter('months'),
        years = makeGetter('years');

    function weeks() {
        return absFloor(this.days() / 7);
    }

    var round = Math.round,
        thresholds = {
            ss: 44, // a few seconds to seconds
            s: 45, // seconds to minute
            m: 45, // minutes to hour
            h: 22, // hours to day
            d: 26, // days to month/week
            w: null, // weeks to month
            M: 11, // months to year
        };

    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize
    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {
        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);
    }

    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {
        var duration = createDuration(posNegDuration).abs(),
            seconds = round(duration.as('s')),
            minutes = round(duration.as('m')),
            hours = round(duration.as('h')),
            days = round(duration.as('d')),
            months = round(duration.as('M')),
            weeks = round(duration.as('w')),
            years = round(duration.as('y')),
            a =
                (seconds <= thresholds.ss && ['s', seconds]) ||
                (seconds < thresholds.s && ['ss', seconds]) ||
                (minutes <= 1 && ['m']) ||
                (minutes < thresholds.m && ['mm', minutes]) ||
                (hours <= 1 && ['h']) ||
                (hours < thresholds.h && ['hh', hours]) ||
                (days <= 1 && ['d']) ||
                (days < thresholds.d && ['dd', days]);

        if (thresholds.w != null) {
            a =
                a ||
                (weeks <= 1 && ['w']) ||
                (weeks < thresholds.w && ['ww', weeks]);
        }
        a = a ||
            (months <= 1 && ['M']) ||
            (months < thresholds.M && ['MM', months]) ||
            (years <= 1 && ['y']) || ['yy', years];

        a[2] = withoutSuffix;
        a[3] = +posNegDuration > 0;
        a[4] = locale;
        return substituteTimeAgo.apply(null, a);
    }

    // This function allows you to set the rounding function for relative time strings
    function getSetRelativeTimeRounding(roundingFunction) {
        if (roundingFunction === undefined) {
            return round;
        }
        if (typeof roundingFunction === 'function') {
            round = roundingFunction;
            return true;
        }
        return false;
    }

    // This function allows you to set a threshold for relative time strings
    function getSetRelativeTimeThreshold(threshold, limit) {
        if (thresholds[threshold] === undefined) {
            return false;
        }
        if (limit === undefined) {
            return thresholds[threshold];
        }
        thresholds[threshold] = limit;
        if (threshold === 's') {
            thresholds.ss = limit - 1;
        }
        return true;
    }

    function humanize(argWithSuffix, argThresholds) {
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var withSuffix = false,
            th = thresholds,
            locale,
            output;

        if (typeof argWithSuffix === 'object') {
            argThresholds = argWithSuffix;
            argWithSuffix = false;
        }
        if (typeof argWithSuffix === 'boolean') {
            withSuffix = argWithSuffix;
        }
        if (typeof argThresholds === 'object') {
            th = Object.assign({}, thresholds, argThresholds);
            if (argThresholds.s != null && argThresholds.ss == null) {
                th.ss = argThresholds.s - 1;
            }
        }

        locale = this.localeData();
        output = relativeTime$1(this, !withSuffix, th, locale);

        if (withSuffix) {
            output = locale.pastFuture(+this, output);
        }

        return locale.postformat(output);
    }

    var abs$1 = Math.abs;

    function sign(x) {
        return (x > 0) - (x < 0) || +x;
    }

    function toISOString$1() {
        // for ISO strings we do not use the normal bubbling rules:
        //  * milliseconds bubble up until they become hours
        //  * days do not bubble at all
        //  * months bubble up until they become years
        // This is because there is no context-free conversion between hours and days
        // (think of clock changes)
        // and also not between days and months (28-31 days per month)
        if (!this.isValid()) {
            return this.localeData().invalidDate();
        }

        var seconds = abs$1(this._milliseconds) / 1000,
            days = abs$1(this._days),
            months = abs$1(this._months),
            minutes,
            hours,
            years,
            s,
            total = this.asSeconds(),
            totalSign,
            ymSign,
            daysSign,
            hmsSign;

        if (!total) {
            // this is the same as C#'s (Noda) and python (isodate)...
            // but not other JS (goog.date)
            return 'P0D';
        }

        // 3600 seconds -> 60 minutes -> 1 hour
        minutes = absFloor(seconds / 60);
        hours = absFloor(minutes / 60);
        seconds %= 60;
        minutes %= 60;

        // 12 months -> 1 year
        years = absFloor(months / 12);
        months %= 12;

        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js
        s = seconds ? seconds.toFixed(3).replace(/\.?0+$/, '') : '';

        totalSign = total < 0 ? '-' : '';
        ymSign = sign(this._months) !== sign(total) ? '-' : '';
        daysSign = sign(this._days) !== sign(total) ? '-' : '';
        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';

        return (
            totalSign +
            'P' +
            (years ? ymSign + years + 'Y' : '') +
            (months ? ymSign + months + 'M' : '') +
            (days ? daysSign + days + 'D' : '') +
            (hours || minutes || seconds ? 'T' : '') +
            (hours ? hmsSign + hours + 'H' : '') +
            (minutes ? hmsSign + minutes + 'M' : '') +
            (seconds ? hmsSign + s + 'S' : '')
        );
    }

    var proto$2 = Duration.prototype;

    proto$2.isValid = isValid$1;
    proto$2.abs = abs;
    proto$2.add = add$1;
    proto$2.subtract = subtract$1;
    proto$2.as = as;
    proto$2.asMilliseconds = asMilliseconds;
    proto$2.asSeconds = asSeconds;
    proto$2.asMinutes = asMinutes;
    proto$2.asHours = asHours;
    proto$2.asDays = asDays;
    proto$2.asWeeks = asWeeks;
    proto$2.asMonths = asMonths;
    proto$2.asQuarters = asQuarters;
    proto$2.asYears = asYears;
    proto$2.valueOf = valueOf$1;
    proto$2._bubble = bubble;
    proto$2.clone = clone$1;
    proto$2.get = get$2;
    proto$2.milliseconds = milliseconds;
    proto$2.seconds = seconds;
    proto$2.minutes = minutes;
    proto$2.hours = hours;
    proto$2.days = days;
    proto$2.weeks = weeks;
    proto$2.months = months;
    proto$2.years = years;
    proto$2.humanize = humanize;
    proto$2.toISOString = toISOString$1;
    proto$2.toString = toISOString$1;
    proto$2.toJSON = toISOString$1;
    proto$2.locale = locale;
    proto$2.localeData = localeData;

    proto$2.toIsoString = deprecate(
        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',
        toISOString$1
    );
    proto$2.lang = lang;

    // FORMATTING

    addFormatToken('X', 0, 0, 'unix');
    addFormatToken('x', 0, 0, 'valueOf');

    // PARSING

    addRegexToken('x', matchSigned);
    addRegexToken('X', matchTimestamp);
    addParseToken('X', function (input, array, config) {
        config._d = new Date(parseFloat(input) * 1000);
    });
    addParseToken('x', function (input, array, config) {
        config._d = new Date(toInt(input));
    });

    //! moment.js

    hooks.version = '2.29.1';

    setHookCallback(createLocal);

    hooks.fn = proto;
    hooks.min = min;
    hooks.max = max;
    hooks.now = now;
    hooks.utc = createUTC;
    hooks.unix = createUnix;
    hooks.months = listMonths;
    hooks.isDate = isDate;
    hooks.locale = getSetGlobalLocale;
    hooks.invalid = createInvalid;
    hooks.duration = createDuration;
    hooks.isMoment = isMoment;
    hooks.weekdays = listWeekdays;
    hooks.parseZone = createInZone;
    hooks.localeData = getLocale;
    hooks.isDuration = isDuration;
    hooks.monthsShort = listMonthsShort;
    hooks.weekdaysMin = listWeekdaysMin;
    hooks.defineLocale = defineLocale;
    hooks.updateLocale = updateLocale;
    hooks.locales = listLocales;
    hooks.weekdaysShort = listWeekdaysShort;
    hooks.normalizeUnits = normalizeUnits;
    hooks.relativeTimeRounding = getSetRelativeTimeRounding;
    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;
    hooks.calendarFormat = getCalendarFormat;
    hooks.prototype = proto;

    // currently HTML5 input type only supports 24-hour formats
    hooks.HTML5_FMT = {
        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type="datetime-local" />
        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type="datetime-local" step="1" />
        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type="datetime-local" step="0.001" />
        DATE: 'YYYY-MM-DD', // <input type="date" />
        TIME: 'HH:mm', // <input type="time" />
        TIME_SECONDS: 'HH:mm:ss', // <input type="time" step="1" />
        TIME_MS: 'HH:mm:ss.SSS', // <input type="time" step="0.001" />
        WEEK: 'GGGG-[W]WW', // <input type="week" />
        MONTH: 'YYYY-MM', // <input type="month" />
    };

    return hooks;

})));

},{}],"../node_modules/chart.js/dist/Chart.js":[function(require,module,exports) {
var define;
var global = arguments[3];
/*!
 * Chart.js v2.9.4
 * https://www.chartjs.org
 * (c) 2020 Chart.js Contributors
 * Released under the MIT License
 */
(function (global, factory) {
typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function() { try { return require('moment'); } catch(e) { } }()) :
typeof define === 'function' && define.amd ? define(['require'], function(require) { return factory(function() { try { return require('moment'); } catch(e) { } }()); }) :
(global = global || self, global.Chart = factory(global.moment));
}(this, (function (moment) { 'use strict';

moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

function getCjsExportFromNamespace (n) {
	return n && n['default'] || n;
}

var colorName = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};

var conversions = createCommonjsModule(function (module) {
/* MIT license */


// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)

var reverseKeywords = {};
for (var key in colorName) {
	if (colorName.hasOwnProperty(key)) {
		reverseKeywords[colorName[key]] = key;
	}
}

var convert = module.exports = {
	rgb: {channels: 3, labels: 'rgb'},
	hsl: {channels: 3, labels: 'hsl'},
	hsv: {channels: 3, labels: 'hsv'},
	hwb: {channels: 3, labels: 'hwb'},
	cmyk: {channels: 4, labels: 'cmyk'},
	xyz: {channels: 3, labels: 'xyz'},
	lab: {channels: 3, labels: 'lab'},
	lch: {channels: 3, labels: 'lch'},
	hex: {channels: 1, labels: ['hex']},
	keyword: {channels: 1, labels: ['keyword']},
	ansi16: {channels: 1, labels: ['ansi16']},
	ansi256: {channels: 1, labels: ['ansi256']},
	hcg: {channels: 3, labels: ['h', 'c', 'g']},
	apple: {channels: 3, labels: ['r16', 'g16', 'b16']},
	gray: {channels: 1, labels: ['gray']}
};

// hide .channels and .labels properties
for (var model in convert) {
	if (convert.hasOwnProperty(model)) {
		if (!('channels' in convert[model])) {
			throw new Error('missing channels property: ' + model);
		}

		if (!('labels' in convert[model])) {
			throw new Error('missing channel labels property: ' + model);
		}

		if (convert[model].labels.length !== convert[model].channels) {
			throw new Error('channel and label counts mismatch: ' + model);
		}

		var channels = convert[model].channels;
		var labels = convert[model].labels;
		delete convert[model].channels;
		delete convert[model].labels;
		Object.defineProperty(convert[model], 'channels', {value: channels});
		Object.defineProperty(convert[model], 'labels', {value: labels});
	}
}

convert.rgb.hsl = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var min = Math.min(r, g, b);
	var max = Math.max(r, g, b);
	var delta = max - min;
	var h;
	var s;
	var l;

	if (max === min) {
		h = 0;
	} else if (r === max) {
		h = (g - b) / delta;
	} else if (g === max) {
		h = 2 + (b - r) / delta;
	} else if (b === max) {
		h = 4 + (r - g) / delta;
	}

	h = Math.min(h * 60, 360);

	if (h < 0) {
		h += 360;
	}

	l = (min + max) / 2;

	if (max === min) {
		s = 0;
	} else if (l <= 0.5) {
		s = delta / (max + min);
	} else {
		s = delta / (2 - max - min);
	}

	return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
	var rdif;
	var gdif;
	var bdif;
	var h;
	var s;

	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var v = Math.max(r, g, b);
	var diff = v - Math.min(r, g, b);
	var diffc = function (c) {
		return (v - c) / 6 / diff + 1 / 2;
	};

	if (diff === 0) {
		h = s = 0;
	} else {
		s = diff / v;
		rdif = diffc(r);
		gdif = diffc(g);
		bdif = diffc(b);

		if (r === v) {
			h = bdif - gdif;
		} else if (g === v) {
			h = (1 / 3) + rdif - bdif;
		} else if (b === v) {
			h = (2 / 3) + gdif - rdif;
		}
		if (h < 0) {
			h += 1;
		} else if (h > 1) {
			h -= 1;
		}
	}

	return [
		h * 360,
		s * 100,
		v * 100
	];
};

convert.rgb.hwb = function (rgb) {
	var r = rgb[0];
	var g = rgb[1];
	var b = rgb[2];
	var h = convert.rgb.hsl(rgb)[0];
	var w = 1 / 255 * Math.min(r, Math.min(g, b));

	b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));

	return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var c;
	var m;
	var y;
	var k;

	k = Math.min(1 - r, 1 - g, 1 - b);
	c = (1 - r - k) / (1 - k) || 0;
	m = (1 - g - k) / (1 - k) || 0;
	y = (1 - b - k) / (1 - k) || 0;

	return [c * 100, m * 100, y * 100, k * 100];
};

/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */
function comparativeDistance(x, y) {
	return (
		Math.pow(x[0] - y[0], 2) +
		Math.pow(x[1] - y[1], 2) +
		Math.pow(x[2] - y[2], 2)
	);
}

convert.rgb.keyword = function (rgb) {
	var reversed = reverseKeywords[rgb];
	if (reversed) {
		return reversed;
	}

	var currentClosestDistance = Infinity;
	var currentClosestKeyword;

	for (var keyword in colorName) {
		if (colorName.hasOwnProperty(keyword)) {
			var value = colorName[keyword];

			// Compute comparative distance
			var distance = comparativeDistance(rgb, value);

			// Check if its less, if so set as closest
			if (distance < currentClosestDistance) {
				currentClosestDistance = distance;
				currentClosestKeyword = keyword;
			}
		}
	}

	return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
	return colorName[keyword];
};

convert.rgb.xyz = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;

	// assume sRGB
	r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);
	g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);
	b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);

	var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);
	var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);
	var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);

	return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
	var xyz = convert.rgb.xyz(rgb);
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
	var h = hsl[0] / 360;
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var t1;
	var t2;
	var t3;
	var rgb;
	var val;

	if (s === 0) {
		val = l * 255;
		return [val, val, val];
	}

	if (l < 0.5) {
		t2 = l * (1 + s);
	} else {
		t2 = l + s - l * s;
	}

	t1 = 2 * l - t2;

	rgb = [0, 0, 0];
	for (var i = 0; i < 3; i++) {
		t3 = h + 1 / 3 * -(i - 1);
		if (t3 < 0) {
			t3++;
		}
		if (t3 > 1) {
			t3--;
		}

		if (6 * t3 < 1) {
			val = t1 + (t2 - t1) * 6 * t3;
		} else if (2 * t3 < 1) {
			val = t2;
		} else if (3 * t3 < 2) {
			val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
		} else {
			val = t1;
		}

		rgb[i] = val * 255;
	}

	return rgb;
};

convert.hsl.hsv = function (hsl) {
	var h = hsl[0];
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var smin = s;
	var lmin = Math.max(l, 0.01);
	var sv;
	var v;

	l *= 2;
	s *= (l <= 1) ? l : 2 - l;
	smin *= lmin <= 1 ? lmin : 2 - lmin;
	v = (l + s) / 2;
	sv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);

	return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
	var h = hsv[0] / 60;
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var hi = Math.floor(h) % 6;

	var f = h - Math.floor(h);
	var p = 255 * v * (1 - s);
	var q = 255 * v * (1 - (s * f));
	var t = 255 * v * (1 - (s * (1 - f)));
	v *= 255;

	switch (hi) {
		case 0:
			return [v, t, p];
		case 1:
			return [q, v, p];
		case 2:
			return [p, v, t];
		case 3:
			return [p, q, v];
		case 4:
			return [t, p, v];
		case 5:
			return [v, p, q];
	}
};

convert.hsv.hsl = function (hsv) {
	var h = hsv[0];
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;
	var vmin = Math.max(v, 0.01);
	var lmin;
	var sl;
	var l;

	l = (2 - s) * v;
	lmin = (2 - s) * vmin;
	sl = s * vmin;
	sl /= (lmin <= 1) ? lmin : 2 - lmin;
	sl = sl || 0;
	l /= 2;

	return [h, sl * 100, l * 100];
};

// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function (hwb) {
	var h = hwb[0] / 360;
	var wh = hwb[1] / 100;
	var bl = hwb[2] / 100;
	var ratio = wh + bl;
	var i;
	var v;
	var f;
	var n;

	// wh + bl cant be > 1
	if (ratio > 1) {
		wh /= ratio;
		bl /= ratio;
	}

	i = Math.floor(6 * h);
	v = 1 - bl;
	f = 6 * h - i;

	if ((i & 0x01) !== 0) {
		f = 1 - f;
	}

	n = wh + f * (v - wh); // linear interpolation

	var r;
	var g;
	var b;
	switch (i) {
		default:
		case 6:
		case 0: r = v; g = n; b = wh; break;
		case 1: r = n; g = v; b = wh; break;
		case 2: r = wh; g = v; b = n; break;
		case 3: r = wh; g = n; b = v; break;
		case 4: r = n; g = wh; b = v; break;
		case 5: r = v; g = wh; b = n; break;
	}

	return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
	var c = cmyk[0] / 100;
	var m = cmyk[1] / 100;
	var y = cmyk[2] / 100;
	var k = cmyk[3] / 100;
	var r;
	var g;
	var b;

	r = 1 - Math.min(1, c * (1 - k) + k);
	g = 1 - Math.min(1, m * (1 - k) + k);
	b = 1 - Math.min(1, y * (1 - k) + k);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
	var x = xyz[0] / 100;
	var y = xyz[1] / 100;
	var z = xyz[2] / 100;
	var r;
	var g;
	var b;

	r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);
	g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);
	b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);

	// assume sRGB
	r = r > 0.0031308
		? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)
		: r * 12.92;

	g = g > 0.0031308
		? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)
		: g * 12.92;

	b = b > 0.0031308
		? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)
		: b * 12.92;

	r = Math.min(Math.max(0, r), 1);
	g = Math.min(Math.max(0, g), 1);
	b = Math.min(Math.max(0, b), 1);

	return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
	var x = xyz[0];
	var y = xyz[1];
	var z = xyz[2];
	var l;
	var a;
	var b;

	x /= 95.047;
	y /= 100;
	z /= 108.883;

	x = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);
	y = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);
	z = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);

	l = (116 * y) - 16;
	a = 500 * (x - y);
	b = 200 * (y - z);

	return [l, a, b];
};

convert.lab.xyz = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var x;
	var y;
	var z;

	y = (l + 16) / 116;
	x = a / 500 + y;
	z = y - b / 200;

	var y2 = Math.pow(y, 3);
	var x2 = Math.pow(x, 3);
	var z2 = Math.pow(z, 3);
	y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
	x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
	z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;

	x *= 95.047;
	y *= 100;
	z *= 108.883;

	return [x, y, z];
};

convert.lab.lch = function (lab) {
	var l = lab[0];
	var a = lab[1];
	var b = lab[2];
	var hr;
	var h;
	var c;

	hr = Math.atan2(b, a);
	h = hr * 360 / 2 / Math.PI;

	if (h < 0) {
		h += 360;
	}

	c = Math.sqrt(a * a + b * b);

	return [l, c, h];
};

convert.lch.lab = function (lch) {
	var l = lch[0];
	var c = lch[1];
	var h = lch[2];
	var a;
	var b;
	var hr;

	hr = h / 360 * 2 * Math.PI;
	a = c * Math.cos(hr);
	b = c * Math.sin(hr);

	return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];
	var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

	value = Math.round(value / 50);

	if (value === 0) {
		return 30;
	}

	var ansi = 30
		+ ((Math.round(b / 255) << 2)
		| (Math.round(g / 255) << 1)
		| Math.round(r / 255));

	if (value === 2) {
		ansi += 60;
	}

	return ansi;
};

convert.hsv.ansi16 = function (args) {
	// optimization here; we already know the value and don't need to get
	// it converted for us.
	return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
	var r = args[0];
	var g = args[1];
	var b = args[2];

	// we use the extended greyscale palette here, with the exception of
	// black and white. normal palette only has 4 greyscale shades.
	if (r === g && g === b) {
		if (r < 8) {
			return 16;
		}

		if (r > 248) {
			return 231;
		}

		return Math.round(((r - 8) / 247) * 24) + 232;
	}

	var ansi = 16
		+ (36 * Math.round(r / 255 * 5))
		+ (6 * Math.round(g / 255 * 5))
		+ Math.round(b / 255 * 5);

	return ansi;
};

convert.ansi16.rgb = function (args) {
	var color = args % 10;

	// handle greyscale
	if (color === 0 || color === 7) {
		if (args > 50) {
			color += 3.5;
		}

		color = color / 10.5 * 255;

		return [color, color, color];
	}

	var mult = (~~(args > 50) + 1) * 0.5;
	var r = ((color & 1) * mult) * 255;
	var g = (((color >> 1) & 1) * mult) * 255;
	var b = (((color >> 2) & 1) * mult) * 255;

	return [r, g, b];
};

convert.ansi256.rgb = function (args) {
	// handle greyscale
	if (args >= 232) {
		var c = (args - 232) * 10 + 8;
		return [c, c, c];
	}

	args -= 16;

	var rem;
	var r = Math.floor(args / 36) / 5 * 255;
	var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
	var b = (rem % 6) / 5 * 255;

	return [r, g, b];
};

convert.rgb.hex = function (args) {
	var integer = ((Math.round(args[0]) & 0xFF) << 16)
		+ ((Math.round(args[1]) & 0xFF) << 8)
		+ (Math.round(args[2]) & 0xFF);

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
	var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
	if (!match) {
		return [0, 0, 0];
	}

	var colorString = match[0];

	if (match[0].length === 3) {
		colorString = colorString.split('').map(function (char) {
			return char + char;
		}).join('');
	}

	var integer = parseInt(colorString, 16);
	var r = (integer >> 16) & 0xFF;
	var g = (integer >> 8) & 0xFF;
	var b = integer & 0xFF;

	return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
	var r = rgb[0] / 255;
	var g = rgb[1] / 255;
	var b = rgb[2] / 255;
	var max = Math.max(Math.max(r, g), b);
	var min = Math.min(Math.min(r, g), b);
	var chroma = (max - min);
	var grayscale;
	var hue;

	if (chroma < 1) {
		grayscale = min / (1 - chroma);
	} else {
		grayscale = 0;
	}

	if (chroma <= 0) {
		hue = 0;
	} else
	if (max === r) {
		hue = ((g - b) / chroma) % 6;
	} else
	if (max === g) {
		hue = 2 + (b - r) / chroma;
	} else {
		hue = 4 + (r - g) / chroma + 4;
	}

	hue /= 6;
	hue %= 1;

	return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
	var s = hsl[1] / 100;
	var l = hsl[2] / 100;
	var c = 1;
	var f = 0;

	if (l < 0.5) {
		c = 2.0 * s * l;
	} else {
		c = 2.0 * s * (1.0 - l);
	}

	if (c < 1.0) {
		f = (l - 0.5 * c) / (1.0 - c);
	}

	return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
	var s = hsv[1] / 100;
	var v = hsv[2] / 100;

	var c = s * v;
	var f = 0;

	if (c < 1.0) {
		f = (v - c) / (1 - c);
	}

	return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
	var h = hcg[0] / 360;
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	if (c === 0.0) {
		return [g * 255, g * 255, g * 255];
	}

	var pure = [0, 0, 0];
	var hi = (h % 1) * 6;
	var v = hi % 1;
	var w = 1 - v;
	var mg = 0;

	switch (Math.floor(hi)) {
		case 0:
			pure[0] = 1; pure[1] = v; pure[2] = 0; break;
		case 1:
			pure[0] = w; pure[1] = 1; pure[2] = 0; break;
		case 2:
			pure[0] = 0; pure[1] = 1; pure[2] = v; break;
		case 3:
			pure[0] = 0; pure[1] = w; pure[2] = 1; break;
		case 4:
			pure[0] = v; pure[1] = 0; pure[2] = 1; break;
		default:
			pure[0] = 1; pure[1] = 0; pure[2] = w;
	}

	mg = (1.0 - c) * g;

	return [
		(c * pure[0] + mg) * 255,
		(c * pure[1] + mg) * 255,
		(c * pure[2] + mg) * 255
	];
};

convert.hcg.hsv = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var v = c + g * (1.0 - c);
	var f = 0;

	if (v > 0.0) {
		f = c / v;
	}

	return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;

	var l = g * (1.0 - c) + 0.5 * c;
	var s = 0;

	if (l > 0.0 && l < 0.5) {
		s = c / (2 * l);
	} else
	if (l >= 0.5 && l < 1.0) {
		s = c / (2 * (1 - l));
	}

	return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
	var c = hcg[1] / 100;
	var g = hcg[2] / 100;
	var v = c + g * (1.0 - c);
	return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
	var w = hwb[1] / 100;
	var b = hwb[2] / 100;
	var v = 1 - b;
	var c = v - w;
	var g = 0;

	if (c < 1) {
		g = (v - c) / (1 - c);
	}

	return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
	return [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];
};

convert.rgb.apple = function (rgb) {
	return [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];
};

convert.gray.rgb = function (args) {
	return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
	return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
	return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
	return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
	return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
	var val = Math.round(gray[0] / 100 * 255) & 0xFF;
	var integer = (val << 16) + (val << 8) + val;

	var string = integer.toString(16).toUpperCase();
	return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
	var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
	return [val / 255 * 100];
};
});
var conversions_1 = conversions.rgb;
var conversions_2 = conversions.hsl;
var conversions_3 = conversions.hsv;
var conversions_4 = conversions.hwb;
var conversions_5 = conversions.cmyk;
var conversions_6 = conversions.xyz;
var conversions_7 = conversions.lab;
var conversions_8 = conversions.lch;
var conversions_9 = conversions.hex;
var conversions_10 = conversions.keyword;
var conversions_11 = conversions.ansi16;
var conversions_12 = conversions.ansi256;
var conversions_13 = conversions.hcg;
var conversions_14 = conversions.apple;
var conversions_15 = conversions.gray;

/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/

function buildGraph() {
	var graph = {};
	// https://jsperf.com/object-keys-vs-for-in-with-closure/3
	var models = Object.keys(conversions);

	for (var len = models.length, i = 0; i < len; i++) {
		graph[models[i]] = {
			// http://jsperf.com/1-vs-infinity
			// micro-opt, but this is simple.
			distance: -1,
			parent: null
		};
	}

	return graph;
}

// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
	var graph = buildGraph();
	var queue = [fromModel]; // unshift -> queue -> pop

	graph[fromModel].distance = 0;

	while (queue.length) {
		var current = queue.pop();
		var adjacents = Object.keys(conversions[current]);

		for (var len = adjacents.length, i = 0; i < len; i++) {
			var adjacent = adjacents[i];
			var node = graph[adjacent];

			if (node.distance === -1) {
				node.distance = graph[current].distance + 1;
				node.parent = current;
				queue.unshift(adjacent);
			}
		}
	}

	return graph;
}

function link(from, to) {
	return function (args) {
		return to(from(args));
	};
}

function wrapConversion(toModel, graph) {
	var path = [graph[toModel].parent, toModel];
	var fn = conversions[graph[toModel].parent][toModel];

	var cur = graph[toModel].parent;
	while (graph[cur].parent) {
		path.unshift(graph[cur].parent);
		fn = link(conversions[graph[cur].parent][cur], fn);
		cur = graph[cur].parent;
	}

	fn.conversion = path;
	return fn;
}

var route = function (fromModel) {
	var graph = deriveBFS(fromModel);
	var conversion = {};

	var models = Object.keys(graph);
	for (var len = models.length, i = 0; i < len; i++) {
		var toModel = models[i];
		var node = graph[toModel];

		if (node.parent === null) {
			// no possible conversion, or this node is the source model.
			continue;
		}

		conversion[toModel] = wrapConversion(toModel, graph);
	}

	return conversion;
};

var convert = {};

var models = Object.keys(conversions);

function wrapRaw(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		return fn(args);
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

function wrapRounded(fn) {
	var wrappedFn = function (args) {
		if (args === undefined || args === null) {
			return args;
		}

		if (arguments.length > 1) {
			args = Array.prototype.slice.call(arguments);
		}

		var result = fn(args);

		// we're assuming the result is an array here.
		// see notice in conversions.js; don't use box types
		// in conversion functions.
		if (typeof result === 'object') {
			for (var len = result.length, i = 0; i < len; i++) {
				result[i] = Math.round(result[i]);
			}
		}

		return result;
	};

	// preserve .conversion property if there is one
	if ('conversion' in fn) {
		wrappedFn.conversion = fn.conversion;
	}

	return wrappedFn;
}

models.forEach(function (fromModel) {
	convert[fromModel] = {};

	Object.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});
	Object.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});

	var routes = route(fromModel);
	var routeModels = Object.keys(routes);

	routeModels.forEach(function (toModel) {
		var fn = routes[toModel];

		convert[fromModel][toModel] = wrapRounded(fn);
		convert[fromModel][toModel].raw = wrapRaw(fn);
	});
});

var colorConvert = convert;

var colorName$1 = {
	"aliceblue": [240, 248, 255],
	"antiquewhite": [250, 235, 215],
	"aqua": [0, 255, 255],
	"aquamarine": [127, 255, 212],
	"azure": [240, 255, 255],
	"beige": [245, 245, 220],
	"bisque": [255, 228, 196],
	"black": [0, 0, 0],
	"blanchedalmond": [255, 235, 205],
	"blue": [0, 0, 255],
	"blueviolet": [138, 43, 226],
	"brown": [165, 42, 42],
	"burlywood": [222, 184, 135],
	"cadetblue": [95, 158, 160],
	"chartreuse": [127, 255, 0],
	"chocolate": [210, 105, 30],
	"coral": [255, 127, 80],
	"cornflowerblue": [100, 149, 237],
	"cornsilk": [255, 248, 220],
	"crimson": [220, 20, 60],
	"cyan": [0, 255, 255],
	"darkblue": [0, 0, 139],
	"darkcyan": [0, 139, 139],
	"darkgoldenrod": [184, 134, 11],
	"darkgray": [169, 169, 169],
	"darkgreen": [0, 100, 0],
	"darkgrey": [169, 169, 169],
	"darkkhaki": [189, 183, 107],
	"darkmagenta": [139, 0, 139],
	"darkolivegreen": [85, 107, 47],
	"darkorange": [255, 140, 0],
	"darkorchid": [153, 50, 204],
	"darkred": [139, 0, 0],
	"darksalmon": [233, 150, 122],
	"darkseagreen": [143, 188, 143],
	"darkslateblue": [72, 61, 139],
	"darkslategray": [47, 79, 79],
	"darkslategrey": [47, 79, 79],
	"darkturquoise": [0, 206, 209],
	"darkviolet": [148, 0, 211],
	"deeppink": [255, 20, 147],
	"deepskyblue": [0, 191, 255],
	"dimgray": [105, 105, 105],
	"dimgrey": [105, 105, 105],
	"dodgerblue": [30, 144, 255],
	"firebrick": [178, 34, 34],
	"floralwhite": [255, 250, 240],
	"forestgreen": [34, 139, 34],
	"fuchsia": [255, 0, 255],
	"gainsboro": [220, 220, 220],
	"ghostwhite": [248, 248, 255],
	"gold": [255, 215, 0],
	"goldenrod": [218, 165, 32],
	"gray": [128, 128, 128],
	"green": [0, 128, 0],
	"greenyellow": [173, 255, 47],
	"grey": [128, 128, 128],
	"honeydew": [240, 255, 240],
	"hotpink": [255, 105, 180],
	"indianred": [205, 92, 92],
	"indigo": [75, 0, 130],
	"ivory": [255, 255, 240],
	"khaki": [240, 230, 140],
	"lavender": [230, 230, 250],
	"lavenderblush": [255, 240, 245],
	"lawngreen": [124, 252, 0],
	"lemonchiffon": [255, 250, 205],
	"lightblue": [173, 216, 230],
	"lightcoral": [240, 128, 128],
	"lightcyan": [224, 255, 255],
	"lightgoldenrodyellow": [250, 250, 210],
	"lightgray": [211, 211, 211],
	"lightgreen": [144, 238, 144],
	"lightgrey": [211, 211, 211],
	"lightpink": [255, 182, 193],
	"lightsalmon": [255, 160, 122],
	"lightseagreen": [32, 178, 170],
	"lightskyblue": [135, 206, 250],
	"lightslategray": [119, 136, 153],
	"lightslategrey": [119, 136, 153],
	"lightsteelblue": [176, 196, 222],
	"lightyellow": [255, 255, 224],
	"lime": [0, 255, 0],
	"limegreen": [50, 205, 50],
	"linen": [250, 240, 230],
	"magenta": [255, 0, 255],
	"maroon": [128, 0, 0],
	"mediumaquamarine": [102, 205, 170],
	"mediumblue": [0, 0, 205],
	"mediumorchid": [186, 85, 211],
	"mediumpurple": [147, 112, 219],
	"mediumseagreen": [60, 179, 113],
	"mediumslateblue": [123, 104, 238],
	"mediumspringgreen": [0, 250, 154],
	"mediumturquoise": [72, 209, 204],
	"mediumvioletred": [199, 21, 133],
	"midnightblue": [25, 25, 112],
	"mintcream": [245, 255, 250],
	"mistyrose": [255, 228, 225],
	"moccasin": [255, 228, 181],
	"navajowhite": [255, 222, 173],
	"navy": [0, 0, 128],
	"oldlace": [253, 245, 230],
	"olive": [128, 128, 0],
	"olivedrab": [107, 142, 35],
	"orange": [255, 165, 0],
	"orangered": [255, 69, 0],
	"orchid": [218, 112, 214],
	"palegoldenrod": [238, 232, 170],
	"palegreen": [152, 251, 152],
	"paleturquoise": [175, 238, 238],
	"palevioletred": [219, 112, 147],
	"papayawhip": [255, 239, 213],
	"peachpuff": [255, 218, 185],
	"peru": [205, 133, 63],
	"pink": [255, 192, 203],
	"plum": [221, 160, 221],
	"powderblue": [176, 224, 230],
	"purple": [128, 0, 128],
	"rebeccapurple": [102, 51, 153],
	"red": [255, 0, 0],
	"rosybrown": [188, 143, 143],
	"royalblue": [65, 105, 225],
	"saddlebrown": [139, 69, 19],
	"salmon": [250, 128, 114],
	"sandybrown": [244, 164, 96],
	"seagreen": [46, 139, 87],
	"seashell": [255, 245, 238],
	"sienna": [160, 82, 45],
	"silver": [192, 192, 192],
	"skyblue": [135, 206, 235],
	"slateblue": [106, 90, 205],
	"slategray": [112, 128, 144],
	"slategrey": [112, 128, 144],
	"snow": [255, 250, 250],
	"springgreen": [0, 255, 127],
	"steelblue": [70, 130, 180],
	"tan": [210, 180, 140],
	"teal": [0, 128, 128],
	"thistle": [216, 191, 216],
	"tomato": [255, 99, 71],
	"turquoise": [64, 224, 208],
	"violet": [238, 130, 238],
	"wheat": [245, 222, 179],
	"white": [255, 255, 255],
	"whitesmoke": [245, 245, 245],
	"yellow": [255, 255, 0],
	"yellowgreen": [154, 205, 50]
};

/* MIT license */


var colorString = {
   getRgba: getRgba,
   getHsla: getHsla,
   getRgb: getRgb,
   getHsl: getHsl,
   getHwb: getHwb,
   getAlpha: getAlpha,

   hexString: hexString,
   rgbString: rgbString,
   rgbaString: rgbaString,
   percentString: percentString,
   percentaString: percentaString,
   hslString: hslString,
   hslaString: hslaString,
   hwbString: hwbString,
   keyword: keyword
};

function getRgba(string) {
   if (!string) {
      return;
   }
   var abbr =  /^#([a-fA-F0-9]{3,4})$/i,
       hex =  /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,
       rgba = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
       per = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i,
       keyword = /(\w+)/;

   var rgb = [0, 0, 0],
       a = 1,
       match = string.match(abbr),
       hexAlpha = "";
   if (match) {
      match = match[1];
      hexAlpha = match[3];
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match[i] + match[i], 16);
      }
      if (hexAlpha) {
         a = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;
      }
   }
   else if (match = string.match(hex)) {
      hexAlpha = match[2];
      match = match[1];
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);
      }
      if (hexAlpha) {
         a = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;
      }
   }
   else if (match = string.match(rgba)) {
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = parseInt(match[i + 1]);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(per)) {
      for (var i = 0; i < rgb.length; i++) {
         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);
      }
      a = parseFloat(match[4]);
   }
   else if (match = string.match(keyword)) {
      if (match[1] == "transparent") {
         return [0, 0, 0, 0];
      }
      rgb = colorName$1[match[1]];
      if (!rgb) {
         return;
      }
   }

   for (var i = 0; i < rgb.length; i++) {
      rgb[i] = scale(rgb[i], 0, 255);
   }
   if (!a && a != 0) {
      a = 1;
   }
   else {
      a = scale(a, 0, 1);
   }
   rgb[3] = a;
   return rgb;
}

function getHsla(string) {
   if (!string) {
      return;
   }
   var hsl = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hsl);
   if (match) {
      var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          s = scale(parseFloat(match[2]), 0, 100),
          l = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, s, l, a];
   }
}

function getHwb(string) {
   if (!string) {
      return;
   }
   var hwb = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/;
   var match = string.match(hwb);
   if (match) {
    var alpha = parseFloat(match[4]);
      var h = scale(parseInt(match[1]), 0, 360),
          w = scale(parseFloat(match[2]), 0, 100),
          b = scale(parseFloat(match[3]), 0, 100),
          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);
      return [h, w, b, a];
   }
}

function getRgb(string) {
   var rgba = getRgba(string);
   return rgba && rgba.slice(0, 3);
}

function getHsl(string) {
  var hsla = getHsla(string);
  return hsla && hsla.slice(0, 3);
}

function getAlpha(string) {
   var vals = getRgba(string);
   if (vals) {
      return vals[3];
   }
   else if (vals = getHsla(string)) {
      return vals[3];
   }
   else if (vals = getHwb(string)) {
      return vals[3];
   }
}

// generators
function hexString(rgba, a) {
   var a = (a !== undefined && rgba.length === 3) ? a : rgba[3];
   return "#" + hexDouble(rgba[0]) 
              + hexDouble(rgba[1])
              + hexDouble(rgba[2])
              + (
                 (a >= 0 && a < 1)
                 ? hexDouble(Math.round(a * 255))
                 : ""
              );
}

function rgbString(rgba, alpha) {
   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
      return rgbaString(rgba, alpha);
   }
   return "rgb(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2] + ")";
}

function rgbaString(rgba, alpha) {
   if (alpha === undefined) {
      alpha = (rgba[3] !== undefined ? rgba[3] : 1);
   }
   return "rgba(" + rgba[0] + ", " + rgba[1] + ", " + rgba[2]
           + ", " + alpha + ")";
}

function percentString(rgba, alpha) {
   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {
      return percentaString(rgba, alpha);
   }
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);

   return "rgb(" + r + "%, " + g + "%, " + b + "%)";
}

function percentaString(rgba, alpha) {
   var r = Math.round(rgba[0]/255 * 100),
       g = Math.round(rgba[1]/255 * 100),
       b = Math.round(rgba[2]/255 * 100);
   return "rgba(" + r + "%, " + g + "%, " + b + "%, " + (alpha || rgba[3] || 1) + ")";
}

function hslString(hsla, alpha) {
   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {
      return hslaString(hsla, alpha);
   }
   return "hsl(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%)";
}

function hslaString(hsla, alpha) {
   if (alpha === undefined) {
      alpha = (hsla[3] !== undefined ? hsla[3] : 1);
   }
   return "hsla(" + hsla[0] + ", " + hsla[1] + "%, " + hsla[2] + "%, "
           + alpha + ")";
}

// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax
// (hwb have alpha optional & 1 is default value)
function hwbString(hwb, alpha) {
   if (alpha === undefined) {
      alpha = (hwb[3] !== undefined ? hwb[3] : 1);
   }
   return "hwb(" + hwb[0] + ", " + hwb[1] + "%, " + hwb[2] + "%"
           + (alpha !== undefined && alpha !== 1 ? ", " + alpha : "") + ")";
}

function keyword(rgb) {
  return reverseNames[rgb.slice(0, 3)];
}

// helpers
function scale(num, min, max) {
   return Math.min(Math.max(min, num), max);
}

function hexDouble(num) {
  var str = num.toString(16).toUpperCase();
  return (str.length < 2) ? "0" + str : str;
}


//create a list of reverse color names
var reverseNames = {};
for (var name in colorName$1) {
   reverseNames[colorName$1[name]] = name;
}

/* MIT license */



var Color = function (obj) {
	if (obj instanceof Color) {
		return obj;
	}
	if (!(this instanceof Color)) {
		return new Color(obj);
	}

	this.valid = false;
	this.values = {
		rgb: [0, 0, 0],
		hsl: [0, 0, 0],
		hsv: [0, 0, 0],
		hwb: [0, 0, 0],
		cmyk: [0, 0, 0, 0],
		alpha: 1
	};

	// parse Color() argument
	var vals;
	if (typeof obj === 'string') {
		vals = colorString.getRgba(obj);
		if (vals) {
			this.setValues('rgb', vals);
		} else if (vals = colorString.getHsla(obj)) {
			this.setValues('hsl', vals);
		} else if (vals = colorString.getHwb(obj)) {
			this.setValues('hwb', vals);
		}
	} else if (typeof obj === 'object') {
		vals = obj;
		if (vals.r !== undefined || vals.red !== undefined) {
			this.setValues('rgb', vals);
		} else if (vals.l !== undefined || vals.lightness !== undefined) {
			this.setValues('hsl', vals);
		} else if (vals.v !== undefined || vals.value !== undefined) {
			this.setValues('hsv', vals);
		} else if (vals.w !== undefined || vals.whiteness !== undefined) {
			this.setValues('hwb', vals);
		} else if (vals.c !== undefined || vals.cyan !== undefined) {
			this.setValues('cmyk', vals);
		}
	}
};

Color.prototype = {
	isValid: function () {
		return this.valid;
	},
	rgb: function () {
		return this.setSpace('rgb', arguments);
	},
	hsl: function () {
		return this.setSpace('hsl', arguments);
	},
	hsv: function () {
		return this.setSpace('hsv', arguments);
	},
	hwb: function () {
		return this.setSpace('hwb', arguments);
	},
	cmyk: function () {
		return this.setSpace('cmyk', arguments);
	},

	rgbArray: function () {
		return this.values.rgb;
	},
	hslArray: function () {
		return this.values.hsl;
	},
	hsvArray: function () {
		return this.values.hsv;
	},
	hwbArray: function () {
		var values = this.values;
		if (values.alpha !== 1) {
			return values.hwb.concat([values.alpha]);
		}
		return values.hwb;
	},
	cmykArray: function () {
		return this.values.cmyk;
	},
	rgbaArray: function () {
		var values = this.values;
		return values.rgb.concat([values.alpha]);
	},
	hslaArray: function () {
		var values = this.values;
		return values.hsl.concat([values.alpha]);
	},
	alpha: function (val) {
		if (val === undefined) {
			return this.values.alpha;
		}
		this.setValues('alpha', val);
		return this;
	},

	red: function (val) {
		return this.setChannel('rgb', 0, val);
	},
	green: function (val) {
		return this.setChannel('rgb', 1, val);
	},
	blue: function (val) {
		return this.setChannel('rgb', 2, val);
	},
	hue: function (val) {
		if (val) {
			val %= 360;
			val = val < 0 ? 360 + val : val;
		}
		return this.setChannel('hsl', 0, val);
	},
	saturation: function (val) {
		return this.setChannel('hsl', 1, val);
	},
	lightness: function (val) {
		return this.setChannel('hsl', 2, val);
	},
	saturationv: function (val) {
		return this.setChannel('hsv', 1, val);
	},
	whiteness: function (val) {
		return this.setChannel('hwb', 1, val);
	},
	blackness: function (val) {
		return this.setChannel('hwb', 2, val);
	},
	value: function (val) {
		return this.setChannel('hsv', 2, val);
	},
	cyan: function (val) {
		return this.setChannel('cmyk', 0, val);
	},
	magenta: function (val) {
		return this.setChannel('cmyk', 1, val);
	},
	yellow: function (val) {
		return this.setChannel('cmyk', 2, val);
	},
	black: function (val) {
		return this.setChannel('cmyk', 3, val);
	},

	hexString: function () {
		return colorString.hexString(this.values.rgb);
	},
	rgbString: function () {
		return colorString.rgbString(this.values.rgb, this.values.alpha);
	},
	rgbaString: function () {
		return colorString.rgbaString(this.values.rgb, this.values.alpha);
	},
	percentString: function () {
		return colorString.percentString(this.values.rgb, this.values.alpha);
	},
	hslString: function () {
		return colorString.hslString(this.values.hsl, this.values.alpha);
	},
	hslaString: function () {
		return colorString.hslaString(this.values.hsl, this.values.alpha);
	},
	hwbString: function () {
		return colorString.hwbString(this.values.hwb, this.values.alpha);
	},
	keyword: function () {
		return colorString.keyword(this.values.rgb, this.values.alpha);
	},

	rgbNumber: function () {
		var rgb = this.values.rgb;
		return (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];
	},

	luminosity: function () {
		// http://www.w3.org/TR/WCAG20/#relativeluminancedef
		var rgb = this.values.rgb;
		var lum = [];
		for (var i = 0; i < rgb.length; i++) {
			var chan = rgb[i] / 255;
			lum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);
		}
		return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];
	},

	contrast: function (color2) {
		// http://www.w3.org/TR/WCAG20/#contrast-ratiodef
		var lum1 = this.luminosity();
		var lum2 = color2.luminosity();
		if (lum1 > lum2) {
			return (lum1 + 0.05) / (lum2 + 0.05);
		}
		return (lum2 + 0.05) / (lum1 + 0.05);
	},

	level: function (color2) {
		var contrastRatio = this.contrast(color2);
		if (contrastRatio >= 7.1) {
			return 'AAA';
		}

		return (contrastRatio >= 4.5) ? 'AA' : '';
	},

	dark: function () {
		// YIQ equation from http://24ways.org/2010/calculating-color-contrast
		var rgb = this.values.rgb;
		var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;
		return yiq < 128;
	},

	light: function () {
		return !this.dark();
	},

	negate: function () {
		var rgb = [];
		for (var i = 0; i < 3; i++) {
			rgb[i] = 255 - this.values.rgb[i];
		}
		this.setValues('rgb', rgb);
		return this;
	},

	lighten: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] += hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	darken: function (ratio) {
		var hsl = this.values.hsl;
		hsl[2] -= hsl[2] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	saturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] += hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	desaturate: function (ratio) {
		var hsl = this.values.hsl;
		hsl[1] -= hsl[1] * ratio;
		this.setValues('hsl', hsl);
		return this;
	},

	whiten: function (ratio) {
		var hwb = this.values.hwb;
		hwb[1] += hwb[1] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	blacken: function (ratio) {
		var hwb = this.values.hwb;
		hwb[2] += hwb[2] * ratio;
		this.setValues('hwb', hwb);
		return this;
	},

	greyscale: function () {
		var rgb = this.values.rgb;
		// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale
		var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;
		this.setValues('rgb', [val, val, val]);
		return this;
	},

	clearer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha - (alpha * ratio));
		return this;
	},

	opaquer: function (ratio) {
		var alpha = this.values.alpha;
		this.setValues('alpha', alpha + (alpha * ratio));
		return this;
	},

	rotate: function (degrees) {
		var hsl = this.values.hsl;
		var hue = (hsl[0] + degrees) % 360;
		hsl[0] = hue < 0 ? 360 + hue : hue;
		this.setValues('hsl', hsl);
		return this;
	},

	/**
	 * Ported from sass implementation in C
	 * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209
	 */
	mix: function (mixinColor, weight) {
		var color1 = this;
		var color2 = mixinColor;
		var p = weight === undefined ? 0.5 : weight;

		var w = 2 * p - 1;
		var a = color1.alpha() - color2.alpha();

		var w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;
		var w2 = 1 - w1;

		return this
			.rgb(
				w1 * color1.red() + w2 * color2.red(),
				w1 * color1.green() + w2 * color2.green(),
				w1 * color1.blue() + w2 * color2.blue()
			)
			.alpha(color1.alpha() * p + color2.alpha() * (1 - p));
	},

	toJSON: function () {
		return this.rgb();
	},

	clone: function () {
		// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,
		// making the final build way to big to embed in Chart.js. So let's do it manually,
		// assuming that values to clone are 1 dimension arrays containing only numbers,
		// except 'alpha' which is a number.
		var result = new Color();
		var source = this.values;
		var target = result.values;
		var value, type;

		for (var prop in source) {
			if (source.hasOwnProperty(prop)) {
				value = source[prop];
				type = ({}).toString.call(value);
				if (type === '[object Array]') {
					target[prop] = value.slice(0);
				} else if (type === '[object Number]') {
					target[prop] = value;
				} else {
					console.error('unexpected color value:', value);
				}
			}
		}

		return result;
	}
};

Color.prototype.spaces = {
	rgb: ['red', 'green', 'blue'],
	hsl: ['hue', 'saturation', 'lightness'],
	hsv: ['hue', 'saturation', 'value'],
	hwb: ['hue', 'whiteness', 'blackness'],
	cmyk: ['cyan', 'magenta', 'yellow', 'black']
};

Color.prototype.maxes = {
	rgb: [255, 255, 255],
	hsl: [360, 100, 100],
	hsv: [360, 100, 100],
	hwb: [360, 100, 100],
	cmyk: [100, 100, 100, 100]
};

Color.prototype.getValues = function (space) {
	var values = this.values;
	var vals = {};

	for (var i = 0; i < space.length; i++) {
		vals[space.charAt(i)] = values[space][i];
	}

	if (values.alpha !== 1) {
		vals.a = values.alpha;
	}

	// {r: 255, g: 255, b: 255, a: 0.4}
	return vals;
};

Color.prototype.setValues = function (space, vals) {
	var values = this.values;
	var spaces = this.spaces;
	var maxes = this.maxes;
	var alpha = 1;
	var i;

	this.valid = true;

	if (space === 'alpha') {
		alpha = vals;
	} else if (vals.length) {
		// [10, 10, 10]
		values[space] = vals.slice(0, space.length);
		alpha = vals[space.length];
	} else if (vals[space.charAt(0)] !== undefined) {
		// {r: 10, g: 10, b: 10}
		for (i = 0; i < space.length; i++) {
			values[space][i] = vals[space.charAt(i)];
		}

		alpha = vals.a;
	} else if (vals[spaces[space][0]] !== undefined) {
		// {red: 10, green: 10, blue: 10}
		var chans = spaces[space];

		for (i = 0; i < space.length; i++) {
			values[space][i] = vals[chans[i]];
		}

		alpha = vals.alpha;
	}

	values.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));

	if (space === 'alpha') {
		return false;
	}

	var capped;

	// cap values of the space prior converting all values
	for (i = 0; i < space.length; i++) {
		capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));
		values[space][i] = Math.round(capped);
	}

	// convert to all the other color spaces
	for (var sname in spaces) {
		if (sname !== space) {
			values[sname] = colorConvert[space][sname](values[space]);
		}
	}

	return true;
};

Color.prototype.setSpace = function (space, args) {
	var vals = args[0];

	if (vals === undefined) {
		// color.rgb()
		return this.getValues(space);
	}

	// color.rgb(10, 10, 10)
	if (typeof vals === 'number') {
		vals = Array.prototype.slice.call(args);
	}

	this.setValues(space, vals);
	return this;
};

Color.prototype.setChannel = function (space, index, val) {
	var svalues = this.values[space];
	if (val === undefined) {
		// color.red()
		return svalues[index];
	} else if (val === svalues[index]) {
		// color.red(color.red())
		return this;
	}

	// color.red(100)
	svalues[index] = val;
	this.setValues(space, svalues);

	return this;
};

if (typeof window !== 'undefined') {
	window.Color = Color;
}

var chartjsColor = Color;

function isValidKey(key) {
	return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;
}

/**
 * @namespace Chart.helpers
 */
var helpers = {
	/**
	 * An empty function that can be used, for example, for optional callback.
	 */
	noop: function() {},

	/**
	 * Returns a unique id, sequentially generated from a global variable.
	 * @returns {number}
	 * @function
	 */
	uid: (function() {
		var id = 0;
		return function() {
			return id++;
		};
	}()),

	/**
	 * Returns true if `value` is neither null nor undefined, else returns false.
	 * @param {*} value - The value to test.
	 * @returns {boolean}
	 * @since 2.7.0
	 */
	isNullOrUndef: function(value) {
		return value === null || typeof value === 'undefined';
	},

	/**
	 * Returns true if `value` is an array (including typed arrays), else returns false.
	 * @param {*} value - The value to test.
	 * @returns {boolean}
	 * @function
	 */
	isArray: function(value) {
		if (Array.isArray && Array.isArray(value)) {
			return true;
		}
		var type = Object.prototype.toString.call(value);
		if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {
			return true;
		}
		return false;
	},

	/**
	 * Returns true if `value` is an object (excluding null), else returns false.
	 * @param {*} value - The value to test.
	 * @returns {boolean}
	 * @since 2.7.0
	 */
	isObject: function(value) {
		return value !== null && Object.prototype.toString.call(value) === '[object Object]';
	},

	/**
	 * Returns true if `value` is a finite number, else returns false
	 * @param {*} value  - The value to test.
	 * @returns {boolean}
	 */
	isFinite: function(value) {
		return (typeof value === 'number' || value instanceof Number) && isFinite(value);
	},

	/**
	 * Returns `value` if defined, else returns `defaultValue`.
	 * @param {*} value - The value to return if defined.
	 * @param {*} defaultValue - The value to return if `value` is undefined.
	 * @returns {*}
	 */
	valueOrDefault: function(value, defaultValue) {
		return typeof value === 'undefined' ? defaultValue : value;
	},

	/**
	 * Returns value at the given `index` in array if defined, else returns `defaultValue`.
	 * @param {Array} value - The array to lookup for value at `index`.
	 * @param {number} index - The index in `value` to lookup for value.
	 * @param {*} defaultValue - The value to return if `value[index]` is undefined.
	 * @returns {*}
	 */
	valueAtIndexOrDefault: function(value, index, defaultValue) {
		return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);
	},

	/**
	 * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the
	 * value returned by `fn`. If `fn` is not a function, this method returns undefined.
	 * @param {function} fn - The function to call.
	 * @param {Array|undefined|null} args - The arguments with which `fn` should be called.
	 * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.
	 * @returns {*}
	 */
	callback: function(fn, args, thisArg) {
		if (fn && typeof fn.call === 'function') {
			return fn.apply(thisArg, args);
		}
	},

	/**
	 * Note(SB) for performance sake, this method should only be used when loopable type
	 * is unknown or in none intensive code (not called often and small loopable). Else
	 * it's preferable to use a regular for() loop and save extra function calls.
	 * @param {object|Array} loopable - The object or array to be iterated.
	 * @param {function} fn - The function to call for each item.
	 * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.
	 * @param {boolean} [reverse] - If true, iterates backward on the loopable.
	 */
	each: function(loopable, fn, thisArg, reverse) {
		var i, len, keys;
		if (helpers.isArray(loopable)) {
			len = loopable.length;
			if (reverse) {
				for (i = len - 1; i >= 0; i--) {
					fn.call(thisArg, loopable[i], i);
				}
			} else {
				for (i = 0; i < len; i++) {
					fn.call(thisArg, loopable[i], i);
				}
			}
		} else if (helpers.isObject(loopable)) {
			keys = Object.keys(loopable);
			len = keys.length;
			for (i = 0; i < len; i++) {
				fn.call(thisArg, loopable[keys[i]], keys[i]);
			}
		}
	},

	/**
	 * Returns true if the `a0` and `a1` arrays have the same content, else returns false.
	 * @see https://stackoverflow.com/a/14853974
	 * @param {Array} a0 - The array to compare
	 * @param {Array} a1 - The array to compare
	 * @returns {boolean}
	 */
	arrayEquals: function(a0, a1) {
		var i, ilen, v0, v1;

		if (!a0 || !a1 || a0.length !== a1.length) {
			return false;
		}

		for (i = 0, ilen = a0.length; i < ilen; ++i) {
			v0 = a0[i];
			v1 = a1[i];

			if (v0 instanceof Array && v1 instanceof Array) {
				if (!helpers.arrayEquals(v0, v1)) {
					return false;
				}
			} else if (v0 !== v1) {
				// NOTE: two different object instances will never be equal: {x:20} != {x:20}
				return false;
			}
		}

		return true;
	},

	/**
	 * Returns a deep copy of `source` without keeping references on objects and arrays.
	 * @param {*} source - The value to clone.
	 * @returns {*}
	 */
	clone: function(source) {
		if (helpers.isArray(source)) {
			return source.map(helpers.clone);
		}

		if (helpers.isObject(source)) {
			var target = Object.create(source);
			var keys = Object.keys(source);
			var klen = keys.length;
			var k = 0;

			for (; k < klen; ++k) {
				target[keys[k]] = helpers.clone(source[keys[k]]);
			}

			return target;
		}

		return source;
	},

	/**
	 * The default merger when Chart.helpers.merge is called without merger option.
	 * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.
	 * @private
	 */
	_merger: function(key, target, source, options) {
		if (!isValidKey(key)) {
			// We want to ensure we do not copy prototypes over
			// as this can pollute global namespaces
			return;
		}

		var tval = target[key];
		var sval = source[key];

		if (helpers.isObject(tval) && helpers.isObject(sval)) {
			helpers.merge(tval, sval, options);
		} else {
			target[key] = helpers.clone(sval);
		}
	},

	/**
	 * Merges source[key] in target[key] only if target[key] is undefined.
	 * @private
	 */
	_mergerIf: function(key, target, source) {
		if (!isValidKey(key)) {
			// We want to ensure we do not copy prototypes over
			// as this can pollute global namespaces
			return;
		}

		var tval = target[key];
		var sval = source[key];

		if (helpers.isObject(tval) && helpers.isObject(sval)) {
			helpers.mergeIf(tval, sval);
		} else if (!target.hasOwnProperty(key)) {
			target[key] = helpers.clone(sval);
		}
	},

	/**
	 * Recursively deep copies `source` properties into `target` with the given `options`.
	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
	 * @param {object} target - The target object in which all sources are merged into.
	 * @param {object|object[]} source - Object(s) to merge into `target`.
	 * @param {object} [options] - Merging options:
	 * @param {function} [options.merger] - The merge method (key, target, source, options)
	 * @returns {object} The `target` object.
	 */
	merge: function(target, source, options) {
		var sources = helpers.isArray(source) ? source : [source];
		var ilen = sources.length;
		var merge, i, keys, klen, k;

		if (!helpers.isObject(target)) {
			return target;
		}

		options = options || {};
		merge = options.merger || helpers._merger;

		for (i = 0; i < ilen; ++i) {
			source = sources[i];
			if (!helpers.isObject(source)) {
				continue;
			}

			keys = Object.keys(source);
			for (k = 0, klen = keys.length; k < klen; ++k) {
				merge(keys[k], target, source, options);
			}
		}

		return target;
	},

	/**
	 * Recursively deep copies `source` properties into `target` *only* if not defined in target.
	 * IMPORTANT: `target` is not cloned and will be updated with `source` properties.
	 * @param {object} target - The target object in which all sources are merged into.
	 * @param {object|object[]} source - Object(s) to merge into `target`.
	 * @returns {object} The `target` object.
	 */
	mergeIf: function(target, source) {
		return helpers.merge(target, source, {merger: helpers._mergerIf});
	},

	/**
	 * Applies the contents of two or more objects together into the first object.
	 * @param {object} target - The target object in which all objects are merged into.
	 * @param {object} arg1 - Object containing additional properties to merge in target.
	 * @param {object} argN - Additional objects containing properties to merge in target.
	 * @returns {object} The `target` object.
	 */
	extend: Object.assign || function(target) {
		return helpers.merge(target, [].slice.call(arguments, 1), {
			merger: function(key, dst, src) {
				dst[key] = src[key];
			}
		});
	},

	/**
	 * Basic javascript inheritance based on the model created in Backbone.js
	 */
	inherits: function(extensions) {
		var me = this;
		var ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {
			return me.apply(this, arguments);
		};

		var Surrogate = function() {
			this.constructor = ChartElement;
		};

		Surrogate.prototype = me.prototype;
		ChartElement.prototype = new Surrogate();
		ChartElement.extend = helpers.inherits;

		if (extensions) {
			helpers.extend(ChartElement.prototype, extensions);
		}

		ChartElement.__super__ = me.prototype;
		return ChartElement;
	},

	_deprecated: function(scope, value, previous, current) {
		if (value !== undefined) {
			console.warn(scope + ': "' + previous +
				'" is deprecated. Please use "' + current + '" instead');
		}
	}
};

var helpers_core = helpers;

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.callback instead.
 * @function Chart.helpers.callCallback
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 * @private
 */
helpers.callCallback = helpers.callback;

/**
 * Provided for backward compatibility, use Array.prototype.indexOf instead.
 * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+
 * @function Chart.helpers.indexOf
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.indexOf = function(array, item, fromIndex) {
	return Array.prototype.indexOf.call(array, item, fromIndex);
};

/**
 * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.
 * @function Chart.helpers.getValueOrDefault
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.getValueOrDefault = helpers.valueOrDefault;

/**
 * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.
 * @function Chart.helpers.getValueAtIndexOrDefault
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;

/**
 * Easing functions adapted from Robert Penner's easing equations.
 * @namespace Chart.helpers.easingEffects
 * @see http://www.robertpenner.com/easing/
 */
var effects = {
	linear: function(t) {
		return t;
	},

	easeInQuad: function(t) {
		return t * t;
	},

	easeOutQuad: function(t) {
		return -t * (t - 2);
	},

	easeInOutQuad: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t;
		}
		return -0.5 * ((--t) * (t - 2) - 1);
	},

	easeInCubic: function(t) {
		return t * t * t;
	},

	easeOutCubic: function(t) {
		return (t = t - 1) * t * t + 1;
	},

	easeInOutCubic: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t * t;
		}
		return 0.5 * ((t -= 2) * t * t + 2);
	},

	easeInQuart: function(t) {
		return t * t * t * t;
	},

	easeOutQuart: function(t) {
		return -((t = t - 1) * t * t * t - 1);
	},

	easeInOutQuart: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t * t * t;
		}
		return -0.5 * ((t -= 2) * t * t * t - 2);
	},

	easeInQuint: function(t) {
		return t * t * t * t * t;
	},

	easeOutQuint: function(t) {
		return (t = t - 1) * t * t * t * t + 1;
	},

	easeInOutQuint: function(t) {
		if ((t /= 0.5) < 1) {
			return 0.5 * t * t * t * t * t;
		}
		return 0.5 * ((t -= 2) * t * t * t * t + 2);
	},

	easeInSine: function(t) {
		return -Math.cos(t * (Math.PI / 2)) + 1;
	},

	easeOutSine: function(t) {
		return Math.sin(t * (Math.PI / 2));
	},

	easeInOutSine: function(t) {
		return -0.5 * (Math.cos(Math.PI * t) - 1);
	},

	easeInExpo: function(t) {
		return (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));
	},

	easeOutExpo: function(t) {
		return (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;
	},

	easeInOutExpo: function(t) {
		if (t === 0) {
			return 0;
		}
		if (t === 1) {
			return 1;
		}
		if ((t /= 0.5) < 1) {
			return 0.5 * Math.pow(2, 10 * (t - 1));
		}
		return 0.5 * (-Math.pow(2, -10 * --t) + 2);
	},

	easeInCirc: function(t) {
		if (t >= 1) {
			return t;
		}
		return -(Math.sqrt(1 - t * t) - 1);
	},

	easeOutCirc: function(t) {
		return Math.sqrt(1 - (t = t - 1) * t);
	},

	easeInOutCirc: function(t) {
		if ((t /= 0.5) < 1) {
			return -0.5 * (Math.sqrt(1 - t * t) - 1);
		}
		return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
	},

	easeInElastic: function(t) {
		var s = 1.70158;
		var p = 0;
		var a = 1;
		if (t === 0) {
			return 0;
		}
		if (t === 1) {
			return 1;
		}
		if (!p) {
			p = 0.3;
		}
		if (a < 1) {
			a = 1;
			s = p / 4;
		} else {
			s = p / (2 * Math.PI) * Math.asin(1 / a);
		}
		return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
	},

	easeOutElastic: function(t) {
		var s = 1.70158;
		var p = 0;
		var a = 1;
		if (t === 0) {
			return 0;
		}
		if (t === 1) {
			return 1;
		}
		if (!p) {
			p = 0.3;
		}
		if (a < 1) {
			a = 1;
			s = p / 4;
		} else {
			s = p / (2 * Math.PI) * Math.asin(1 / a);
		}
		return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;
	},

	easeInOutElastic: function(t) {
		var s = 1.70158;
		var p = 0;
		var a = 1;
		if (t === 0) {
			return 0;
		}
		if ((t /= 0.5) === 2) {
			return 1;
		}
		if (!p) {
			p = 0.45;
		}
		if (a < 1) {
			a = 1;
			s = p / 4;
		} else {
			s = p / (2 * Math.PI) * Math.asin(1 / a);
		}
		if (t < 1) {
			return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));
		}
		return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;
	},
	easeInBack: function(t) {
		var s = 1.70158;
		return t * t * ((s + 1) * t - s);
	},

	easeOutBack: function(t) {
		var s = 1.70158;
		return (t = t - 1) * t * ((s + 1) * t + s) + 1;
	},

	easeInOutBack: function(t) {
		var s = 1.70158;
		if ((t /= 0.5) < 1) {
			return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));
		}
		return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);
	},

	easeInBounce: function(t) {
		return 1 - effects.easeOutBounce(1 - t);
	},

	easeOutBounce: function(t) {
		if (t < (1 / 2.75)) {
			return 7.5625 * t * t;
		}
		if (t < (2 / 2.75)) {
			return 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;
		}
		if (t < (2.5 / 2.75)) {
			return 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;
		}
		return 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;
	},

	easeInOutBounce: function(t) {
		if (t < 0.5) {
			return effects.easeInBounce(t * 2) * 0.5;
		}
		return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;
	}
};

var helpers_easing = {
	effects: effects
};

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.easing.effects instead.
 * @function Chart.helpers.easingEffects
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers_core.easingEffects = effects;

var PI = Math.PI;
var RAD_PER_DEG = PI / 180;
var DOUBLE_PI = PI * 2;
var HALF_PI = PI / 2;
var QUARTER_PI = PI / 4;
var TWO_THIRDS_PI = PI * 2 / 3;

/**
 * @namespace Chart.helpers.canvas
 */
var exports$1 = {
	/**
	 * Clears the entire canvas associated to the given `chart`.
	 * @param {Chart} chart - The chart for which to clear the canvas.
	 */
	clear: function(chart) {
		chart.ctx.clearRect(0, 0, chart.width, chart.height);
	},

	/**
	 * Creates a "path" for a rectangle with rounded corners at position (x, y) with a
	 * given size (width, height) and the same `radius` for all corners.
	 * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.
	 * @param {number} x - The x axis of the coordinate for the rectangle starting point.
	 * @param {number} y - The y axis of the coordinate for the rectangle starting point.
	 * @param {number} width - The rectangle's width.
	 * @param {number} height - The rectangle's height.
	 * @param {number} radius - The rounded amount (in pixels) for the four corners.
	 * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?
	 */
	roundedRect: function(ctx, x, y, width, height, radius) {
		if (radius) {
			var r = Math.min(radius, height / 2, width / 2);
			var left = x + r;
			var top = y + r;
			var right = x + width - r;
			var bottom = y + height - r;

			ctx.moveTo(x, top);
			if (left < right && top < bottom) {
				ctx.arc(left, top, r, -PI, -HALF_PI);
				ctx.arc(right, top, r, -HALF_PI, 0);
				ctx.arc(right, bottom, r, 0, HALF_PI);
				ctx.arc(left, bottom, r, HALF_PI, PI);
			} else if (left < right) {
				ctx.moveTo(left, y);
				ctx.arc(right, top, r, -HALF_PI, HALF_PI);
				ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);
			} else if (top < bottom) {
				ctx.arc(left, top, r, -PI, 0);
				ctx.arc(left, bottom, r, 0, PI);
			} else {
				ctx.arc(left, top, r, -PI, PI);
			}
			ctx.closePath();
			ctx.moveTo(x, y);
		} else {
			ctx.rect(x, y, width, height);
		}
	},

	drawPoint: function(ctx, style, radius, x, y, rotation) {
		var type, xOffset, yOffset, size, cornerRadius;
		var rad = (rotation || 0) * RAD_PER_DEG;

		if (style && typeof style === 'object') {
			type = style.toString();
			if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {
				ctx.save();
				ctx.translate(x, y);
				ctx.rotate(rad);
				ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);
				ctx.restore();
				return;
			}
		}

		if (isNaN(radius) || radius <= 0) {
			return;
		}

		ctx.beginPath();

		switch (style) {
		// Default includes circle
		default:
			ctx.arc(x, y, radius, 0, DOUBLE_PI);
			ctx.closePath();
			break;
		case 'triangle':
			ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);
			rad += TWO_THIRDS_PI;
			ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);
			rad += TWO_THIRDS_PI;
			ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);
			ctx.closePath();
			break;
		case 'rectRounded':
			// NOTE: the rounded rect implementation changed to use `arc` instead of
			// `quadraticCurveTo` since it generates better results when rect is
			// almost a circle. 0.516 (instead of 0.5) produces results with visually
			// closer proportion to the previous impl and it is inscribed in the
			// circle with `radius`. For more details, see the following PRs:
			// https://github.com/chartjs/Chart.js/issues/5597
			// https://github.com/chartjs/Chart.js/issues/5858
			cornerRadius = radius * 0.516;
			size = radius - cornerRadius;
			xOffset = Math.cos(rad + QUARTER_PI) * size;
			yOffset = Math.sin(rad + QUARTER_PI) * size;
			ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);
			ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);
			ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);
			ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);
			ctx.closePath();
			break;
		case 'rect':
			if (!rotation) {
				size = Math.SQRT1_2 * radius;
				ctx.rect(x - size, y - size, 2 * size, 2 * size);
				break;
			}
			rad += QUARTER_PI;
			/* falls through */
		case 'rectRot':
			xOffset = Math.cos(rad) * radius;
			yOffset = Math.sin(rad) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + yOffset, y - xOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.lineTo(x - yOffset, y + xOffset);
			ctx.closePath();
			break;
		case 'crossRot':
			rad += QUARTER_PI;
			/* falls through */
		case 'cross':
			xOffset = Math.cos(rad) * radius;
			yOffset = Math.sin(rad) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x + yOffset, y - xOffset);
			ctx.lineTo(x - yOffset, y + xOffset);
			break;
		case 'star':
			xOffset = Math.cos(rad) * radius;
			yOffset = Math.sin(rad) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x + yOffset, y - xOffset);
			ctx.lineTo(x - yOffset, y + xOffset);
			rad += QUARTER_PI;
			xOffset = Math.cos(rad) * radius;
			yOffset = Math.sin(rad) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			ctx.moveTo(x + yOffset, y - xOffset);
			ctx.lineTo(x - yOffset, y + xOffset);
			break;
		case 'line':
			xOffset = Math.cos(rad) * radius;
			yOffset = Math.sin(rad) * radius;
			ctx.moveTo(x - xOffset, y - yOffset);
			ctx.lineTo(x + xOffset, y + yOffset);
			break;
		case 'dash':
			ctx.moveTo(x, y);
			ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);
			break;
		}

		ctx.fill();
		ctx.stroke();
	},

	/**
	 * Returns true if the point is inside the rectangle
	 * @param {object} point - The point to test
	 * @param {object} area - The rectangle
	 * @returns {boolean}
	 * @private
	 */
	_isPointInArea: function(point, area) {
		var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.

		return point.x > area.left - epsilon && point.x < area.right + epsilon &&
			point.y > area.top - epsilon && point.y < area.bottom + epsilon;
	},

	clipArea: function(ctx, area) {
		ctx.save();
		ctx.beginPath();
		ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);
		ctx.clip();
	},

	unclipArea: function(ctx) {
		ctx.restore();
	},

	lineTo: function(ctx, previous, target, flip) {
		var stepped = target.steppedLine;
		if (stepped) {
			if (stepped === 'middle') {
				var midpoint = (previous.x + target.x) / 2.0;
				ctx.lineTo(midpoint, flip ? target.y : previous.y);
				ctx.lineTo(midpoint, flip ? previous.y : target.y);
			} else if ((stepped === 'after' && !flip) || (stepped !== 'after' && flip)) {
				ctx.lineTo(previous.x, target.y);
			} else {
				ctx.lineTo(target.x, previous.y);
			}
			ctx.lineTo(target.x, target.y);
			return;
		}

		if (!target.tension) {
			ctx.lineTo(target.x, target.y);
			return;
		}

		ctx.bezierCurveTo(
			flip ? previous.controlPointPreviousX : previous.controlPointNextX,
			flip ? previous.controlPointPreviousY : previous.controlPointNextY,
			flip ? target.controlPointNextX : target.controlPointPreviousX,
			flip ? target.controlPointNextY : target.controlPointPreviousY,
			target.x,
			target.y);
	}
};

var helpers_canvas = exports$1;

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.
 * @namespace Chart.helpers.clear
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers_core.clear = exports$1.clear;

/**
 * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.
 * @namespace Chart.helpers.drawRoundedRectangle
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers_core.drawRoundedRectangle = function(ctx) {
	ctx.beginPath();
	exports$1.roundedRect.apply(exports$1, arguments);
};

var defaults = {
	/**
	 * @private
	 */
	_set: function(scope, values) {
		return helpers_core.merge(this[scope] || (this[scope] = {}), values);
	}
};

// TODO(v3): remove 'global' from namespace.  all default are global and
// there's inconsistency around which options are under 'global'
defaults._set('global', {
	defaultColor: 'rgba(0,0,0,0.1)',
	defaultFontColor: '#666',
	defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",
	defaultFontSize: 12,
	defaultFontStyle: 'normal',
	defaultLineHeight: 1.2,
	showLines: true
});

var core_defaults = defaults;

var valueOrDefault = helpers_core.valueOrDefault;

/**
 * Converts the given font object into a CSS font string.
 * @param {object} font - A font object.
 * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font
 * @private
 */
function toFontString(font) {
	if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {
		return null;
	}

	return (font.style ? font.style + ' ' : '')
		+ (font.weight ? font.weight + ' ' : '')
		+ font.size + 'px '
		+ font.family;
}

/**
 * @alias Chart.helpers.options
 * @namespace
 */
var helpers_options = {
	/**
	 * Converts the given line height `value` in pixels for a specific font `size`.
	 * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').
	 * @param {number} size - The font size (in pixels) used to resolve relative `value`.
	 * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).
	 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height
	 * @since 2.7.0
	 */
	toLineHeight: function(value, size) {
		var matches = ('' + value).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
		if (!matches || matches[1] === 'normal') {
			return size * 1.2;
		}

		value = +matches[2];

		switch (matches[3]) {
		case 'px':
			return value;
		case '%':
			value /= 100;
			break;
		}

		return size * value;
	},

	/**
	 * Converts the given value into a padding object with pre-computed width/height.
	 * @param {number|object} value - If a number, set the value to all TRBL component,
	 *  else, if and object, use defined properties and sets undefined ones to 0.
	 * @returns {object} The padding values (top, right, bottom, left, width, height)
	 * @since 2.7.0
	 */
	toPadding: function(value) {
		var t, r, b, l;

		if (helpers_core.isObject(value)) {
			t = +value.top || 0;
			r = +value.right || 0;
			b = +value.bottom || 0;
			l = +value.left || 0;
		} else {
			t = r = b = l = +value || 0;
		}

		return {
			top: t,
			right: r,
			bottom: b,
			left: l,
			height: t + b,
			width: l + r
		};
	},

	/**
	 * Parses font options and returns the font object.
	 * @param {object} options - A object that contains font options to be parsed.
	 * @return {object} The font object.
	 * @todo Support font.* options and renamed to toFont().
	 * @private
	 */
	_parseFont: function(options) {
		var globalDefaults = core_defaults.global;
		var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);
		var font = {
			family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),
			lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),
			size: size,
			style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),
			weight: null,
			string: ''
		};

		font.string = toFontString(font);
		return font;
	},

	/**
	 * Evaluates the given `inputs` sequentially and returns the first defined value.
	 * @param {Array} inputs - An array of values, falling back to the last value.
	 * @param {object} [context] - If defined and the current value is a function, the value
	 * is called with `context` as first argument and the result becomes the new input.
	 * @param {number} [index] - If defined and the current value is an array, the value
	 * at `index` become the new input.
	 * @param {object} [info] - object to return information about resolution in
	 * @param {boolean} [info.cacheable] - Will be set to `false` if option is not cacheable.
	 * @since 2.7.0
	 */
	resolve: function(inputs, context, index, info) {
		var cacheable = true;
		var i, ilen, value;

		for (i = 0, ilen = inputs.length; i < ilen; ++i) {
			value = inputs[i];
			if (value === undefined) {
				continue;
			}
			if (context !== undefined && typeof value === 'function') {
				value = value(context);
				cacheable = false;
			}
			if (index !== undefined && helpers_core.isArray(value)) {
				value = value[index];
				cacheable = false;
			}
			if (value !== undefined) {
				if (info && !cacheable) {
					info.cacheable = false;
				}
				return value;
			}
		}
	}
};

/**
 * @alias Chart.helpers.math
 * @namespace
 */
var exports$2 = {
	/**
	 * Returns an array of factors sorted from 1 to sqrt(value)
	 * @private
	 */
	_factorize: function(value) {
		var result = [];
		var sqrt = Math.sqrt(value);
		var i;

		for (i = 1; i < sqrt; i++) {
			if (value % i === 0) {
				result.push(i);
				result.push(value / i);
			}
		}
		if (sqrt === (sqrt | 0)) { // if value is a square number
			result.push(sqrt);
		}

		result.sort(function(a, b) {
			return a - b;
		}).pop();
		return result;
	},

	log10: Math.log10 || function(x) {
		var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.
		// Check for whole powers of 10,
		// which due to floating point rounding error should be corrected.
		var powerOf10 = Math.round(exponent);
		var isPowerOf10 = x === Math.pow(10, powerOf10);

		return isPowerOf10 ? powerOf10 : exponent;
	}
};

var helpers_math = exports$2;

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.helpers.math.log10 instead.
 * @namespace Chart.helpers.log10
 * @deprecated since version 2.9.0
 * @todo remove at version 3
 * @private
 */
helpers_core.log10 = exports$2.log10;

var getRtlAdapter = function(rectX, width) {
	return {
		x: function(x) {
			return rectX + rectX + width - x;
		},
		setWidth: function(w) {
			width = w;
		},
		textAlign: function(align) {
			if (align === 'center') {
				return align;
			}
			return align === 'right' ? 'left' : 'right';
		},
		xPlus: function(x, value) {
			return x - value;
		},
		leftForLtr: function(x, itemWidth) {
			return x - itemWidth;
		},
	};
};

var getLtrAdapter = function() {
	return {
		x: function(x) {
			return x;
		},
		setWidth: function(w) { // eslint-disable-line no-unused-vars
		},
		textAlign: function(align) {
			return align;
		},
		xPlus: function(x, value) {
			return x + value;
		},
		leftForLtr: function(x, _itemWidth) { // eslint-disable-line no-unused-vars
			return x;
		},
	};
};

var getAdapter = function(rtl, rectX, width) {
	return rtl ? getRtlAdapter(rectX, width) : getLtrAdapter();
};

var overrideTextDirection = function(ctx, direction) {
	var style, original;
	if (direction === 'ltr' || direction === 'rtl') {
		style = ctx.canvas.style;
		original = [
			style.getPropertyValue('direction'),
			style.getPropertyPriority('direction'),
		];

		style.setProperty('direction', direction, 'important');
		ctx.prevTextDirection = original;
	}
};

var restoreTextDirection = function(ctx) {
	var original = ctx.prevTextDirection;
	if (original !== undefined) {
		delete ctx.prevTextDirection;
		ctx.canvas.style.setProperty('direction', original[0], original[1]);
	}
};

var helpers_rtl = {
	getRtlAdapter: getAdapter,
	overrideTextDirection: overrideTextDirection,
	restoreTextDirection: restoreTextDirection,
};

var helpers$1 = helpers_core;
var easing = helpers_easing;
var canvas = helpers_canvas;
var options = helpers_options;
var math = helpers_math;
var rtl = helpers_rtl;
helpers$1.easing = easing;
helpers$1.canvas = canvas;
helpers$1.options = options;
helpers$1.math = math;
helpers$1.rtl = rtl;

function interpolate(start, view, model, ease) {
	var keys = Object.keys(model);
	var i, ilen, key, actual, origin, target, type, c0, c1;

	for (i = 0, ilen = keys.length; i < ilen; ++i) {
		key = keys[i];

		target = model[key];

		// if a value is added to the model after pivot() has been called, the view
		// doesn't contain it, so let's initialize the view to the target value.
		if (!view.hasOwnProperty(key)) {
			view[key] = target;
		}

		actual = view[key];

		if (actual === target || key[0] === '_') {
			continue;
		}

		if (!start.hasOwnProperty(key)) {
			start[key] = actual;
		}

		origin = start[key];

		type = typeof target;

		if (type === typeof origin) {
			if (type === 'string') {
				c0 = chartjsColor(origin);
				if (c0.valid) {
					c1 = chartjsColor(target);
					if (c1.valid) {
						view[key] = c1.mix(c0, ease).rgbString();
						continue;
					}
				}
			} else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {
				view[key] = origin + (target - origin) * ease;
				continue;
			}
		}

		view[key] = target;
	}
}

var Element = function(configuration) {
	helpers$1.extend(this, configuration);
	this.initialize.apply(this, arguments);
};

helpers$1.extend(Element.prototype, {
	_type: undefined,

	initialize: function() {
		this.hidden = false;
	},

	pivot: function() {
		var me = this;
		if (!me._view) {
			me._view = helpers$1.extend({}, me._model);
		}
		me._start = {};
		return me;
	},

	transition: function(ease) {
		var me = this;
		var model = me._model;
		var start = me._start;
		var view = me._view;

		// No animation -> No Transition
		if (!model || ease === 1) {
			me._view = helpers$1.extend({}, model);
			me._start = null;
			return me;
		}

		if (!view) {
			view = me._view = {};
		}

		if (!start) {
			start = me._start = {};
		}

		interpolate(start, view, model, ease);

		return me;
	},

	tooltipPosition: function() {
		return {
			x: this._model.x,
			y: this._model.y
		};
	},

	hasValue: function() {
		return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);
	}
});

Element.extend = helpers$1.inherits;

var core_element = Element;

var exports$3 = core_element.extend({
	chart: null, // the animation associated chart instance
	currentStep: 0, // the current animation step
	numSteps: 60, // default number of steps
	easing: '', // the easing to use for this animation
	render: null, // render function used by the animation service

	onAnimationProgress: null, // user specified callback to fire on each step of the animation
	onAnimationComplete: null, // user specified callback to fire when the animation finishes
});

var core_animation = exports$3;

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart.Animation instead
 * @prop Chart.Animation#animationObject
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 */
Object.defineProperty(exports$3.prototype, 'animationObject', {
	get: function() {
		return this;
	}
});

/**
 * Provided for backward compatibility, use Chart.Animation#chart instead
 * @prop Chart.Animation#chartInstance
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 */
Object.defineProperty(exports$3.prototype, 'chartInstance', {
	get: function() {
		return this.chart;
	},
	set: function(value) {
		this.chart = value;
	}
});

core_defaults._set('global', {
	animation: {
		duration: 1000,
		easing: 'easeOutQuart',
		onProgress: helpers$1.noop,
		onComplete: helpers$1.noop
	}
});

var core_animations = {
	animations: [],
	request: null,

	/**
	 * @param {Chart} chart - The chart to animate.
	 * @param {Chart.Animation} animation - The animation that we will animate.
	 * @param {number} duration - The animation duration in ms.
	 * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions
	 */
	addAnimation: function(chart, animation, duration, lazy) {
		var animations = this.animations;
		var i, ilen;

		animation.chart = chart;
		animation.startTime = Date.now();
		animation.duration = duration;

		if (!lazy) {
			chart.animating = true;
		}

		for (i = 0, ilen = animations.length; i < ilen; ++i) {
			if (animations[i].chart === chart) {
				animations[i] = animation;
				return;
			}
		}

		animations.push(animation);

		// If there are no animations queued, manually kickstart a digest, for lack of a better word
		if (animations.length === 1) {
			this.requestAnimationFrame();
		}
	},

	cancelAnimation: function(chart) {
		var index = helpers$1.findIndex(this.animations, function(animation) {
			return animation.chart === chart;
		});

		if (index !== -1) {
			this.animations.splice(index, 1);
			chart.animating = false;
		}
	},

	requestAnimationFrame: function() {
		var me = this;
		if (me.request === null) {
			// Skip animation frame requests until the active one is executed.
			// This can happen when processing mouse events, e.g. 'mousemove'
			// and 'mouseout' events will trigger multiple renders.
			me.request = helpers$1.requestAnimFrame.call(window, function() {
				me.request = null;
				me.startDigest();
			});
		}
	},

	/**
	 * @private
	 */
	startDigest: function() {
		var me = this;

		me.advance();

		// Do we have more stuff to animate?
		if (me.animations.length > 0) {
			me.requestAnimationFrame();
		}
	},

	/**
	 * @private
	 */
	advance: function() {
		var animations = this.animations;
		var animation, chart, numSteps, nextStep;
		var i = 0;

		// 1 animation per chart, so we are looping charts here
		while (i < animations.length) {
			animation = animations[i];
			chart = animation.chart;
			numSteps = animation.numSteps;

			// Make sure that currentStep starts at 1
			// https://github.com/chartjs/Chart.js/issues/6104
			nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;
			animation.currentStep = Math.min(nextStep, numSteps);

			helpers$1.callback(animation.render, [chart, animation], chart);
			helpers$1.callback(animation.onAnimationProgress, [animation], chart);

			if (animation.currentStep >= numSteps) {
				helpers$1.callback(animation.onAnimationComplete, [animation], chart);
				chart.animating = false;
				animations.splice(i, 1);
			} else {
				++i;
			}
		}
	}
};

var resolve = helpers$1.options.resolve;

var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];

/**
 * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',
 * 'unshift') and notify the listener AFTER the array has been altered. Listeners are
 * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.
 */
function listenArrayEvents(array, listener) {
	if (array._chartjs) {
		array._chartjs.listeners.push(listener);
		return;
	}

	Object.defineProperty(array, '_chartjs', {
		configurable: true,
		enumerable: false,
		value: {
			listeners: [listener]
		}
	});

	arrayEvents.forEach(function(key) {
		var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);
		var base = array[key];

		Object.defineProperty(array, key, {
			configurable: true,
			enumerable: false,
			value: function() {
				var args = Array.prototype.slice.call(arguments);
				var res = base.apply(this, args);

				helpers$1.each(array._chartjs.listeners, function(object) {
					if (typeof object[method] === 'function') {
						object[method].apply(object, args);
					}
				});

				return res;
			}
		});
	});
}

/**
 * Removes the given array event listener and cleanup extra attached properties (such as
 * the _chartjs stub and overridden methods) if array doesn't have any more listeners.
 */
function unlistenArrayEvents(array, listener) {
	var stub = array._chartjs;
	if (!stub) {
		return;
	}

	var listeners = stub.listeners;
	var index = listeners.indexOf(listener);
	if (index !== -1) {
		listeners.splice(index, 1);
	}

	if (listeners.length > 0) {
		return;
	}

	arrayEvents.forEach(function(key) {
		delete array[key];
	});

	delete array._chartjs;
}

// Base class for all dataset controllers (line, bar, etc)
var DatasetController = function(chart, datasetIndex) {
	this.initialize(chart, datasetIndex);
};

helpers$1.extend(DatasetController.prototype, {

	/**
	 * Element type used to generate a meta dataset (e.g. Chart.element.Line).
	 * @type {Chart.core.element}
	 */
	datasetElementType: null,

	/**
	 * Element type used to generate a meta data (e.g. Chart.element.Point).
	 * @type {Chart.core.element}
	 */
	dataElementType: null,

	/**
	 * Dataset element option keys to be resolved in _resolveDatasetElementOptions.
	 * A derived controller may override this to resolve controller-specific options.
	 * The keys defined here are for backward compatibility for legend styles.
	 * @private
	 */
	_datasetElementOptions: [
		'backgroundColor',
		'borderCapStyle',
		'borderColor',
		'borderDash',
		'borderDashOffset',
		'borderJoinStyle',
		'borderWidth'
	],

	/**
	 * Data element option keys to be resolved in _resolveDataElementOptions.
	 * A derived controller may override this to resolve controller-specific options.
	 * The keys defined here are for backward compatibility for legend styles.
	 * @private
	 */
	_dataElementOptions: [
		'backgroundColor',
		'borderColor',
		'borderWidth',
		'pointStyle'
	],

	initialize: function(chart, datasetIndex) {
		var me = this;
		me.chart = chart;
		me.index = datasetIndex;
		me.linkScales();
		me.addElements();
		me._type = me.getMeta().type;
	},

	updateIndex: function(datasetIndex) {
		this.index = datasetIndex;
	},

	linkScales: function() {
		var me = this;
		var meta = me.getMeta();
		var chart = me.chart;
		var scales = chart.scales;
		var dataset = me.getDataset();
		var scalesOpts = chart.options.scales;

		if (meta.xAxisID === null || !(meta.xAxisID in scales) || dataset.xAxisID) {
			meta.xAxisID = dataset.xAxisID || scalesOpts.xAxes[0].id;
		}
		if (meta.yAxisID === null || !(meta.yAxisID in scales) || dataset.yAxisID) {
			meta.yAxisID = dataset.yAxisID || scalesOpts.yAxes[0].id;
		}
	},

	getDataset: function() {
		return this.chart.data.datasets[this.index];
	},

	getMeta: function() {
		return this.chart.getDatasetMeta(this.index);
	},

	getScaleForId: function(scaleID) {
		return this.chart.scales[scaleID];
	},

	/**
	 * @private
	 */
	_getValueScaleId: function() {
		return this.getMeta().yAxisID;
	},

	/**
	 * @private
	 */
	_getIndexScaleId: function() {
		return this.getMeta().xAxisID;
	},

	/**
	 * @private
	 */
	_getValueScale: function() {
		return this.getScaleForId(this._getValueScaleId());
	},

	/**
	 * @private
	 */
	_getIndexScale: function() {
		return this.getScaleForId(this._getIndexScaleId());
	},

	reset: function() {
		this._update(true);
	},

	/**
	 * @private
	 */
	destroy: function() {
		if (this._data) {
			unlistenArrayEvents(this._data, this);
		}
	},

	createMetaDataset: function() {
		var me = this;
		var type = me.datasetElementType;
		return type && new type({
			_chart: me.chart,
			_datasetIndex: me.index
		});
	},

	createMetaData: function(index) {
		var me = this;
		var type = me.dataElementType;
		return type && new type({
			_chart: me.chart,
			_datasetIndex: me.index,
			_index: index
		});
	},

	addElements: function() {
		var me = this;
		var meta = me.getMeta();
		var data = me.getDataset().data || [];
		var metaData = meta.data;
		var i, ilen;

		for (i = 0, ilen = data.length; i < ilen; ++i) {
			metaData[i] = metaData[i] || me.createMetaData(i);
		}

		meta.dataset = meta.dataset || me.createMetaDataset();
	},

	addElementAndReset: function(index) {
		var element = this.createMetaData(index);
		this.getMeta().data.splice(index, 0, element);
		this.updateElement(element, index, true);
	},

	buildOrUpdateElements: function() {
		var me = this;
		var dataset = me.getDataset();
		var data = dataset.data || (dataset.data = []);

		// In order to correctly handle data addition/deletion animation (an thus simulate
		// real-time charts), we need to monitor these data modifications and synchronize
		// the internal meta data accordingly.
		if (me._data !== data) {
			if (me._data) {
				// This case happens when the user replaced the data array instance.
				unlistenArrayEvents(me._data, me);
			}

			if (data && Object.isExtensible(data)) {
				listenArrayEvents(data, me);
			}
			me._data = data;
		}

		// Re-sync meta data in case the user replaced the data array or if we missed
		// any updates and so make sure that we handle number of datapoints changing.
		me.resyncElements();
	},

	/**
	 * Returns the merged user-supplied and default dataset-level options
	 * @private
	 */
	_configure: function() {
		var me = this;
		me._config = helpers$1.merge(Object.create(null), [
			me.chart.options.datasets[me._type],
			me.getDataset(),
		], {
			merger: function(key, target, source) {
				if (key !== '_meta' && key !== 'data') {
					helpers$1._merger(key, target, source);
				}
			}
		});
	},

	_update: function(reset) {
		var me = this;
		me._configure();
		me._cachedDataOpts = null;
		me.update(reset);
	},

	update: helpers$1.noop,

	transition: function(easingValue) {
		var meta = this.getMeta();
		var elements = meta.data || [];
		var ilen = elements.length;
		var i = 0;

		for (; i < ilen; ++i) {
			elements[i].transition(easingValue);
		}

		if (meta.dataset) {
			meta.dataset.transition(easingValue);
		}
	},

	draw: function() {
		var meta = this.getMeta();
		var elements = meta.data || [];
		var ilen = elements.length;
		var i = 0;

		if (meta.dataset) {
			meta.dataset.draw();
		}

		for (; i < ilen; ++i) {
			elements[i].draw();
		}
	},

	/**
	 * Returns a set of predefined style properties that should be used to represent the dataset
	 * or the data if the index is specified
	 * @param {number} index - data index
	 * @return {IStyleInterface} style object
	 */
	getStyle: function(index) {
		var me = this;
		var meta = me.getMeta();
		var dataset = meta.dataset;
		var style;

		me._configure();
		if (dataset && index === undefined) {
			style = me._resolveDatasetElementOptions(dataset || {});
		} else {
			index = index || 0;
			style = me._resolveDataElementOptions(meta.data[index] || {}, index);
		}

		if (style.fill === false || style.fill === null) {
			style.backgroundColor = style.borderColor;
		}

		return style;
	},

	/**
	 * @private
	 */
	_resolveDatasetElementOptions: function(element, hover) {
		var me = this;
		var chart = me.chart;
		var datasetOpts = me._config;
		var custom = element.custom || {};
		var options = chart.options.elements[me.datasetElementType.prototype._type] || {};
		var elementOptions = me._datasetElementOptions;
		var values = {};
		var i, ilen, key, readKey;

		// Scriptable options
		var context = {
			chart: chart,
			dataset: me.getDataset(),
			datasetIndex: me.index,
			hover: hover
		};

		for (i = 0, ilen = elementOptions.length; i < ilen; ++i) {
			key = elementOptions[i];
			readKey = hover ? 'hover' + key.charAt(0).toUpperCase() + key.slice(1) : key;
			values[key] = resolve([
				custom[readKey],
				datasetOpts[readKey],
				options[readKey]
			], context);
		}

		return values;
	},

	/**
	 * @private
	 */
	_resolveDataElementOptions: function(element, index) {
		var me = this;
		var custom = element && element.custom;
		var cached = me._cachedDataOpts;
		if (cached && !custom) {
			return cached;
		}
		var chart = me.chart;
		var datasetOpts = me._config;
		var options = chart.options.elements[me.dataElementType.prototype._type] || {};
		var elementOptions = me._dataElementOptions;
		var values = {};

		// Scriptable options
		var context = {
			chart: chart,
			dataIndex: index,
			dataset: me.getDataset(),
			datasetIndex: me.index
		};

		// `resolve` sets cacheable to `false` if any option is indexed or scripted
		var info = {cacheable: !custom};

		var keys, i, ilen, key;

		custom = custom || {};

		if (helpers$1.isArray(elementOptions)) {
			for (i = 0, ilen = elementOptions.length; i < ilen; ++i) {
				key = elementOptions[i];
				values[key] = resolve([
					custom[key],
					datasetOpts[key],
					options[key]
				], context, index, info);
			}
		} else {
			keys = Object.keys(elementOptions);
			for (i = 0, ilen = keys.length; i < ilen; ++i) {
				key = keys[i];
				values[key] = resolve([
					custom[key],
					datasetOpts[elementOptions[key]],
					datasetOpts[key],
					options[key]
				], context, index, info);
			}
		}

		if (info.cacheable) {
			me._cachedDataOpts = Object.freeze(values);
		}

		return values;
	},

	removeHoverStyle: function(element) {
		helpers$1.merge(element._model, element.$previousStyle || {});
		delete element.$previousStyle;
	},

	setHoverStyle: function(element) {
		var dataset = this.chart.data.datasets[element._datasetIndex];
		var index = element._index;
		var custom = element.custom || {};
		var model = element._model;
		var getHoverColor = helpers$1.getHoverColor;

		element.$previousStyle = {
			backgroundColor: model.backgroundColor,
			borderColor: model.borderColor,
			borderWidth: model.borderWidth
		};

		model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);
		model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);
		model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);
	},

	/**
	 * @private
	 */
	_removeDatasetHoverStyle: function() {
		var element = this.getMeta().dataset;

		if (element) {
			this.removeHoverStyle(element);
		}
	},

	/**
	 * @private
	 */
	_setDatasetHoverStyle: function() {
		var element = this.getMeta().dataset;
		var prev = {};
		var i, ilen, key, keys, hoverOptions, model;

		if (!element) {
			return;
		}

		model = element._model;
		hoverOptions = this._resolveDatasetElementOptions(element, true);

		keys = Object.keys(hoverOptions);
		for (i = 0, ilen = keys.length; i < ilen; ++i) {
			key = keys[i];
			prev[key] = model[key];
			model[key] = hoverOptions[key];
		}

		element.$previousStyle = prev;
	},

	/**
	 * @private
	 */
	resyncElements: function() {
		var me = this;
		var meta = me.getMeta();
		var data = me.getDataset().data;
		var numMeta = meta.data.length;
		var numData = data.length;

		if (numData < numMeta) {
			meta.data.splice(numData, numMeta - numData);
		} else if (numData > numMeta) {
			me.insertElements(numMeta, numData - numMeta);
		}
	},

	/**
	 * @private
	 */
	insertElements: function(start, count) {
		for (var i = 0; i < count; ++i) {
			this.addElementAndReset(start + i);
		}
	},

	/**
	 * @private
	 */
	onDataPush: function() {
		var count = arguments.length;
		this.insertElements(this.getDataset().data.length - count, count);
	},

	/**
	 * @private
	 */
	onDataPop: function() {
		this.getMeta().data.pop();
	},

	/**
	 * @private
	 */
	onDataShift: function() {
		this.getMeta().data.shift();
	},

	/**
	 * @private
	 */
	onDataSplice: function(start, count) {
		this.getMeta().data.splice(start, count);
		this.insertElements(start, arguments.length - 2);
	},

	/**
	 * @private
	 */
	onDataUnshift: function() {
		this.insertElements(0, arguments.length);
	}
});

DatasetController.extend = helpers$1.inherits;

var core_datasetController = DatasetController;

var TAU = Math.PI * 2;

core_defaults._set('global', {
	elements: {
		arc: {
			backgroundColor: core_defaults.global.defaultColor,
			borderColor: '#fff',
			borderWidth: 2,
			borderAlign: 'center'
		}
	}
});

function clipArc(ctx, arc) {
	var startAngle = arc.startAngle;
	var endAngle = arc.endAngle;
	var pixelMargin = arc.pixelMargin;
	var angleMargin = pixelMargin / arc.outerRadius;
	var x = arc.x;
	var y = arc.y;

	// Draw an inner border by cliping the arc and drawing a double-width border
	// Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders
	ctx.beginPath();
	ctx.arc(x, y, arc.outerRadius, startAngle - angleMargin, endAngle + angleMargin);
	if (arc.innerRadius > pixelMargin) {
		angleMargin = pixelMargin / arc.innerRadius;
		ctx.arc(x, y, arc.innerRadius - pixelMargin, endAngle + angleMargin, startAngle - angleMargin, true);
	} else {
		ctx.arc(x, y, pixelMargin, endAngle + Math.PI / 2, startAngle - Math.PI / 2);
	}
	ctx.closePath();
	ctx.clip();
}

function drawFullCircleBorders(ctx, vm, arc, inner) {
	var endAngle = arc.endAngle;
	var i;

	if (inner) {
		arc.endAngle = arc.startAngle + TAU;
		clipArc(ctx, arc);
		arc.endAngle = endAngle;
		if (arc.endAngle === arc.startAngle && arc.fullCircles) {
			arc.endAngle += TAU;
			arc.fullCircles--;
		}
	}

	ctx.beginPath();
	ctx.arc(arc.x, arc.y, arc.innerRadius, arc.startAngle + TAU, arc.startAngle, true);
	for (i = 0; i < arc.fullCircles; ++i) {
		ctx.stroke();
	}

	ctx.beginPath();
	ctx.arc(arc.x, arc.y, vm.outerRadius, arc.startAngle, arc.startAngle + TAU);
	for (i = 0; i < arc.fullCircles; ++i) {
		ctx.stroke();
	}
}

function drawBorder(ctx, vm, arc) {
	var inner = vm.borderAlign === 'inner';

	if (inner) {
		ctx.lineWidth = vm.borderWidth * 2;
		ctx.lineJoin = 'round';
	} else {
		ctx.lineWidth = vm.borderWidth;
		ctx.lineJoin = 'bevel';
	}

	if (arc.fullCircles) {
		drawFullCircleBorders(ctx, vm, arc, inner);
	}

	if (inner) {
		clipArc(ctx, arc);
	}

	ctx.beginPath();
	ctx.arc(arc.x, arc.y, vm.outerRadius, arc.startAngle, arc.endAngle);
	ctx.arc(arc.x, arc.y, arc.innerRadius, arc.endAngle, arc.startAngle, true);
	ctx.closePath();
	ctx.stroke();
}

var element_arc = core_element.extend({
	_type: 'arc',

	inLabelRange: function(mouseX) {
		var vm = this._view;

		if (vm) {
			return (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));
		}
		return false;
	},

	inRange: function(chartX, chartY) {
		var vm = this._view;

		if (vm) {
			var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {x: chartX, y: chartY});
			var angle = pointRelativePosition.angle;
			var distance = pointRelativePosition.distance;

			// Sanitise angle range
			var startAngle = vm.startAngle;
			var endAngle = vm.endAngle;
			while (endAngle < startAngle) {
				endAngle += TAU;
			}
			while (angle > endAngle) {
				angle -= TAU;
			}
			while (angle < startAngle) {
				angle += TAU;
			}

			// Check if within the range of the open/close angle
			var betweenAngles = (angle >= startAngle && angle <= endAngle);
			var withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);

			return (betweenAngles && withinRadius);
		}
		return false;
	},

	getCenterPoint: function() {
		var vm = this._view;
		var halfAngle = (vm.startAngle + vm.endAngle) / 2;
		var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;
		return {
			x: vm.x + Math.cos(halfAngle) * halfRadius,
			y: vm.y + Math.sin(halfAngle) * halfRadius
		};
	},

	getArea: function() {
		var vm = this._view;
		return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));
	},

	tooltipPosition: function() {
		var vm = this._view;
		var centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);
		var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;

		return {
			x: vm.x + (Math.cos(centreAngle) * rangeFromCentre),
			y: vm.y + (Math.sin(centreAngle) * rangeFromCentre)
		};
	},

	draw: function() {
		var ctx = this._chart.ctx;
		var vm = this._view;
		var pixelMargin = (vm.borderAlign === 'inner') ? 0.33 : 0;
		var arc = {
			x: vm.x,
			y: vm.y,
			innerRadius: vm.innerRadius,
			outerRadius: Math.max(vm.outerRadius - pixelMargin, 0),
			pixelMargin: pixelMargin,
			startAngle: vm.startAngle,
			endAngle: vm.endAngle,
			fullCircles: Math.floor(vm.circumference / TAU)
		};
		var i;

		ctx.save();

		ctx.fillStyle = vm.backgroundColor;
		ctx.strokeStyle = vm.borderColor;

		if (arc.fullCircles) {
			arc.endAngle = arc.startAngle + TAU;
			ctx.beginPath();
			ctx.arc(arc.x, arc.y, arc.outerRadius, arc.startAngle, arc.endAngle);
			ctx.arc(arc.x, arc.y, arc.innerRadius, arc.endAngle, arc.startAngle, true);
			ctx.closePath();
			for (i = 0; i < arc.fullCircles; ++i) {
				ctx.fill();
			}
			arc.endAngle = arc.startAngle + vm.circumference % TAU;
		}

		ctx.beginPath();
		ctx.arc(arc.x, arc.y, arc.outerRadius, arc.startAngle, arc.endAngle);
		ctx.arc(arc.x, arc.y, arc.innerRadius, arc.endAngle, arc.startAngle, true);
		ctx.closePath();
		ctx.fill();

		if (vm.borderWidth) {
			drawBorder(ctx, vm, arc);
		}

		ctx.restore();
	}
});

var valueOrDefault$1 = helpers$1.valueOrDefault;

var defaultColor = core_defaults.global.defaultColor;

core_defaults._set('global', {
	elements: {
		line: {
			tension: 0.4,
			backgroundColor: defaultColor,
			borderWidth: 3,
			borderColor: defaultColor,
			borderCapStyle: 'butt',
			borderDash: [],
			borderDashOffset: 0.0,
			borderJoinStyle: 'miter',
			capBezierPoints: true,
			fill: true, // do we fill in the area between the line and its base axis
		}
	}
});

var element_line = core_element.extend({
	_type: 'line',

	draw: function() {
		var me = this;
		var vm = me._view;
		var ctx = me._chart.ctx;
		var spanGaps = vm.spanGaps;
		var points = me._children.slice(); // clone array
		var globalDefaults = core_defaults.global;
		var globalOptionLineElements = globalDefaults.elements.line;
		var lastDrawnIndex = -1;
		var closePath = me._loop;
		var index, previous, currentVM;

		if (!points.length) {
			return;
		}

		if (me._loop) {
			for (index = 0; index < points.length; ++index) {
				previous = helpers$1.previousItem(points, index);
				// If the line has an open path, shift the point array
				if (!points[index]._view.skip && previous._view.skip) {
					points = points.slice(index).concat(points.slice(0, index));
					closePath = spanGaps;
					break;
				}
			}
			// If the line has a close path, add the first point again
			if (closePath) {
				points.push(points[0]);
			}
		}

		ctx.save();

		// Stroke Line Options
		ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;

		// IE 9 and 10 do not support line dash
		if (ctx.setLineDash) {
			ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);
		}

		ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);
		ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;
		ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);
		ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;

		// Stroke Line
		ctx.beginPath();

		// First point moves to it's starting position no matter what
		currentVM = points[0]._view;
		if (!currentVM.skip) {
			ctx.moveTo(currentVM.x, currentVM.y);
			lastDrawnIndex = 0;
		}

		for (index = 1; index < points.length; ++index) {
			currentVM = points[index]._view;
			previous = lastDrawnIndex === -1 ? helpers$1.previousItem(points, index) : points[lastDrawnIndex];

			if (!currentVM.skip) {
				if ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {
					// There was a gap and this is the first point after the gap
					ctx.moveTo(currentVM.x, currentVM.y);
				} else {
					// Line to next point
					helpers$1.canvas.lineTo(ctx, previous._view, currentVM);
				}
				lastDrawnIndex = index;
			}
		}

		if (closePath) {
			ctx.closePath();
		}

		ctx.stroke();
		ctx.restore();
	}
});

var valueOrDefault$2 = helpers$1.valueOrDefault;

var defaultColor$1 = core_defaults.global.defaultColor;

core_defaults._set('global', {
	elements: {
		point: {
			radius: 3,
			pointStyle: 'circle',
			backgroundColor: defaultColor$1,
			borderColor: defaultColor$1,
			borderWidth: 1,
			// Hover
			hitRadius: 1,
			hoverRadius: 4,
			hoverBorderWidth: 1
		}
	}
});

function xRange(mouseX) {
	var vm = this._view;
	return vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;
}

function yRange(mouseY) {
	var vm = this._view;
	return vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;
}

var element_point = core_element.extend({
	_type: 'point',

	inRange: function(mouseX, mouseY) {
		var vm = this._view;
		return vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;
	},

	inLabelRange: xRange,
	inXRange: xRange,
	inYRange: yRange,

	getCenterPoint: function() {
		var vm = this._view;
		return {
			x: vm.x,
			y: vm.y
		};
	},

	getArea: function() {
		return Math.PI * Math.pow(this._view.radius, 2);
	},

	tooltipPosition: function() {
		var vm = this._view;
		return {
			x: vm.x,
			y: vm.y,
			padding: vm.radius + vm.borderWidth
		};
	},

	draw: function(chartArea) {
		var vm = this._view;
		var ctx = this._chart.ctx;
		var pointStyle = vm.pointStyle;
		var rotation = vm.rotation;
		var radius = vm.radius;
		var x = vm.x;
		var y = vm.y;
		var globalDefaults = core_defaults.global;
		var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow

		if (vm.skip) {
			return;
		}

		// Clipping for Points.
		if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {
			ctx.strokeStyle = vm.borderColor || defaultColor;
			ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);
			ctx.fillStyle = vm.backgroundColor || defaultColor;
			helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);
		}
	}
});

var defaultColor$2 = core_defaults.global.defaultColor;

core_defaults._set('global', {
	elements: {
		rectangle: {
			backgroundColor: defaultColor$2,
			borderColor: defaultColor$2,
			borderSkipped: 'bottom',
			borderWidth: 0
		}
	}
});

function isVertical(vm) {
	return vm && vm.width !== undefined;
}

/**
 * Helper function to get the bounds of the bar regardless of the orientation
 * @param bar {Chart.Element.Rectangle} the bar
 * @return {Bounds} bounds of the bar
 * @private
 */
function getBarBounds(vm) {
	var x1, x2, y1, y2, half;

	if (isVertical(vm)) {
		half = vm.width / 2;
		x1 = vm.x - half;
		x2 = vm.x + half;
		y1 = Math.min(vm.y, vm.base);
		y2 = Math.max(vm.y, vm.base);
	} else {
		half = vm.height / 2;
		x1 = Math.min(vm.x, vm.base);
		x2 = Math.max(vm.x, vm.base);
		y1 = vm.y - half;
		y2 = vm.y + half;
	}

	return {
		left: x1,
		top: y1,
		right: x2,
		bottom: y2
	};
}

function swap(orig, v1, v2) {
	return orig === v1 ? v2 : orig === v2 ? v1 : orig;
}

function parseBorderSkipped(vm) {
	var edge = vm.borderSkipped;
	var res = {};

	if (!edge) {
		return res;
	}

	if (vm.horizontal) {
		if (vm.base > vm.x) {
			edge = swap(edge, 'left', 'right');
		}
	} else if (vm.base < vm.y) {
		edge = swap(edge, 'bottom', 'top');
	}

	res[edge] = true;
	return res;
}

function parseBorderWidth(vm, maxW, maxH) {
	var value = vm.borderWidth;
	var skip = parseBorderSkipped(vm);
	var t, r, b, l;

	if (helpers$1.isObject(value)) {
		t = +value.top || 0;
		r = +value.right || 0;
		b = +value.bottom || 0;
		l = +value.left || 0;
	} else {
		t = r = b = l = +value || 0;
	}

	return {
		t: skip.top || (t < 0) ? 0 : t > maxH ? maxH : t,
		r: skip.right || (r < 0) ? 0 : r > maxW ? maxW : r,
		b: skip.bottom || (b < 0) ? 0 : b > maxH ? maxH : b,
		l: skip.left || (l < 0) ? 0 : l > maxW ? maxW : l
	};
}

function boundingRects(vm) {
	var bounds = getBarBounds(vm);
	var width = bounds.right - bounds.left;
	var height = bounds.bottom - bounds.top;
	var border = parseBorderWidth(vm, width / 2, height / 2);

	return {
		outer: {
			x: bounds.left,
			y: bounds.top,
			w: width,
			h: height
		},
		inner: {
			x: bounds.left + border.l,
			y: bounds.top + border.t,
			w: width - border.l - border.r,
			h: height - border.t - border.b
		}
	};
}

function inRange(vm, x, y) {
	var skipX = x === null;
	var skipY = y === null;
	var bounds = !vm || (skipX && skipY) ? false : getBarBounds(vm);

	return bounds
		&& (skipX || x >= bounds.left && x <= bounds.right)
		&& (skipY || y >= bounds.top && y <= bounds.bottom);
}

var element_rectangle = core_element.extend({
	_type: 'rectangle',

	draw: function() {
		var ctx = this._chart.ctx;
		var vm = this._view;
		var rects = boundingRects(vm);
		var outer = rects.outer;
		var inner = rects.inner;

		ctx.fillStyle = vm.backgroundColor;
		ctx.fillRect(outer.x, outer.y, outer.w, outer.h);

		if (outer.w === inner.w && outer.h === inner.h) {
			return;
		}

		ctx.save();
		ctx.beginPath();
		ctx.rect(outer.x, outer.y, outer.w, outer.h);
		ctx.clip();
		ctx.fillStyle = vm.borderColor;
		ctx.rect(inner.x, inner.y, inner.w, inner.h);
		ctx.fill('evenodd');
		ctx.restore();
	},

	height: function() {
		var vm = this._view;
		return vm.base - vm.y;
	},

	inRange: function(mouseX, mouseY) {
		return inRange(this._view, mouseX, mouseY);
	},

	inLabelRange: function(mouseX, mouseY) {
		var vm = this._view;
		return isVertical(vm)
			? inRange(vm, mouseX, null)
			: inRange(vm, null, mouseY);
	},

	inXRange: function(mouseX) {
		return inRange(this._view, mouseX, null);
	},

	inYRange: function(mouseY) {
		return inRange(this._view, null, mouseY);
	},

	getCenterPoint: function() {
		var vm = this._view;
		var x, y;
		if (isVertical(vm)) {
			x = vm.x;
			y = (vm.y + vm.base) / 2;
		} else {
			x = (vm.x + vm.base) / 2;
			y = vm.y;
		}

		return {x: x, y: y};
	},

	getArea: function() {
		var vm = this._view;

		return isVertical(vm)
			? vm.width * Math.abs(vm.y - vm.base)
			: vm.height * Math.abs(vm.x - vm.base);
	},

	tooltipPosition: function() {
		var vm = this._view;
		return {
			x: vm.x,
			y: vm.y
		};
	}
});

var elements = {};
var Arc = element_arc;
var Line = element_line;
var Point = element_point;
var Rectangle = element_rectangle;
elements.Arc = Arc;
elements.Line = Line;
elements.Point = Point;
elements.Rectangle = Rectangle;

var deprecated = helpers$1._deprecated;
var valueOrDefault$3 = helpers$1.valueOrDefault;

core_defaults._set('bar', {
	hover: {
		mode: 'label'
	},

	scales: {
		xAxes: [{
			type: 'category',
			offset: true,
			gridLines: {
				offsetGridLines: true
			}
		}],

		yAxes: [{
			type: 'linear'
		}]
	}
});

core_defaults._set('global', {
	datasets: {
		bar: {
			categoryPercentage: 0.8,
			barPercentage: 0.9
		}
	}
});

/**
 * Computes the "optimal" sample size to maintain bars equally sized while preventing overlap.
 * @private
 */
function computeMinSampleSize(scale, pixels) {
	var min = scale._length;
	var prev, curr, i, ilen;

	for (i = 1, ilen = pixels.length; i < ilen; ++i) {
		min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));
	}

	for (i = 0, ilen = scale.getTicks().length; i < ilen; ++i) {
		curr = scale.getPixelForTick(i);
		min = i > 0 ? Math.min(min, Math.abs(curr - prev)) : min;
		prev = curr;
	}

	return min;
}

/**
 * Computes an "ideal" category based on the absolute bar thickness or, if undefined or null,
 * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This
 * mode currently always generates bars equally sized (until we introduce scriptable options?).
 * @private
 */
function computeFitCategoryTraits(index, ruler, options) {
	var thickness = options.barThickness;
	var count = ruler.stackCount;
	var curr = ruler.pixels[index];
	var min = helpers$1.isNullOrUndef(thickness)
		? computeMinSampleSize(ruler.scale, ruler.pixels)
		: -1;
	var size, ratio;

	if (helpers$1.isNullOrUndef(thickness)) {
		size = min * options.categoryPercentage;
		ratio = options.barPercentage;
	} else {
		// When bar thickness is enforced, category and bar percentages are ignored.
		// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')
		// and deprecate barPercentage since this value is ignored when thickness is absolute.
		size = thickness * count;
		ratio = 1;
	}

	return {
		chunk: size / count,
		ratio: ratio,
		start: curr - (size / 2)
	};
}

/**
 * Computes an "optimal" category that globally arranges bars side by side (no gap when
 * percentage options are 1), based on the previous and following categories. This mode
 * generates bars with different widths when data are not evenly spaced.
 * @private
 */
function computeFlexCategoryTraits(index, ruler, options) {
	var pixels = ruler.pixels;
	var curr = pixels[index];
	var prev = index > 0 ? pixels[index - 1] : null;
	var next = index < pixels.length - 1 ? pixels[index + 1] : null;
	var percent = options.categoryPercentage;
	var start, size;

	if (prev === null) {
		// first data: its size is double based on the next point or,
		// if it's also the last data, we use the scale size.
		prev = curr - (next === null ? ruler.end - ruler.start : next - curr);
	}

	if (next === null) {
		// last data: its size is also double based on the previous point.
		next = curr + curr - prev;
	}

	start = curr - (curr - Math.min(prev, next)) / 2 * percent;
	size = Math.abs(next - prev) / 2 * percent;

	return {
		chunk: size / ruler.stackCount,
		ratio: options.barPercentage,
		start: start
	};
}

var controller_bar = core_datasetController.extend({

	dataElementType: elements.Rectangle,

	/**
	 * @private
	 */
	_dataElementOptions: [
		'backgroundColor',
		'borderColor',
		'borderSkipped',
		'borderWidth',
		'barPercentage',
		'barThickness',
		'categoryPercentage',
		'maxBarThickness',
		'minBarLength'
	],

	initialize: function() {
		var me = this;
		var meta, scaleOpts;

		core_datasetController.prototype.initialize.apply(me, arguments);

		meta = me.getMeta();
		meta.stack = me.getDataset().stack;
		meta.bar = true;

		scaleOpts = me._getIndexScale().options;
		deprecated('bar chart', scaleOpts.barPercentage, 'scales.[x/y]Axes.barPercentage', 'dataset.barPercentage');
		deprecated('bar chart', scaleOpts.barThickness, 'scales.[x/y]Axes.barThickness', 'dataset.barThickness');
		deprecated('bar chart', scaleOpts.categoryPercentage, 'scales.[x/y]Axes.categoryPercentage', 'dataset.categoryPercentage');
		deprecated('bar chart', me._getValueScale().options.minBarLength, 'scales.[x/y]Axes.minBarLength', 'dataset.minBarLength');
		deprecated('bar chart', scaleOpts.maxBarThickness, 'scales.[x/y]Axes.maxBarThickness', 'dataset.maxBarThickness');
	},

	update: function(reset) {
		var me = this;
		var rects = me.getMeta().data;
		var i, ilen;

		me._ruler = me.getRuler();

		for (i = 0, ilen = rects.length; i < ilen; ++i) {
			me.updateElement(rects[i], i, reset);
		}
	},

	updateElement: function(rectangle, index, reset) {
		var me = this;
		var meta = me.getMeta();
		var dataset = me.getDataset();
		var options = me._resolveDataElementOptions(rectangle, index);

		rectangle._xScale = me.getScaleForId(meta.xAxisID);
		rectangle._yScale = me.getScaleForId(meta.yAxisID);
		rectangle._datasetIndex = me.index;
		rectangle._index = index;
		rectangle._model = {
			backgroundColor: options.backgroundColor,
			borderColor: options.borderColor,
			borderSkipped: options.borderSkipped,
			borderWidth: options.borderWidth,
			datasetLabel: dataset.label,
			label: me.chart.data.labels[index]
		};

		if (helpers$1.isArray(dataset.data[index])) {
			rectangle._model.borderSkipped = null;
		}

		me._updateElementGeometry(rectangle, index, reset, options);

		rectangle.pivot();
	},

	/**
	 * @private
	 */
	_updateElementGeometry: function(rectangle, index, reset, options) {
		var me = this;
		var model = rectangle._model;
		var vscale = me._getValueScale();
		var base = vscale.getBasePixel();
		var horizontal = vscale.isHorizontal();
		var ruler = me._ruler || me.getRuler();
		var vpixels = me.calculateBarValuePixels(me.index, index, options);
		var ipixels = me.calculateBarIndexPixels(me.index, index, ruler, options);

		model.horizontal = horizontal;
		model.base = reset ? base : vpixels.base;
		model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;
		model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;
		model.height = horizontal ? ipixels.size : undefined;
		model.width = horizontal ? undefined : ipixels.size;
	},

	/**
	 * Returns the stacks based on groups and bar visibility.
	 * @param {number} [last] - The dataset index
	 * @returns {string[]} The list of stack IDs
	 * @private
	 */
	_getStacks: function(last) {
		var me = this;
		var scale = me._getIndexScale();
		var metasets = scale._getMatchingVisibleMetas(me._type);
		var stacked = scale.options.stacked;
		var ilen = metasets.length;
		var stacks = [];
		var i, meta;

		for (i = 0; i < ilen; ++i) {
			meta = metasets[i];
			// stacked   | meta.stack
			//           | found | not found | undefined
			// false     |   x   |     x     |     x
			// true      |       |     x     |
			// undefined |       |     x     |     x
			if (stacked === false || stacks.indexOf(meta.stack) === -1 ||
				(stacked === undefined && meta.stack === undefined)) {
				stacks.push(meta.stack);
			}
			if (meta.index === last) {
				break;
			}
		}

		return stacks;
	},

	/**
	 * Returns the effective number of stacks based on groups and bar visibility.
	 * @private
	 */
	getStackCount: function() {
		return this._getStacks().length;
	},

	/**
	 * Returns the stack index for the given dataset based on groups and bar visibility.
	 * @param {number} [datasetIndex] - The dataset index
	 * @param {string} [name] - The stack name to find
	 * @returns {number} The stack index
	 * @private
	 */
	getStackIndex: function(datasetIndex, name) {
		var stacks = this._getStacks(datasetIndex);
		var index = (name !== undefined)
			? stacks.indexOf(name)
			: -1; // indexOf returns -1 if element is not present

		return (index === -1)
			? stacks.length - 1
			: index;
	},

	/**
	 * @private
	 */
	getRuler: function() {
		var me = this;
		var scale = me._getIndexScale();
		var pixels = [];
		var i, ilen;

		for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {
			pixels.push(scale.getPixelForValue(null, i, me.index));
		}

		return {
			pixels: pixels,
			start: scale._startPixel,
			end: scale._endPixel,
			stackCount: me.getStackCount(),
			scale: scale
		};
	},

	/**
	 * Note: pixel values are not clamped to the scale area.
	 * @private
	 */
	calculateBarValuePixels: function(datasetIndex, index, options) {
		var me = this;
		var chart = me.chart;
		var scale = me._getValueScale();
		var isHorizontal = scale.isHorizontal();
		var datasets = chart.data.datasets;
		var metasets = scale._getMatchingVisibleMetas(me._type);
		var value = scale._parseValue(datasets[datasetIndex].data[index]);
		var minBarLength = options.minBarLength;
		var stacked = scale.options.stacked;
		var stack = me.getMeta().stack;
		var start = value.start === undefined ? 0 : value.max >= 0 && value.min >= 0 ? value.min : value.max;
		var length = value.start === undefined ? value.end : value.max >= 0 && value.min >= 0 ? value.max - value.min : value.min - value.max;
		var ilen = metasets.length;
		var i, imeta, ivalue, base, head, size, stackLength;

		if (stacked || (stacked === undefined && stack !== undefined)) {
			for (i = 0; i < ilen; ++i) {
				imeta = metasets[i];

				if (imeta.index === datasetIndex) {
					break;
				}

				if (imeta.stack === stack) {
					stackLength = scale._parseValue(datasets[imeta.index].data[index]);
					ivalue = stackLength.start === undefined ? stackLength.end : stackLength.min >= 0 && stackLength.max >= 0 ? stackLength.max : stackLength.min;

					if ((value.min < 0 && ivalue < 0) || (value.max >= 0 && ivalue > 0)) {
						start += ivalue;
					}
				}
			}
		}

		base = scale.getPixelForValue(start);
		head = scale.getPixelForValue(start + length);
		size = head - base;

		if (minBarLength !== undefined && Math.abs(size) < minBarLength) {
			size = minBarLength;
			if (length >= 0 && !isHorizontal || length < 0 && isHorizontal) {
				head = base - minBarLength;
			} else {
				head = base + minBarLength;
			}
		}

		return {
			size: size,
			base: base,
			head: head,
			center: head + size / 2
		};
	},

	/**
	 * @private
	 */
	calculateBarIndexPixels: function(datasetIndex, index, ruler, options) {
		var me = this;
		var range = options.barThickness === 'flex'
			? computeFlexCategoryTraits(index, ruler, options)
			: computeFitCategoryTraits(index, ruler, options);

		var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);
		var center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);
		var size = Math.min(
			valueOrDefault$3(options.maxBarThickness, Infinity),
			range.chunk * range.ratio);

		return {
			base: center - size / 2,
			head: center + size / 2,
			center: center,
			size: size
		};
	},

	draw: function() {
		var me = this;
		var chart = me.chart;
		var scale = me._getValueScale();
		var rects = me.getMeta().data;
		var dataset = me.getDataset();
		var ilen = rects.length;
		var i = 0;

		helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);

		for (; i < ilen; ++i) {
			var val = scale._parseValue(dataset.data[i]);
			if (!isNaN(val.min) && !isNaN(val.max)) {
				rects[i].draw();
			}
		}

		helpers$1.canvas.unclipArea(chart.ctx);
	},

	/**
	 * @private
	 */
	_resolveDataElementOptions: function() {
		var me = this;
		var values = helpers$1.extend({}, core_datasetController.prototype._resolveDataElementOptions.apply(me, arguments));
		var indexOpts = me._getIndexScale().options;
		var valueOpts = me._getValueScale().options;

		values.barPercentage = valueOrDefault$3(indexOpts.barPercentage, values.barPercentage);
		values.barThickness = valueOrDefault$3(indexOpts.barThickness, values.barThickness);
		values.categoryPercentage = valueOrDefault$3(indexOpts.categoryPercentage, values.categoryPercentage);
		values.maxBarThickness = valueOrDefault$3(indexOpts.maxBarThickness, values.maxBarThickness);
		values.minBarLength = valueOrDefault$3(valueOpts.minBarLength, values.minBarLength);

		return values;
	}

});

var valueOrDefault$4 = helpers$1.valueOrDefault;
var resolve$1 = helpers$1.options.resolve;

core_defaults._set('bubble', {
	hover: {
		mode: 'single'
	},

	scales: {
		xAxes: [{
			type: 'linear', // bubble should probably use a linear scale by default
			position: 'bottom',
			id: 'x-axis-0' // need an ID so datasets can reference the scale
		}],
		yAxes: [{
			type: 'linear',
			position: 'left',
			id: 'y-axis-0'
		}]
	},

	tooltips: {
		callbacks: {
			title: function() {
				// Title doesn't make sense for scatter since we format the data as a point
				return '';
			},
			label: function(item, data) {
				var datasetLabel = data.datasets[item.datasetIndex].label || '';
				var dataPoint = data.datasets[item.datasetIndex].data[item.index];
				return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';
			}
		}
	}
});

var controller_bubble = core_datasetController.extend({
	/**
	 * @protected
	 */
	dataElementType: elements.Point,

	/**
	 * @private
	 */
	_dataElementOptions: [
		'backgroundColor',
		'borderColor',
		'borderWidth',
		'hoverBackgroundColor',
		'hoverBorderColor',
		'hoverBorderWidth',
		'hoverRadius',
		'hitRadius',
		'pointStyle',
		'rotation'
	],

	/**
	 * @protected
	 */
	update: function(reset) {
		var me = this;
		var meta = me.getMeta();
		var points = meta.data;

		// Update Points
		helpers$1.each(points, function(point, index) {
			me.updateElement(point, index, reset);
		});
	},

	/**
	 * @protected
	 */
	updateElement: function(point, index, reset) {
		var me = this;
		var meta = me.getMeta();
		var custom = point.custom || {};
		var xScale = me.getScaleForId(meta.xAxisID);
		var yScale = me.getScaleForId(meta.yAxisID);
		var options = me._resolveDataElementOptions(point, index);
		var data = me.getDataset().data[index];
		var dsIndex = me.index;

		var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);
		var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);

		point._xScale = xScale;
		point._yScale = yScale;
		point._options = options;
		point._datasetIndex = dsIndex;
		point._index = index;
		point._model = {
			backgroundColor: options.backgroundColor,
			borderColor: options.borderColor,
			borderWidth: options.borderWidth,
			hitRadius: options.hitRadius,
			pointStyle: options.pointStyle,
			rotation: options.rotation,
			radius: reset ? 0 : options.radius,
			skip: custom.skip || isNaN(x) || isNaN(y),
			x: x,
			y: y,
		};

		point.pivot();
	},

	/**
	 * @protected
	 */
	setHoverStyle: function(point) {
		var model = point._model;
		var options = point._options;
		var getHoverColor = helpers$1.getHoverColor;

		point.$previousStyle = {
			backgroundColor: model.backgroundColor,
			borderColor: model.borderColor,
			borderWidth: model.borderWidth,
			radius: model.radius
		};

		model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
		model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));
		model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);
		model.radius = options.radius + options.hoverRadius;
	},

	/**
	 * @private
	 */
	_resolveDataElementOptions: function(point, index) {
		var me = this;
		var chart = me.chart;
		var dataset = me.getDataset();
		var custom = point.custom || {};
		var data = dataset.data[index] || {};
		var values = core_datasetController.prototype._resolveDataElementOptions.apply(me, arguments);

		// Scriptable options
		var context = {
			chart: chart,
			dataIndex: index,
			dataset: dataset,
			datasetIndex: me.index
		};

		// In case values were cached (and thus frozen), we need to clone the values
		if (me._cachedDataOpts === values) {
			values = helpers$1.extend({}, values);
		}

		// Custom radius resolution
		values.radius = resolve$1([
			custom.radius,
			data.r,
			me._config.radius,
			chart.options.elements.point.radius
		], context, index);

		return values;
	}
});

var valueOrDefault$5 = helpers$1.valueOrDefault;

var PI$1 = Math.PI;
var DOUBLE_PI$1 = PI$1 * 2;
var HALF_PI$1 = PI$1 / 2;

core_defaults._set('doughnut', {
	animation: {
		// Boolean - Whether we animate the rotation of the Doughnut
		animateRotate: true,
		// Boolean - Whether we animate scaling the Doughnut from the centre
		animateScale: false
	},
	hover: {
		mode: 'single'
	},
	legendCallback: function(chart) {
		var list = document.createElement('ul');
		var data = chart.data;
		var datasets = data.datasets;
		var labels = data.labels;
		var i, ilen, listItem, listItemSpan;

		list.setAttribute('class', chart.id + '-legend');
		if (datasets.length) {
			for (i = 0, ilen = datasets[0].data.length; i < ilen; ++i) {
				listItem = list.appendChild(document.createElement('li'));
				listItemSpan = listItem.appendChild(document.createElement('span'));
				listItemSpan.style.backgroundColor = datasets[0].backgroundColor[i];
				if (labels[i]) {
					listItem.appendChild(document.createTextNode(labels[i]));
				}
			}
		}

		return list.outerHTML;
	},
	legend: {
		labels: {
			generateLabels: function(chart) {
				var data = chart.data;
				if (data.labels.length && data.datasets.length) {
					return data.labels.map(function(label, i) {
						var meta = chart.getDatasetMeta(0);
						var style = meta.controller.getStyle(i);

						return {
							text: label,
							fillStyle: style.backgroundColor,
							strokeStyle: style.borderColor,
							lineWidth: style.borderWidth,
							hidden: isNaN(data.datasets[0].data[i]) || meta.data[i].hidden,

							// Extra data used for toggling the correct item
							index: i
						};
					});
				}
				return [];
			}
		},

		onClick: function(e, legendItem) {
			var index = legendItem.index;
			var chart = this.chart;
			var i, ilen, meta;

			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				// toggle visibility of index if exists
				if (meta.data[index]) {
					meta.data[index].hidden = !meta.data[index].hidden;
				}
			}

			chart.update();
		}
	},

	// The percentage of the chart that we cut out of the middle.
	cutoutPercentage: 50,

	// The rotation of the chart, where the first data arc begins.
	rotation: -HALF_PI$1,

	// The total circumference of the chart.
	circumference: DOUBLE_PI$1,

	// Need to override these to give a nice default
	tooltips: {
		callbacks: {
			title: function() {
				return '';
			},
			label: function(tooltipItem, data) {
				var dataLabel = data.labels[tooltipItem.index];
				var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];

				if (helpers$1.isArray(dataLabel)) {
					// show value on first line of multiline label
					// need to clone because we are changing the value
					dataLabel = dataLabel.slice();
					dataLabel[0] += value;
				} else {
					dataLabel += value;
				}

				return dataLabel;
			}
		}
	}
});

var controller_doughnut = core_datasetController.extend({

	dataElementType: elements.Arc,

	linkScales: helpers$1.noop,

	/**
	 * @private
	 */
	_dataElementOptions: [
		'backgroundColor',
		'borderColor',
		'borderWidth',
		'borderAlign',
		'hoverBackgroundColor',
		'hoverBorderColor',
		'hoverBorderWidth',
	],

	// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly
	getRingIndex: function(datasetIndex) {
		var ringIndex = 0;

		for (var j = 0; j < datasetIndex; ++j) {
			if (this.chart.isDatasetVisible(j)) {
				++ringIndex;
			}
		}

		return ringIndex;
	},

	update: function(reset) {
		var me = this;
		var chart = me.chart;
		var chartArea = chart.chartArea;
		var opts = chart.options;
		var ratioX = 1;
		var ratioY = 1;
		var offsetX = 0;
		var offsetY = 0;
		var meta = me.getMeta();
		var arcs = meta.data;
		var cutout = opts.cutoutPercentage / 100 || 0;
		var circumference = opts.circumference;
		var chartWeight = me._getRingWeight(me.index);
		var maxWidth, maxHeight, i, ilen;

		// If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc
		if (circumference < DOUBLE_PI$1) {
			var startAngle = opts.rotation % DOUBLE_PI$1;
			startAngle += startAngle >= PI$1 ? -DOUBLE_PI$1 : startAngle < -PI$1 ? DOUBLE_PI$1 : 0;
			var endAngle = startAngle + circumference;
			var startX = Math.cos(startAngle);
			var startY = Math.sin(startAngle);
			var endX = Math.cos(endAngle);
			var endY = Math.sin(endAngle);
			var contains0 = (startAngle <= 0 && endAngle >= 0) || endAngle >= DOUBLE_PI$1;
			var contains90 = (startAngle <= HALF_PI$1 && endAngle >= HALF_PI$1) || endAngle >= DOUBLE_PI$1 + HALF_PI$1;
			var contains180 = startAngle === -PI$1 || endAngle >= PI$1;
			var contains270 = (startAngle <= -HALF_PI$1 && endAngle >= -HALF_PI$1) || endAngle >= PI$1 + HALF_PI$1;
			var minX = contains180 ? -1 : Math.min(startX, startX * cutout, endX, endX * cutout);
			var minY = contains270 ? -1 : Math.min(startY, startY * cutout, endY, endY * cutout);
			var maxX = contains0 ? 1 : Math.max(startX, startX * cutout, endX, endX * cutout);
			var maxY = contains90 ? 1 : Math.max(startY, startY * cutout, endY, endY * cutout);
			ratioX = (maxX - minX) / 2;
			ratioY = (maxY - minY) / 2;
			offsetX = -(maxX + minX) / 2;
			offsetY = -(maxY + minY) / 2;
		}

		for (i = 0, ilen = arcs.length; i < ilen; ++i) {
			arcs[i]._options = me._resolveDataElementOptions(arcs[i], i);
		}

		chart.borderWidth = me.getMaxBorderWidth();
		maxWidth = (chartArea.right - chartArea.left - chart.borderWidth) / ratioX;
		maxHeight = (chartArea.bottom - chartArea.top - chart.borderWidth) / ratioY;
		chart.outerRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);
		chart.innerRadius = Math.max(chart.outerRadius * cutout, 0);
		chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);
		chart.offsetX = offsetX * chart.outerRadius;
		chart.offsetY = offsetY * chart.outerRadius;

		meta.total = me.calculateTotal();

		me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);
		me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);

		for (i = 0, ilen = arcs.length; i < ilen; ++i) {
			me.updateElement(arcs[i], i, reset);
		}
	},

	updateElement: function(arc, index, reset) {
		var me = this;
		var chart = me.chart;
		var chartArea = chart.chartArea;
		var opts = chart.options;
		var animationOpts = opts.animation;
		var centerX = (chartArea.left + chartArea.right) / 2;
		var centerY = (chartArea.top + chartArea.bottom) / 2;
		var startAngle = opts.rotation; // non reset case handled later
		var endAngle = opts.rotation; // non reset case handled later
		var dataset = me.getDataset();
		var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / DOUBLE_PI$1);
		var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;
		var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;
		var options = arc._options || {};

		helpers$1.extend(arc, {
			// Utility
			_datasetIndex: me.index,
			_index: index,

			// Desired view properties
			_model: {
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderWidth: options.borderWidth,
				borderAlign: options.borderAlign,
				x: centerX + chart.offsetX,
				y: centerY + chart.offsetY,
				startAngle: startAngle,
				endAngle: endAngle,
				circumference: circumference,
				outerRadius: outerRadius,
				innerRadius: innerRadius,
				label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])
			}
		});

		var model = arc._model;

		// Set correct angles if not resetting
		if (!reset || !animationOpts.animateRotate) {
			if (index === 0) {
				model.startAngle = opts.rotation;
			} else {
				model.startAngle = me.getMeta().data[index - 1]._model.endAngle;
			}

			model.endAngle = model.startAngle + model.circumference;
		}

		arc.pivot();
	},

	calculateTotal: function() {
		var dataset = this.getDataset();
		var meta = this.getMeta();
		var total = 0;
		var value;

		helpers$1.each(meta.data, function(element, index) {
			value = dataset.data[index];
			if (!isNaN(value) && !element.hidden) {
				total += Math.abs(value);
			}
		});

		/* if (total === 0) {
			total = NaN;
		}*/

		return total;
	},

	calculateCircumference: function(value) {
		var total = this.getMeta().total;
		if (total > 0 && !isNaN(value)) {
			return DOUBLE_PI$1 * (Math.abs(value) / total);
		}
		return 0;
	},

	// gets the max border or hover width to properly scale pie charts
	getMaxBorderWidth: function(arcs) {
		var me = this;
		var max = 0;
		var chart = me.chart;
		var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;

		if (!arcs) {
			// Find the outmost visible dataset
			for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {
				if (chart.isDatasetVisible(i)) {
					meta = chart.getDatasetMeta(i);
					arcs = meta.data;
					if (i !== me.index) {
						controller = meta.controller;
					}
					break;
				}
			}
		}

		if (!arcs) {
			return 0;
		}

		for (i = 0, ilen = arcs.length; i < ilen; ++i) {
			arc = arcs[i];
			if (controller) {
				controller._configure();
				options = controller._resolveDataElementOptions(arc, i);
			} else {
				options = arc._options;
			}
			if (options.borderAlign !== 'inner') {
				borderWidth = options.borderWidth;
				hoverWidth = options.hoverBorderWidth;

				max = borderWidth > max ? borderWidth : max;
				max = hoverWidth > max ? hoverWidth : max;
			}
		}
		return max;
	},

	/**
	 * @protected
	 */
	setHoverStyle: function(arc) {
		var model = arc._model;
		var options = arc._options;
		var getHoverColor = helpers$1.getHoverColor;

		arc.$previousStyle = {
			backgroundColor: model.backgroundColor,
			borderColor: model.borderColor,
			borderWidth: model.borderWidth,
		};

		model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
		model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));
		model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);
	},

	/**
	 * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly
	 * @private
	 */
	_getRingWeightOffset: function(datasetIndex) {
		var ringWeightOffset = 0;

		for (var i = 0; i < datasetIndex; ++i) {
			if (this.chart.isDatasetVisible(i)) {
				ringWeightOffset += this._getRingWeight(i);
			}
		}

		return ringWeightOffset;
	},

	/**
	 * @private
	 */
	_getRingWeight: function(dataSetIndex) {
		return Math.max(valueOrDefault$5(this.chart.data.datasets[dataSetIndex].weight, 1), 0);
	},

	/**
	 * Returns the sum of all visibile data set weights.  This value can be 0.
	 * @private
	 */
	_getVisibleDatasetWeightTotal: function() {
		return this._getRingWeightOffset(this.chart.data.datasets.length);
	}
});

core_defaults._set('horizontalBar', {
	hover: {
		mode: 'index',
		axis: 'y'
	},

	scales: {
		xAxes: [{
			type: 'linear',
			position: 'bottom'
		}],

		yAxes: [{
			type: 'category',
			position: 'left',
			offset: true,
			gridLines: {
				offsetGridLines: true
			}
		}]
	},

	elements: {
		rectangle: {
			borderSkipped: 'left'
		}
	},

	tooltips: {
		mode: 'index',
		axis: 'y'
	}
});

core_defaults._set('global', {
	datasets: {
		horizontalBar: {
			categoryPercentage: 0.8,
			barPercentage: 0.9
		}
	}
});

var controller_horizontalBar = controller_bar.extend({
	/**
	 * @private
	 */
	_getValueScaleId: function() {
		return this.getMeta().xAxisID;
	},

	/**
	 * @private
	 */
	_getIndexScaleId: function() {
		return this.getMeta().yAxisID;
	}
});

var valueOrDefault$6 = helpers$1.valueOrDefault;
var resolve$2 = helpers$1.options.resolve;
var isPointInArea = helpers$1.canvas._isPointInArea;

core_defaults._set('line', {
	showLines: true,
	spanGaps: false,

	hover: {
		mode: 'label'
	},

	scales: {
		xAxes: [{
			type: 'category',
			id: 'x-axis-0'
		}],
		yAxes: [{
			type: 'linear',
			id: 'y-axis-0'
		}]
	}
});

function scaleClip(scale, halfBorderWidth) {
	var tickOpts = scale && scale.options.ticks || {};
	var reverse = tickOpts.reverse;
	var min = tickOpts.min === undefined ? halfBorderWidth : 0;
	var max = tickOpts.max === undefined ? halfBorderWidth : 0;
	return {
		start: reverse ? max : min,
		end: reverse ? min : max
	};
}

function defaultClip(xScale, yScale, borderWidth) {
	var halfBorderWidth = borderWidth / 2;
	var x = scaleClip(xScale, halfBorderWidth);
	var y = scaleClip(yScale, halfBorderWidth);

	return {
		top: y.end,
		right: x.end,
		bottom: y.start,
		left: x.start
	};
}

function toClip(value) {
	var t, r, b, l;

	if (helpers$1.isObject(value)) {
		t = value.top;
		r = value.right;
		b = value.bottom;
		l = value.left;
	} else {
		t = r = b = l = value;
	}

	return {
		top: t,
		right: r,
		bottom: b,
		left: l
	};
}


var controller_line = core_datasetController.extend({

	datasetElementType: elements.Line,

	dataElementType: elements.Point,

	/**
	 * @private
	 */
	_datasetElementOptions: [
		'backgroundColor',
		'borderCapStyle',
		'borderColor',
		'borderDash',
		'borderDashOffset',
		'borderJoinStyle',
		'borderWidth',
		'cubicInterpolationMode',
		'fill'
	],

	/**
	 * @private
	 */
	_dataElementOptions: {
		backgroundColor: 'pointBackgroundColor',
		borderColor: 'pointBorderColor',
		borderWidth: 'pointBorderWidth',
		hitRadius: 'pointHitRadius',
		hoverBackgroundColor: 'pointHoverBackgroundColor',
		hoverBorderColor: 'pointHoverBorderColor',
		hoverBorderWidth: 'pointHoverBorderWidth',
		hoverRadius: 'pointHoverRadius',
		pointStyle: 'pointStyle',
		radius: 'pointRadius',
		rotation: 'pointRotation'
	},

	update: function(reset) {
		var me = this;
		var meta = me.getMeta();
		var line = meta.dataset;
		var points = meta.data || [];
		var options = me.chart.options;
		var config = me._config;
		var showLine = me._showLine = valueOrDefault$6(config.showLine, options.showLines);
		var i, ilen;

		me._xScale = me.getScaleForId(meta.xAxisID);
		me._yScale = me.getScaleForId(meta.yAxisID);

		// Update Line
		if (showLine) {
			// Compatibility: If the properties are defined with only the old name, use those values
			if (config.tension !== undefined && config.lineTension === undefined) {
				config.lineTension = config.tension;
			}

			// Utility
			line._scale = me._yScale;
			line._datasetIndex = me.index;
			// Data
			line._children = points;
			// Model
			line._model = me._resolveDatasetElementOptions(line);

			line.pivot();
		}

		// Update Points
		for (i = 0, ilen = points.length; i < ilen; ++i) {
			me.updateElement(points[i], i, reset);
		}

		if (showLine && line._model.tension !== 0) {
			me.updateBezierControlPoints();
		}

		// Now pivot the point for animation
		for (i = 0, ilen = points.length; i < ilen; ++i) {
			points[i].pivot();
		}
	},

	updateElement: function(point, index, reset) {
		var me = this;
		var meta = me.getMeta();
		var custom = point.custom || {};
		var dataset = me.getDataset();
		var datasetIndex = me.index;
		var value = dataset.data[index];
		var xScale = me._xScale;
		var yScale = me._yScale;
		var lineModel = meta.dataset._model;
		var x, y;

		var options = me._resolveDataElementOptions(point, index);

		x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);
		y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);

		// Utility
		point._xScale = xScale;
		point._yScale = yScale;
		point._options = options;
		point._datasetIndex = datasetIndex;
		point._index = index;

		// Desired view properties
		point._model = {
			x: x,
			y: y,
			skip: custom.skip || isNaN(x) || isNaN(y),
			// Appearance
			radius: options.radius,
			pointStyle: options.pointStyle,
			rotation: options.rotation,
			backgroundColor: options.backgroundColor,
			borderColor: options.borderColor,
			borderWidth: options.borderWidth,
			tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),
			steppedLine: lineModel ? lineModel.steppedLine : false,
			// Tooltip
			hitRadius: options.hitRadius
		};
	},

	/**
	 * @private
	 */
	_resolveDatasetElementOptions: function(element) {
		var me = this;
		var config = me._config;
		var custom = element.custom || {};
		var options = me.chart.options;
		var lineOptions = options.elements.line;
		var values = core_datasetController.prototype._resolveDatasetElementOptions.apply(me, arguments);

		// The default behavior of lines is to break at null values, according
		// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158
		// This option gives lines the ability to span gaps
		values.spanGaps = valueOrDefault$6(config.spanGaps, options.spanGaps);
		values.tension = valueOrDefault$6(config.lineTension, lineOptions.tension);
		values.steppedLine = resolve$2([custom.steppedLine, config.steppedLine, lineOptions.stepped]);
		values.clip = toClip(valueOrDefault$6(config.clip, defaultClip(me._xScale, me._yScale, values.borderWidth)));

		return values;
	},

	calculatePointY: function(value, index, datasetIndex) {
		var me = this;
		var chart = me.chart;
		var yScale = me._yScale;
		var sumPos = 0;
		var sumNeg = 0;
		var i, ds, dsMeta, stackedRightValue, rightValue, metasets, ilen;

		if (yScale.options.stacked) {
			rightValue = +yScale.getRightValue(value);
			metasets = chart._getSortedVisibleDatasetMetas();
			ilen = metasets.length;

			for (i = 0; i < ilen; ++i) {
				dsMeta = metasets[i];
				if (dsMeta.index === datasetIndex) {
					break;
				}

				ds = chart.data.datasets[dsMeta.index];
				if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id) {
					stackedRightValue = +yScale.getRightValue(ds.data[index]);
					if (stackedRightValue < 0) {
						sumNeg += stackedRightValue || 0;
					} else {
						sumPos += stackedRightValue || 0;
					}
				}
			}

			if (rightValue < 0) {
				return yScale.getPixelForValue(sumNeg + rightValue);
			}
			return yScale.getPixelForValue(sumPos + rightValue);
		}
		return yScale.getPixelForValue(value);
	},

	updateBezierControlPoints: function() {
		var me = this;
		var chart = me.chart;
		var meta = me.getMeta();
		var lineModel = meta.dataset._model;
		var area = chart.chartArea;
		var points = meta.data || [];
		var i, ilen, model, controlPoints;

		// Only consider points that are drawn in case the spanGaps option is used
		if (lineModel.spanGaps) {
			points = points.filter(function(pt) {
				return !pt._model.skip;
			});
		}

		function capControlPoint(pt, min, max) {
			return Math.max(Math.min(pt, max), min);
		}

		if (lineModel.cubicInterpolationMode === 'monotone') {
			helpers$1.splineCurveMonotone(points);
		} else {
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				model = points[i]._model;
				controlPoints = helpers$1.splineCurve(
					helpers$1.previousItem(points, i)._model,
					model,
					helpers$1.nextItem(points, i)._model,
					lineModel.tension
				);
				model.controlPointPreviousX = controlPoints.previous.x;
				model.controlPointPreviousY = controlPoints.previous.y;
				model.controlPointNextX = controlPoints.next.x;
				model.controlPointNextY = controlPoints.next.y;
			}
		}

		if (chart.options.elements.line.capBezierPoints) {
			for (i = 0, ilen = points.length; i < ilen; ++i) {
				model = points[i]._model;
				if (isPointInArea(model, area)) {
					if (i > 0 && isPointInArea(points[i - 1]._model, area)) {
						model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);
						model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);
					}
					if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {
						model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);
						model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);
					}
				}
			}
		}
	},

	draw: function() {
		var me = this;
		var chart = me.chart;
		var meta = me.getMeta();
		var points = meta.data || [];
		var area = chart.chartArea;
		var canvas = chart.canvas;
		var i = 0;
		var ilen = points.length;
		var clip;

		if (me._showLine) {
			clip = meta.dataset._model.clip;

			helpers$1.canvas.clipArea(chart.ctx, {
				left: clip.left === false ? 0 : area.left - clip.left,
				right: clip.right === false ? canvas.width : area.right + clip.right,
				top: clip.top === false ? 0 : area.top - clip.top,
				bottom: clip.bottom === false ? canvas.height : area.bottom + clip.bottom
			});

			meta.dataset.draw();

			helpers$1.canvas.unclipArea(chart.ctx);
		}

		// Draw the points
		for (; i < ilen; ++i) {
			points[i].draw(area);
		}
	},

	/**
	 * @protected
	 */
	setHoverStyle: function(point) {
		var model = point._model;
		var options = point._options;
		var getHoverColor = helpers$1.getHoverColor;

		point.$previousStyle = {
			backgroundColor: model.backgroundColor,
			borderColor: model.borderColor,
			borderWidth: model.borderWidth,
			radius: model.radius
		};

		model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
		model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));
		model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);
		model.radius = valueOrDefault$6(options.hoverRadius, options.radius);
	},
});

var resolve$3 = helpers$1.options.resolve;

core_defaults._set('polarArea', {
	scale: {
		type: 'radialLinear',
		angleLines: {
			display: false
		},
		gridLines: {
			circular: true
		},
		pointLabels: {
			display: false
		},
		ticks: {
			beginAtZero: true
		}
	},

	// Boolean - Whether to animate the rotation of the chart
	animation: {
		animateRotate: true,
		animateScale: true
	},

	startAngle: -0.5 * Math.PI,
	legendCallback: function(chart) {
		var list = document.createElement('ul');
		var data = chart.data;
		var datasets = data.datasets;
		var labels = data.labels;
		var i, ilen, listItem, listItemSpan;

		list.setAttribute('class', chart.id + '-legend');
		if (datasets.length) {
			for (i = 0, ilen = datasets[0].data.length; i < ilen; ++i) {
				listItem = list.appendChild(document.createElement('li'));
				listItemSpan = listItem.appendChild(document.createElement('span'));
				listItemSpan.style.backgroundColor = datasets[0].backgroundColor[i];
				if (labels[i]) {
					listItem.appendChild(document.createTextNode(labels[i]));
				}
			}
		}

		return list.outerHTML;
	},
	legend: {
		labels: {
			generateLabels: function(chart) {
				var data = chart.data;
				if (data.labels.length && data.datasets.length) {
					return data.labels.map(function(label, i) {
						var meta = chart.getDatasetMeta(0);
						var style = meta.controller.getStyle(i);

						return {
							text: label,
							fillStyle: style.backgroundColor,
							strokeStyle: style.borderColor,
							lineWidth: style.borderWidth,
							hidden: isNaN(data.datasets[0].data[i]) || meta.data[i].hidden,

							// Extra data used for toggling the correct item
							index: i
						};
					});
				}
				return [];
			}
		},

		onClick: function(e, legendItem) {
			var index = legendItem.index;
			var chart = this.chart;
			var i, ilen, meta;

			for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
				meta = chart.getDatasetMeta(i);
				meta.data[index].hidden = !meta.data[index].hidden;
			}

			chart.update();
		}
	},

	// Need to override these to give a nice default
	tooltips: {
		callbacks: {
			title: function() {
				return '';
			},
			label: function(item, data) {
				return data.labels[item.index] + ': ' + item.yLabel;
			}
		}
	}
});

var controller_polarArea = core_datasetController.extend({

	dataElementType: elements.Arc,

	linkScales: helpers$1.noop,

	/**
	 * @private
	 */
	_dataElementOptions: [
		'backgroundColor',
		'borderColor',
		'borderWidth',
		'borderAlign',
		'hoverBackgroundColor',
		'hoverBorderColor',
		'hoverBorderWidth',
	],

	/**
	 * @private
	 */
	_getIndexScaleId: function() {
		return this.chart.scale.id;
	},

	/**
	 * @private
	 */
	_getValueScaleId: function() {
		return this.chart.scale.id;
	},

	update: function(reset) {
		var me = this;
		var dataset = me.getDataset();
		var meta = me.getMeta();
		var start = me.chart.options.startAngle || 0;
		var starts = me._starts = [];
		var angles = me._angles = [];
		var arcs = meta.data;
		var i, ilen, angle;

		me._updateRadius();

		meta.count = me.countVisibleElements();

		for (i = 0, ilen = dataset.data.length; i < ilen; i++) {
			starts[i] = start;
			angle = me._computeAngle(i);
			angles[i] = angle;
			start += angle;
		}

		for (i = 0, ilen = arcs.length; i < ilen; ++i) {
			arcs[i]._options = me._resolveDataElementOptions(arcs[i], i);
			me.updateElement(arcs[i], i, reset);
		}
	},

	/**
	 * @private
	 */
	_updateRadius: function() {
		var me = this;
		var chart = me.chart;
		var chartArea = chart.chartArea;
		var opts = chart.options;
		var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);

		chart.outerRadius = Math.max(minSize / 2, 0);
		chart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);
		chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();

		me.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);
		me.innerRadius = me.outerRadius - chart.radiusLength;
	},

	updateElement: function(arc, index, reset) {
		var me = this;
		var chart = me.chart;
		var dataset = me.getDataset();
		var opts = chart.options;
		var animationOpts = opts.animation;
		var scale = chart.scale;
		var labels = chart.data.labels;

		var centerX = scale.xCenter;
		var centerY = scale.yCenter;

		// var negHalfPI = -0.5 * Math.PI;
		var datasetStartAngle = opts.startAngle;
		var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
		var startAngle = me._starts[index];
		var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);

		var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);
		var options = arc._options || {};

		helpers$1.extend(arc, {
			// Utility
			_datasetIndex: me.index,
			_index: index,
			_scale: scale,

			// Desired view properties
			_model: {
				backgroundColor: options.backgroundColor,
				borderColor: options.borderColor,
				borderWidth: options.borderWidth,
				borderAlign: options.borderAlign,
				x: centerX,
				y: centerY,
				innerRadius: 0,
				outerRadius: reset ? resetRadius : distance,
				startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,
				endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,
				label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])
			}
		});

		arc.pivot();
	},

	countVisibleElements: function() {
		var dataset = this.getDataset();
		var meta = this.getMeta();
		var count = 0;

		helpers$1.each(meta.data, function(element, index) {
			if (!isNaN(dataset.data[index]) && !element.hidden) {
				count++;
			}
		});

		return count;
	},

	/**
	 * @protected
	 */
	setHoverStyle: function(arc) {
		var model = arc._model;
		var options = arc._options;
		var getHoverColor = helpers$1.getHoverColor;
		var valueOrDefault = helpers$1.valueOrDefault;

		arc.$previousStyle = {
			backgroundColor: model.backgroundColor,
			borderColor: model.borderColor,
			borderWidth: model.borderWidth,
		};

		model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
		model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));
		model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);
	},

	/**
	 * @private
	 */
	_computeAngle: function(index) {
		var me = this;
		var count = this.getMeta().count;
		var dataset = me.getDataset();
		var meta = me.getMeta();

		if (isNaN(dataset.data[index]) || meta.data[index].hidden) {
			return 0;
		}

		// Scriptable options
		var context = {
			chart: me.chart,
			dataIndex: index,
			dataset: dataset,
			datasetIndex: me.index
		};

		return resolve$3([
			me.chart.options.elements.arc.angle,
			(2 * Math.PI) / count
		], context, index);
	}
});

core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));
core_defaults._set('pie', {
	cutoutPercentage: 0
});

// Pie charts are Doughnut chart with different defaults
var controller_pie = controller_doughnut;

var valueOrDefault$7 = helpers$1.valueOrDefault;

core_defaults._set('radar', {
	spanGaps: false,
	scale: {
		type: 'radialLinear'
	},
	elements: {
		line: {
			fill: 'start',
			tension: 0 // no bezier in radar
		}
	}
});

var controller_radar = core_datasetController.extend({
	datasetElementType: elements.Line,

	dataElementType: elements.Point,

	linkScales: helpers$1.noop,

	/**
	 * @private
	 */
	_datasetElementOptions: [
		'backgroundColor',
		'borderWidth',
		'borderColor',
		'borderCapStyle',
		'borderDash',
		'borderDashOffset',
		'borderJoinStyle',
		'fill'
	],

	/**
	 * @private
	 */
	_dataElementOptions: {
		backgroundColor: 'pointBackgroundColor',
		borderColor: 'pointBorderColor',
		borderWidth: 'pointBorderWidth',
		hitRadius: 'pointHitRadius',
		hoverBackgroundColor: 'pointHoverBackgroundColor',
		hoverBorderColor: 'pointHoverBorderColor',
		hoverBorderWidth: 'pointHoverBorderWidth',
		hoverRadius: 'pointHoverRadius',
		pointStyle: 'pointStyle',
		radius: 'pointRadius',
		rotation: 'pointRotation'
	},

	/**
	 * @private
	 */
	_getIndexScaleId: function() {
		return this.chart.scale.id;
	},

	/**
	 * @private
	 */
	_getValueScaleId: function() {
		return this.chart.scale.id;
	},

	update: function(reset) {
		var me = this;
		var meta = me.getMeta();
		var line = meta.dataset;
		var points = meta.data || [];
		var scale = me.chart.scale;
		var config = me._config;
		var i, ilen;

		// Compatibility: If the properties are defined with only the old name, use those values
		if (config.tension !== undefined && config.lineTension === undefined) {
			config.lineTension = config.tension;
		}

		// Utility
		line._scale = scale;
		line._datasetIndex = me.index;
		// Data
		line._children = points;
		line._loop = true;
		// Model
		line._model = me._resolveDatasetElementOptions(line);

		line.pivot();

		// Update Points
		for (i = 0, ilen = points.length; i < ilen; ++i) {
			me.updateElement(points[i], i, reset);
		}

		// Update bezier control points
		me.updateBezierControlPoints();

		// Now pivot the point for animation
		for (i = 0, ilen = points.length; i < ilen; ++i) {
			points[i].pivot();
		}
	},

	updateElement: function(point, index, reset) {
		var me = this;
		var custom = point.custom || {};
		var dataset = me.getDataset();
		var scale = me.chart.scale;
		var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);
		var options = me._resolveDataElementOptions(point, index);
		var lineModel = me.getMeta().dataset._model;
		var x = reset ? scale.xCenter : pointPosition.x;
		var y = reset ? scale.yCenter : pointPosition.y;

		// Utility
		point._scale = scale;
		point._options = options;
		point._datasetIndex = me.index;
		point._index = index;

		// Desired view properties
		point._model = {
			x: x, // value not used in dataset scale, but we want a consistent API between scales
			y: y,
			skip: custom.skip || isNaN(x) || isNaN(y),
			// Appearance
			radius: options.radius,
			pointStyle: options.pointStyle,
			rotation: options.rotation,
			backgroundColor: options.backgroundColor,
			borderColor: options.borderColor,
			borderWidth: options.borderWidth,
			tension: valueOrDefault$7(custom.tension, lineModel ? lineModel.tension : 0),

			// Tooltip
			hitRadius: options.hitRadius
		};
	},

	/**
	 * @private
	 */
	_resolveDatasetElementOptions: function() {
		var me = this;
		var config = me._config;
		var options = me.chart.options;
		var values = core_datasetController.prototype._resolveDatasetElementOptions.apply(me, arguments);

		values.spanGaps = valueOrDefault$7(config.spanGaps, options.spanGaps);
		values.tension = valueOrDefault$7(config.lineTension, options.elements.line.tension);

		return values;
	},

	updateBezierControlPoints: function() {
		var me = this;
		var meta = me.getMeta();
		var area = me.chart.chartArea;
		var points = meta.data || [];
		var i, ilen, model, controlPoints;

		// Only consider points that are drawn in case the spanGaps option is used
		if (meta.dataset._model.spanGaps) {
			points = points.filter(function(pt) {
				return !pt._model.skip;
			});
		}

		function capControlPoint(pt, min, max) {
			return Math.max(Math.min(pt, max), min);
		}

		for (i = 0, ilen = points.length; i < ilen; ++i) {
			model = points[i]._model;
			controlPoints = helpers$1.splineCurve(
				helpers$1.previousItem(points, i, true)._model,
				model,
				helpers$1.nextItem(points, i, true)._model,
				model.tension
			);

			// Prevent the bezier going outside of the bounds of the graph
			model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);
			model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);
			model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);
			model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);
		}
	},

	setHoverStyle: function(point) {
		var model = point._model;
		var options = point._options;
		var getHoverColor = helpers$1.getHoverColor;

		point.$previousStyle = {
			backgroundColor: model.backgroundColor,
			borderColor: model.borderColor,
			borderWidth: model.borderWidth,
			radius: model.radius
		};

		model.backgroundColor = valueOrDefault$7(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));
		model.borderColor = valueOrDefault$7(options.hoverBorderColor, getHoverColor(options.borderColor));
		model.borderWidth = valueOrDefault$7(options.hoverBorderWidth, options.borderWidth);
		model.radius = valueOrDefault$7(options.hoverRadius, options.radius);
	}
});

core_defaults._set('scatter', {
	hover: {
		mode: 'single'
	},

	scales: {
		xAxes: [{
			id: 'x-axis-1',    // need an ID so datasets can reference the scale
			type: 'linear',    // scatter should not use a category axis
			position: 'bottom'
		}],
		yAxes: [{
			id: 'y-axis-1',
			type: 'linear',
			position: 'left'
		}]
	},

	tooltips: {
		callbacks: {
			title: function() {
				return '';     // doesn't make sense for scatter since data are formatted as a point
			},
			label: function(item) {
				return '(' + item.xLabel + ', ' + item.yLabel + ')';
			}
		}
	}
});

core_defaults._set('global', {
	datasets: {
		scatter: {
			showLine: false
		}
	}
});

// Scatter charts use line controllers
var controller_scatter = controller_line;

// NOTE export a map in which the key represents the controller type, not
// the class, and so must be CamelCase in order to be correctly retrieved
// by the controller in core.controller.js (`controllers[meta.type]`).

var controllers = {
	bar: controller_bar,
	bubble: controller_bubble,
	doughnut: controller_doughnut,
	horizontalBar: controller_horizontalBar,
	line: controller_line,
	polarArea: controller_polarArea,
	pie: controller_pie,
	radar: controller_radar,
	scatter: controller_scatter
};

/**
 * Helper function to get relative position for an event
 * @param {Event|IEvent} event - The event to get the position for
 * @param {Chart} chart - The chart
 * @returns {object} the event position
 */
function getRelativePosition(e, chart) {
	if (e.native) {
		return {
			x: e.x,
			y: e.y
		};
	}

	return helpers$1.getRelativePosition(e, chart);
}

/**
 * Helper function to traverse all of the visible elements in the chart
 * @param {Chart} chart - the chart
 * @param {function} handler - the callback to execute for each visible item
 */
function parseVisibleItems(chart, handler) {
	var metasets = chart._getSortedVisibleDatasetMetas();
	var metadata, i, j, ilen, jlen, element;

	for (i = 0, ilen = metasets.length; i < ilen; ++i) {
		metadata = metasets[i].data;
		for (j = 0, jlen = metadata.length; j < jlen; ++j) {
			element = metadata[j];
			if (!element._view.skip) {
				handler(element);
			}
		}
	}
}

/**
 * Helper function to get the items that intersect the event position
 * @param {ChartElement[]} items - elements to filter
 * @param {object} position - the point to be nearest to
 * @return {ChartElement[]} the nearest items
 */
function getIntersectItems(chart, position) {
	var elements = [];

	parseVisibleItems(chart, function(element) {
		if (element.inRange(position.x, position.y)) {
			elements.push(element);
		}
	});

	return elements;
}

/**
 * Helper function to get the items nearest to the event position considering all visible items in teh chart
 * @param {Chart} chart - the chart to look at elements from
 * @param {object} position - the point to be nearest to
 * @param {boolean} intersect - if true, only consider items that intersect the position
 * @param {function} distanceMetric - function to provide the distance between points
 * @return {ChartElement[]} the nearest items
 */
function getNearestItems(chart, position, intersect, distanceMetric) {
	var minDistance = Number.POSITIVE_INFINITY;
	var nearestItems = [];

	parseVisibleItems(chart, function(element) {
		if (intersect && !element.inRange(position.x, position.y)) {
			return;
		}

		var center = element.getCenterPoint();
		var distance = distanceMetric(position, center);
		if (distance < minDistance) {
			nearestItems = [element];
			minDistance = distance;
		} else if (distance === minDistance) {
			// Can have multiple items at the same distance in which case we sort by size
			nearestItems.push(element);
		}
	});

	return nearestItems;
}

/**
 * Get a distance metric function for two points based on the
 * axis mode setting
 * @param {string} axis - the axis mode. x|y|xy
 */
function getDistanceMetricForAxis(axis) {
	var useX = axis.indexOf('x') !== -1;
	var useY = axis.indexOf('y') !== -1;

	return function(pt1, pt2) {
		var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;
		var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;
		return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));
	};
}

function indexMode(chart, e, options) {
	var position = getRelativePosition(e, chart);
	// Default axis for index mode is 'x' to match old behaviour
	options.axis = options.axis || 'x';
	var distanceMetric = getDistanceMetricForAxis(options.axis);
	var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);
	var elements = [];

	if (!items.length) {
		return [];
	}

	chart._getSortedVisibleDatasetMetas().forEach(function(meta) {
		var element = meta.data[items[0]._index];

		// don't count items that are skipped (null data)
		if (element && !element._view.skip) {
			elements.push(element);
		}
	});

	return elements;
}

/**
 * @interface IInteractionOptions
 */
/**
 * If true, only consider items that intersect the point
 * @name IInterfaceOptions#boolean
 * @type Boolean
 */

/**
 * Contains interaction related functions
 * @namespace Chart.Interaction
 */
var core_interaction = {
	// Helper function for different modes
	modes: {
		single: function(chart, e) {
			var position = getRelativePosition(e, chart);
			var elements = [];

			parseVisibleItems(chart, function(element) {
				if (element.inRange(position.x, position.y)) {
					elements.push(element);
					return elements;
				}
			});

			return elements.slice(0, 1);
		},

		/**
		 * @function Chart.Interaction.modes.label
		 * @deprecated since version 2.4.0
		 * @todo remove at version 3
		 * @private
		 */
		label: indexMode,

		/**
		 * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something
		 * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item
		 * @function Chart.Interaction.modes.index
		 * @since v2.4.0
		 * @param {Chart} chart - the chart we are returning items from
		 * @param {Event} e - the event we are find things at
		 * @param {IInteractionOptions} options - options to use during interaction
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		index: indexMode,

		/**
		 * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something
		 * If the options.intersect is false, we find the nearest item and return the items in that dataset
		 * @function Chart.Interaction.modes.dataset
		 * @param {Chart} chart - the chart we are returning items from
		 * @param {Event} e - the event we are find things at
		 * @param {IInteractionOptions} options - options to use during interaction
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		dataset: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			options.axis = options.axis || 'xy';
			var distanceMetric = getDistanceMetricForAxis(options.axis);
			var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);

			if (items.length > 0) {
				items = chart.getDatasetMeta(items[0]._datasetIndex).data;
			}

			return items;
		},

		/**
		 * @function Chart.Interaction.modes.x-axis
		 * @deprecated since version 2.4.0. Use index mode and intersect == true
		 * @todo remove at version 3
		 * @private
		 */
		'x-axis': function(chart, e) {
			return indexMode(chart, e, {intersect: false});
		},

		/**
		 * Point mode returns all elements that hit test based on the event position
		 * of the event
		 * @function Chart.Interaction.modes.intersect
		 * @param {Chart} chart - the chart we are returning items from
		 * @param {Event} e - the event we are find things at
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		point: function(chart, e) {
			var position = getRelativePosition(e, chart);
			return getIntersectItems(chart, position);
		},

		/**
		 * nearest mode returns the element closest to the point
		 * @function Chart.Interaction.modes.intersect
		 * @param {Chart} chart - the chart we are returning items from
		 * @param {Event} e - the event we are find things at
		 * @param {IInteractionOptions} options - options to use
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		nearest: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			options.axis = options.axis || 'xy';
			var distanceMetric = getDistanceMetricForAxis(options.axis);
			return getNearestItems(chart, position, options.intersect, distanceMetric);
		},

		/**
		 * x mode returns the elements that hit-test at the current x coordinate
		 * @function Chart.Interaction.modes.x
		 * @param {Chart} chart - the chart we are returning items from
		 * @param {Event} e - the event we are find things at
		 * @param {IInteractionOptions} options - options to use
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		x: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			var items = [];
			var intersectsItem = false;

			parseVisibleItems(chart, function(element) {
				if (element.inXRange(position.x)) {
					items.push(element);
				}

				if (element.inRange(position.x, position.y)) {
					intersectsItem = true;
				}
			});

			// If we want to trigger on an intersect and we don't have any items
			// that intersect the position, return nothing
			if (options.intersect && !intersectsItem) {
				items = [];
			}
			return items;
		},

		/**
		 * y mode returns the elements that hit-test at the current y coordinate
		 * @function Chart.Interaction.modes.y
		 * @param {Chart} chart - the chart we are returning items from
		 * @param {Event} e - the event we are find things at
		 * @param {IInteractionOptions} options - options to use
		 * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned
		 */
		y: function(chart, e, options) {
			var position = getRelativePosition(e, chart);
			var items = [];
			var intersectsItem = false;

			parseVisibleItems(chart, function(element) {
				if (element.inYRange(position.y)) {
					items.push(element);
				}

				if (element.inRange(position.x, position.y)) {
					intersectsItem = true;
				}
			});

			// If we want to trigger on an intersect and we don't have any items
			// that intersect the position, return nothing
			if (options.intersect && !intersectsItem) {
				items = [];
			}
			return items;
		}
	}
};

var extend = helpers$1.extend;

function filterByPosition(array, position) {
	return helpers$1.where(array, function(v) {
		return v.pos === position;
	});
}

function sortByWeight(array, reverse) {
	return array.sort(function(a, b) {
		var v0 = reverse ? b : a;
		var v1 = reverse ? a : b;
		return v0.weight === v1.weight ?
			v0.index - v1.index :
			v0.weight - v1.weight;
	});
}

function wrapBoxes(boxes) {
	var layoutBoxes = [];
	var i, ilen, box;

	for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {
		box = boxes[i];
		layoutBoxes.push({
			index: i,
			box: box,
			pos: box.position,
			horizontal: box.isHorizontal(),
			weight: box.weight
		});
	}
	return layoutBoxes;
}

function setLayoutDims(layouts, params) {
	var i, ilen, layout;
	for (i = 0, ilen = layouts.length; i < ilen; ++i) {
		layout = layouts[i];
		// store width used instead of chartArea.w in fitBoxes
		layout.width = layout.horizontal
			? layout.box.fullWidth && params.availableWidth
			: params.vBoxMaxWidth;
		// store height used instead of chartArea.h in fitBoxes
		layout.height = layout.horizontal && params.hBoxMaxHeight;
	}
}

function buildLayoutBoxes(boxes) {
	var layoutBoxes = wrapBoxes(boxes);
	var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);
	var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));
	var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);
	var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));

	return {
		leftAndTop: left.concat(top),
		rightAndBottom: right.concat(bottom),
		chartArea: filterByPosition(layoutBoxes, 'chartArea'),
		vertical: left.concat(right),
		horizontal: top.concat(bottom)
	};
}

function getCombinedMax(maxPadding, chartArea, a, b) {
	return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);
}

function updateDims(chartArea, params, layout) {
	var box = layout.box;
	var maxPadding = chartArea.maxPadding;
	var newWidth, newHeight;

	if (layout.size) {
		// this layout was already counted for, lets first reduce old size
		chartArea[layout.pos] -= layout.size;
	}
	layout.size = layout.horizontal ? box.height : box.width;
	chartArea[layout.pos] += layout.size;

	if (box.getPadding) {
		var boxPadding = box.getPadding();
		maxPadding.top = Math.max(maxPadding.top, boxPadding.top);
		maxPadding.left = Math.max(maxPadding.left, boxPadding.left);
		maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);
		maxPadding.right = Math.max(maxPadding.right, boxPadding.right);
	}

	newWidth = params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right');
	newHeight = params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom');

	if (newWidth !== chartArea.w || newHeight !== chartArea.h) {
		chartArea.w = newWidth;
		chartArea.h = newHeight;

		// return true if chart area changed in layout's direction
		var sizes = layout.horizontal ? [newWidth, chartArea.w] : [newHeight, chartArea.h];
		return sizes[0] !== sizes[1] && (!isNaN(sizes[0]) || !isNaN(sizes[1]));
	}
}

function handleMaxPadding(chartArea) {
	var maxPadding = chartArea.maxPadding;

	function updatePos(pos) {
		var change = Math.max(maxPadding[pos] - chartArea[pos], 0);
		chartArea[pos] += change;
		return change;
	}
	chartArea.y += updatePos('top');
	chartArea.x += updatePos('left');
	updatePos('right');
	updatePos('bottom');
}

function getMargins(horizontal, chartArea) {
	var maxPadding = chartArea.maxPadding;

	function marginForPositions(positions) {
		var margin = {left: 0, top: 0, right: 0, bottom: 0};
		positions.forEach(function(pos) {
			margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);
		});
		return margin;
	}

	return horizontal
		? marginForPositions(['left', 'right'])
		: marginForPositions(['top', 'bottom']);
}

function fitBoxes(boxes, chartArea, params) {
	var refitBoxes = [];
	var i, ilen, layout, box, refit, changed;

	for (i = 0, ilen = boxes.length; i < ilen; ++i) {
		layout = boxes[i];
		box = layout.box;

		box.update(
			layout.width || chartArea.w,
			layout.height || chartArea.h,
			getMargins(layout.horizontal, chartArea)
		);
		if (updateDims(chartArea, params, layout)) {
			changed = true;
			if (refitBoxes.length) {
				// Dimensions changed and there were non full width boxes before this
				// -> we have to refit those
				refit = true;
			}
		}
		if (!box.fullWidth) { // fullWidth boxes don't need to be re-fitted in any case
			refitBoxes.push(layout);
		}
	}

	return refit ? fitBoxes(refitBoxes, chartArea, params) || changed : changed;
}

function placeBoxes(boxes, chartArea, params) {
	var userPadding = params.padding;
	var x = chartArea.x;
	var y = chartArea.y;
	var i, ilen, layout, box;

	for (i = 0, ilen = boxes.length; i < ilen; ++i) {
		layout = boxes[i];
		box = layout.box;
		if (layout.horizontal) {
			box.left = box.fullWidth ? userPadding.left : chartArea.left;
			box.right = box.fullWidth ? params.outerWidth - userPadding.right : chartArea.left + chartArea.w;
			box.top = y;
			box.bottom = y + box.height;
			box.width = box.right - box.left;
			y = box.bottom;
		} else {
			box.left = x;
			box.right = x + box.width;
			box.top = chartArea.top;
			box.bottom = chartArea.top + chartArea.h;
			box.height = box.bottom - box.top;
			x = box.right;
		}
	}

	chartArea.x = x;
	chartArea.y = y;
}

core_defaults._set('global', {
	layout: {
		padding: {
			top: 0,
			right: 0,
			bottom: 0,
			left: 0
		}
	}
});

/**
 * @interface ILayoutItem
 * @prop {string} position - The position of the item in the chart layout. Possible values are
 * 'left', 'top', 'right', 'bottom', and 'chartArea'
 * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area
 * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down
 * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)
 * @prop {function} update - Takes two parameters: width and height. Returns size of item
 * @prop {function} getPadding -  Returns an object with padding on the edges
 * @prop {number} width - Width of item. Must be valid after update()
 * @prop {number} height - Height of item. Must be valid after update()
 * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update
 * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update
 * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update
 * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update
 */

// The layout service is very self explanatory.  It's responsible for the layout within a chart.
// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need
// It is this service's responsibility of carrying out that layout.
var core_layouts = {
	defaults: {},

	/**
	 * Register a box to a chart.
	 * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.
	 * @param {Chart} chart - the chart to use
	 * @param {ILayoutItem} item - the item to add to be layed out
	 */
	addBox: function(chart, item) {
		if (!chart.boxes) {
			chart.boxes = [];
		}

		// initialize item with default values
		item.fullWidth = item.fullWidth || false;
		item.position = item.position || 'top';
		item.weight = item.weight || 0;
		item._layers = item._layers || function() {
			return [{
				z: 0,
				draw: function() {
					item.draw.apply(item, arguments);
				}
			}];
		};

		chart.boxes.push(item);
	},

	/**
	 * Remove a layoutItem from a chart
	 * @param {Chart} chart - the chart to remove the box from
	 * @param {ILayoutItem} layoutItem - the item to remove from the layout
	 */
	removeBox: function(chart, layoutItem) {
		var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;
		if (index !== -1) {
			chart.boxes.splice(index, 1);
		}
	},

	/**
	 * Sets (or updates) options on the given `item`.
	 * @param {Chart} chart - the chart in which the item lives (or will be added to)
	 * @param {ILayoutItem} item - the item to configure with the given options
	 * @param {object} options - the new item options.
	 */
	configure: function(chart, item, options) {
		var props = ['fullWidth', 'position', 'weight'];
		var ilen = props.length;
		var i = 0;
		var prop;

		for (; i < ilen; ++i) {
			prop = props[i];
			if (options.hasOwnProperty(prop)) {
				item[prop] = options[prop];
			}
		}
	},

	/**
	 * Fits boxes of the given chart into the given size by having each box measure itself
	 * then running a fitting algorithm
	 * @param {Chart} chart - the chart
	 * @param {number} width - the width to fit into
	 * @param {number} height - the height to fit into
	 */
	update: function(chart, width, height) {
		if (!chart) {
			return;
		}

		var layoutOptions = chart.options.layout || {};
		var padding = helpers$1.options.toPadding(layoutOptions.padding);

		var availableWidth = width - padding.width;
		var availableHeight = height - padding.height;
		var boxes = buildLayoutBoxes(chart.boxes);
		var verticalBoxes = boxes.vertical;
		var horizontalBoxes = boxes.horizontal;

		// Essentially we now have any number of boxes on each of the 4 sides.
		// Our canvas looks like the following.
		// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and
		// B1 is the bottom axis
		// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays
		// These locations are single-box locations only, when trying to register a chartArea location that is already taken,
		// an error will be thrown.
		//
		// |----------------------------------------------------|
		// |                  T1 (Full Width)                   |
		// |----------------------------------------------------|
		// |    |    |                 T2                  |    |
		// |    |----|-------------------------------------|----|
		// |    |    | C1 |                           | C2 |    |
		// |    |    |----|                           |----|    |
		// |    |    |                                     |    |
		// | L1 | L2 |           ChartArea (C0)            | R1 |
		// |    |    |                                     |    |
		// |    |    |----|                           |----|    |
		// |    |    | C3 |                           | C4 |    |
		// |    |----|-------------------------------------|----|
		// |    |    |                 B1                  |    |
		// |----------------------------------------------------|
		// |                  B2 (Full Width)                   |
		// |----------------------------------------------------|
		//

		var params = Object.freeze({
			outerWidth: width,
			outerHeight: height,
			padding: padding,
			availableWidth: availableWidth,
			vBoxMaxWidth: availableWidth / 2 / verticalBoxes.length,
			hBoxMaxHeight: availableHeight / 2
		});
		var chartArea = extend({
			maxPadding: extend({}, padding),
			w: availableWidth,
			h: availableHeight,
			x: padding.left,
			y: padding.top
		}, padding);

		setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);

		// First fit vertical boxes
		fitBoxes(verticalBoxes, chartArea, params);

		// Then fit horizontal boxes
		if (fitBoxes(horizontalBoxes, chartArea, params)) {
			// if the area changed, re-fit vertical boxes
			fitBoxes(verticalBoxes, chartArea, params);
		}

		handleMaxPadding(chartArea);

		// Finally place the boxes to correct coordinates
		placeBoxes(boxes.leftAndTop, chartArea, params);

		// Move to opposite side of chart
		chartArea.x += chartArea.w;
		chartArea.y += chartArea.h;

		placeBoxes(boxes.rightAndBottom, chartArea, params);

		chart.chartArea = {
			left: chartArea.left,
			top: chartArea.top,
			right: chartArea.left + chartArea.w,
			bottom: chartArea.top + chartArea.h
		};

		// Finally update boxes in chartArea (radial scale for example)
		helpers$1.each(boxes.chartArea, function(layout) {
			var box = layout.box;
			extend(box, chart.chartArea);
			box.update(chartArea.w, chartArea.h);
		});
	}
};

/**
 * Platform fallback implementation (minimal).
 * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939
 */

var platform_basic = {
	acquireContext: function(item) {
		if (item && item.canvas) {
			// Support for any object associated to a canvas (including a context2d)
			item = item.canvas;
		}

		return item && item.getContext('2d') || null;
	}
};

var platform_dom = "/*\r\n * DOM element rendering detection\r\n * https://davidwalsh.name/detect-node-insertion\r\n */\r\n@keyframes chartjs-render-animation {\r\n\tfrom { opacity: 0.99; }\r\n\tto { opacity: 1; }\r\n}\r\n\r\n.chartjs-render-monitor {\r\n\tanimation: chartjs-render-animation 0.001s;\r\n}\r\n\r\n/*\r\n * DOM element resizing detection\r\n * https://github.com/marcj/css-element-queries\r\n */\r\n.chartjs-size-monitor,\r\n.chartjs-size-monitor-expand,\r\n.chartjs-size-monitor-shrink {\r\n\tposition: absolute;\r\n\tdirection: ltr;\r\n\tleft: 0;\r\n\ttop: 0;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\toverflow: hidden;\r\n\tpointer-events: none;\r\n\tvisibility: hidden;\r\n\tz-index: -1;\r\n}\r\n\r\n.chartjs-size-monitor-expand > div {\r\n\tposition: absolute;\r\n\twidth: 1000000px;\r\n\theight: 1000000px;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n\r\n.chartjs-size-monitor-shrink > div {\r\n\tposition: absolute;\r\n\twidth: 200%;\r\n\theight: 200%;\r\n\tleft: 0;\r\n\ttop: 0;\r\n}\r\n";

var platform_dom$1 = /*#__PURE__*/Object.freeze({
__proto__: null,
'default': platform_dom
});

var stylesheet = getCjsExportFromNamespace(platform_dom$1);

var EXPANDO_KEY = '$chartjs';
var CSS_PREFIX = 'chartjs-';
var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';
var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';
var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';
var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];

/**
 * DOM event types -> Chart.js event types.
 * Note: only events with different types are mapped.
 * @see https://developer.mozilla.org/en-US/docs/Web/Events
 */
var EVENT_TYPES = {
	touchstart: 'mousedown',
	touchmove: 'mousemove',
	touchend: 'mouseup',
	pointerenter: 'mouseenter',
	pointerdown: 'mousedown',
	pointermove: 'mousemove',
	pointerup: 'mouseup',
	pointerleave: 'mouseout',
	pointerout: 'mouseout'
};

/**
 * The "used" size is the final value of a dimension property after all calculations have
 * been performed. This method uses the computed style of `element` but returns undefined
 * if the computed style is not expressed in pixels. That can happen in some cases where
 * `element` has a size relative to its parent and this last one is not yet displayed,
 * for example because of `display: none` on a parent node.
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value
 * @returns {number} Size in pixels or undefined if unknown.
 */
function readUsedSize(element, property) {
	var value = helpers$1.getStyle(element, property);
	var matches = value && value.match(/^(\d+)(\.\d+)?px$/);
	return matches ? Number(matches[1]) : undefined;
}

/**
 * Initializes the canvas style and render size without modifying the canvas display size,
 * since responsiveness is handled by the controller.resize() method. The config is used
 * to determine the aspect ratio to apply in case no explicit height has been specified.
 */
function initCanvas(canvas, config) {
	var style = canvas.style;

	// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it
	// returns null or '' if no explicit value has been set to the canvas attribute.
	var renderHeight = canvas.getAttribute('height');
	var renderWidth = canvas.getAttribute('width');

	// Chart.js modifies some canvas values that we want to restore on destroy
	canvas[EXPANDO_KEY] = {
		initial: {
			height: renderHeight,
			width: renderWidth,
			style: {
				display: style.display,
				height: style.height,
				width: style.width
			}
		}
	};

	// Force canvas to display as block to avoid extra space caused by inline
	// elements, which would interfere with the responsive resize process.
	// https://github.com/chartjs/Chart.js/issues/2538
	style.display = style.display || 'block';

	if (renderWidth === null || renderWidth === '') {
		var displayWidth = readUsedSize(canvas, 'width');
		if (displayWidth !== undefined) {
			canvas.width = displayWidth;
		}
	}

	if (renderHeight === null || renderHeight === '') {
		if (canvas.style.height === '') {
			// If no explicit render height and style height, let's apply the aspect ratio,
			// which one can be specified by the user but also by charts as default option
			// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.
			canvas.height = canvas.width / (config.options.aspectRatio || 2);
		} else {
			var displayHeight = readUsedSize(canvas, 'height');
			if (displayWidth !== undefined) {
				canvas.height = displayHeight;
			}
		}
	}

	return canvas;
}

/**
 * Detects support for options object argument in addEventListener.
 * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
 * @private
 */
var supportsEventListenerOptions = (function() {
	var supports = false;
	try {
		var options = Object.defineProperty({}, 'passive', {
			// eslint-disable-next-line getter-return
			get: function() {
				supports = true;
			}
		});
		window.addEventListener('e', null, options);
	} catch (e) {
		// continue regardless of error
	}
	return supports;
}());

// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.
// https://github.com/chartjs/Chart.js/issues/4287
var eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;

function addListener(node, type, listener) {
	node.addEventListener(type, listener, eventListenerOptions);
}

function removeListener(node, type, listener) {
	node.removeEventListener(type, listener, eventListenerOptions);
}

function createEvent(type, chart, x, y, nativeEvent) {
	return {
		type: type,
		chart: chart,
		native: nativeEvent || null,
		x: x !== undefined ? x : null,
		y: y !== undefined ? y : null,
	};
}

function fromNativeEvent(event, chart) {
	var type = EVENT_TYPES[event.type] || event.type;
	var pos = helpers$1.getRelativePosition(event, chart);
	return createEvent(type, chart, pos.x, pos.y, event);
}

function throttled(fn, thisArg) {
	var ticking = false;
	var args = [];

	return function() {
		args = Array.prototype.slice.call(arguments);
		thisArg = thisArg || this;

		if (!ticking) {
			ticking = true;
			helpers$1.requestAnimFrame.call(window, function() {
				ticking = false;
				fn.apply(thisArg, args);
			});
		}
	};
}

function createDiv(cls) {
	var el = document.createElement('div');
	el.className = cls || '';
	return el;
}

// Implementation based on https://github.com/marcj/css-element-queries
function createResizer(handler) {
	var maxSize = 1000000;

	// NOTE(SB) Don't use innerHTML because it could be considered unsafe.
	// https://github.com/chartjs/Chart.js/issues/5902
	var resizer = createDiv(CSS_SIZE_MONITOR);
	var expand = createDiv(CSS_SIZE_MONITOR + '-expand');
	var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');

	expand.appendChild(createDiv());
	shrink.appendChild(createDiv());

	resizer.appendChild(expand);
	resizer.appendChild(shrink);
	resizer._reset = function() {
		expand.scrollLeft = maxSize;
		expand.scrollTop = maxSize;
		shrink.scrollLeft = maxSize;
		shrink.scrollTop = maxSize;
	};

	var onScroll = function() {
		resizer._reset();
		handler();
	};

	addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));
	addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));

	return resizer;
}

// https://davidwalsh.name/detect-node-insertion
function watchForRender(node, handler) {
	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});
	var proxy = expando.renderProxy = function(e) {
		if (e.animationName === CSS_RENDER_ANIMATION) {
			handler();
		}
	};

	helpers$1.each(ANIMATION_START_EVENTS, function(type) {
		addListener(node, type, proxy);
	});

	// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class
	// is removed then added back immediately (same animation frame?). Accessing the
	// `offsetParent` property will force a reflow and re-evaluate the CSS animation.
	// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics
	// https://github.com/chartjs/Chart.js/issues/4737
	expando.reflow = !!node.offsetParent;

	node.classList.add(CSS_RENDER_MONITOR);
}

function unwatchForRender(node) {
	var expando = node[EXPANDO_KEY] || {};
	var proxy = expando.renderProxy;

	if (proxy) {
		helpers$1.each(ANIMATION_START_EVENTS, function(type) {
			removeListener(node, type, proxy);
		});

		delete expando.renderProxy;
	}

	node.classList.remove(CSS_RENDER_MONITOR);
}

function addResizeListener(node, listener, chart) {
	var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});

	// Let's keep track of this added resizer and thus avoid DOM query when removing it.
	var resizer = expando.resizer = createResizer(throttled(function() {
		if (expando.resizer) {
			var container = chart.options.maintainAspectRatio && node.parentNode;
			var w = container ? container.clientWidth : 0;
			listener(createEvent('resize', chart));
			if (container && container.clientWidth < w && chart.canvas) {
				// If the container size shrank during chart resize, let's assume
				// scrollbar appeared. So we resize again with the scrollbar visible -
				// effectively making chart smaller and the scrollbar hidden again.
				// Because we are inside `throttled`, and currently `ticking`, scroll
				// events are ignored during this whole 2 resize process.
				// If we assumed wrong and something else happened, we are resizing
				// twice in a frame (potential performance issue)
				listener(createEvent('resize', chart));
			}
		}
	}));

	// The resizer needs to be attached to the node parent, so we first need to be
	// sure that `node` is attached to the DOM before injecting the resizer element.
	watchForRender(node, function() {
		if (expando.resizer) {
			var container = node.parentNode;
			if (container && container !== resizer.parentNode) {
				container.insertBefore(resizer, container.firstChild);
			}

			// The container size might have changed, let's reset the resizer state.
			resizer._reset();
		}
	});
}

function removeResizeListener(node) {
	var expando = node[EXPANDO_KEY] || {};
	var resizer = expando.resizer;

	delete expando.resizer;
	unwatchForRender(node);

	if (resizer && resizer.parentNode) {
		resizer.parentNode.removeChild(resizer);
	}
}

/**
 * Injects CSS styles inline if the styles are not already present.
 * @param {HTMLDocument|ShadowRoot} rootNode - the node to contain the <style>.
 * @param {string} css - the CSS to be injected.
 */
function injectCSS(rootNode, css) {
	// https://stackoverflow.com/q/3922139
	var expando = rootNode[EXPANDO_KEY] || (rootNode[EXPANDO_KEY] = {});
	if (!expando.containsStyles) {
		expando.containsStyles = true;
		css = '/* Chart.js */\n' + css;
		var style = document.createElement('style');
		style.setAttribute('type', 'text/css');
		style.appendChild(document.createTextNode(css));
		rootNode.appendChild(style);
	}
}

var platform_dom$2 = {
	/**
	 * When `true`, prevents the automatic injection of the stylesheet required to
	 * correctly detect when the chart is added to the DOM and then resized. This
	 * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)
	 * to be manually imported to make this library compatible with any CSP.
	 * See https://github.com/chartjs/Chart.js/issues/5208
	 */
	disableCSSInjection: false,

	/**
	 * This property holds whether this platform is enabled for the current environment.
	 * Currently used by platform.js to select the proper implementation.
	 * @private
	 */
	_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',

	/**
	 * Initializes resources that depend on platform options.
	 * @param {HTMLCanvasElement} canvas - The Canvas element.
	 * @private
	 */
	_ensureLoaded: function(canvas) {
		if (!this.disableCSSInjection) {
			// If the canvas is in a shadow DOM, then the styles must also be inserted
			// into the same shadow DOM.
			// https://github.com/chartjs/Chart.js/issues/5763
			var root = canvas.getRootNode ? canvas.getRootNode() : document;
			var targetNode = root.host ? root : document.head;
			injectCSS(targetNode, stylesheet);
		}
	},

	acquireContext: function(item, config) {
		if (typeof item === 'string') {
			item = document.getElementById(item);
		} else if (item.length) {
			// Support for array based queries (such as jQuery)
			item = item[0];
		}

		if (item && item.canvas) {
			// Support for any object associated to a canvas (including a context2d)
			item = item.canvas;
		}

		// To prevent canvas fingerprinting, some add-ons undefine the getContext
		// method, for example: https://github.com/kkapsner/CanvasBlocker
		// https://github.com/chartjs/Chart.js/issues/2807
		var context = item && item.getContext && item.getContext('2d');

		// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is
		// inside an iframe or when running in a protected environment. We could guess the
		// types from their toString() value but let's keep things flexible and assume it's
		// a sufficient condition if the item has a context2D which has item as `canvas`.
		// https://github.com/chartjs/Chart.js/issues/3887
		// https://github.com/chartjs/Chart.js/issues/4102
		// https://github.com/chartjs/Chart.js/issues/4152
		if (context && context.canvas === item) {
			// Load platform resources on first chart creation, to make it possible to
			// import the library before setting platform options.
			this._ensureLoaded(item);
			initCanvas(item, config);
			return context;
		}

		return null;
	},

	releaseContext: function(context) {
		var canvas = context.canvas;
		if (!canvas[EXPANDO_KEY]) {
			return;
		}

		var initial = canvas[EXPANDO_KEY].initial;
		['height', 'width'].forEach(function(prop) {
			var value = initial[prop];
			if (helpers$1.isNullOrUndef(value)) {
				canvas.removeAttribute(prop);
			} else {
				canvas.setAttribute(prop, value);
			}
		});

		helpers$1.each(initial.style || {}, function(value, key) {
			canvas.style[key] = value;
		});

		// The canvas render size might have been changed (and thus the state stack discarded),
		// we can't use save() and restore() to restore the initial state. So make sure that at
		// least the canvas context is reset to the default state by setting the canvas width.
		// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html
		// eslint-disable-next-line no-self-assign
		canvas.width = canvas.width;

		delete canvas[EXPANDO_KEY];
	},

	addEventListener: function(chart, type, listener) {
		var canvas = chart.canvas;
		if (type === 'resize') {
			// Note: the resize event is not supported on all browsers.
			addResizeListener(canvas, listener, chart);
			return;
		}

		var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});
		var proxies = expando.proxies || (expando.proxies = {});
		var proxy = proxies[chart.id + '_' + type] = function(event) {
			listener(fromNativeEvent(event, chart));
		};

		addListener(canvas, type, proxy);
	},

	removeEventListener: function(chart, type, listener) {
		var canvas = chart.canvas;
		if (type === 'resize') {
			// Note: the resize event is not supported on all browsers.
			removeResizeListener(canvas);
			return;
		}

		var expando = listener[EXPANDO_KEY] || {};
		var proxies = expando.proxies || {};
		var proxy = proxies[chart.id + '_' + type];
		if (!proxy) {
			return;
		}

		removeListener(canvas, type, proxy);
	}
};

// DEPRECATIONS

/**
 * Provided for backward compatibility, use EventTarget.addEventListener instead.
 * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
 * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener
 * @function Chart.helpers.addEvent
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers$1.addEvent = addListener;

/**
 * Provided for backward compatibility, use EventTarget.removeEventListener instead.
 * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+
 * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener
 * @function Chart.helpers.removeEvent
 * @deprecated since version 2.7.0
 * @todo remove at version 3
 * @private
 */
helpers$1.removeEvent = removeListener;

// @TODO Make possible to select another platform at build time.
var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;

/**
 * @namespace Chart.platform
 * @see https://chartjs.gitbooks.io/proposals/content/Platform.html
 * @since 2.4.0
 */
var platform = helpers$1.extend({
	/**
	 * @since 2.7.0
	 */
	initialize: function() {},

	/**
	 * Called at chart construction time, returns a context2d instance implementing
	 * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.
	 * @param {*} item - The native item from which to acquire context (platform specific)
	 * @param {object} options - The chart options
	 * @returns {CanvasRenderingContext2D} context2d instance
	 */
	acquireContext: function() {},

	/**
	 * Called at chart destruction time, releases any resources associated to the context
	 * previously returned by the acquireContext() method.
	 * @param {CanvasRenderingContext2D} context - The context2d instance
	 * @returns {boolean} true if the method succeeded, else false
	 */
	releaseContext: function() {},

	/**
	 * Registers the specified listener on the given chart.
	 * @param {Chart} chart - Chart from which to listen for event
	 * @param {string} type - The ({@link IEvent}) type to listen for
	 * @param {function} listener - Receives a notification (an object that implements
	 * the {@link IEvent} interface) when an event of the specified type occurs.
	 */
	addEventListener: function() {},

	/**
	 * Removes the specified listener previously registered with addEventListener.
	 * @param {Chart} chart - Chart from which to remove the listener
	 * @param {string} type - The ({@link IEvent}) type to remove
	 * @param {function} listener - The listener function to remove from the event target.
	 */
	removeEventListener: function() {}

}, implementation);

core_defaults._set('global', {
	plugins: {}
});

/**
 * The plugin service singleton
 * @namespace Chart.plugins
 * @since 2.1.0
 */
var core_plugins = {
	/**
	 * Globally registered plugins.
	 * @private
	 */
	_plugins: [],

	/**
	 * This identifier is used to invalidate the descriptors cache attached to each chart
	 * when a global plugin is registered or unregistered. In this case, the cache ID is
	 * incremented and descriptors are regenerated during following API calls.
	 * @private
	 */
	_cacheId: 0,

	/**
	 * Registers the given plugin(s) if not already registered.
	 * @param {IPlugin[]|IPlugin} plugins plugin instance(s).
	 */
	register: function(plugins) {
		var p = this._plugins;
		([]).concat(plugins).forEach(function(plugin) {
			if (p.indexOf(plugin) === -1) {
				p.push(plugin);
			}
		});

		this._cacheId++;
	},

	/**
	 * Unregisters the given plugin(s) only if registered.
	 * @param {IPlugin[]|IPlugin} plugins plugin instance(s).
	 */
	unregister: function(plugins) {
		var p = this._plugins;
		([]).concat(plugins).forEach(function(plugin) {
			var idx = p.indexOf(plugin);
			if (idx !== -1) {
				p.splice(idx, 1);
			}
		});

		this._cacheId++;
	},

	/**
	 * Remove all registered plugins.
	 * @since 2.1.5
	 */
	clear: function() {
		this._plugins = [];
		this._cacheId++;
	},

	/**
	 * Returns the number of registered plugins?
	 * @returns {number}
	 * @since 2.1.5
	 */
	count: function() {
		return this._plugins.length;
	},

	/**
	 * Returns all registered plugin instances.
	 * @returns {IPlugin[]} array of plugin objects.
	 * @since 2.1.5
	 */
	getAll: function() {
		return this._plugins;
	},

	/**
	 * Calls enabled plugins for `chart` on the specified hook and with the given args.
	 * This method immediately returns as soon as a plugin explicitly returns false. The
	 * returned value can be used, for instance, to interrupt the current action.
	 * @param {Chart} chart - The chart instance for which plugins should be called.
	 * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').
	 * @param {Array} [args] - Extra arguments to apply to the hook call.
	 * @returns {boolean} false if any of the plugins return false, else returns true.
	 */
	notify: function(chart, hook, args) {
		var descriptors = this.descriptors(chart);
		var ilen = descriptors.length;
		var i, descriptor, plugin, params, method;

		for (i = 0; i < ilen; ++i) {
			descriptor = descriptors[i];
			plugin = descriptor.plugin;
			method = plugin[hook];
			if (typeof method === 'function') {
				params = [chart].concat(args || []);
				params.push(descriptor.options);
				if (method.apply(plugin, params) === false) {
					return false;
				}
			}
		}

		return true;
	},

	/**
	 * Returns descriptors of enabled plugins for the given chart.
	 * @returns {object[]} [{ plugin, options }]
	 * @private
	 */
	descriptors: function(chart) {
		var cache = chart.$plugins || (chart.$plugins = {});
		if (cache.id === this._cacheId) {
			return cache.descriptors;
		}

		var plugins = [];
		var descriptors = [];
		var config = (chart && chart.config) || {};
		var options = (config.options && config.options.plugins) || {};

		this._plugins.concat(config.plugins || []).forEach(function(plugin) {
			var idx = plugins.indexOf(plugin);
			if (idx !== -1) {
				return;
			}

			var id = plugin.id;
			var opts = options[id];
			if (opts === false) {
				return;
			}

			if (opts === true) {
				opts = helpers$1.clone(core_defaults.global.plugins[id]);
			}

			plugins.push(plugin);
			descriptors.push({
				plugin: plugin,
				options: opts || {}
			});
		});

		cache.descriptors = descriptors;
		cache.id = this._cacheId;
		return descriptors;
	},

	/**
	 * Invalidates cache for the given chart: descriptors hold a reference on plugin option,
	 * but in some cases, this reference can be changed by the user when updating options.
	 * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
	 * @private
	 */
	_invalidate: function(chart) {
		delete chart.$plugins;
	}
};

var core_scaleService = {
	// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then
	// use the new chart options to grab the correct scale
	constructors: {},
	// Use a registration function so that we can move to an ES6 map when we no longer need to support
	// old browsers

	// Scale config defaults
	defaults: {},
	registerScaleType: function(type, scaleConstructor, scaleDefaults) {
		this.constructors[type] = scaleConstructor;
		this.defaults[type] = helpers$1.clone(scaleDefaults);
	},
	getScaleConstructor: function(type) {
		return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;
	},
	getScaleDefaults: function(type) {
		// Return the scale defaults merged with the global settings so that we always use the latest ones
		return this.defaults.hasOwnProperty(type) ? helpers$1.merge(Object.create(null), [core_defaults.scale, this.defaults[type]]) : {};
	},
	updateScaleDefaults: function(type, additions) {
		var me = this;
		if (me.defaults.hasOwnProperty(type)) {
			me.defaults[type] = helpers$1.extend(me.defaults[type], additions);
		}
	},
	addScalesToLayout: function(chart) {
		// Adds each scale to the chart.boxes array to be sized accordingly
		helpers$1.each(chart.scales, function(scale) {
			// Set ILayoutItem parameters for backwards compatibility
			scale.fullWidth = scale.options.fullWidth;
			scale.position = scale.options.position;
			scale.weight = scale.options.weight;
			core_layouts.addBox(chart, scale);
		});
	}
};

var valueOrDefault$8 = helpers$1.valueOrDefault;
var getRtlHelper = helpers$1.rtl.getRtlAdapter;

core_defaults._set('global', {
	tooltips: {
		enabled: true,
		custom: null,
		mode: 'nearest',
		position: 'average',
		intersect: true,
		backgroundColor: 'rgba(0,0,0,0.8)',
		titleFontStyle: 'bold',
		titleSpacing: 2,
		titleMarginBottom: 6,
		titleFontColor: '#fff',
		titleAlign: 'left',
		bodySpacing: 2,
		bodyFontColor: '#fff',
		bodyAlign: 'left',
		footerFontStyle: 'bold',
		footerSpacing: 2,
		footerMarginTop: 6,
		footerFontColor: '#fff',
		footerAlign: 'left',
		yPadding: 6,
		xPadding: 6,
		caretPadding: 2,
		caretSize: 5,
		cornerRadius: 6,
		multiKeyBackground: '#fff',
		displayColors: true,
		borderColor: 'rgba(0,0,0,0)',
		borderWidth: 0,
		callbacks: {
			// Args are: (tooltipItems, data)
			beforeTitle: helpers$1.noop,
			title: function(tooltipItems, data) {
				var title = '';
				var labels = data.labels;
				var labelCount = labels ? labels.length : 0;

				if (tooltipItems.length > 0) {
					var item = tooltipItems[0];
					if (item.label) {
						title = item.label;
					} else if (item.xLabel) {
						title = item.xLabel;
					} else if (labelCount > 0 && item.index < labelCount) {
						title = labels[item.index];
					}
				}

				return title;
			},
			afterTitle: helpers$1.noop,

			// Args are: (tooltipItems, data)
			beforeBody: helpers$1.noop,

			// Args are: (tooltipItem, data)
			beforeLabel: helpers$1.noop,
			label: function(tooltipItem, data) {
				var label = data.datasets[tooltipItem.datasetIndex].label || '';

				if (label) {
					label += ': ';
				}
				if (!helpers$1.isNullOrUndef(tooltipItem.value)) {
					label += tooltipItem.value;
				} else {
					label += tooltipItem.yLabel;
				}
				return label;
			},
			labelColor: function(tooltipItem, chart) {
				var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);
				var activeElement = meta.data[tooltipItem.index];
				var view = activeElement._view;
				return {
					borderColor: view.borderColor,
					backgroundColor: view.backgroundColor
				};
			},
			labelTextColor: function() {
				return this._options.bodyFontColor;
			},
			afterLabel: helpers$1.noop,

			// Args are: (tooltipItems, data)
			afterBody: helpers$1.noop,

			// Args are: (tooltipItems, data)
			beforeFooter: helpers$1.noop,
			footer: helpers$1.noop,
			afterFooter: helpers$1.noop
		}
	}
});

var positioners = {
	/**
	 * Average mode places the tooltip at the average position of the elements shown
	 * @function Chart.Tooltip.positioners.average
	 * @param elements {ChartElement[]} the elements being displayed in the tooltip
	 * @returns {object} tooltip position
	 */
	average: function(elements) {
		if (!elements.length) {
			return false;
		}

		var i, len;
		var x = 0;
		var y = 0;
		var count = 0;

		for (i = 0, len = elements.length; i < len; ++i) {
			var el = elements[i];
			if (el && el.hasValue()) {
				var pos = el.tooltipPosition();
				x += pos.x;
				y += pos.y;
				++count;
			}
		}

		return {
			x: x / count,
			y: y / count
		};
	},

	/**
	 * Gets the tooltip position nearest of the item nearest to the event position
	 * @function Chart.Tooltip.positioners.nearest
	 * @param elements {Chart.Element[]} the tooltip elements
	 * @param eventPosition {object} the position of the event in canvas coordinates
	 * @returns {object} the tooltip position
	 */
	nearest: function(elements, eventPosition) {
		var x = eventPosition.x;
		var y = eventPosition.y;
		var minDistance = Number.POSITIVE_INFINITY;
		var i, len, nearestElement;

		for (i = 0, len = elements.length; i < len; ++i) {
			var el = elements[i];
			if (el && el.hasValue()) {
				var center = el.getCenterPoint();
				var d = helpers$1.distanceBetweenPoints(eventPosition, center);

				if (d < minDistance) {
					minDistance = d;
					nearestElement = el;
				}
			}
		}

		if (nearestElement) {
			var tp = nearestElement.tooltipPosition();
			x = tp.x;
			y = tp.y;
		}

		return {
			x: x,
			y: y
		};
	}
};

// Helper to push or concat based on if the 2nd parameter is an array or not
function pushOrConcat(base, toPush) {
	if (toPush) {
		if (helpers$1.isArray(toPush)) {
			// base = base.concat(toPush);
			Array.prototype.push.apply(base, toPush);
		} else {
			base.push(toPush);
		}
	}

	return base;
}

/**
 * Returns array of strings split by newline
 * @param {string} value - The value to split by newline.
 * @returns {string[]} value if newline present - Returned from String split() method
 * @function
 */
function splitNewlines(str) {
	if ((typeof str === 'string' || str instanceof String) && str.indexOf('\n') > -1) {
		return str.split('\n');
	}
	return str;
}


/**
 * Private helper to create a tooltip item model
 * @param element - the chart element (point, arc, bar) to create the tooltip item for
 * @return new tooltip item
 */
function createTooltipItem(element) {
	var xScale = element._xScale;
	var yScale = element._yScale || element._scale; // handle radar || polarArea charts
	var index = element._index;
	var datasetIndex = element._datasetIndex;
	var controller = element._chart.getDatasetMeta(datasetIndex).controller;
	var indexScale = controller._getIndexScale();
	var valueScale = controller._getValueScale();

	return {
		xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',
		yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',
		label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',
		value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',
		index: index,
		datasetIndex: datasetIndex,
		x: element._model.x,
		y: element._model.y
	};
}

/**
 * Helper to get the reset model for the tooltip
 * @param tooltipOpts {object} the tooltip options
 */
function getBaseModel(tooltipOpts) {
	var globalDefaults = core_defaults.global;

	return {
		// Positioning
		xPadding: tooltipOpts.xPadding,
		yPadding: tooltipOpts.yPadding,
		xAlign: tooltipOpts.xAlign,
		yAlign: tooltipOpts.yAlign,

		// Drawing direction and text direction
		rtl: tooltipOpts.rtl,
		textDirection: tooltipOpts.textDirection,

		// Body
		bodyFontColor: tooltipOpts.bodyFontColor,
		_bodyFontFamily: valueOrDefault$8(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),
		_bodyFontStyle: valueOrDefault$8(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),
		_bodyAlign: tooltipOpts.bodyAlign,
		bodyFontSize: valueOrDefault$8(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),
		bodySpacing: tooltipOpts.bodySpacing,

		// Title
		titleFontColor: tooltipOpts.titleFontColor,
		_titleFontFamily: valueOrDefault$8(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),
		_titleFontStyle: valueOrDefault$8(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),
		titleFontSize: valueOrDefault$8(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),
		_titleAlign: tooltipOpts.titleAlign,
		titleSpacing: tooltipOpts.titleSpacing,
		titleMarginBottom: tooltipOpts.titleMarginBottom,

		// Footer
		footerFontColor: tooltipOpts.footerFontColor,
		_footerFontFamily: valueOrDefault$8(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),
		_footerFontStyle: valueOrDefault$8(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),
		footerFontSize: valueOrDefault$8(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),
		_footerAlign: tooltipOpts.footerAlign,
		footerSpacing: tooltipOpts.footerSpacing,
		footerMarginTop: tooltipOpts.footerMarginTop,

		// Appearance
		caretSize: tooltipOpts.caretSize,
		cornerRadius: tooltipOpts.cornerRadius,
		backgroundColor: tooltipOpts.backgroundColor,
		opacity: 0,
		legendColorBackground: tooltipOpts.multiKeyBackground,
		displayColors: tooltipOpts.displayColors,
		borderColor: tooltipOpts.borderColor,
		borderWidth: tooltipOpts.borderWidth
	};
}

/**
 * Get the size of the tooltip
 */
function getTooltipSize(tooltip, model) {
	var ctx = tooltip._chart.ctx;

	var height = model.yPadding * 2; // Tooltip Padding
	var width = 0;

	// Count of all lines in the body
	var body = model.body;
	var combinedBodyLength = body.reduce(function(count, bodyItem) {
		return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;
	}, 0);
	combinedBodyLength += model.beforeBody.length + model.afterBody.length;

	var titleLineCount = model.title.length;
	var footerLineCount = model.footer.length;
	var titleFontSize = model.titleFontSize;
	var bodyFontSize = model.bodyFontSize;
	var footerFontSize = model.footerFontSize;

	height += titleLineCount * titleFontSize; // Title Lines
	height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing
	height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin
	height += combinedBodyLength * bodyFontSize; // Body Lines
	height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing
	height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin
	height += footerLineCount * (footerFontSize); // Footer Lines
	height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing

	// Title width
	var widthPadding = 0;
	var maxLineWidth = function(line) {
		width = Math.max(width, ctx.measureText(line).width + widthPadding);
	};

	ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);
	helpers$1.each(model.title, maxLineWidth);

	// Body width
	ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);
	helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth);

	// Body lines may include some extra width due to the color box
	widthPadding = model.displayColors ? (bodyFontSize + 2) : 0;
	helpers$1.each(body, function(bodyItem) {
		helpers$1.each(bodyItem.before, maxLineWidth);
		helpers$1.each(bodyItem.lines, maxLineWidth);
		helpers$1.each(bodyItem.after, maxLineWidth);
	});

	// Reset back to 0
	widthPadding = 0;

	// Footer width
	ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);
	helpers$1.each(model.footer, maxLineWidth);

	// Add padding
	width += 2 * model.xPadding;

	return {
		width: width,
		height: height
	};
}

/**
 * Helper to get the alignment of a tooltip given the size
 */
function determineAlignment(tooltip, size) {
	var model = tooltip._model;
	var chart = tooltip._chart;
	var chartArea = tooltip._chart.chartArea;
	var xAlign = 'center';
	var yAlign = 'center';

	if (model.y < size.height) {
		yAlign = 'top';
	} else if (model.y > (chart.height - size.height)) {
		yAlign = 'bottom';
	}

	var lf, rf; // functions to determine left, right alignment
	var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart
	var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges
	var midX = (chartArea.left + chartArea.right) / 2;
	var midY = (chartArea.top + chartArea.bottom) / 2;

	if (yAlign === 'center') {
		lf = function(x) {
			return x <= midX;
		};
		rf = function(x) {
			return x > midX;
		};
	} else {
		lf = function(x) {
			return x <= (size.width / 2);
		};
		rf = function(x) {
			return x >= (chart.width - (size.width / 2));
		};
	}

	olf = function(x) {
		return x + size.width + model.caretSize + model.caretPadding > chart.width;
	};
	orf = function(x) {
		return x - size.width - model.caretSize - model.caretPadding < 0;
	};
	yf = function(y) {
		return y <= midY ? 'top' : 'bottom';
	};

	if (lf(model.x)) {
		xAlign = 'left';

		// Is tooltip too wide and goes over the right side of the chart.?
		if (olf(model.x)) {
			xAlign = 'center';
			yAlign = yf(model.y);
		}
	} else if (rf(model.x)) {
		xAlign = 'right';

		// Is tooltip too wide and goes outside left edge of canvas?
		if (orf(model.x)) {
			xAlign = 'center';
			yAlign = yf(model.y);
		}
	}

	var opts = tooltip._options;
	return {
		xAlign: opts.xAlign ? opts.xAlign : xAlign,
		yAlign: opts.yAlign ? opts.yAlign : yAlign
	};
}

/**
 * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment
 */
function getBackgroundPoint(vm, size, alignment, chart) {
	// Background Position
	var x = vm.x;
	var y = vm.y;

	var caretSize = vm.caretSize;
	var caretPadding = vm.caretPadding;
	var cornerRadius = vm.cornerRadius;
	var xAlign = alignment.xAlign;
	var yAlign = alignment.yAlign;
	var paddingAndSize = caretSize + caretPadding;
	var radiusAndPadding = cornerRadius + caretPadding;

	if (xAlign === 'right') {
		x -= size.width;
	} else if (xAlign === 'center') {
		x -= (size.width / 2);
		if (x + size.width > chart.width) {
			x = chart.width - size.width;
		}
		if (x < 0) {
			x = 0;
		}
	}

	if (yAlign === 'top') {
		y += paddingAndSize;
	} else if (yAlign === 'bottom') {
		y -= size.height + paddingAndSize;
	} else {
		y -= (size.height / 2);
	}

	if (yAlign === 'center') {
		if (xAlign === 'left') {
			x += paddingAndSize;
		} else if (xAlign === 'right') {
			x -= paddingAndSize;
		}
	} else if (xAlign === 'left') {
		x -= radiusAndPadding;
	} else if (xAlign === 'right') {
		x += radiusAndPadding;
	}

	return {
		x: x,
		y: y
	};
}

function getAlignedX(vm, align) {
	return align === 'center'
		? vm.x + vm.width / 2
		: align === 'right'
			? vm.x + vm.width - vm.xPadding
			: vm.x + vm.xPadding;
}

/**
 * Helper to build before and after body lines
 */
function getBeforeAfterBodyLines(callback) {
	return pushOrConcat([], splitNewlines(callback));
}

var exports$4 = core_element.extend({
	initialize: function() {
		this._model = getBaseModel(this._options);
		this._lastActive = [];
	},

	// Get the title
	// Args are: (tooltipItem, data)
	getTitle: function() {
		var me = this;
		var opts = me._options;
		var callbacks = opts.callbacks;

		var beforeTitle = callbacks.beforeTitle.apply(me, arguments);
		var title = callbacks.title.apply(me, arguments);
		var afterTitle = callbacks.afterTitle.apply(me, arguments);

		var lines = [];
		lines = pushOrConcat(lines, splitNewlines(beforeTitle));
		lines = pushOrConcat(lines, splitNewlines(title));
		lines = pushOrConcat(lines, splitNewlines(afterTitle));

		return lines;
	},

	// Args are: (tooltipItem, data)
	getBeforeBody: function() {
		return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));
	},

	// Args are: (tooltipItem, data)
	getBody: function(tooltipItems, data) {
		var me = this;
		var callbacks = me._options.callbacks;
		var bodyItems = [];

		helpers$1.each(tooltipItems, function(tooltipItem) {
			var bodyItem = {
				before: [],
				lines: [],
				after: []
			};
			pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));
			pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));
			pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));

			bodyItems.push(bodyItem);
		});

		return bodyItems;
	},

	// Args are: (tooltipItem, data)
	getAfterBody: function() {
		return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));
	},

	// Get the footer and beforeFooter and afterFooter lines
	// Args are: (tooltipItem, data)
	getFooter: function() {
		var me = this;
		var callbacks = me._options.callbacks;

		var beforeFooter = callbacks.beforeFooter.apply(me, arguments);
		var footer = callbacks.footer.apply(me, arguments);
		var afterFooter = callbacks.afterFooter.apply(me, arguments);

		var lines = [];
		lines = pushOrConcat(lines, splitNewlines(beforeFooter));
		lines = pushOrConcat(lines, splitNewlines(footer));
		lines = pushOrConcat(lines, splitNewlines(afterFooter));

		return lines;
	},

	update: function(changed) {
		var me = this;
		var opts = me._options;

		// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition
		// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time
		// which breaks any animations.
		var existingModel = me._model;
		var model = me._model = getBaseModel(opts);
		var active = me._active;

		var data = me._data;

		// In the case where active.length === 0 we need to keep these at existing values for good animations
		var alignment = {
			xAlign: existingModel.xAlign,
			yAlign: existingModel.yAlign
		};
		var backgroundPoint = {
			x: existingModel.x,
			y: existingModel.y
		};
		var tooltipSize = {
			width: existingModel.width,
			height: existingModel.height
		};
		var tooltipPosition = {
			x: existingModel.caretX,
			y: existingModel.caretY
		};

		var i, len;

		if (active.length) {
			model.opacity = 1;

			var labelColors = [];
			var labelTextColors = [];
			tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);

			var tooltipItems = [];
			for (i = 0, len = active.length; i < len; ++i) {
				tooltipItems.push(createTooltipItem(active[i]));
			}

			// If the user provided a filter function, use it to modify the tooltip items
			if (opts.filter) {
				tooltipItems = tooltipItems.filter(function(a) {
					return opts.filter(a, data);
				});
			}

			// If the user provided a sorting function, use it to modify the tooltip items
			if (opts.itemSort) {
				tooltipItems = tooltipItems.sort(function(a, b) {
					return opts.itemSort(a, b, data);
				});
			}

			// Determine colors for boxes
			helpers$1.each(tooltipItems, function(tooltipItem) {
				labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));
				labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));
			});


			// Build the Text Lines
			model.title = me.getTitle(tooltipItems, data);
			model.beforeBody = me.getBeforeBody(tooltipItems, data);
			model.body = me.getBody(tooltipItems, data);
			model.afterBody = me.getAfterBody(tooltipItems, data);
			model.footer = me.getFooter(tooltipItems, data);

			// Initial positioning and colors
			model.x = tooltipPosition.x;
			model.y = tooltipPosition.y;
			model.caretPadding = opts.caretPadding;
			model.labelColors = labelColors;
			model.labelTextColors = labelTextColors;

			// data points
			model.dataPoints = tooltipItems;

			// We need to determine alignment of the tooltip
			tooltipSize = getTooltipSize(this, model);
			alignment = determineAlignment(this, tooltipSize);
			// Final Size and Position
			backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);
		} else {
			model.opacity = 0;
		}

		model.xAlign = alignment.xAlign;
		model.yAlign = alignment.yAlign;
		model.x = backgroundPoint.x;
		model.y = backgroundPoint.y;
		model.width = tooltipSize.width;
		model.height = tooltipSize.height;

		// Point where the caret on the tooltip points to
		model.caretX = tooltipPosition.x;
		model.caretY = tooltipPosition.y;

		me._model = model;

		if (changed && opts.custom) {
			opts.custom.call(me, model);
		}

		return me;
	},

	drawCaret: function(tooltipPoint, size) {
		var ctx = this._chart.ctx;
		var vm = this._view;
		var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);

		ctx.lineTo(caretPosition.x1, caretPosition.y1);
		ctx.lineTo(caretPosition.x2, caretPosition.y2);
		ctx.lineTo(caretPosition.x3, caretPosition.y3);
	},
	getCaretPosition: function(tooltipPoint, size, vm) {
		var x1, x2, x3, y1, y2, y3;
		var caretSize = vm.caretSize;
		var cornerRadius = vm.cornerRadius;
		var xAlign = vm.xAlign;
		var yAlign = vm.yAlign;
		var ptX = tooltipPoint.x;
		var ptY = tooltipPoint.y;
		var width = size.width;
		var height = size.height;

		if (yAlign === 'center') {
			y2 = ptY + (height / 2);

			if (xAlign === 'left') {
				x1 = ptX;
				x2 = x1 - caretSize;
				x3 = x1;

				y1 = y2 + caretSize;
				y3 = y2 - caretSize;
			} else {
				x1 = ptX + width;
				x2 = x1 + caretSize;
				x3 = x1;

				y1 = y2 - caretSize;
				y3 = y2 + caretSize;
			}
		} else {
			if (xAlign === 'left') {
				x2 = ptX + cornerRadius + (caretSize);
				x1 = x2 - caretSize;
				x3 = x2 + caretSize;
			} else if (xAlign === 'right') {
				x2 = ptX + width - cornerRadius - caretSize;
				x1 = x2 - caretSize;
				x3 = x2 + caretSize;
			} else {
				x2 = vm.caretX;
				x1 = x2 - caretSize;
				x3 = x2 + caretSize;
			}
			if (yAlign === 'top') {
				y1 = ptY;
				y2 = y1 - caretSize;
				y3 = y1;
			} else {
				y1 = ptY + height;
				y2 = y1 + caretSize;
				y3 = y1;
				// invert drawing order
				var tmp = x3;
				x3 = x1;
				x1 = tmp;
			}
		}
		return {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};
	},

	drawTitle: function(pt, vm, ctx) {
		var title = vm.title;
		var length = title.length;
		var titleFontSize, titleSpacing, i;

		if (length) {
			var rtlHelper = getRtlHelper(vm.rtl, vm.x, vm.width);

			pt.x = getAlignedX(vm, vm._titleAlign);

			ctx.textAlign = rtlHelper.textAlign(vm._titleAlign);
			ctx.textBaseline = 'middle';

			titleFontSize = vm.titleFontSize;
			titleSpacing = vm.titleSpacing;

			ctx.fillStyle = vm.titleFontColor;
			ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);

			for (i = 0; i < length; ++i) {
				ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFontSize / 2);
				pt.y += titleFontSize + titleSpacing; // Line Height and spacing

				if (i + 1 === length) {
					pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing
				}
			}
		}
	},

	drawBody: function(pt, vm, ctx) {
		var bodyFontSize = vm.bodyFontSize;
		var bodySpacing = vm.bodySpacing;
		var bodyAlign = vm._bodyAlign;
		var body = vm.body;
		var drawColorBoxes = vm.displayColors;
		var xLinePadding = 0;
		var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;

		var rtlHelper = getRtlHelper(vm.rtl, vm.x, vm.width);

		var fillLineOfText = function(line) {
			ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyFontSize / 2);
			pt.y += bodyFontSize + bodySpacing;
		};

		var bodyItem, textColor, labelColors, lines, i, j, ilen, jlen;
		var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);

		ctx.textAlign = bodyAlign;
		ctx.textBaseline = 'middle';
		ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);

		pt.x = getAlignedX(vm, bodyAlignForCalculation);

		// Before body lines
		ctx.fillStyle = vm.bodyFontColor;
		helpers$1.each(vm.beforeBody, fillLineOfText);

		xLinePadding = drawColorBoxes && bodyAlignForCalculation !== 'right'
			? bodyAlign === 'center' ? (bodyFontSize / 2 + 1) : (bodyFontSize + 2)
			: 0;

		// Draw body lines now
		for (i = 0, ilen = body.length; i < ilen; ++i) {
			bodyItem = body[i];
			textColor = vm.labelTextColors[i];
			labelColors = vm.labelColors[i];

			ctx.fillStyle = textColor;
			helpers$1.each(bodyItem.before, fillLineOfText);

			lines = bodyItem.lines;
			for (j = 0, jlen = lines.length; j < jlen; ++j) {
				// Draw Legend-like boxes if needed
				if (drawColorBoxes) {
					var rtlColorX = rtlHelper.x(colorX);

					// Fill a white rect so that colours merge nicely if the opacity is < 1
					ctx.fillStyle = vm.legendColorBackground;
					ctx.fillRect(rtlHelper.leftForLtr(rtlColorX, bodyFontSize), pt.y, bodyFontSize, bodyFontSize);

					// Border
					ctx.lineWidth = 1;
					ctx.strokeStyle = labelColors.borderColor;
					ctx.strokeRect(rtlHelper.leftForLtr(rtlColorX, bodyFontSize), pt.y, bodyFontSize, bodyFontSize);

					// Inner square
					ctx.fillStyle = labelColors.backgroundColor;
					ctx.fillRect(rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), bodyFontSize - 2), pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);
					ctx.fillStyle = textColor;
				}

				fillLineOfText(lines[j]);
			}

			helpers$1.each(bodyItem.after, fillLineOfText);
		}

		// Reset back to 0 for after body
		xLinePadding = 0;

		// After body lines
		helpers$1.each(vm.afterBody, fillLineOfText);
		pt.y -= bodySpacing; // Remove last body spacing
	},

	drawFooter: function(pt, vm, ctx) {
		var footer = vm.footer;
		var length = footer.length;
		var footerFontSize, i;

		if (length) {
			var rtlHelper = getRtlHelper(vm.rtl, vm.x, vm.width);

			pt.x = getAlignedX(vm, vm._footerAlign);
			pt.y += vm.footerMarginTop;

			ctx.textAlign = rtlHelper.textAlign(vm._footerAlign);
			ctx.textBaseline = 'middle';

			footerFontSize = vm.footerFontSize;

			ctx.fillStyle = vm.footerFontColor;
			ctx.font = helpers$1.fontString(footerFontSize, vm._footerFontStyle, vm._footerFontFamily);

			for (i = 0; i < length; ++i) {
				ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFontSize / 2);
				pt.y += footerFontSize + vm.footerSpacing;
			}
		}
	},

	drawBackground: function(pt, vm, ctx, tooltipSize) {
		ctx.fillStyle = vm.backgroundColor;
		ctx.strokeStyle = vm.borderColor;
		ctx.lineWidth = vm.borderWidth;
		var xAlign = vm.xAlign;
		var yAlign = vm.yAlign;
		var x = pt.x;
		var y = pt.y;
		var width = tooltipSize.width;
		var height = tooltipSize.height;
		var radius = vm.cornerRadius;

		ctx.beginPath();
		ctx.moveTo(x + radius, y);
		if (yAlign === 'top') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x + width - radius, y);
		ctx.quadraticCurveTo(x + width, y, x + width, y + radius);
		if (yAlign === 'center' && xAlign === 'right') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x + width, y + height - radius);
		ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);
		if (yAlign === 'bottom') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x + radius, y + height);
		ctx.quadraticCurveTo(x, y + height, x, y + height - radius);
		if (yAlign === 'center' && xAlign === 'left') {
			this.drawCaret(pt, tooltipSize);
		}
		ctx.lineTo(x, y + radius);
		ctx.quadraticCurveTo(x, y, x + radius, y);
		ctx.closePath();

		ctx.fill();

		if (vm.borderWidth > 0) {
			ctx.stroke();
		}
	},

	draw: function() {
		var ctx = this._chart.ctx;
		var vm = this._view;

		if (vm.opacity === 0) {
			return;
		}

		var tooltipSize = {
			width: vm.width,
			height: vm.height
		};
		var pt = {
			x: vm.x,
			y: vm.y
		};

		// IE11/Edge does not like very small opacities, so snap to 0
		var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;

		// Truthy/falsey value for empty tooltip
		var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;

		if (this._options.enabled && hasTooltipContent) {
			ctx.save();
			ctx.globalAlpha = opacity;

			// Draw Background
			this.drawBackground(pt, vm, ctx, tooltipSize);

			// Draw Title, Body, and Footer
			pt.y += vm.yPadding;

			helpers$1.rtl.overrideTextDirection(ctx, vm.textDirection);

			// Titles
			this.drawTitle(pt, vm, ctx);

			// Body
			this.drawBody(pt, vm, ctx);

			// Footer
			this.drawFooter(pt, vm, ctx);

			helpers$1.rtl.restoreTextDirection(ctx, vm.textDirection);

			ctx.restore();
		}
	},

	/**
	 * Handle an event
	 * @private
	 * @param {IEvent} event - The event to handle
	 * @returns {boolean} true if the tooltip changed
	 */
	handleEvent: function(e) {
		var me = this;
		var options = me._options;
		var changed = false;

		me._lastActive = me._lastActive || [];

		// Find Active Elements for tooltips
		if (e.type === 'mouseout') {
			me._active = [];
		} else {
			me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);
			if (options.reverse) {
				me._active.reverse();
			}
		}

		// Remember Last Actives
		changed = !helpers$1.arrayEquals(me._active, me._lastActive);

		// Only handle target event on tooltip change
		if (changed) {
			me._lastActive = me._active;

			if (options.enabled || options.custom) {
				me._eventPosition = {
					x: e.x,
					y: e.y
				};

				me.update(true);
				me.pivot();
			}
		}

		return changed;
	}
});

/**
 * @namespace Chart.Tooltip.positioners
 */
var positioners_1 = positioners;

var core_tooltip = exports$4;
core_tooltip.positioners = positioners_1;

var valueOrDefault$9 = helpers$1.valueOrDefault;

core_defaults._set('global', {
	elements: {},
	events: [
		'mousemove',
		'mouseout',
		'click',
		'touchstart',
		'touchmove'
	],
	hover: {
		onHover: null,
		mode: 'nearest',
		intersect: true,
		animationDuration: 400
	},
	onClick: null,
	maintainAspectRatio: true,
	responsive: true,
	responsiveAnimationDuration: 0
});

/**
 * Recursively merge the given config objects representing the `scales` option
 * by incorporating scale defaults in `xAxes` and `yAxes` array items, then
 * returns a deep copy of the result, thus doesn't alter inputs.
 */
function mergeScaleConfig(/* config objects ... */) {
	return helpers$1.merge(Object.create(null), [].slice.call(arguments), {
		merger: function(key, target, source, options) {
			if (key === 'xAxes' || key === 'yAxes') {
				var slen = source[key].length;
				var i, type, scale;

				if (!target[key]) {
					target[key] = [];
				}

				for (i = 0; i < slen; ++i) {
					scale = source[key][i];
					type = valueOrDefault$9(scale.type, key === 'xAxes' ? 'category' : 'linear');

					if (i >= target[key].length) {
						target[key].push({});
					}

					if (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {
						// new/untyped scale or type changed: let's apply the new defaults
						// then merge source scale to correctly overwrite the defaults.
						helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);
					} else {
						// scales type are the same
						helpers$1.merge(target[key][i], scale);
					}
				}
			} else {
				helpers$1._merger(key, target, source, options);
			}
		}
	});
}

/**
 * Recursively merge the given config objects as the root options by handling
 * default scale options for the `scales` and `scale` properties, then returns
 * a deep copy of the result, thus doesn't alter inputs.
 */
function mergeConfig(/* config objects ... */) {
	return helpers$1.merge(Object.create(null), [].slice.call(arguments), {
		merger: function(key, target, source, options) {
			var tval = target[key] || Object.create(null);
			var sval = source[key];

			if (key === 'scales') {
				// scale config merging is complex. Add our own function here for that
				target[key] = mergeScaleConfig(tval, sval);
			} else if (key === 'scale') {
				// used in polar area & radar charts since there is only one scale
				target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);
			} else {
				helpers$1._merger(key, target, source, options);
			}
		}
	});
}

function initConfig(config) {
	config = config || Object.create(null);

	// Do NOT use mergeConfig for the data object because this method merges arrays
	// and so would change references to labels and datasets, preventing data updates.
	var data = config.data = config.data || {};
	data.datasets = data.datasets || [];
	data.labels = data.labels || [];

	config.options = mergeConfig(
		core_defaults.global,
		core_defaults[config.type],
		config.options || {});

	return config;
}

function updateConfig(chart) {
	var newOptions = chart.options;

	helpers$1.each(chart.scales, function(scale) {
		core_layouts.removeBox(chart, scale);
	});

	newOptions = mergeConfig(
		core_defaults.global,
		core_defaults[chart.config.type],
		newOptions);

	chart.options = chart.config.options = newOptions;
	chart.ensureScalesHaveIDs();
	chart.buildOrUpdateScales();

	// Tooltip
	chart.tooltip._options = newOptions.tooltips;
	chart.tooltip.initialize();
}

function nextAvailableScaleId(axesOpts, prefix, index) {
	var id;
	var hasId = function(obj) {
		return obj.id === id;
	};

	do {
		id = prefix + index++;
	} while (helpers$1.findIndex(axesOpts, hasId) >= 0);

	return id;
}

function positionIsHorizontal(position) {
	return position === 'top' || position === 'bottom';
}

function compare2Level(l1, l2) {
	return function(a, b) {
		return a[l1] === b[l1]
			? a[l2] - b[l2]
			: a[l1] - b[l1];
	};
}

var Chart = function(item, config) {
	this.construct(item, config);
	return this;
};

helpers$1.extend(Chart.prototype, /** @lends Chart */ {
	/**
	 * @private
	 */
	construct: function(item, config) {
		var me = this;

		config = initConfig(config);

		var context = platform.acquireContext(item, config);
		var canvas = context && context.canvas;
		var height = canvas && canvas.height;
		var width = canvas && canvas.width;

		me.id = helpers$1.uid();
		me.ctx = context;
		me.canvas = canvas;
		me.config = config;
		me.width = width;
		me.height = height;
		me.aspectRatio = height ? width / height : null;
		me.options = config.options;
		me._bufferedRender = false;
		me._layers = [];

		/**
		 * Provided for backward compatibility, Chart and Chart.Controller have been merged,
		 * the "instance" still need to be defined since it might be called from plugins.
		 * @prop Chart#chart
		 * @deprecated since version 2.6.0
		 * @todo remove at version 3
		 * @private
		 */
		me.chart = me;
		me.controller = me; // chart.chart.controller #inception

		// Add the chart instance to the global namespace
		Chart.instances[me.id] = me;

		// Define alias to the config data: `chart.data === chart.config.data`
		Object.defineProperty(me, 'data', {
			get: function() {
				return me.config.data;
			},
			set: function(value) {
				me.config.data = value;
			}
		});

		if (!context || !canvas) {
			// The given item is not a compatible context2d element, let's return before finalizing
			// the chart initialization but after setting basic chart / controller properties that
			// can help to figure out that the chart is not valid (e.g chart.canvas !== null);
			// https://github.com/chartjs/Chart.js/issues/2807
			console.error("Failed to create chart: can't acquire context from the given item");
			return;
		}

		me.initialize();
		me.update();
	},

	/**
	 * @private
	 */
	initialize: function() {
		var me = this;

		// Before init plugin notification
		core_plugins.notify(me, 'beforeInit');

		helpers$1.retinaScale(me, me.options.devicePixelRatio);

		me.bindEvents();

		if (me.options.responsive) {
			// Initial resize before chart draws (must be silent to preserve initial animations).
			me.resize(true);
		}

		me.initToolTip();

		// After init plugin notification
		core_plugins.notify(me, 'afterInit');

		return me;
	},

	clear: function() {
		helpers$1.canvas.clear(this);
		return this;
	},

	stop: function() {
		// Stops any current animation loop occurring
		core_animations.cancelAnimation(this);
		return this;
	},

	resize: function(silent) {
		var me = this;
		var options = me.options;
		var canvas = me.canvas;
		var aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;

		// the canvas render width and height will be casted to integers so make sure that
		// the canvas display style uses the same integer values to avoid blurring effect.

		// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed
		var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));
		var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));

		if (me.width === newWidth && me.height === newHeight) {
			return;
		}

		canvas.width = me.width = newWidth;
		canvas.height = me.height = newHeight;
		canvas.style.width = newWidth + 'px';
		canvas.style.height = newHeight + 'px';

		helpers$1.retinaScale(me, options.devicePixelRatio);

		if (!silent) {
			// Notify any plugins about the resize
			var newSize = {width: newWidth, height: newHeight};
			core_plugins.notify(me, 'resize', [newSize]);

			// Notify of resize
			if (options.onResize) {
				options.onResize(me, newSize);
			}

			me.stop();
			me.update({
				duration: options.responsiveAnimationDuration
			});
		}
	},

	ensureScalesHaveIDs: function() {
		var options = this.options;
		var scalesOptions = options.scales || {};
		var scaleOptions = options.scale;

		helpers$1.each(scalesOptions.xAxes, function(xAxisOptions, index) {
			if (!xAxisOptions.id) {
				xAxisOptions.id = nextAvailableScaleId(scalesOptions.xAxes, 'x-axis-', index);
			}
		});

		helpers$1.each(scalesOptions.yAxes, function(yAxisOptions, index) {
			if (!yAxisOptions.id) {
				yAxisOptions.id = nextAvailableScaleId(scalesOptions.yAxes, 'y-axis-', index);
			}
		});

		if (scaleOptions) {
			scaleOptions.id = scaleOptions.id || 'scale';
		}
	},

	/**
	 * Builds a map of scale ID to scale object for future lookup.
	 */
	buildOrUpdateScales: function() {
		var me = this;
		var options = me.options;
		var scales = me.scales || {};
		var items = [];
		var updated = Object.keys(scales).reduce(function(obj, id) {
			obj[id] = false;
			return obj;
		}, {});

		if (options.scales) {
			items = items.concat(
				(options.scales.xAxes || []).map(function(xAxisOptions) {
					return {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};
				}),
				(options.scales.yAxes || []).map(function(yAxisOptions) {
					return {options: yAxisOptions, dtype: 'linear', dposition: 'left'};
				})
			);
		}

		if (options.scale) {
			items.push({
				options: options.scale,
				dtype: 'radialLinear',
				isDefault: true,
				dposition: 'chartArea'
			});
		}

		helpers$1.each(items, function(item) {
			var scaleOptions = item.options;
			var id = scaleOptions.id;
			var scaleType = valueOrDefault$9(scaleOptions.type, item.dtype);

			if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {
				scaleOptions.position = item.dposition;
			}

			updated[id] = true;
			var scale = null;
			if (id in scales && scales[id].type === scaleType) {
				scale = scales[id];
				scale.options = scaleOptions;
				scale.ctx = me.ctx;
				scale.chart = me;
			} else {
				var scaleClass = core_scaleService.getScaleConstructor(scaleType);
				if (!scaleClass) {
					return;
				}
				scale = new scaleClass({
					id: id,
					type: scaleType,
					options: scaleOptions,
					ctx: me.ctx,
					chart: me
				});
				scales[scale.id] = scale;
			}

			scale.mergeTicksOptions();

			// TODO(SB): I think we should be able to remove this custom case (options.scale)
			// and consider it as a regular scale part of the "scales"" map only! This would
			// make the logic easier and remove some useless? custom code.
			if (item.isDefault) {
				me.scale = scale;
			}
		});
		// clear up discarded scales
		helpers$1.each(updated, function(hasUpdated, id) {
			if (!hasUpdated) {
				delete scales[id];
			}
		});

		me.scales = scales;

		core_scaleService.addScalesToLayout(this);
	},

	buildOrUpdateControllers: function() {
		var me = this;
		var newControllers = [];
		var datasets = me.data.datasets;
		var i, ilen;

		for (i = 0, ilen = datasets.length; i < ilen; i++) {
			var dataset = datasets[i];
			var meta = me.getDatasetMeta(i);
			var type = dataset.type || me.config.type;

			if (meta.type && meta.type !== type) {
				me.destroyDatasetMeta(i);
				meta = me.getDatasetMeta(i);
			}
			meta.type = type;
			meta.order = dataset.order || 0;
			meta.index = i;

			if (meta.controller) {
				meta.controller.updateIndex(i);
				meta.controller.linkScales();
			} else {
				var ControllerClass = controllers[meta.type];
				if (ControllerClass === undefined) {
					throw new Error('"' + meta.type + '" is not a chart type.');
				}

				meta.controller = new ControllerClass(me, i);
				newControllers.push(meta.controller);
			}
		}

		return newControllers;
	},

	/**
	 * Reset the elements of all datasets
	 * @private
	 */
	resetElements: function() {
		var me = this;
		helpers$1.each(me.data.datasets, function(dataset, datasetIndex) {
			me.getDatasetMeta(datasetIndex).controller.reset();
		}, me);
	},

	/**
	* Resets the chart back to it's state before the initial animation
	*/
	reset: function() {
		this.resetElements();
		this.tooltip.initialize();
	},

	update: function(config) {
		var me = this;
		var i, ilen;

		if (!config || typeof config !== 'object') {
			// backwards compatibility
			config = {
				duration: config,
				lazy: arguments[1]
			};
		}

		updateConfig(me);

		// plugins options references might have change, let's invalidate the cache
		// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167
		core_plugins._invalidate(me);

		if (core_plugins.notify(me, 'beforeUpdate') === false) {
			return;
		}

		// In case the entire data object changed
		me.tooltip._data = me.data;

		// Make sure dataset controllers are updated and new controllers are reset
		var newControllers = me.buildOrUpdateControllers();

		// Make sure all dataset controllers have correct meta data counts
		for (i = 0, ilen = me.data.datasets.length; i < ilen; i++) {
			me.getDatasetMeta(i).controller.buildOrUpdateElements();
		}

		me.updateLayout();

		// Can only reset the new controllers after the scales have been updated
		if (me.options.animation && me.options.animation.duration) {
			helpers$1.each(newControllers, function(controller) {
				controller.reset();
			});
		}

		me.updateDatasets();

		// Need to reset tooltip in case it is displayed with elements that are removed
		// after update.
		me.tooltip.initialize();

		// Last active contains items that were previously in the tooltip.
		// When we reset the tooltip, we need to clear it
		me.lastActive = [];

		// Do this before render so that any plugins that need final scale updates can use it
		core_plugins.notify(me, 'afterUpdate');

		me._layers.sort(compare2Level('z', '_idx'));

		if (me._bufferedRender) {
			me._bufferedRequest = {
				duration: config.duration,
				easing: config.easing,
				lazy: config.lazy
			};
		} else {
			me.render(config);
		}
	},

	/**
	 * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`
	 * hook, in which case, plugins will not be called on `afterLayout`.
	 * @private
	 */
	updateLayout: function() {
		var me = this;

		if (core_plugins.notify(me, 'beforeLayout') === false) {
			return;
		}

		core_layouts.update(this, this.width, this.height);

		me._layers = [];
		helpers$1.each(me.boxes, function(box) {
			// _configure is called twice, once in core.scale.update and once here.
			// Here the boxes are fully updated and at their final positions.
			if (box._configure) {
				box._configure();
			}
			me._layers.push.apply(me._layers, box._layers());
		}, me);

		me._layers.forEach(function(item, index) {
			item._idx = index;
		});

		/**
		 * Provided for backward compatibility, use `afterLayout` instead.
		 * @method IPlugin#afterScaleUpdate
		 * @deprecated since version 2.5.0
		 * @todo remove at version 3
		 * @private
		 */
		core_plugins.notify(me, 'afterScaleUpdate');
		core_plugins.notify(me, 'afterLayout');
	},

	/**
	 * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`
	 * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.
	 * @private
	 */
	updateDatasets: function() {
		var me = this;

		if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {
			return;
		}

		for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
			me.updateDataset(i);
		}

		core_plugins.notify(me, 'afterDatasetsUpdate');
	},

	/**
	 * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`
	 * hook, in which case, plugins will not be called on `afterDatasetUpdate`.
	 * @private
	 */
	updateDataset: function(index) {
		var me = this;
		var meta = me.getDatasetMeta(index);
		var args = {
			meta: meta,
			index: index
		};

		if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {
			return;
		}

		meta.controller._update();

		core_plugins.notify(me, 'afterDatasetUpdate', [args]);
	},

	render: function(config) {
		var me = this;

		if (!config || typeof config !== 'object') {
			// backwards compatibility
			config = {
				duration: config,
				lazy: arguments[1]
			};
		}

		var animationOptions = me.options.animation;
		var duration = valueOrDefault$9(config.duration, animationOptions && animationOptions.duration);
		var lazy = config.lazy;

		if (core_plugins.notify(me, 'beforeRender') === false) {
			return;
		}

		var onComplete = function(animation) {
			core_plugins.notify(me, 'afterRender');
			helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);
		};

		if (animationOptions && duration) {
			var animation = new core_animation({
				numSteps: duration / 16.66, // 60 fps
				easing: config.easing || animationOptions.easing,

				render: function(chart, animationObject) {
					var easingFunction = helpers$1.easing.effects[animationObject.easing];
					var currentStep = animationObject.currentStep;
					var stepDecimal = currentStep / animationObject.numSteps;

					chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);
				},

				onAnimationProgress: animationOptions.onProgress,
				onAnimationComplete: onComplete
			});

			core_animations.addAnimation(me, animation, duration, lazy);
		} else {
			me.draw();

			// See https://github.com/chartjs/Chart.js/issues/3781
			onComplete(new core_animation({numSteps: 0, chart: me}));
		}

		return me;
	},

	draw: function(easingValue) {
		var me = this;
		var i, layers;

		me.clear();

		if (helpers$1.isNullOrUndef(easingValue)) {
			easingValue = 1;
		}

		me.transition(easingValue);

		if (me.width <= 0 || me.height <= 0) {
			return;
		}

		if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {
			return;
		}

		// Because of plugin hooks (before/afterDatasetsDraw), datasets can't
		// currently be part of layers. Instead, we draw
		// layers <= 0 before(default, backward compat), and the rest after
		layers = me._layers;
		for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {
			layers[i].draw(me.chartArea);
		}

		me.drawDatasets(easingValue);

		// Rest of layers
		for (; i < layers.length; ++i) {
			layers[i].draw(me.chartArea);
		}

		me._drawTooltip(easingValue);

		core_plugins.notify(me, 'afterDraw', [easingValue]);
	},

	/**
	 * @private
	 */
	transition: function(easingValue) {
		var me = this;

		for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {
			if (me.isDatasetVisible(i)) {
				me.getDatasetMeta(i).controller.transition(easingValue);
			}
		}

		me.tooltip.transition(easingValue);
	},

	/**
	 * @private
	 */
	_getSortedDatasetMetas: function(filterVisible) {
		var me = this;
		var datasets = me.data.datasets || [];
		var result = [];
		var i, ilen;

		for (i = 0, ilen = datasets.length; i < ilen; ++i) {
			if (!filterVisible || me.isDatasetVisible(i)) {
				result.push(me.getDatasetMeta(i));
			}
		}

		result.sort(compare2Level('order', 'index'));

		return result;
	},

	/**
	 * @private
	 */
	_getSortedVisibleDatasetMetas: function() {
		return this._getSortedDatasetMetas(true);
	},

	/**
	 * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`
	 * hook, in which case, plugins will not be called on `afterDatasetsDraw`.
	 * @private
	 */
	drawDatasets: function(easingValue) {
		var me = this;
		var metasets, i;

		if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {
			return;
		}

		metasets = me._getSortedVisibleDatasetMetas();
		for (i = metasets.length - 1; i >= 0; --i) {
			me.drawDataset(metasets[i], easingValue);
		}

		core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);
	},

	/**
	 * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`
	 * hook, in which case, plugins will not be called on `afterDatasetDraw`.
	 * @private
	 */
	drawDataset: function(meta, easingValue) {
		var me = this;
		var args = {
			meta: meta,
			index: meta.index,
			easingValue: easingValue
		};

		if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {
			return;
		}

		meta.controller.draw(easingValue);

		core_plugins.notify(me, 'afterDatasetDraw', [args]);
	},

	/**
	 * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`
	 * hook, in which case, plugins will not be called on `afterTooltipDraw`.
	 * @private
	 */
	_drawTooltip: function(easingValue) {
		var me = this;
		var tooltip = me.tooltip;
		var args = {
			tooltip: tooltip,
			easingValue: easingValue
		};

		if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {
			return;
		}

		tooltip.draw();

		core_plugins.notify(me, 'afterTooltipDraw', [args]);
	},

	/**
	 * Get the single element that was clicked on
	 * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw
	 */
	getElementAtEvent: function(e) {
		return core_interaction.modes.single(this, e);
	},

	getElementsAtEvent: function(e) {
		return core_interaction.modes.label(this, e, {intersect: true});
	},

	getElementsAtXAxis: function(e) {
		return core_interaction.modes['x-axis'](this, e, {intersect: true});
	},

	getElementsAtEventForMode: function(e, mode, options) {
		var method = core_interaction.modes[mode];
		if (typeof method === 'function') {
			return method(this, e, options);
		}

		return [];
	},

	getDatasetAtEvent: function(e) {
		return core_interaction.modes.dataset(this, e, {intersect: true});
	},

	getDatasetMeta: function(datasetIndex) {
		var me = this;
		var dataset = me.data.datasets[datasetIndex];
		if (!dataset._meta) {
			dataset._meta = {};
		}

		var meta = dataset._meta[me.id];
		if (!meta) {
			meta = dataset._meta[me.id] = {
				type: null,
				data: [],
				dataset: null,
				controller: null,
				hidden: null,			// See isDatasetVisible() comment
				xAxisID: null,
				yAxisID: null,
				order: dataset.order || 0,
				index: datasetIndex
			};
		}

		return meta;
	},

	getVisibleDatasetCount: function() {
		var count = 0;
		for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {
			if (this.isDatasetVisible(i)) {
				count++;
			}
		}
		return count;
	},

	isDatasetVisible: function(datasetIndex) {
		var meta = this.getDatasetMeta(datasetIndex);

		// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,
		// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.
		return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;
	},

	generateLegend: function() {
		return this.options.legendCallback(this);
	},

	/**
	 * @private
	 */
	destroyDatasetMeta: function(datasetIndex) {
		var id = this.id;
		var dataset = this.data.datasets[datasetIndex];
		var meta = dataset._meta && dataset._meta[id];

		if (meta) {
			meta.controller.destroy();
			delete dataset._meta[id];
		}
	},

	destroy: function() {
		var me = this;
		var canvas = me.canvas;
		var i, ilen;

		me.stop();

		// dataset controllers need to cleanup associated data
		for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {
			me.destroyDatasetMeta(i);
		}

		if (canvas) {
			me.unbindEvents();
			helpers$1.canvas.clear(me);
			platform.releaseContext(me.ctx);
			me.canvas = null;
			me.ctx = null;
		}

		core_plugins.notify(me, 'destroy');

		delete Chart.instances[me.id];
	},

	toBase64Image: function() {
		return this.canvas.toDataURL.apply(this.canvas, arguments);
	},

	initToolTip: function() {
		var me = this;
		me.tooltip = new core_tooltip({
			_chart: me,
			_chartInstance: me, // deprecated, backward compatibility
			_data: me.data,
			_options: me.options.tooltips
		}, me);
	},

	/**
	 * @private
	 */
	bindEvents: function() {
		var me = this;
		var listeners = me._listeners = {};
		var listener = function() {
			me.eventHandler.apply(me, arguments);
		};

		helpers$1.each(me.options.events, function(type) {
			platform.addEventListener(me, type, listener);
			listeners[type] = listener;
		});

		// Elements used to detect size change should not be injected for non responsive charts.
		// See https://github.com/chartjs/Chart.js/issues/2210
		if (me.options.responsive) {
			listener = function() {
				me.resize();
			};

			platform.addEventListener(me, 'resize', listener);
			listeners.resize = listener;
		}
	},

	/**
	 * @private
	 */
	unbindEvents: function() {
		var me = this;
		var listeners = me._listeners;
		if (!listeners) {
			return;
		}

		delete me._listeners;
		helpers$1.each(listeners, function(listener, type) {
			platform.removeEventListener(me, type, listener);
		});
	},

	updateHoverStyle: function(elements, mode, enabled) {
		var prefix = enabled ? 'set' : 'remove';
		var element, i, ilen;

		for (i = 0, ilen = elements.length; i < ilen; ++i) {
			element = elements[i];
			if (element) {
				this.getDatasetMeta(element._datasetIndex).controller[prefix + 'HoverStyle'](element);
			}
		}

		if (mode === 'dataset') {
			this.getDatasetMeta(elements[0]._datasetIndex).controller['_' + prefix + 'DatasetHoverStyle']();
		}
	},

	/**
	 * @private
	 */
	eventHandler: function(e) {
		var me = this;
		var tooltip = me.tooltip;

		if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {
			return;
		}

		// Buffer any update calls so that renders do not occur
		me._bufferedRender = true;
		me._bufferedRequest = null;

		var changed = me.handleEvent(e);
		// for smooth tooltip animations issue #4989
		// the tooltip should be the source of change
		// Animation check workaround:
		// tooltip._start will be null when tooltip isn't animating
		if (tooltip) {
			changed = tooltip._start
				? tooltip.handleEvent(e)
				: changed | tooltip.handleEvent(e);
		}

		core_plugins.notify(me, 'afterEvent', [e]);

		var bufferedRequest = me._bufferedRequest;
		if (bufferedRequest) {
			// If we have an update that was triggered, we need to do a normal render
			me.render(bufferedRequest);
		} else if (changed && !me.animating) {
			// If entering, leaving, or changing elements, animate the change via pivot
			me.stop();

			// We only need to render at this point. Updating will cause scales to be
			// recomputed generating flicker & using more memory than necessary.
			me.render({
				duration: me.options.hover.animationDuration,
				lazy: true
			});
		}

		me._bufferedRender = false;
		me._bufferedRequest = null;

		return me;
	},

	/**
	 * Handle an event
	 * @private
	 * @param {IEvent} event the event to handle
	 * @return {boolean} true if the chart needs to re-render
	 */
	handleEvent: function(e) {
		var me = this;
		var options = me.options || {};
		var hoverOptions = options.hover;
		var changed = false;

		me.lastActive = me.lastActive || [];

		// Find Active Elements for hover and tooltips
		if (e.type === 'mouseout') {
			me.active = [];
		} else {
			me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);
		}

		// Invoke onHover hook
		// Need to call with native event here to not break backwards compatibility
		helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);

		if (e.type === 'mouseup' || e.type === 'click') {
			if (options.onClick) {
				// Use e.native here for backwards compatibility
				options.onClick.call(me, e.native, me.active);
			}
		}

		// Remove styling for last active (even if it may still be active)
		if (me.lastActive.length) {
			me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);
		}

		// Built in hover styling
		if (me.active.length && hoverOptions.mode) {
			me.updateHoverStyle(me.active, hoverOptions.mode, true);
		}

		changed = !helpers$1.arrayEquals(me.active, me.lastActive);

		// Remember Last Actives
		me.lastActive = me.active;

		return changed;
	}
});

/**
 * NOTE(SB) We actually don't use this container anymore but we need to keep it
 * for backward compatibility. Though, it can still be useful for plugins that
 * would need to work on multiple charts?!
 */
Chart.instances = {};

var core_controller = Chart;

// DEPRECATIONS

/**
 * Provided for backward compatibility, use Chart instead.
 * @class Chart.Controller
 * @deprecated since version 2.6
 * @todo remove at version 3
 * @private
 */
Chart.Controller = Chart;

/**
 * Provided for backward compatibility, not available anymore.
 * @namespace Chart
 * @deprecated since version 2.8
 * @todo remove at version 3
 * @private
 */
Chart.types = {};

/**
 * Provided for backward compatibility, not available anymore.
 * @namespace Chart.helpers.configMerge
 * @deprecated since version 2.8.0
 * @todo remove at version 3
 * @private
 */
helpers$1.configMerge = mergeConfig;

/**
 * Provided for backward compatibility, not available anymore.
 * @namespace Chart.helpers.scaleMerge
 * @deprecated since version 2.8.0
 * @todo remove at version 3
 * @private
 */
helpers$1.scaleMerge = mergeScaleConfig;

var core_helpers = function() {

	// -- Basic js utility methods

	helpers$1.where = function(collection, filterCallback) {
		if (helpers$1.isArray(collection) && Array.prototype.filter) {
			return collection.filter(filterCallback);
		}
		var filtered = [];

		helpers$1.each(collection, function(item) {
			if (filterCallback(item)) {
				filtered.push(item);
			}
		});

		return filtered;
	};
	helpers$1.findIndex = Array.prototype.findIndex ?
		function(array, callback, scope) {
			return array.findIndex(callback, scope);
		} :
		function(array, callback, scope) {
			scope = scope === undefined ? array : scope;
			for (var i = 0, ilen = array.length; i < ilen; ++i) {
				if (callback.call(scope, array[i], i, array)) {
					return i;
				}
			}
			return -1;
		};
	helpers$1.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to start of the array
		if (helpers$1.isNullOrUndef(startIndex)) {
			startIndex = -1;
		}
		for (var i = startIndex + 1; i < arrayToSearch.length; i++) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};
	helpers$1.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {
		// Default to end of the array
		if (helpers$1.isNullOrUndef(startIndex)) {
			startIndex = arrayToSearch.length;
		}
		for (var i = startIndex - 1; i >= 0; i--) {
			var currentItem = arrayToSearch[i];
			if (filterCallback(currentItem)) {
				return currentItem;
			}
		}
	};

	// -- Math methods
	helpers$1.isNumber = function(n) {
		return !isNaN(parseFloat(n)) && isFinite(n);
	};
	helpers$1.almostEquals = function(x, y, epsilon) {
		return Math.abs(x - y) < epsilon;
	};
	helpers$1.almostWhole = function(x, epsilon) {
		var rounded = Math.round(x);
		return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);
	};
	helpers$1.max = function(array) {
		return array.reduce(function(max, value) {
			if (!isNaN(value)) {
				return Math.max(max, value);
			}
			return max;
		}, Number.NEGATIVE_INFINITY);
	};
	helpers$1.min = function(array) {
		return array.reduce(function(min, value) {
			if (!isNaN(value)) {
				return Math.min(min, value);
			}
			return min;
		}, Number.POSITIVE_INFINITY);
	};
	helpers$1.sign = Math.sign ?
		function(x) {
			return Math.sign(x);
		} :
		function(x) {
			x = +x; // convert to a number
			if (x === 0 || isNaN(x)) {
				return x;
			}
			return x > 0 ? 1 : -1;
		};
	helpers$1.toRadians = function(degrees) {
		return degrees * (Math.PI / 180);
	};
	helpers$1.toDegrees = function(radians) {
		return radians * (180 / Math.PI);
	};

	/**
	 * Returns the number of decimal places
	 * i.e. the number of digits after the decimal point, of the value of this Number.
	 * @param {number} x - A number.
	 * @returns {number} The number of decimal places.
	 * @private
	 */
	helpers$1._decimalPlaces = function(x) {
		if (!helpers$1.isFinite(x)) {
			return;
		}
		var e = 1;
		var p = 0;
		while (Math.round(x * e) / e !== x) {
			e *= 10;
			p++;
		}
		return p;
	};

	// Gets the angle from vertical upright to the point about a centre.
	helpers$1.getAngleFromPoint = function(centrePoint, anglePoint) {
		var distanceFromXCenter = anglePoint.x - centrePoint.x;
		var distanceFromYCenter = anglePoint.y - centrePoint.y;
		var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);

		var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);

		if (angle < (-0.5 * Math.PI)) {
			angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]
		}

		return {
			angle: angle,
			distance: radialDistanceFromCenter
		};
	};
	helpers$1.distanceBetweenPoints = function(pt1, pt2) {
		return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));
	};

	/**
	 * Provided for backward compatibility, not available anymore
	 * @function Chart.helpers.aliasPixel
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 */
	helpers$1.aliasPixel = function(pixelWidth) {
		return (pixelWidth % 2 === 0) ? 0 : 0.5;
	};

	/**
	 * Returns the aligned pixel value to avoid anti-aliasing blur
	 * @param {Chart} chart - The chart instance.
	 * @param {number} pixel - A pixel value.
	 * @param {number} width - The width of the element.
	 * @returns {number} The aligned pixel value.
	 * @private
	 */
	helpers$1._alignPixel = function(chart, pixel, width) {
		var devicePixelRatio = chart.currentDevicePixelRatio;
		var halfWidth = width / 2;
		return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;
	};

	helpers$1.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {
		// Props to Rob Spencer at scaled innovation for his post on splining between points
		// http://scaledinnovation.com/analytics/splines/aboutSplines.html

		// This function must also respect "skipped" points

		var previous = firstPoint.skip ? middlePoint : firstPoint;
		var current = middlePoint;
		var next = afterPoint.skip ? middlePoint : afterPoint;

		var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));
		var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));

		var s01 = d01 / (d01 + d12);
		var s12 = d12 / (d01 + d12);

		// If all points are the same, s01 & s02 will be inf
		s01 = isNaN(s01) ? 0 : s01;
		s12 = isNaN(s12) ? 0 : s12;

		var fa = t * s01; // scaling factor for triangle Ta
		var fb = t * s12;

		return {
			previous: {
				x: current.x - fa * (next.x - previous.x),
				y: current.y - fa * (next.y - previous.y)
			},
			next: {
				x: current.x + fb * (next.x - previous.x),
				y: current.y + fb * (next.y - previous.y)
			}
		};
	};
	helpers$1.EPSILON = Number.EPSILON || 1e-14;
	helpers$1.splineCurveMonotone = function(points) {
		// This function calculates Bézier control points in a similar way than |splineCurve|,
		// but preserves monotonicity of the provided data and ensures no local extremums are added
		// between the dataset discrete points due to the interpolation.
		// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation

		var pointsWithTangents = (points || []).map(function(point) {
			return {
				model: point._model,
				deltaK: 0,
				mK: 0
			};
		});

		// Calculate slopes (deltaK) and initialize tangents (mK)
		var pointsLen = pointsWithTangents.length;
		var i, pointBefore, pointCurrent, pointAfter;
		for (i = 0; i < pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointAfter && !pointAfter.model.skip) {
				var slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);

				// In the case of two points that appear at the same x pixel, slopeDeltaX is 0
				pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;
			}

			if (!pointBefore || pointBefore.model.skip) {
				pointCurrent.mK = pointCurrent.deltaK;
			} else if (!pointAfter || pointAfter.model.skip) {
				pointCurrent.mK = pointBefore.deltaK;
			} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {
				pointCurrent.mK = 0;
			} else {
				pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;
			}
		}

		// Adjust tangents to ensure monotonic properties
		var alphaK, betaK, tauK, squaredMagnitude;
		for (i = 0; i < pointsLen - 1; ++i) {
			pointCurrent = pointsWithTangents[i];
			pointAfter = pointsWithTangents[i + 1];
			if (pointCurrent.model.skip || pointAfter.model.skip) {
				continue;
			}

			if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {
				pointCurrent.mK = pointAfter.mK = 0;
				continue;
			}

			alphaK = pointCurrent.mK / pointCurrent.deltaK;
			betaK = pointAfter.mK / pointCurrent.deltaK;
			squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);
			if (squaredMagnitude <= 9) {
				continue;
			}

			tauK = 3 / Math.sqrt(squaredMagnitude);
			pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;
			pointAfter.mK = betaK * tauK * pointCurrent.deltaK;
		}

		// Compute control points
		var deltaX;
		for (i = 0; i < pointsLen; ++i) {
			pointCurrent = pointsWithTangents[i];
			if (pointCurrent.model.skip) {
				continue;
			}

			pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;
			pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;
			if (pointBefore && !pointBefore.model.skip) {
				deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;
				pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;
				pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;
			}
			if (pointAfter && !pointAfter.model.skip) {
				deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;
				pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;
				pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;
			}
		}
	};
	helpers$1.nextItem = function(collection, index, loop) {
		if (loop) {
			return index >= collection.length - 1 ? collection[0] : collection[index + 1];
		}
		return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];
	};
	helpers$1.previousItem = function(collection, index, loop) {
		if (loop) {
			return index <= 0 ? collection[collection.length - 1] : collection[index - 1];
		}
		return index <= 0 ? collection[0] : collection[index - 1];
	};
	// Implementation of the nice number algorithm used in determining where axis labels will go
	helpers$1.niceNum = function(range, round) {
		var exponent = Math.floor(helpers$1.log10(range));
		var fraction = range / Math.pow(10, exponent);
		var niceFraction;

		if (round) {
			if (fraction < 1.5) {
				niceFraction = 1;
			} else if (fraction < 3) {
				niceFraction = 2;
			} else if (fraction < 7) {
				niceFraction = 5;
			} else {
				niceFraction = 10;
			}
		} else if (fraction <= 1.0) {
			niceFraction = 1;
		} else if (fraction <= 2) {
			niceFraction = 2;
		} else if (fraction <= 5) {
			niceFraction = 5;
		} else {
			niceFraction = 10;
		}

		return niceFraction * Math.pow(10, exponent);
	};
	// Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/
	helpers$1.requestAnimFrame = (function() {
		if (typeof window === 'undefined') {
			return function(callback) {
				callback();
			};
		}
		return window.requestAnimationFrame ||
			window.webkitRequestAnimationFrame ||
			window.mozRequestAnimationFrame ||
			window.oRequestAnimationFrame ||
			window.msRequestAnimationFrame ||
			function(callback) {
				return window.setTimeout(callback, 1000 / 60);
			};
	}());
	// -- DOM methods
	helpers$1.getRelativePosition = function(evt, chart) {
		var mouseX, mouseY;
		var e = evt.originalEvent || evt;
		var canvas = evt.target || evt.srcElement;
		var boundingRect = canvas.getBoundingClientRect();

		var touches = e.touches;
		if (touches && touches.length > 0) {
			mouseX = touches[0].clientX;
			mouseY = touches[0].clientY;

		} else {
			mouseX = e.clientX;
			mouseY = e.clientY;
		}

		// Scale mouse coordinates into canvas coordinates
		// by following the pattern laid out by 'jerryj' in the comments of
		// https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/
		var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));
		var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));
		var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));
		var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));
		var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;
		var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;

		// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However
		// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here
		mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);
		mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);

		return {
			x: mouseX,
			y: mouseY
		};

	};

	// Private helper function to convert max-width/max-height values that may be percentages into a number
	function parseMaxStyle(styleValue, node, parentProperty) {
		var valueInPixels;
		if (typeof styleValue === 'string') {
			valueInPixels = parseInt(styleValue, 10);

			if (styleValue.indexOf('%') !== -1) {
				// percentage * size in dimension
				valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];
			}
		} else {
			valueInPixels = styleValue;
		}

		return valueInPixels;
	}

	/**
	 * Returns if the given value contains an effective constraint.
	 * @private
	 */
	function isConstrainedValue(value) {
		return value !== undefined && value !== null && value !== 'none';
	}

	/**
	 * Returns the max width or height of the given DOM node in a cross-browser compatible fashion
	 * @param {HTMLElement} domNode - the node to check the constraint on
	 * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')
	 * @param {string} percentageProperty - property of parent to use when calculating width as a percentage
	 * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}
	 */
	function getConstraintDimension(domNode, maxStyle, percentageProperty) {
		var view = document.defaultView;
		var parentNode = helpers$1._getParentNode(domNode);
		var constrainedNode = view.getComputedStyle(domNode)[maxStyle];
		var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];
		var hasCNode = isConstrainedValue(constrainedNode);
		var hasCContainer = isConstrainedValue(constrainedContainer);
		var infinity = Number.POSITIVE_INFINITY;

		if (hasCNode || hasCContainer) {
			return Math.min(
				hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,
				hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);
		}

		return 'none';
	}
	// returns Number or undefined if no constraint
	helpers$1.getConstraintWidth = function(domNode) {
		return getConstraintDimension(domNode, 'max-width', 'clientWidth');
	};
	// returns Number or undefined if no constraint
	helpers$1.getConstraintHeight = function(domNode) {
		return getConstraintDimension(domNode, 'max-height', 'clientHeight');
	};
	/**
	 * @private
 	 */
	helpers$1._calculatePadding = function(container, padding, parentDimension) {
		padding = helpers$1.getStyle(container, padding);

		return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);
	};
	/**
	 * @private
	 */
	helpers$1._getParentNode = function(domNode) {
		var parent = domNode.parentNode;
		if (parent && parent.toString() === '[object ShadowRoot]') {
			parent = parent.host;
		}
		return parent;
	};
	helpers$1.getMaximumWidth = function(domNode) {
		var container = helpers$1._getParentNode(domNode);
		if (!container) {
			return domNode.clientWidth;
		}

		var clientWidth = container.clientWidth;
		var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);
		var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);

		var w = clientWidth - paddingLeft - paddingRight;
		var cw = helpers$1.getConstraintWidth(domNode);
		return isNaN(cw) ? w : Math.min(w, cw);
	};
	helpers$1.getMaximumHeight = function(domNode) {
		var container = helpers$1._getParentNode(domNode);
		if (!container) {
			return domNode.clientHeight;
		}

		var clientHeight = container.clientHeight;
		var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);
		var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);

		var h = clientHeight - paddingTop - paddingBottom;
		var ch = helpers$1.getConstraintHeight(domNode);
		return isNaN(ch) ? h : Math.min(h, ch);
	};
	helpers$1.getStyle = function(el, property) {
		return el.currentStyle ?
			el.currentStyle[property] :
			document.defaultView.getComputedStyle(el, null).getPropertyValue(property);
	};
	helpers$1.retinaScale = function(chart, forceRatio) {
		var pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;
		if (pixelRatio === 1) {
			return;
		}

		var canvas = chart.canvas;
		var height = chart.height;
		var width = chart.width;

		canvas.height = height * pixelRatio;
		canvas.width = width * pixelRatio;
		chart.ctx.scale(pixelRatio, pixelRatio);

		// If no style has been set on the canvas, the render size is used as display size,
		// making the chart visually bigger, so let's enforce it to the "correct" values.
		// See https://github.com/chartjs/Chart.js/issues/3575
		if (!canvas.style.height && !canvas.style.width) {
			canvas.style.height = height + 'px';
			canvas.style.width = width + 'px';
		}
	};
	// -- Canvas methods
	helpers$1.fontString = function(pixelSize, fontStyle, fontFamily) {
		return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;
	};
	helpers$1.longestText = function(ctx, font, arrayOfThings, cache) {
		cache = cache || {};
		var data = cache.data = cache.data || {};
		var gc = cache.garbageCollect = cache.garbageCollect || [];

		if (cache.font !== font) {
			data = cache.data = {};
			gc = cache.garbageCollect = [];
			cache.font = font;
		}

		ctx.font = font;
		var longest = 0;
		var ilen = arrayOfThings.length;
		var i, j, jlen, thing, nestedThing;
		for (i = 0; i < ilen; i++) {
			thing = arrayOfThings[i];

			// Undefined strings and arrays should not be measured
			if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {
				longest = helpers$1.measureText(ctx, data, gc, longest, thing);
			} else if (helpers$1.isArray(thing)) {
				// if it is an array lets measure each element
				// to do maybe simplify this function a bit so we can do this more recursively?
				for (j = 0, jlen = thing.length; j < jlen; j++) {
					nestedThing = thing[j];
					// Undefined strings and arrays should not be measured
					if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {
						longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);
					}
				}
			}
		}

		var gcLen = gc.length / 2;
		if (gcLen > arrayOfThings.length) {
			for (i = 0; i < gcLen; i++) {
				delete data[gc[i]];
			}
			gc.splice(0, gcLen);
		}
		return longest;
	};
	helpers$1.measureText = function(ctx, data, gc, longest, string) {
		var textWidth = data[string];
		if (!textWidth) {
			textWidth = data[string] = ctx.measureText(string).width;
			gc.push(string);
		}
		if (textWidth > longest) {
			longest = textWidth;
		}
		return longest;
	};

	/**
	 * @deprecated
	 */
	helpers$1.numberOfLabelLines = function(arrayOfThings) {
		var numberOfLines = 1;
		helpers$1.each(arrayOfThings, function(thing) {
			if (helpers$1.isArray(thing)) {
				if (thing.length > numberOfLines) {
					numberOfLines = thing.length;
				}
			}
		});
		return numberOfLines;
	};

	helpers$1.color = !chartjsColor ?
		function(value) {
			console.error('Color.js not found!');
			return value;
		} :
		function(value) {
			/* global CanvasGradient */
			if (value instanceof CanvasGradient) {
				value = core_defaults.global.defaultColor;
			}

			return chartjsColor(value);
		};

	helpers$1.getHoverColor = function(colorValue) {
		/* global CanvasPattern */
		return (colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient) ?
			colorValue :
			helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();
	};
};

function abstract() {
	throw new Error(
		'This method is not implemented: either no adapter can ' +
		'be found or an incomplete integration was provided.'
	);
}

/**
 * Date adapter (current used by the time scale)
 * @namespace Chart._adapters._date
 * @memberof Chart._adapters
 * @private
 */

/**
 * Currently supported unit string values.
 * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}
 * @memberof Chart._adapters._date
 * @name Unit
 */

/**
 * @class
 */
function DateAdapter(options) {
	this.options = options || {};
}

helpers$1.extend(DateAdapter.prototype, /** @lends DateAdapter */ {
	/**
	 * Returns a map of time formats for the supported formatting units defined
	 * in Unit as well as 'datetime' representing a detailed date/time string.
	 * @returns {{string: string}}
	 */
	formats: abstract,

	/**
	 * Parses the given `value` and return the associated timestamp.
	 * @param {any} value - the value to parse (usually comes from the data)
	 * @param {string} [format] - the expected data format
	 * @returns {(number|null)}
	 * @function
	 */
	parse: abstract,

	/**
	 * Returns the formatted date in the specified `format` for a given `timestamp`.
	 * @param {number} timestamp - the timestamp to format
	 * @param {string} format - the date/time token
	 * @return {string}
	 * @function
	 */
	format: abstract,

	/**
	 * Adds the specified `amount` of `unit` to the given `timestamp`.
	 * @param {number} timestamp - the input timestamp
	 * @param {number} amount - the amount to add
	 * @param {Unit} unit - the unit as string
	 * @return {number}
	 * @function
	 */
	add: abstract,

	/**
	 * Returns the number of `unit` between the given timestamps.
	 * @param {number} max - the input timestamp (reference)
	 * @param {number} min - the timestamp to substract
	 * @param {Unit} unit - the unit as string
	 * @return {number}
	 * @function
	 */
	diff: abstract,

	/**
	 * Returns start of `unit` for the given `timestamp`.
	 * @param {number} timestamp - the input timestamp
	 * @param {Unit} unit - the unit as string
	 * @param {number} [weekday] - the ISO day of the week with 1 being Monday
	 * and 7 being Sunday (only needed if param *unit* is `isoWeek`).
	 * @function
	 */
	startOf: abstract,

	/**
	 * Returns end of `unit` for the given `timestamp`.
	 * @param {number} timestamp - the input timestamp
	 * @param {Unit} unit - the unit as string
	 * @function
	 */
	endOf: abstract,

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility for scale.getValueForPixel(),
	 * this method should be overridden only by the moment adapter.
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 * @private
	 */
	_create: function(value) {
		return value;
	}
});

DateAdapter.override = function(members) {
	helpers$1.extend(DateAdapter.prototype, members);
};

var _date = DateAdapter;

var core_adapters = {
	_date: _date
};

/**
 * Namespace to hold static tick generation functions
 * @namespace Chart.Ticks
 */
var core_ticks = {
	/**
	 * Namespace to hold formatters for different types of ticks
	 * @namespace Chart.Ticks.formatters
	 */
	formatters: {
		/**
		 * Formatter for value labels
		 * @method Chart.Ticks.formatters.values
		 * @param value the value to display
		 * @return {string|string[]} the label to display
		 */
		values: function(value) {
			return helpers$1.isArray(value) ? value : '' + value;
		},

		/**
		 * Formatter for linear numeric ticks
		 * @method Chart.Ticks.formatters.linear
		 * @param tickValue {number} the value to be formatted
		 * @param index {number} the position of the tickValue parameter in the ticks array
		 * @param ticks {number[]} the list of ticks being converted
		 * @return {string} string representation of the tickValue parameter
		 */
		linear: function(tickValue, index, ticks) {
			// If we have lots of ticks, don't use the ones
			var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];

			// If we have a number like 2.5 as the delta, figure out how many decimal places we need
			if (Math.abs(delta) > 1) {
				if (tickValue !== Math.floor(tickValue)) {
					// not an integer
					delta = tickValue - Math.floor(tickValue);
				}
			}

			var logDelta = helpers$1.log10(Math.abs(delta));
			var tickString = '';

			if (tickValue !== 0) {
				var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));
				if (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation
					var logTick = helpers$1.log10(Math.abs(tickValue));
					var numExponential = Math.floor(logTick) - Math.floor(logDelta);
					numExponential = Math.max(Math.min(numExponential, 20), 0);
					tickString = tickValue.toExponential(numExponential);
				} else {
					var numDecimal = -1 * Math.floor(logDelta);
					numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places
					tickString = tickValue.toFixed(numDecimal);
				}
			} else {
				tickString = '0'; // never show decimal places for 0
			}

			return tickString;
		},

		logarithmic: function(tickValue, index, ticks) {
			var remain = tickValue / (Math.pow(10, Math.floor(helpers$1.log10(tickValue))));

			if (tickValue === 0) {
				return '0';
			} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {
				return tickValue.toExponential();
			}
			return '';
		}
	}
};

var isArray = helpers$1.isArray;
var isNullOrUndef = helpers$1.isNullOrUndef;
var valueOrDefault$a = helpers$1.valueOrDefault;
var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;

core_defaults._set('scale', {
	display: true,
	position: 'left',
	offset: false,

	// grid line settings
	gridLines: {
		display: true,
		color: 'rgba(0,0,0,0.1)',
		lineWidth: 1,
		drawBorder: true,
		drawOnChartArea: true,
		drawTicks: true,
		tickMarkLength: 10,
		zeroLineWidth: 1,
		zeroLineColor: 'rgba(0,0,0,0.25)',
		zeroLineBorderDash: [],
		zeroLineBorderDashOffset: 0.0,
		offsetGridLines: false,
		borderDash: [],
		borderDashOffset: 0.0
	},

	// scale label
	scaleLabel: {
		// display property
		display: false,

		// actual label
		labelString: '',

		// top/bottom padding
		padding: {
			top: 4,
			bottom: 4
		}
	},

	// label settings
	ticks: {
		beginAtZero: false,
		minRotation: 0,
		maxRotation: 50,
		mirror: false,
		padding: 0,
		reverse: false,
		display: true,
		autoSkip: true,
		autoSkipPadding: 0,
		labelOffset: 0,
		// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.
		callback: core_ticks.formatters.values,
		minor: {},
		major: {}
	}
});

/** Returns a new array containing numItems from arr */
function sample(arr, numItems) {
	var result = [];
	var increment = arr.length / numItems;
	var i = 0;
	var len = arr.length;

	for (; i < len; i += increment) {
		result.push(arr[Math.floor(i)]);
	}
	return result;
}

function getPixelForGridLine(scale, index, offsetGridLines) {
	var length = scale.getTicks().length;
	var validIndex = Math.min(index, length - 1);
	var lineValue = scale.getPixelForTick(validIndex);
	var start = scale._startPixel;
	var end = scale._endPixel;
	var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.
	var offset;

	if (offsetGridLines) {
		if (length === 1) {
			offset = Math.max(lineValue - start, end - lineValue);
		} else if (index === 0) {
			offset = (scale.getPixelForTick(1) - lineValue) / 2;
		} else {
			offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;
		}
		lineValue += validIndex < index ? offset : -offset;

		// Return undefined if the pixel is out of the range
		if (lineValue < start - epsilon || lineValue > end + epsilon) {
			return;
		}
	}
	return lineValue;
}

function garbageCollect(caches, length) {
	helpers$1.each(caches, function(cache) {
		var gc = cache.gc;
		var gcLen = gc.length / 2;
		var i;
		if (gcLen > length) {
			for (i = 0; i < gcLen; ++i) {
				delete cache.data[gc[i]];
			}
			gc.splice(0, gcLen);
		}
	});
}

/**
 * Returns {width, height, offset} objects for the first, last, widest, highest tick
 * labels where offset indicates the anchor point offset from the top in pixels.
 */
function computeLabelSizes(ctx, tickFonts, ticks, caches) {
	var length = ticks.length;
	var widths = [];
	var heights = [];
	var offsets = [];
	var widestLabelSize = 0;
	var highestLabelSize = 0;
	var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel, widest, highest;

	for (i = 0; i < length; ++i) {
		label = ticks[i].label;
		tickFont = ticks[i].major ? tickFonts.major : tickFonts.minor;
		ctx.font = fontString = tickFont.string;
		cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};
		lineHeight = tickFont.lineHeight;
		width = height = 0;
		// Undefined labels and arrays should not be measured
		if (!isNullOrUndef(label) && !isArray(label)) {
			width = helpers$1.measureText(ctx, cache.data, cache.gc, width, label);
			height = lineHeight;
		} else if (isArray(label)) {
			// if it is an array let's measure each element
			for (j = 0, jlen = label.length; j < jlen; ++j) {
				nestedLabel = label[j];
				// Undefined labels and arrays should not be measured
				if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {
					width = helpers$1.measureText(ctx, cache.data, cache.gc, width, nestedLabel);
					height += lineHeight;
				}
			}
		}
		widths.push(width);
		heights.push(height);
		offsets.push(lineHeight / 2);
		widestLabelSize = Math.max(width, widestLabelSize);
		highestLabelSize = Math.max(height, highestLabelSize);
	}
	garbageCollect(caches, length);

	widest = widths.indexOf(widestLabelSize);
	highest = heights.indexOf(highestLabelSize);

	function valueAt(idx) {
		return {
			width: widths[idx] || 0,
			height: heights[idx] || 0,
			offset: offsets[idx] || 0
		};
	}

	return {
		first: valueAt(0),
		last: valueAt(length - 1),
		widest: valueAt(widest),
		highest: valueAt(highest)
	};
}

function getTickMarkLength(options) {
	return options.drawTicks ? options.tickMarkLength : 0;
}

function getScaleLabelHeight(options) {
	var font, padding;

	if (!options.display) {
		return 0;
	}

	font = helpers$1.options._parseFont(options);
	padding = helpers$1.options.toPadding(options.padding);

	return font.lineHeight + padding.height;
}

function parseFontOptions(options, nestedOpts) {
	return helpers$1.extend(helpers$1.options._parseFont({
		fontFamily: valueOrDefault$a(nestedOpts.fontFamily, options.fontFamily),
		fontSize: valueOrDefault$a(nestedOpts.fontSize, options.fontSize),
		fontStyle: valueOrDefault$a(nestedOpts.fontStyle, options.fontStyle),
		lineHeight: valueOrDefault$a(nestedOpts.lineHeight, options.lineHeight)
	}), {
		color: helpers$1.options.resolve([nestedOpts.fontColor, options.fontColor, core_defaults.global.defaultFontColor])
	});
}

function parseTickFontOptions(options) {
	var minor = parseFontOptions(options, options.minor);
	var major = options.major.enabled ? parseFontOptions(options, options.major) : minor;

	return {minor: minor, major: major};
}

function nonSkipped(ticksToFilter) {
	var filtered = [];
	var item, index, len;
	for (index = 0, len = ticksToFilter.length; index < len; ++index) {
		item = ticksToFilter[index];
		if (typeof item._index !== 'undefined') {
			filtered.push(item);
		}
	}
	return filtered;
}

function getEvenSpacing(arr) {
	var len = arr.length;
	var i, diff;

	if (len < 2) {
		return false;
	}

	for (diff = arr[0], i = 1; i < len; ++i) {
		if (arr[i] - arr[i - 1] !== diff) {
			return false;
		}
	}
	return diff;
}

function calculateSpacing(majorIndices, ticks, axisLength, ticksLimit) {
	var evenMajorSpacing = getEvenSpacing(majorIndices);
	var spacing = (ticks.length - 1) / ticksLimit;
	var factors, factor, i, ilen;

	// If the major ticks are evenly spaced apart, place the minor ticks
	// so that they divide the major ticks into even chunks
	if (!evenMajorSpacing) {
		return Math.max(spacing, 1);
	}

	factors = helpers$1.math._factorize(evenMajorSpacing);
	for (i = 0, ilen = factors.length - 1; i < ilen; i++) {
		factor = factors[i];
		if (factor > spacing) {
			return factor;
		}
	}
	return Math.max(spacing, 1);
}

function getMajorIndices(ticks) {
	var result = [];
	var i, ilen;
	for (i = 0, ilen = ticks.length; i < ilen; i++) {
		if (ticks[i].major) {
			result.push(i);
		}
	}
	return result;
}

function skipMajors(ticks, majorIndices, spacing) {
	var count = 0;
	var next = majorIndices[0];
	var i, tick;

	spacing = Math.ceil(spacing);
	for (i = 0; i < ticks.length; i++) {
		tick = ticks[i];
		if (i === next) {
			tick._index = i;
			count++;
			next = majorIndices[count * spacing];
		} else {
			delete tick.label;
		}
	}
}

function skip(ticks, spacing, majorStart, majorEnd) {
	var start = valueOrDefault$a(majorStart, 0);
	var end = Math.min(valueOrDefault$a(majorEnd, ticks.length), ticks.length);
	var count = 0;
	var length, i, tick, next;

	spacing = Math.ceil(spacing);
	if (majorEnd) {
		length = majorEnd - majorStart;
		spacing = length / Math.floor(length / spacing);
	}

	next = start;

	while (next < 0) {
		count++;
		next = Math.round(start + count * spacing);
	}

	for (i = Math.max(start, 0); i < end; i++) {
		tick = ticks[i];
		if (i === next) {
			tick._index = i;
			count++;
			next = Math.round(start + count * spacing);
		} else {
			delete tick.label;
		}
	}
}

var Scale = core_element.extend({

	zeroLineIndex: 0,

	/**
	 * Get the padding needed for the scale
	 * @method getPadding
	 * @private
	 * @returns {Padding} the necessary padding
	 */
	getPadding: function() {
		var me = this;
		return {
			left: me.paddingLeft || 0,
			top: me.paddingTop || 0,
			right: me.paddingRight || 0,
			bottom: me.paddingBottom || 0
		};
	},

	/**
	 * Returns the scale tick objects ({label, major})
	 * @since 2.7
	 */
	getTicks: function() {
		return this._ticks;
	},

	/**
	* @private
	*/
	_getLabels: function() {
		var data = this.chart.data;
		return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];
	},

	// These methods are ordered by lifecyle. Utilities then follow.
	// Any function defined here is inherited by all scale types.
	// Any function can be extended by the scale type

	/**
	 * Provided for backward compatibility, not available anymore
	 * @function Chart.Scale.mergeTicksOptions
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 */
	mergeTicksOptions: function() {
		// noop
	},

	beforeUpdate: function() {
		helpers$1.callback(this.options.beforeUpdate, [this]);
	},

	/**
	 * @param {number} maxWidth - the max width in pixels
	 * @param {number} maxHeight - the max height in pixels
	 * @param {object} margins - the space between the edge of the other scales and edge of the chart
	 *   This space comes from two sources:
	 *     - padding - space that's required to show the labels at the edges of the scale
	 *     - thickness of scales or legends in another orientation
	 */
	update: function(maxWidth, maxHeight, margins) {
		var me = this;
		var tickOpts = me.options.ticks;
		var sampleSize = tickOpts.sampleSize;
		var i, ilen, labels, ticks, samplingEnabled;

		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
		me.beforeUpdate();

		// Absorb the master measurements
		me.maxWidth = maxWidth;
		me.maxHeight = maxHeight;
		me.margins = helpers$1.extend({
			left: 0,
			right: 0,
			top: 0,
			bottom: 0
		}, margins);

		me._ticks = null;
		me.ticks = null;
		me._labelSizes = null;
		me._maxLabelLines = 0;
		me.longestLabelWidth = 0;
		me.longestTextCache = me.longestTextCache || {};
		me._gridLineItems = null;
		me._labelItems = null;

		// Dimensions
		me.beforeSetDimensions();
		me.setDimensions();
		me.afterSetDimensions();

		// Data min/max
		me.beforeDataLimits();
		me.determineDataLimits();
		me.afterDataLimits();

		// Ticks - `this.ticks` is now DEPRECATED!
		// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member
		// and must not be accessed directly from outside this class. `this.ticks` being
		// around for long time and not marked as private, we can't change its structure
		// without unexpected breaking changes. If you need to access the scale ticks,
		// use scale.getTicks() instead.

		me.beforeBuildTicks();

		// New implementations should return an array of objects but for BACKWARD COMPAT,
		// we still support no return (`this.ticks` internally set by calling this method).
		ticks = me.buildTicks() || [];

		// Allow modification of ticks in callback.
		ticks = me.afterBuildTicks(ticks) || ticks;

		// Ensure ticks contains ticks in new tick format
		if ((!ticks || !ticks.length) && me.ticks) {
			ticks = [];
			for (i = 0, ilen = me.ticks.length; i < ilen; ++i) {
				ticks.push({
					value: me.ticks[i],
					major: false
				});
			}
		}

		me._ticks = ticks;

		// Compute tick rotation and fit using a sampled subset of labels
		// We generally don't need to compute the size of every single label for determining scale size
		samplingEnabled = sampleSize < ticks.length;
		labels = me._convertTicksToLabels(samplingEnabled ? sample(ticks, sampleSize) : ticks);

		// _configure is called twice, once here, once from core.controller.updateLayout.
		// Here we haven't been positioned yet, but dimensions are correct.
		// Variables set in _configure are needed for calculateTickRotation, and
		// it's ok that coordinates are not correct there, only dimensions matter.
		me._configure();

		// Tick Rotation
		me.beforeCalculateTickRotation();
		me.calculateTickRotation();
		me.afterCalculateTickRotation();

		me.beforeFit();
		me.fit();
		me.afterFit();

		// Auto-skip
		me._ticksToDraw = tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto') ? me._autoSkip(ticks) : ticks;

		if (samplingEnabled) {
			// Generate labels using all non-skipped ticks
			labels = me._convertTicksToLabels(me._ticksToDraw);
		}

		me.ticks = labels;   // BACKWARD COMPATIBILITY

		// IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!

		me.afterUpdate();

		// TODO(v3): remove minSize as a public property and return value from all layout boxes. It is unused
		// make maxWidth and maxHeight private
		return me.minSize;
	},

	/**
	 * @private
	 */
	_configure: function() {
		var me = this;
		var reversePixels = me.options.ticks.reverse;
		var startPixel, endPixel;

		if (me.isHorizontal()) {
			startPixel = me.left;
			endPixel = me.right;
		} else {
			startPixel = me.top;
			endPixel = me.bottom;
			// by default vertical scales are from bottom to top, so pixels are reversed
			reversePixels = !reversePixels;
		}
		me._startPixel = startPixel;
		me._endPixel = endPixel;
		me._reversePixels = reversePixels;
		me._length = endPixel - startPixel;
	},

	afterUpdate: function() {
		helpers$1.callback(this.options.afterUpdate, [this]);
	},

	//

	beforeSetDimensions: function() {
		helpers$1.callback(this.options.beforeSetDimensions, [this]);
	},
	setDimensions: function() {
		var me = this;
		// Set the unconstrained dimension before label rotation
		if (me.isHorizontal()) {
			// Reset position before calculating rotation
			me.width = me.maxWidth;
			me.left = 0;
			me.right = me.width;
		} else {
			me.height = me.maxHeight;

			// Reset position before calculating rotation
			me.top = 0;
			me.bottom = me.height;
		}

		// Reset padding
		me.paddingLeft = 0;
		me.paddingTop = 0;
		me.paddingRight = 0;
		me.paddingBottom = 0;
	},
	afterSetDimensions: function() {
		helpers$1.callback(this.options.afterSetDimensions, [this]);
	},

	// Data limits
	beforeDataLimits: function() {
		helpers$1.callback(this.options.beforeDataLimits, [this]);
	},
	determineDataLimits: helpers$1.noop,
	afterDataLimits: function() {
		helpers$1.callback(this.options.afterDataLimits, [this]);
	},

	//
	beforeBuildTicks: function() {
		helpers$1.callback(this.options.beforeBuildTicks, [this]);
	},
	buildTicks: helpers$1.noop,
	afterBuildTicks: function(ticks) {
		var me = this;
		// ticks is empty for old axis implementations here
		if (isArray(ticks) && ticks.length) {
			return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);
		}
		// Support old implementations (that modified `this.ticks` directly in buildTicks)
		me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;
		return ticks;
	},

	beforeTickToLabelConversion: function() {
		helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);
	},
	convertTicksToLabels: function() {
		var me = this;
		// Convert ticks to strings
		var tickOpts = me.options.ticks;
		me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);
	},
	afterTickToLabelConversion: function() {
		helpers$1.callback(this.options.afterTickToLabelConversion, [this]);
	},

	//

	beforeCalculateTickRotation: function() {
		helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);
	},
	calculateTickRotation: function() {
		var me = this;
		var options = me.options;
		var tickOpts = options.ticks;
		var numTicks = me.getTicks().length;
		var minRotation = tickOpts.minRotation || 0;
		var maxRotation = tickOpts.maxRotation;
		var labelRotation = minRotation;
		var labelSizes, maxLabelWidth, maxLabelHeight, maxWidth, tickWidth, maxHeight, maxLabelDiagonal;

		if (!me._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !me.isHorizontal()) {
			me.labelRotation = minRotation;
			return;
		}

		labelSizes = me._getLabelSizes();
		maxLabelWidth = labelSizes.widest.width;
		maxLabelHeight = labelSizes.highest.height - labelSizes.highest.offset;

		// Estimate the width of each grid based on the canvas width, the maximum
		// label width and the number of tick intervals
		maxWidth = Math.min(me.maxWidth, me.chart.width - maxLabelWidth);
		tickWidth = options.offset ? me.maxWidth / numTicks : maxWidth / (numTicks - 1);

		// Allow 3 pixels x2 padding either side for label readability
		if (maxLabelWidth + 6 > tickWidth) {
			tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));
			maxHeight = me.maxHeight - getTickMarkLength(options.gridLines)
				- tickOpts.padding - getScaleLabelHeight(options.scaleLabel);
			maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);
			labelRotation = helpers$1.toDegrees(Math.min(
				Math.asin(Math.min((labelSizes.highest.height + 6) / tickWidth, 1)),
				Math.asin(Math.min(maxHeight / maxLabelDiagonal, 1)) - Math.asin(maxLabelHeight / maxLabelDiagonal)
			));
			labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));
		}

		me.labelRotation = labelRotation;
	},
	afterCalculateTickRotation: function() {
		helpers$1.callback(this.options.afterCalculateTickRotation, [this]);
	},

	//

	beforeFit: function() {
		helpers$1.callback(this.options.beforeFit, [this]);
	},
	fit: function() {
		var me = this;
		// Reset
		var minSize = me.minSize = {
			width: 0,
			height: 0
		};

		var chart = me.chart;
		var opts = me.options;
		var tickOpts = opts.ticks;
		var scaleLabelOpts = opts.scaleLabel;
		var gridLineOpts = opts.gridLines;
		var display = me._isVisible();
		var isBottom = opts.position === 'bottom';
		var isHorizontal = me.isHorizontal();

		// Width
		if (isHorizontal) {
			minSize.width = me.maxWidth;
		} else if (display) {
			minSize.width = getTickMarkLength(gridLineOpts) + getScaleLabelHeight(scaleLabelOpts);
		}

		// height
		if (!isHorizontal) {
			minSize.height = me.maxHeight; // fill all the height
		} else if (display) {
			minSize.height = getTickMarkLength(gridLineOpts) + getScaleLabelHeight(scaleLabelOpts);
		}

		// Don't bother fitting the ticks if we are not showing the labels
		if (tickOpts.display && display) {
			var tickFonts = parseTickFontOptions(tickOpts);
			var labelSizes = me._getLabelSizes();
			var firstLabelSize = labelSizes.first;
			var lastLabelSize = labelSizes.last;
			var widestLabelSize = labelSizes.widest;
			var highestLabelSize = labelSizes.highest;
			var lineSpace = tickFonts.minor.lineHeight * 0.4;
			var tickPadding = tickOpts.padding;

			if (isHorizontal) {
				// A horizontal axis is more constrained by the height.
				var isRotated = me.labelRotation !== 0;
				var angleRadians = helpers$1.toRadians(me.labelRotation);
				var cosRotation = Math.cos(angleRadians);
				var sinRotation = Math.sin(angleRadians);

				var labelHeight = sinRotation * widestLabelSize.width
					+ cosRotation * (highestLabelSize.height - (isRotated ? highestLabelSize.offset : 0))
					+ (isRotated ? 0 : lineSpace); // padding

				minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);

				var offsetLeft = me.getPixelForTick(0) - me.left;
				var offsetRight = me.right - me.getPixelForTick(me.getTicks().length - 1);
				var paddingLeft, paddingRight;

				// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned
				// which means that the right padding is dominated by the font height
				if (isRotated) {
					paddingLeft = isBottom ?
						cosRotation * firstLabelSize.width + sinRotation * firstLabelSize.offset :
						sinRotation * (firstLabelSize.height - firstLabelSize.offset);
					paddingRight = isBottom ?
						sinRotation * (lastLabelSize.height - lastLabelSize.offset) :
						cosRotation * lastLabelSize.width + sinRotation * lastLabelSize.offset;
				} else {
					paddingLeft = firstLabelSize.width / 2;
					paddingRight = lastLabelSize.width / 2;
				}

				// Adjust padding taking into account changes in offsets
				// and add 3 px to move away from canvas edges
				me.paddingLeft = Math.max((paddingLeft - offsetLeft) * me.width / (me.width - offsetLeft), 0) + 3;
				me.paddingRight = Math.max((paddingRight - offsetRight) * me.width / (me.width - offsetRight), 0) + 3;
			} else {
				// A vertical axis is more constrained by the width. Labels are the
				// dominant factor here, so get that length first and account for padding
				var labelWidth = tickOpts.mirror ? 0 :
					// use lineSpace for consistency with horizontal axis
					// tickPadding is not implemented for horizontal
					widestLabelSize.width + tickPadding + lineSpace;

				minSize.width = Math.min(me.maxWidth, minSize.width + labelWidth);

				me.paddingTop = firstLabelSize.height / 2;
				me.paddingBottom = lastLabelSize.height / 2;
			}
		}

		me.handleMargins();

		if (isHorizontal) {
			me.width = me._length = chart.width - me.margins.left - me.margins.right;
			me.height = minSize.height;
		} else {
			me.width = minSize.width;
			me.height = me._length = chart.height - me.margins.top - me.margins.bottom;
		}
	},

	/**
	 * Handle margins and padding interactions
	 * @private
	 */
	handleMargins: function() {
		var me = this;
		if (me.margins) {
			me.margins.left = Math.max(me.paddingLeft, me.margins.left);
			me.margins.top = Math.max(me.paddingTop, me.margins.top);
			me.margins.right = Math.max(me.paddingRight, me.margins.right);
			me.margins.bottom = Math.max(me.paddingBottom, me.margins.bottom);
		}
	},

	afterFit: function() {
		helpers$1.callback(this.options.afterFit, [this]);
	},

	// Shared Methods
	isHorizontal: function() {
		var pos = this.options.position;
		return pos === 'top' || pos === 'bottom';
	},
	isFullWidth: function() {
		return this.options.fullWidth;
	},

	// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not
	getRightValue: function(rawValue) {
		// Null and undefined values first
		if (isNullOrUndef(rawValue)) {
			return NaN;
		}
		// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values
		if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {
			return NaN;
		}

		// If it is in fact an object, dive in one more level
		if (rawValue) {
			if (this.isHorizontal()) {
				if (rawValue.x !== undefined) {
					return this.getRightValue(rawValue.x);
				}
			} else if (rawValue.y !== undefined) {
				return this.getRightValue(rawValue.y);
			}
		}

		// Value is good, return it
		return rawValue;
	},

	_convertTicksToLabels: function(ticks) {
		var me = this;
		var labels, i, ilen;

		me.ticks = ticks.map(function(tick) {
			return tick.value;
		});

		me.beforeTickToLabelConversion();

		// New implementations should return the formatted tick labels but for BACKWARD
		// COMPAT, we still support no return (`this.ticks` internally changed by calling
		// this method and supposed to contain only string values).
		labels = me.convertTicksToLabels(ticks) || me.ticks;

		me.afterTickToLabelConversion();

		// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)
		for (i = 0, ilen = ticks.length; i < ilen; ++i) {
			ticks[i].label = labels[i];
		}

		return labels;
	},

	/**
	 * @private
	 */
	_getLabelSizes: function() {
		var me = this;
		var labelSizes = me._labelSizes;

		if (!labelSizes) {
			me._labelSizes = labelSizes = computeLabelSizes(me.ctx, parseTickFontOptions(me.options.ticks), me.getTicks(), me.longestTextCache);
			me.longestLabelWidth = labelSizes.widest.width;
		}

		return labelSizes;
	},

	/**
	 * @private
	 */
	_parseValue: function(value) {
		var start, end, min, max;

		if (isArray(value)) {
			start = +this.getRightValue(value[0]);
			end = +this.getRightValue(value[1]);
			min = Math.min(start, end);
			max = Math.max(start, end);
		} else {
			value = +this.getRightValue(value);
			start = undefined;
			end = value;
			min = value;
			max = value;
		}

		return {
			min: min,
			max: max,
			start: start,
			end: end
		};
	},

	/**
	* @private
	*/
	_getScaleLabel: function(rawValue) {
		var v = this._parseValue(rawValue);
		if (v.start !== undefined) {
			return '[' + v.start + ', ' + v.end + ']';
		}

		return +this.getRightValue(rawValue);
	},

	/**
	 * Used to get the value to display in the tooltip for the data at the given index
	 * @param index
	 * @param datasetIndex
	 */
	getLabelForIndex: helpers$1.noop,

	/**
	 * Returns the location of the given data point. Value can either be an index or a numerical value
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 * @param value
	 * @param index
	 * @param datasetIndex
	 */
	getPixelForValue: helpers$1.noop,

	/**
	 * Used to get the data value from a given pixel. This is the inverse of getPixelForValue
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 * @param pixel
	 */
	getValueForPixel: helpers$1.noop,

	/**
	 * Returns the location of the tick at the given index
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 */
	getPixelForTick: function(index) {
		var me = this;
		var offset = me.options.offset;
		var numTicks = me._ticks.length;
		var tickWidth = 1 / Math.max(numTicks - (offset ? 0 : 1), 1);

		return index < 0 || index > numTicks - 1
			? null
			: me.getPixelForDecimal(index * tickWidth + (offset ? tickWidth / 2 : 0));
	},

	/**
	 * Utility for getting the pixel location of a percentage of scale
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 */
	getPixelForDecimal: function(decimal) {
		var me = this;

		if (me._reversePixels) {
			decimal = 1 - decimal;
		}

		return me._startPixel + decimal * me._length;
	},

	getDecimalForPixel: function(pixel) {
		var decimal = (pixel - this._startPixel) / this._length;
		return this._reversePixels ? 1 - decimal : decimal;
	},

	/**
	 * Returns the pixel for the minimum chart value
	 * The coordinate (0, 0) is at the upper-left corner of the canvas
	 */
	getBasePixel: function() {
		return this.getPixelForValue(this.getBaseValue());
	},

	getBaseValue: function() {
		var me = this;
		var min = me.min;
		var max = me.max;

		return me.beginAtZero ? 0 :
			min < 0 && max < 0 ? max :
			min > 0 && max > 0 ? min :
			0;
	},

	/**
	 * Returns a subset of ticks to be plotted to avoid overlapping labels.
	 * @private
	 */
	_autoSkip: function(ticks) {
		var me = this;
		var tickOpts = me.options.ticks;
		var axisLength = me._length;
		var ticksLimit = tickOpts.maxTicksLimit || axisLength / me._tickSize() + 1;
		var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];
		var numMajorIndices = majorIndices.length;
		var first = majorIndices[0];
		var last = majorIndices[numMajorIndices - 1];
		var i, ilen, spacing, avgMajorSpacing;

		// If there are too many major ticks to display them all
		if (numMajorIndices > ticksLimit) {
			skipMajors(ticks, majorIndices, numMajorIndices / ticksLimit);
			return nonSkipped(ticks);
		}

		spacing = calculateSpacing(majorIndices, ticks, axisLength, ticksLimit);

		if (numMajorIndices > 0) {
			for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {
				skip(ticks, spacing, majorIndices[i], majorIndices[i + 1]);
			}
			avgMajorSpacing = numMajorIndices > 1 ? (last - first) / (numMajorIndices - 1) : null;
			skip(ticks, spacing, helpers$1.isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);
			skip(ticks, spacing, last, helpers$1.isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);
			return nonSkipped(ticks);
		}
		skip(ticks, spacing);
		return nonSkipped(ticks);
	},

	/**
	 * @private
	 */
	_tickSize: function() {
		var me = this;
		var optionTicks = me.options.ticks;

		// Calculate space needed by label in axis direction.
		var rot = helpers$1.toRadians(me.labelRotation);
		var cos = Math.abs(Math.cos(rot));
		var sin = Math.abs(Math.sin(rot));

		var labelSizes = me._getLabelSizes();
		var padding = optionTicks.autoSkipPadding || 0;
		var w = labelSizes ? labelSizes.widest.width + padding : 0;
		var h = labelSizes ? labelSizes.highest.height + padding : 0;

		// Calculate space needed for 1 tick in axis direction.
		return me.isHorizontal()
			? h * cos > w * sin ? w / cos : h / sin
			: h * sin < w * cos ? h / cos : w / sin;
	},

	/**
	 * @private
	 */
	_isVisible: function() {
		var me = this;
		var chart = me.chart;
		var display = me.options.display;
		var i, ilen, meta;

		if (display !== 'auto') {
			return !!display;
		}

		// When 'auto', the scale is visible if at least one associated dataset is visible.
		for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {
			if (chart.isDatasetVisible(i)) {
				meta = chart.getDatasetMeta(i);
				if (meta.xAxisID === me.id || meta.yAxisID === me.id) {
					return true;
				}
			}
		}

		return false;
	},

	/**
	 * @private
	 */
	_computeGridLineItems: function(chartArea) {
		var me = this;
		var chart = me.chart;
		var options = me.options;
		var gridLines = options.gridLines;
		var position = options.position;
		var offsetGridLines = gridLines.offsetGridLines;
		var isHorizontal = me.isHorizontal();
		var ticks = me._ticksToDraw;
		var ticksLength = ticks.length + (offsetGridLines ? 1 : 0);

		var tl = getTickMarkLength(gridLines);
		var items = [];
		var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;
		var axisHalfWidth = axisWidth / 2;
		var alignPixel = helpers$1._alignPixel;
		var alignBorderValue = function(pixel) {
			return alignPixel(chart, pixel, axisWidth);
		};
		var borderValue, i, tick, lineValue, alignedLineValue;
		var tx1, ty1, tx2, ty2, x1, y1, x2, y2, lineWidth, lineColor, borderDash, borderDashOffset;

		if (position === 'top') {
			borderValue = alignBorderValue(me.bottom);
			ty1 = me.bottom - tl;
			ty2 = borderValue - axisHalfWidth;
			y1 = alignBorderValue(chartArea.top) + axisHalfWidth;
			y2 = chartArea.bottom;
		} else if (position === 'bottom') {
			borderValue = alignBorderValue(me.top);
			y1 = chartArea.top;
			y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;
			ty1 = borderValue + axisHalfWidth;
			ty2 = me.top + tl;
		} else if (position === 'left') {
			borderValue = alignBorderValue(me.right);
			tx1 = me.right - tl;
			tx2 = borderValue - axisHalfWidth;
			x1 = alignBorderValue(chartArea.left) + axisHalfWidth;
			x2 = chartArea.right;
		} else {
			borderValue = alignBorderValue(me.left);
			x1 = chartArea.left;
			x2 = alignBorderValue(chartArea.right) - axisHalfWidth;
			tx1 = borderValue + axisHalfWidth;
			tx2 = me.left + tl;
		}

		for (i = 0; i < ticksLength; ++i) {
			tick = ticks[i] || {};

			// autoskipper skipped this tick (#4635)
			if (isNullOrUndef(tick.label) && i < ticks.length) {
				continue;
			}

			if (i === me.zeroLineIndex && options.offset === offsetGridLines) {
				// Draw the first index specially
				lineWidth = gridLines.zeroLineWidth;
				lineColor = gridLines.zeroLineColor;
				borderDash = gridLines.zeroLineBorderDash || [];
				borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;
			} else {
				lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, i, 1);
				lineColor = valueAtIndexOrDefault(gridLines.color, i, 'rgba(0,0,0,0.1)');
				borderDash = gridLines.borderDash || [];
				borderDashOffset = gridLines.borderDashOffset || 0.0;
			}

			lineValue = getPixelForGridLine(me, tick._index || i, offsetGridLines);

			// Skip if the pixel is out of the range
			if (lineValue === undefined) {
				continue;
			}

			alignedLineValue = alignPixel(chart, lineValue, lineWidth);

			if (isHorizontal) {
				tx1 = tx2 = x1 = x2 = alignedLineValue;
			} else {
				ty1 = ty2 = y1 = y2 = alignedLineValue;
			}

			items.push({
				tx1: tx1,
				ty1: ty1,
				tx2: tx2,
				ty2: ty2,
				x1: x1,
				y1: y1,
				x2: x2,
				y2: y2,
				width: lineWidth,
				color: lineColor,
				borderDash: borderDash,
				borderDashOffset: borderDashOffset,
			});
		}

		items.ticksLength = ticksLength;
		items.borderValue = borderValue;

		return items;
	},

	/**
	 * @private
	 */
	_computeLabelItems: function() {
		var me = this;
		var options = me.options;
		var optionTicks = options.ticks;
		var position = options.position;
		var isMirrored = optionTicks.mirror;
		var isHorizontal = me.isHorizontal();
		var ticks = me._ticksToDraw;
		var fonts = parseTickFontOptions(optionTicks);
		var tickPadding = optionTicks.padding;
		var tl = getTickMarkLength(options.gridLines);
		var rotation = -helpers$1.toRadians(me.labelRotation);
		var items = [];
		var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;

		if (position === 'top') {
			y = me.bottom - tl - tickPadding;
			textAlign = !rotation ? 'center' : 'left';
		} else if (position === 'bottom') {
			y = me.top + tl + tickPadding;
			textAlign = !rotation ? 'center' : 'right';
		} else if (position === 'left') {
			x = me.right - (isMirrored ? 0 : tl) - tickPadding;
			textAlign = isMirrored ? 'left' : 'right';
		} else {
			x = me.left + (isMirrored ? 0 : tl) + tickPadding;
			textAlign = isMirrored ? 'right' : 'left';
		}

		for (i = 0, ilen = ticks.length; i < ilen; ++i) {
			tick = ticks[i];
			label = tick.label;

			// autoskipper skipped this tick (#4635)
			if (isNullOrUndef(label)) {
				continue;
			}

			pixel = me.getPixelForTick(tick._index || i) + optionTicks.labelOffset;
			font = tick.major ? fonts.major : fonts.minor;
			lineHeight = font.lineHeight;
			lineCount = isArray(label) ? label.length : 1;

			if (isHorizontal) {
				x = pixel;
				textOffset = position === 'top'
					? ((!rotation ? 0.5 : 1) - lineCount) * lineHeight
					: (!rotation ? 0.5 : 0) * lineHeight;
			} else {
				y = pixel;
				textOffset = (1 - lineCount) * lineHeight / 2;
			}

			items.push({
				x: x,
				y: y,
				rotation: rotation,
				label: label,
				font: font,
				textOffset: textOffset,
				textAlign: textAlign
			});
		}

		return items;
	},

	/**
	 * @private
	 */
	_drawGrid: function(chartArea) {
		var me = this;
		var gridLines = me.options.gridLines;

		if (!gridLines.display) {
			return;
		}

		var ctx = me.ctx;
		var chart = me.chart;
		var alignPixel = helpers$1._alignPixel;
		var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;
		var items = me._gridLineItems || (me._gridLineItems = me._computeGridLineItems(chartArea));
		var width, color, i, ilen, item;

		for (i = 0, ilen = items.length; i < ilen; ++i) {
			item = items[i];
			width = item.width;
			color = item.color;

			if (width && color) {
				ctx.save();
				ctx.lineWidth = width;
				ctx.strokeStyle = color;
				if (ctx.setLineDash) {
					ctx.setLineDash(item.borderDash);
					ctx.lineDashOffset = item.borderDashOffset;
				}

				ctx.beginPath();

				if (gridLines.drawTicks) {
					ctx.moveTo(item.tx1, item.ty1);
					ctx.lineTo(item.tx2, item.ty2);
				}

				if (gridLines.drawOnChartArea) {
					ctx.moveTo(item.x1, item.y1);
					ctx.lineTo(item.x2, item.y2);
				}

				ctx.stroke();
				ctx.restore();
			}
		}

		if (axisWidth) {
			// Draw the line at the edge of the axis
			var firstLineWidth = axisWidth;
			var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, items.ticksLength - 1, 1);
			var borderValue = items.borderValue;
			var x1, x2, y1, y2;

			if (me.isHorizontal()) {
				x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;
				x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;
				y1 = y2 = borderValue;
			} else {
				y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;
				y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;
				x1 = x2 = borderValue;
			}

			ctx.lineWidth = axisWidth;
			ctx.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);
			ctx.beginPath();
			ctx.moveTo(x1, y1);
			ctx.lineTo(x2, y2);
			ctx.stroke();
		}
	},

	/**
	 * @private
	 */
	_drawLabels: function() {
		var me = this;
		var optionTicks = me.options.ticks;

		if (!optionTicks.display) {
			return;
		}

		var ctx = me.ctx;
		var items = me._labelItems || (me._labelItems = me._computeLabelItems());
		var i, j, ilen, jlen, item, tickFont, label, y;

		for (i = 0, ilen = items.length; i < ilen; ++i) {
			item = items[i];
			tickFont = item.font;

			// Make sure we draw text in the correct color and font
			ctx.save();
			ctx.translate(item.x, item.y);
			ctx.rotate(item.rotation);
			ctx.font = tickFont.string;
			ctx.fillStyle = tickFont.color;
			ctx.textBaseline = 'middle';
			ctx.textAlign = item.textAlign;

			label = item.label;
			y = item.textOffset;
			if (isArray(label)) {
				for (j = 0, jlen = label.length; j < jlen; ++j) {
					// We just make sure the multiline element is a string here..
					ctx.fillText('' + label[j], 0, y);
					y += tickFont.lineHeight;
				}
			} else {
				ctx.fillText(label, 0, y);
			}
			ctx.restore();
		}
	},

	/**
	 * @private
	 */
	_drawTitle: function() {
		var me = this;
		var ctx = me.ctx;
		var options = me.options;
		var scaleLabel = options.scaleLabel;

		if (!scaleLabel.display) {
			return;
		}

		var scaleLabelFontColor = valueOrDefault$a(scaleLabel.fontColor, core_defaults.global.defaultFontColor);
		var scaleLabelFont = helpers$1.options._parseFont(scaleLabel);
		var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);
		var halfLineHeight = scaleLabelFont.lineHeight / 2;
		var position = options.position;
		var rotation = 0;
		var scaleLabelX, scaleLabelY;

		if (me.isHorizontal()) {
			scaleLabelX = me.left + me.width / 2; // midpoint of the width
			scaleLabelY = position === 'bottom'
				? me.bottom - halfLineHeight - scaleLabelPadding.bottom
				: me.top + halfLineHeight + scaleLabelPadding.top;
		} else {
			var isLeft = position === 'left';
			scaleLabelX = isLeft
				? me.left + halfLineHeight + scaleLabelPadding.top
				: me.right - halfLineHeight - scaleLabelPadding.top;
			scaleLabelY = me.top + me.height / 2;
			rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;
		}

		ctx.save();
		ctx.translate(scaleLabelX, scaleLabelY);
		ctx.rotate(rotation);
		ctx.textAlign = 'center';
		ctx.textBaseline = 'middle';
		ctx.fillStyle = scaleLabelFontColor; // render in correct colour
		ctx.font = scaleLabelFont.string;
		ctx.fillText(scaleLabel.labelString, 0, 0);
		ctx.restore();
	},

	draw: function(chartArea) {
		var me = this;

		if (!me._isVisible()) {
			return;
		}

		me._drawGrid(chartArea);
		me._drawTitle();
		me._drawLabels();
	},

	/**
	 * @private
	 */
	_layers: function() {
		var me = this;
		var opts = me.options;
		var tz = opts.ticks && opts.ticks.z || 0;
		var gz = opts.gridLines && opts.gridLines.z || 0;

		if (!me._isVisible() || tz === gz || me.draw !== me._draw) {
			// backward compatibility: draw has been overridden by custom scale
			return [{
				z: tz,
				draw: function() {
					me.draw.apply(me, arguments);
				}
			}];
		}

		return [{
			z: gz,
			draw: function() {
				me._drawGrid.apply(me, arguments);
				me._drawTitle.apply(me, arguments);
			}
		}, {
			z: tz,
			draw: function() {
				me._drawLabels.apply(me, arguments);
			}
		}];
	},

	/**
	 * @private
	 */
	_getMatchingVisibleMetas: function(type) {
		var me = this;
		var isHorizontal = me.isHorizontal();
		return me.chart._getSortedVisibleDatasetMetas()
			.filter(function(meta) {
				return (!type || meta.type === type)
					&& (isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id);
			});
	}
});

Scale.prototype._draw = Scale.prototype.draw;

var core_scale = Scale;

var isNullOrUndef$1 = helpers$1.isNullOrUndef;

var defaultConfig = {
	position: 'bottom'
};

var scale_category = core_scale.extend({
	determineDataLimits: function() {
		var me = this;
		var labels = me._getLabels();
		var ticksOpts = me.options.ticks;
		var min = ticksOpts.min;
		var max = ticksOpts.max;
		var minIndex = 0;
		var maxIndex = labels.length - 1;
		var findIndex;

		if (min !== undefined) {
			// user specified min value
			findIndex = labels.indexOf(min);
			if (findIndex >= 0) {
				minIndex = findIndex;
			}
		}

		if (max !== undefined) {
			// user specified max value
			findIndex = labels.indexOf(max);
			if (findIndex >= 0) {
				maxIndex = findIndex;
			}
		}

		me.minIndex = minIndex;
		me.maxIndex = maxIndex;
		me.min = labels[minIndex];
		me.max = labels[maxIndex];
	},

	buildTicks: function() {
		var me = this;
		var labels = me._getLabels();
		var minIndex = me.minIndex;
		var maxIndex = me.maxIndex;

		// If we are viewing some subset of labels, slice the original array
		me.ticks = (minIndex === 0 && maxIndex === labels.length - 1) ? labels : labels.slice(minIndex, maxIndex + 1);
	},

	getLabelForIndex: function(index, datasetIndex) {
		var me = this;
		var chart = me.chart;

		if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {
			return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);
		}

		return me._getLabels()[index];
	},

	_configure: function() {
		var me = this;
		var offset = me.options.offset;
		var ticks = me.ticks;

		core_scale.prototype._configure.call(me);

		if (!me.isHorizontal()) {
			// For backward compatibility, vertical category scale reverse is inverted.
			me._reversePixels = !me._reversePixels;
		}

		if (!ticks) {
			return;
		}

		me._startValue = me.minIndex - (offset ? 0.5 : 0);
		me._valueRange = Math.max(ticks.length - (offset ? 0 : 1), 1);
	},

	// Used to get data value locations.  Value can either be an index or a numerical value
	getPixelForValue: function(value, index, datasetIndex) {
		var me = this;
		var valueCategory, labels, idx;

		if (!isNullOrUndef$1(index) && !isNullOrUndef$1(datasetIndex)) {
			value = me.chart.data.datasets[datasetIndex].data[index];
		}

		// If value is a data object, then index is the index in the data array,
		// not the index of the scale. We need to change that.
		if (!isNullOrUndef$1(value)) {
			valueCategory = me.isHorizontal() ? value.x : value.y;
		}
		if (valueCategory !== undefined || (value !== undefined && isNaN(index))) {
			labels = me._getLabels();
			value = helpers$1.valueOrDefault(valueCategory, value);
			idx = labels.indexOf(value);
			index = idx !== -1 ? idx : index;
			if (isNaN(index)) {
				index = value;
			}
		}
		return me.getPixelForDecimal((index - me._startValue) / me._valueRange);
	},

	getPixelForTick: function(index) {
		var ticks = this.ticks;
		return index < 0 || index > ticks.length - 1
			? null
			: this.getPixelForValue(ticks[index], index + this.minIndex);
	},

	getValueForPixel: function(pixel) {
		var me = this;
		var value = Math.round(me._startValue + me.getDecimalForPixel(pixel) * me._valueRange);
		return Math.min(Math.max(value, 0), me.ticks.length - 1);
	},

	getBasePixel: function() {
		return this.bottom;
	}
});

// INTERNAL: static default options, registered in src/index.js
var _defaults = defaultConfig;
scale_category._defaults = _defaults;

var noop = helpers$1.noop;
var isNullOrUndef$2 = helpers$1.isNullOrUndef;

/**
 * Generate a set of linear ticks
 * @param generationOptions the options used to generate the ticks
 * @param dataRange the range of the data
 * @returns {number[]} array of tick values
 */
function generateTicks(generationOptions, dataRange) {
	var ticks = [];
	// To get a "nice" value for the tick spacing, we will use the appropriately named
	// "nice number" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks
	// for details.

	var MIN_SPACING = 1e-14;
	var stepSize = generationOptions.stepSize;
	var unit = stepSize || 1;
	var maxNumSpaces = generationOptions.maxTicks - 1;
	var min = generationOptions.min;
	var max = generationOptions.max;
	var precision = generationOptions.precision;
	var rmin = dataRange.min;
	var rmax = dataRange.max;
	var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;
	var factor, niceMin, niceMax, numSpaces;

	// Beyond MIN_SPACING floating point numbers being to lose precision
	// such that we can't do the math necessary to generate ticks
	if (spacing < MIN_SPACING && isNullOrUndef$2(min) && isNullOrUndef$2(max)) {
		return [rmin, rmax];
	}

	numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);
	if (numSpaces > maxNumSpaces) {
		// If the calculated num of spaces exceeds maxNumSpaces, recalculate it
		spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;
	}

	if (stepSize || isNullOrUndef$2(precision)) {
		// If a precision is not specified, calculate factor based on spacing
		factor = Math.pow(10, helpers$1._decimalPlaces(spacing));
	} else {
		// If the user specified a precision, round to that number of decimal places
		factor = Math.pow(10, precision);
		spacing = Math.ceil(spacing * factor) / factor;
	}

	niceMin = Math.floor(rmin / spacing) * spacing;
	niceMax = Math.ceil(rmax / spacing) * spacing;

	// If min, max and stepSize is set and they make an evenly spaced scale use it.
	if (stepSize) {
		// If very close to our whole number, use it.
		if (!isNullOrUndef$2(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {
			niceMin = min;
		}
		if (!isNullOrUndef$2(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {
			niceMax = max;
		}
	}

	numSpaces = (niceMax - niceMin) / spacing;
	// If very close to our rounded value, use it.
	if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {
		numSpaces = Math.round(numSpaces);
	} else {
		numSpaces = Math.ceil(numSpaces);
	}

	niceMin = Math.round(niceMin * factor) / factor;
	niceMax = Math.round(niceMax * factor) / factor;
	ticks.push(isNullOrUndef$2(min) ? niceMin : min);
	for (var j = 1; j < numSpaces; ++j) {
		ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);
	}
	ticks.push(isNullOrUndef$2(max) ? niceMax : max);

	return ticks;
}

var scale_linearbase = core_scale.extend({
	getRightValue: function(value) {
		if (typeof value === 'string') {
			return +value;
		}
		return core_scale.prototype.getRightValue.call(this, value);
	},

	handleTickRangeOptions: function() {
		var me = this;
		var opts = me.options;
		var tickOpts = opts.ticks;

		// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,
		// do nothing since that would make the chart weird. If the user really wants a weird chart
		// axis, they can manually override it
		if (tickOpts.beginAtZero) {
			var minSign = helpers$1.sign(me.min);
			var maxSign = helpers$1.sign(me.max);

			if (minSign < 0 && maxSign < 0) {
				// move the top up to 0
				me.max = 0;
			} else if (minSign > 0 && maxSign > 0) {
				// move the bottom down to 0
				me.min = 0;
			}
		}

		var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;
		var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;

		if (tickOpts.min !== undefined) {
			me.min = tickOpts.min;
		} else if (tickOpts.suggestedMin !== undefined) {
			if (me.min === null) {
				me.min = tickOpts.suggestedMin;
			} else {
				me.min = Math.min(me.min, tickOpts.suggestedMin);
			}
		}

		if (tickOpts.max !== undefined) {
			me.max = tickOpts.max;
		} else if (tickOpts.suggestedMax !== undefined) {
			if (me.max === null) {
				me.max = tickOpts.suggestedMax;
			} else {
				me.max = Math.max(me.max, tickOpts.suggestedMax);
			}
		}

		if (setMin !== setMax) {
			// We set the min or the max but not both.
			// So ensure that our range is good
			// Inverted or 0 length range can happen when
			// ticks.min is set, and no datasets are visible
			if (me.min >= me.max) {
				if (setMin) {
					me.max = me.min + 1;
				} else {
					me.min = me.max - 1;
				}
			}
		}

		if (me.min === me.max) {
			me.max++;

			if (!tickOpts.beginAtZero) {
				me.min--;
			}
		}
	},

	getTickLimit: function() {
		var me = this;
		var tickOpts = me.options.ticks;
		var stepSize = tickOpts.stepSize;
		var maxTicksLimit = tickOpts.maxTicksLimit;
		var maxTicks;

		if (stepSize) {
			maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;
		} else {
			maxTicks = me._computeTickLimit();
			maxTicksLimit = maxTicksLimit || 11;
		}

		if (maxTicksLimit) {
			maxTicks = Math.min(maxTicksLimit, maxTicks);
		}

		return maxTicks;
	},

	_computeTickLimit: function() {
		return Number.POSITIVE_INFINITY;
	},

	handleDirectionalChanges: noop,

	buildTicks: function() {
		var me = this;
		var opts = me.options;
		var tickOpts = opts.ticks;

		// Figure out what the max number of ticks we can support it is based on the size of
		// the axis area. For now, we say that the minimum tick spacing in pixels must be 40
		// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on
		// the graph. Make sure we always have at least 2 ticks
		var maxTicks = me.getTickLimit();
		maxTicks = Math.max(2, maxTicks);

		var numericGeneratorOptions = {
			maxTicks: maxTicks,
			min: tickOpts.min,
			max: tickOpts.max,
			precision: tickOpts.precision,
			stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)
		};
		var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);

		me.handleDirectionalChanges();

		// At this point, we need to update our max and min given the tick values since we have expanded the
		// range of the scale
		me.max = helpers$1.max(ticks);
		me.min = helpers$1.min(ticks);

		if (tickOpts.reverse) {
			ticks.reverse();

			me.start = me.max;
			me.end = me.min;
		} else {
			me.start = me.min;
			me.end = me.max;
		}
	},

	convertTicksToLabels: function() {
		var me = this;
		me.ticksAsNumbers = me.ticks.slice();
		me.zeroLineIndex = me.ticks.indexOf(0);

		core_scale.prototype.convertTicksToLabels.call(me);
	},

	_configure: function() {
		var me = this;
		var ticks = me.getTicks();
		var start = me.min;
		var end = me.max;
		var offset;

		core_scale.prototype._configure.call(me);

		if (me.options.offset && ticks.length) {
			offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;
			start -= offset;
			end += offset;
		}
		me._startValue = start;
		me._endValue = end;
		me._valueRange = end - start;
	}
});

var defaultConfig$1 = {
	position: 'left',
	ticks: {
		callback: core_ticks.formatters.linear
	}
};

var DEFAULT_MIN = 0;
var DEFAULT_MAX = 1;

function getOrCreateStack(stacks, stacked, meta) {
	var key = [
		meta.type,
		// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
		stacked === undefined && meta.stack === undefined ? meta.index : '',
		meta.stack
	].join('.');

	if (stacks[key] === undefined) {
		stacks[key] = {
			pos: [],
			neg: []
		};
	}

	return stacks[key];
}

function stackData(scale, stacks, meta, data) {
	var opts = scale.options;
	var stacked = opts.stacked;
	var stack = getOrCreateStack(stacks, stacked, meta);
	var pos = stack.pos;
	var neg = stack.neg;
	var ilen = data.length;
	var i, value;

	for (i = 0; i < ilen; ++i) {
		value = scale._parseValue(data[i]);
		if (isNaN(value.min) || isNaN(value.max) || meta.data[i].hidden) {
			continue;
		}

		pos[i] = pos[i] || 0;
		neg[i] = neg[i] || 0;

		if (opts.relativePoints) {
			pos[i] = 100;
		} else if (value.min < 0 || value.max < 0) {
			neg[i] += value.min;
		} else {
			pos[i] += value.max;
		}
	}
}

function updateMinMax(scale, meta, data) {
	var ilen = data.length;
	var i, value;

	for (i = 0; i < ilen; ++i) {
		value = scale._parseValue(data[i]);
		if (isNaN(value.min) || isNaN(value.max) || meta.data[i].hidden) {
			continue;
		}

		scale.min = Math.min(scale.min, value.min);
		scale.max = Math.max(scale.max, value.max);
	}
}

var scale_linear = scale_linearbase.extend({
	determineDataLimits: function() {
		var me = this;
		var opts = me.options;
		var chart = me.chart;
		var datasets = chart.data.datasets;
		var metasets = me._getMatchingVisibleMetas();
		var hasStacks = opts.stacked;
		var stacks = {};
		var ilen = metasets.length;
		var i, meta, data, values;

		me.min = Number.POSITIVE_INFINITY;
		me.max = Number.NEGATIVE_INFINITY;

		if (hasStacks === undefined) {
			for (i = 0; !hasStacks && i < ilen; ++i) {
				meta = metasets[i];
				hasStacks = meta.stack !== undefined;
			}
		}

		for (i = 0; i < ilen; ++i) {
			meta = metasets[i];
			data = datasets[meta.index].data;
			if (hasStacks) {
				stackData(me, stacks, meta, data);
			} else {
				updateMinMax(me, meta, data);
			}
		}

		helpers$1.each(stacks, function(stackValues) {
			values = stackValues.pos.concat(stackValues.neg);
			me.min = Math.min(me.min, helpers$1.min(values));
			me.max = Math.max(me.max, helpers$1.max(values));
		});

		me.min = helpers$1.isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;
		me.max = helpers$1.isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;

		// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
		me.handleTickRangeOptions();
	},

	// Returns the maximum number of ticks based on the scale dimension
	_computeTickLimit: function() {
		var me = this;
		var tickFont;

		if (me.isHorizontal()) {
			return Math.ceil(me.width / 40);
		}
		tickFont = helpers$1.options._parseFont(me.options.ticks);
		return Math.ceil(me.height / tickFont.lineHeight);
	},

	// Called after the ticks are built. We need
	handleDirectionalChanges: function() {
		if (!this.isHorizontal()) {
			// We are in a vertical orientation. The top value is the highest. So reverse the array
			this.ticks.reverse();
		}
	},

	getLabelForIndex: function(index, datasetIndex) {
		return this._getScaleLabel(this.chart.data.datasets[datasetIndex].data[index]);
	},

	// Utils
	getPixelForValue: function(value) {
		var me = this;
		return me.getPixelForDecimal((+me.getRightValue(value) - me._startValue) / me._valueRange);
	},

	getValueForPixel: function(pixel) {
		return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;
	},

	getPixelForTick: function(index) {
		var ticks = this.ticksAsNumbers;
		if (index < 0 || index > ticks.length - 1) {
			return null;
		}
		return this.getPixelForValue(ticks[index]);
	}
});

// INTERNAL: static default options, registered in src/index.js
var _defaults$1 = defaultConfig$1;
scale_linear._defaults = _defaults$1;

var valueOrDefault$b = helpers$1.valueOrDefault;
var log10 = helpers$1.math.log10;

/**
 * Generate a set of logarithmic ticks
 * @param generationOptions the options used to generate the ticks
 * @param dataRange the range of the data
 * @returns {number[]} array of tick values
 */
function generateTicks$1(generationOptions, dataRange) {
	var ticks = [];

	var tickVal = valueOrDefault$b(generationOptions.min, Math.pow(10, Math.floor(log10(dataRange.min))));

	var endExp = Math.floor(log10(dataRange.max));
	var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));
	var exp, significand;

	if (tickVal === 0) {
		exp = Math.floor(log10(dataRange.minNotZero));
		significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));

		ticks.push(tickVal);
		tickVal = significand * Math.pow(10, exp);
	} else {
		exp = Math.floor(log10(tickVal));
		significand = Math.floor(tickVal / Math.pow(10, exp));
	}
	var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;

	do {
		ticks.push(tickVal);

		++significand;
		if (significand === 10) {
			significand = 1;
			++exp;
			precision = exp >= 0 ? 1 : precision;
		}

		tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;
	} while (exp < endExp || (exp === endExp && significand < endSignificand));

	var lastTick = valueOrDefault$b(generationOptions.max, tickVal);
	ticks.push(lastTick);

	return ticks;
}

var defaultConfig$2 = {
	position: 'left',

	// label settings
	ticks: {
		callback: core_ticks.formatters.logarithmic
	}
};

// TODO(v3): change this to positiveOrDefault
function nonNegativeOrDefault(value, defaultValue) {
	return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;
}

var scale_logarithmic = core_scale.extend({
	determineDataLimits: function() {
		var me = this;
		var opts = me.options;
		var chart = me.chart;
		var datasets = chart.data.datasets;
		var isHorizontal = me.isHorizontal();
		function IDMatches(meta) {
			return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;
		}
		var datasetIndex, meta, value, data, i, ilen;

		// Calculate Range
		me.min = Number.POSITIVE_INFINITY;
		me.max = Number.NEGATIVE_INFINITY;
		me.minNotZero = Number.POSITIVE_INFINITY;

		var hasStacks = opts.stacked;
		if (hasStacks === undefined) {
			for (datasetIndex = 0; datasetIndex < datasets.length; datasetIndex++) {
				meta = chart.getDatasetMeta(datasetIndex);
				if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&
					meta.stack !== undefined) {
					hasStacks = true;
					break;
				}
			}
		}

		if (opts.stacked || hasStacks) {
			var valuesPerStack = {};

			for (datasetIndex = 0; datasetIndex < datasets.length; datasetIndex++) {
				meta = chart.getDatasetMeta(datasetIndex);
				var key = [
					meta.type,
					// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined
					((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),
					meta.stack
				].join('.');

				if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
					if (valuesPerStack[key] === undefined) {
						valuesPerStack[key] = [];
					}

					data = datasets[datasetIndex].data;
					for (i = 0, ilen = data.length; i < ilen; i++) {
						var values = valuesPerStack[key];
						value = me._parseValue(data[i]);
						// invalid, hidden and negative values are ignored
						if (isNaN(value.min) || isNaN(value.max) || meta.data[i].hidden || value.min < 0 || value.max < 0) {
							continue;
						}
						values[i] = values[i] || 0;
						values[i] += value.max;
					}
				}
			}

			helpers$1.each(valuesPerStack, function(valuesForType) {
				if (valuesForType.length > 0) {
					var minVal = helpers$1.min(valuesForType);
					var maxVal = helpers$1.max(valuesForType);
					me.min = Math.min(me.min, minVal);
					me.max = Math.max(me.max, maxVal);
				}
			});

		} else {
			for (datasetIndex = 0; datasetIndex < datasets.length; datasetIndex++) {
				meta = chart.getDatasetMeta(datasetIndex);
				if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {
					data = datasets[datasetIndex].data;
					for (i = 0, ilen = data.length; i < ilen; i++) {
						value = me._parseValue(data[i]);
						// invalid, hidden and negative values are ignored
						if (isNaN(value.min) || isNaN(value.max) || meta.data[i].hidden || value.min < 0 || value.max < 0) {
							continue;
						}

						me.min = Math.min(value.min, me.min);
						me.max = Math.max(value.max, me.max);

						if (value.min !== 0) {
							me.minNotZero = Math.min(value.min, me.minNotZero);
						}
					}
				}
			}
		}

		me.min = helpers$1.isFinite(me.min) ? me.min : null;
		me.max = helpers$1.isFinite(me.max) ? me.max : null;
		me.minNotZero = helpers$1.isFinite(me.minNotZero) ? me.minNotZero : null;

		// Common base implementation to handle ticks.min, ticks.max
		this.handleTickRangeOptions();
	},

	handleTickRangeOptions: function() {
		var me = this;
		var tickOpts = me.options.ticks;
		var DEFAULT_MIN = 1;
		var DEFAULT_MAX = 10;

		me.min = nonNegativeOrDefault(tickOpts.min, me.min);
		me.max = nonNegativeOrDefault(tickOpts.max, me.max);

		if (me.min === me.max) {
			if (me.min !== 0 && me.min !== null) {
				me.min = Math.pow(10, Math.floor(log10(me.min)) - 1);
				me.max = Math.pow(10, Math.floor(log10(me.max)) + 1);
			} else {
				me.min = DEFAULT_MIN;
				me.max = DEFAULT_MAX;
			}
		}
		if (me.min === null) {
			me.min = Math.pow(10, Math.floor(log10(me.max)) - 1);
		}
		if (me.max === null) {
			me.max = me.min !== 0
				? Math.pow(10, Math.floor(log10(me.min)) + 1)
				: DEFAULT_MAX;
		}
		if (me.minNotZero === null) {
			if (me.min > 0) {
				me.minNotZero = me.min;
			} else if (me.max < 1) {
				me.minNotZero = Math.pow(10, Math.floor(log10(me.max)));
			} else {
				me.minNotZero = DEFAULT_MIN;
			}
		}
	},

	buildTicks: function() {
		var me = this;
		var tickOpts = me.options.ticks;
		var reverse = !me.isHorizontal();

		var generationOptions = {
			min: nonNegativeOrDefault(tickOpts.min),
			max: nonNegativeOrDefault(tickOpts.max)
		};
		var ticks = me.ticks = generateTicks$1(generationOptions, me);

		// At this point, we need to update our max and min given the tick values since we have expanded the
		// range of the scale
		me.max = helpers$1.max(ticks);
		me.min = helpers$1.min(ticks);

		if (tickOpts.reverse) {
			reverse = !reverse;
			me.start = me.max;
			me.end = me.min;
		} else {
			me.start = me.min;
			me.end = me.max;
		}
		if (reverse) {
			ticks.reverse();
		}
	},

	convertTicksToLabels: function() {
		this.tickValues = this.ticks.slice();

		core_scale.prototype.convertTicksToLabels.call(this);
	},

	// Get the correct tooltip label
	getLabelForIndex: function(index, datasetIndex) {
		return this._getScaleLabel(this.chart.data.datasets[datasetIndex].data[index]);
	},

	getPixelForTick: function(index) {
		var ticks = this.tickValues;
		if (index < 0 || index > ticks.length - 1) {
			return null;
		}
		return this.getPixelForValue(ticks[index]);
	},

	/**
	 * Returns the value of the first tick.
	 * @param {number} value - The minimum not zero value.
	 * @return {number} The first tick value.
	 * @private
	 */
	_getFirstTickValue: function(value) {
		var exp = Math.floor(log10(value));
		var significand = Math.floor(value / Math.pow(10, exp));

		return significand * Math.pow(10, exp);
	},

	_configure: function() {
		var me = this;
		var start = me.min;
		var offset = 0;

		core_scale.prototype._configure.call(me);

		if (start === 0) {
			start = me._getFirstTickValue(me.minNotZero);
			offset = valueOrDefault$b(me.options.ticks.fontSize, core_defaults.global.defaultFontSize) / me._length;
		}

		me._startValue = log10(start);
		me._valueOffset = offset;
		me._valueRange = (log10(me.max) - log10(start)) / (1 - offset);
	},

	getPixelForValue: function(value) {
		var me = this;
		var decimal = 0;

		value = +me.getRightValue(value);

		if (value > me.min && value > 0) {
			decimal = (log10(value) - me._startValue) / me._valueRange + me._valueOffset;
		}
		return me.getPixelForDecimal(decimal);
	},

	getValueForPixel: function(pixel) {
		var me = this;
		var decimal = me.getDecimalForPixel(pixel);
		return decimal === 0 && me.min === 0
			? 0
			: Math.pow(10, me._startValue + (decimal - me._valueOffset) * me._valueRange);
	}
});

// INTERNAL: static default options, registered in src/index.js
var _defaults$2 = defaultConfig$2;
scale_logarithmic._defaults = _defaults$2;

var valueOrDefault$c = helpers$1.valueOrDefault;
var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;
var resolve$4 = helpers$1.options.resolve;

var defaultConfig$3 = {
	display: true,

	// Boolean - Whether to animate scaling the chart from the centre
	animate: true,
	position: 'chartArea',

	angleLines: {
		display: true,
		color: 'rgba(0,0,0,0.1)',
		lineWidth: 1,
		borderDash: [],
		borderDashOffset: 0.0
	},

	gridLines: {
		circular: false
	},

	// label settings
	ticks: {
		// Boolean - Show a backdrop to the scale label
		showLabelBackdrop: true,

		// String - The colour of the label backdrop
		backdropColor: 'rgba(255,255,255,0.75)',

		// Number - The backdrop padding above & below the label in pixels
		backdropPaddingY: 2,

		// Number - The backdrop padding to the side of the label in pixels
		backdropPaddingX: 2,

		callback: core_ticks.formatters.linear
	},

	pointLabels: {
		// Boolean - if true, show point labels
		display: true,

		// Number - Point label font size in pixels
		fontSize: 10,

		// Function - Used to convert point labels
		callback: function(label) {
			return label;
		}
	}
};

function getTickBackdropHeight(opts) {
	var tickOpts = opts.ticks;

	if (tickOpts.display && opts.display) {
		return valueOrDefault$c(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;
	}
	return 0;
}

function measureLabelSize(ctx, lineHeight, label) {
	if (helpers$1.isArray(label)) {
		return {
			w: helpers$1.longestText(ctx, ctx.font, label),
			h: label.length * lineHeight
		};
	}

	return {
		w: ctx.measureText(label).width,
		h: lineHeight
	};
}

function determineLimits(angle, pos, size, min, max) {
	if (angle === min || angle === max) {
		return {
			start: pos - (size / 2),
			end: pos + (size / 2)
		};
	} else if (angle < min || angle > max) {
		return {
			start: pos - size,
			end: pos
		};
	}

	return {
		start: pos,
		end: pos + size
	};
}

/**
 * Helper function to fit a radial linear scale with point labels
 */
function fitWithPointLabels(scale) {

	// Right, this is really confusing and there is a lot of maths going on here
	// The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9
	//
	// Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif
	//
	// Solution:
	//
	// We assume the radius of the polygon is half the size of the canvas at first
	// at each index we check if the text overlaps.
	//
	// Where it does, we store that angle and that index.
	//
	// After finding the largest index and angle we calculate how much we need to remove
	// from the shape radius to move the point inwards by that x.
	//
	// We average the left and right distances to get the maximum shape radius that can fit in the box
	// along with labels.
	//
	// Once we have that, we can find the centre point for the chart, by taking the x text protrusion
	// on each side, removing that from the size, halving it and adding the left x protrusion width.
	//
	// This will mean we have a shape fitted to the canvas, as large as it can be with the labels
	// and position it in the most space efficient manner
	//
	// https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif

	var plFont = helpers$1.options._parseFont(scale.options.pointLabels);

	// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.
	// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points
	var furthestLimits = {
		l: 0,
		r: scale.width,
		t: 0,
		b: scale.height - scale.paddingTop
	};
	var furthestAngles = {};
	var i, textSize, pointPosition;

	scale.ctx.font = plFont.string;
	scale._pointLabelSizes = [];

	var valueCount = scale.chart.data.labels.length;
	for (i = 0; i < valueCount; i++) {
		pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);
		textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i]);
		scale._pointLabelSizes[i] = textSize;

		// Add quarter circle to make degree 0 mean top of circle
		var angleRadians = scale.getIndexAngle(i);
		var angle = helpers$1.toDegrees(angleRadians) % 360;
		var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);
		var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);

		if (hLimits.start < furthestLimits.l) {
			furthestLimits.l = hLimits.start;
			furthestAngles.l = angleRadians;
		}

		if (hLimits.end > furthestLimits.r) {
			furthestLimits.r = hLimits.end;
			furthestAngles.r = angleRadians;
		}

		if (vLimits.start < furthestLimits.t) {
			furthestLimits.t = vLimits.start;
			furthestAngles.t = angleRadians;
		}

		if (vLimits.end > furthestLimits.b) {
			furthestLimits.b = vLimits.end;
			furthestAngles.b = angleRadians;
		}
	}

	scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);
}

function getTextAlignForAngle(angle) {
	if (angle === 0 || angle === 180) {
		return 'center';
	} else if (angle < 180) {
		return 'left';
	}

	return 'right';
}

function fillText(ctx, text, position, lineHeight) {
	var y = position.y + lineHeight / 2;
	var i, ilen;

	if (helpers$1.isArray(text)) {
		for (i = 0, ilen = text.length; i < ilen; ++i) {
			ctx.fillText(text[i], position.x, y);
			y += lineHeight;
		}
	} else {
		ctx.fillText(text, position.x, y);
	}
}

function adjustPointPositionForLabelHeight(angle, textSize, position) {
	if (angle === 90 || angle === 270) {
		position.y -= (textSize.h / 2);
	} else if (angle > 270 || angle < 90) {
		position.y -= textSize.h;
	}
}

function drawPointLabels(scale) {
	var ctx = scale.ctx;
	var opts = scale.options;
	var pointLabelOpts = opts.pointLabels;
	var tickBackdropHeight = getTickBackdropHeight(opts);
	var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);
	var plFont = helpers$1.options._parseFont(pointLabelOpts);

	ctx.save();

	ctx.font = plFont.string;
	ctx.textBaseline = 'middle';

	for (var i = scale.chart.data.labels.length - 1; i >= 0; i--) {
		// Extra pixels out for some label spacing
		var extra = (i === 0 ? tickBackdropHeight / 2 : 0);
		var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5);

		// Keep this in loop since we may support array properties here
		var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);
		ctx.fillStyle = pointLabelFontColor;

		var angleRadians = scale.getIndexAngle(i);
		var angle = helpers$1.toDegrees(angleRadians);
		ctx.textAlign = getTextAlignForAngle(angle);
		adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);
		fillText(ctx, scale.pointLabels[i], pointLabelPosition, plFont.lineHeight);
	}
	ctx.restore();
}

function drawRadiusLine(scale, gridLineOpts, radius, index) {
	var ctx = scale.ctx;
	var circular = gridLineOpts.circular;
	var valueCount = scale.chart.data.labels.length;
	var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);
	var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);
	var pointPosition;

	if ((!circular && !valueCount) || !lineColor || !lineWidth) {
		return;
	}

	ctx.save();
	ctx.strokeStyle = lineColor;
	ctx.lineWidth = lineWidth;
	if (ctx.setLineDash) {
		ctx.setLineDash(gridLineOpts.borderDash || []);
		ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;
	}

	ctx.beginPath();
	if (circular) {
		// Draw circular arcs between the points
		ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);
	} else {
		// Draw straight lines connecting each index
		pointPosition = scale.getPointPosition(0, radius);
		ctx.moveTo(pointPosition.x, pointPosition.y);

		for (var i = 1; i < valueCount; i++) {
			pointPosition = scale.getPointPosition(i, radius);
			ctx.lineTo(pointPosition.x, pointPosition.y);
		}
	}
	ctx.closePath();
	ctx.stroke();
	ctx.restore();
}

function numberOrZero(param) {
	return helpers$1.isNumber(param) ? param : 0;
}

var scale_radialLinear = scale_linearbase.extend({
	setDimensions: function() {
		var me = this;

		// Set the unconstrained dimension before label rotation
		me.width = me.maxWidth;
		me.height = me.maxHeight;
		me.paddingTop = getTickBackdropHeight(me.options) / 2;
		me.xCenter = Math.floor(me.width / 2);
		me.yCenter = Math.floor((me.height - me.paddingTop) / 2);
		me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;
	},

	determineDataLimits: function() {
		var me = this;
		var chart = me.chart;
		var min = Number.POSITIVE_INFINITY;
		var max = Number.NEGATIVE_INFINITY;

		helpers$1.each(chart.data.datasets, function(dataset, datasetIndex) {
			if (chart.isDatasetVisible(datasetIndex)) {
				var meta = chart.getDatasetMeta(datasetIndex);

				helpers$1.each(dataset.data, function(rawValue, index) {
					var value = +me.getRightValue(rawValue);
					if (isNaN(value) || meta.data[index].hidden) {
						return;
					}

					min = Math.min(value, min);
					max = Math.max(value, max);
				});
			}
		});

		me.min = (min === Number.POSITIVE_INFINITY ? 0 : min);
		me.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);

		// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero
		me.handleTickRangeOptions();
	},

	// Returns the maximum number of ticks based on the scale dimension
	_computeTickLimit: function() {
		return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));
	},

	convertTicksToLabels: function() {
		var me = this;

		scale_linearbase.prototype.convertTicksToLabels.call(me);

		// Point labels
		me.pointLabels = me.chart.data.labels.map(function() {
			var label = helpers$1.callback(me.options.pointLabels.callback, arguments, me);
			return label || label === 0 ? label : '';
		});
	},

	getLabelForIndex: function(index, datasetIndex) {
		return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);
	},

	fit: function() {
		var me = this;
		var opts = me.options;

		if (opts.display && opts.pointLabels.display) {
			fitWithPointLabels(me);
		} else {
			me.setCenterPoint(0, 0, 0, 0);
		}
	},

	/**
	 * Set radius reductions and determine new radius and center point
	 * @private
	 */
	setReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {
		var me = this;
		var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);
		var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);
		var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);
		var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);

		radiusReductionLeft = numberOrZero(radiusReductionLeft);
		radiusReductionRight = numberOrZero(radiusReductionRight);
		radiusReductionTop = numberOrZero(radiusReductionTop);
		radiusReductionBottom = numberOrZero(radiusReductionBottom);

		me.drawingArea = Math.min(
			Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),
			Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));
		me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);
	},

	setCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {
		var me = this;
		var maxRight = me.width - rightMovement - me.drawingArea;
		var maxLeft = leftMovement + me.drawingArea;
		var maxTop = topMovement + me.drawingArea;
		var maxBottom = (me.height - me.paddingTop) - bottomMovement - me.drawingArea;

		me.xCenter = Math.floor(((maxLeft + maxRight) / 2) + me.left);
		me.yCenter = Math.floor(((maxTop + maxBottom) / 2) + me.top + me.paddingTop);
	},

	getIndexAngle: function(index) {
		var chart = this.chart;
		var angleMultiplier = 360 / chart.data.labels.length;
		var options = chart.options || {};
		var startAngle = options.startAngle || 0;

		// Start from the top instead of right, so remove a quarter of the circle
		var angle = (index * angleMultiplier + startAngle) % 360;

		return (angle < 0 ? angle + 360 : angle) * Math.PI * 2 / 360;
	},

	getDistanceFromCenterForValue: function(value) {
		var me = this;

		if (helpers$1.isNullOrUndef(value)) {
			return NaN;
		}

		// Take into account half font size + the yPadding of the top value
		var scalingFactor = me.drawingArea / (me.max - me.min);
		if (me.options.ticks.reverse) {
			return (me.max - value) * scalingFactor;
		}
		return (value - me.min) * scalingFactor;
	},

	getPointPosition: function(index, distanceFromCenter) {
		var me = this;
		var thisAngle = me.getIndexAngle(index) - (Math.PI / 2);
		return {
			x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,
			y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter
		};
	},

	getPointPositionForValue: function(index, value) {
		return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));
	},

	getBasePosition: function(index) {
		var me = this;
		var min = me.min;
		var max = me.max;

		return me.getPointPositionForValue(index || 0,
			me.beginAtZero ? 0 :
			min < 0 && max < 0 ? max :
			min > 0 && max > 0 ? min :
			0);
	},

	/**
	 * @private
	 */
	_drawGrid: function() {
		var me = this;
		var ctx = me.ctx;
		var opts = me.options;
		var gridLineOpts = opts.gridLines;
		var angleLineOpts = opts.angleLines;
		var lineWidth = valueOrDefault$c(angleLineOpts.lineWidth, gridLineOpts.lineWidth);
		var lineColor = valueOrDefault$c(angleLineOpts.color, gridLineOpts.color);
		var i, offset, position;

		if (opts.pointLabels.display) {
			drawPointLabels(me);
		}

		if (gridLineOpts.display) {
			helpers$1.each(me.ticks, function(label, index) {
				if (index !== 0) {
					offset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);
					drawRadiusLine(me, gridLineOpts, offset, index);
				}
			});
		}

		if (angleLineOpts.display && lineWidth && lineColor) {
			ctx.save();
			ctx.lineWidth = lineWidth;
			ctx.strokeStyle = lineColor;
			if (ctx.setLineDash) {
				ctx.setLineDash(resolve$4([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));
				ctx.lineDashOffset = resolve$4([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);
			}

			for (i = me.chart.data.labels.length - 1; i >= 0; i--) {
				offset = me.getDistanceFromCenterForValue(opts.ticks.reverse ? me.min : me.max);
				position = me.getPointPosition(i, offset);
				ctx.beginPath();
				ctx.moveTo(me.xCenter, me.yCenter);
				ctx.lineTo(position.x, position.y);
				ctx.stroke();
			}

			ctx.restore();
		}
	},

	/**
	 * @private
	 */
	_drawLabels: function() {
		var me = this;
		var ctx = me.ctx;
		var opts = me.options;
		var tickOpts = opts.ticks;

		if (!tickOpts.display) {
			return;
		}

		var startAngle = me.getIndexAngle(0);
		var tickFont = helpers$1.options._parseFont(tickOpts);
		var tickFontColor = valueOrDefault$c(tickOpts.fontColor, core_defaults.global.defaultFontColor);
		var offset, width;

		ctx.save();
		ctx.font = tickFont.string;
		ctx.translate(me.xCenter, me.yCenter);
		ctx.rotate(startAngle);
		ctx.textAlign = 'center';
		ctx.textBaseline = 'middle';

		helpers$1.each(me.ticks, function(label, index) {
			if (index === 0 && !tickOpts.reverse) {
				return;
			}

			offset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);

			if (tickOpts.showLabelBackdrop) {
				width = ctx.measureText(label).width;
				ctx.fillStyle = tickOpts.backdropColor;

				ctx.fillRect(
					-width / 2 - tickOpts.backdropPaddingX,
					-offset - tickFont.size / 2 - tickOpts.backdropPaddingY,
					width + tickOpts.backdropPaddingX * 2,
					tickFont.size + tickOpts.backdropPaddingY * 2
				);
			}

			ctx.fillStyle = tickFontColor;
			ctx.fillText(label, 0, -offset);
		});

		ctx.restore();
	},

	/**
	 * @private
	 */
	_drawTitle: helpers$1.noop
});

// INTERNAL: static default options, registered in src/index.js
var _defaults$3 = defaultConfig$3;
scale_radialLinear._defaults = _defaults$3;

var deprecated$1 = helpers$1._deprecated;
var resolve$5 = helpers$1.options.resolve;
var valueOrDefault$d = helpers$1.valueOrDefault;

// Integer constants are from the ES6 spec.
var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;
var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;

var INTERVALS = {
	millisecond: {
		common: true,
		size: 1,
		steps: 1000
	},
	second: {
		common: true,
		size: 1000,
		steps: 60
	},
	minute: {
		common: true,
		size: 60000,
		steps: 60
	},
	hour: {
		common: true,
		size: 3600000,
		steps: 24
	},
	day: {
		common: true,
		size: 86400000,
		steps: 30
	},
	week: {
		common: false,
		size: 604800000,
		steps: 4
	},
	month: {
		common: true,
		size: 2.628e9,
		steps: 12
	},
	quarter: {
		common: false,
		size: 7.884e9,
		steps: 4
	},
	year: {
		common: true,
		size: 3.154e10
	}
};

var UNITS = Object.keys(INTERVALS);

function sorter(a, b) {
	return a - b;
}

function arrayUnique(items) {
	var hash = {};
	var out = [];
	var i, ilen, item;

	for (i = 0, ilen = items.length; i < ilen; ++i) {
		item = items[i];
		if (!hash[item]) {
			hash[item] = true;
			out.push(item);
		}
	}

	return out;
}

function getMin(options) {
	return helpers$1.valueOrDefault(options.time.min, options.ticks.min);
}

function getMax(options) {
	return helpers$1.valueOrDefault(options.time.max, options.ticks.max);
}

/**
 * Returns an array of {time, pos} objects used to interpolate a specific `time` or position
 * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is
 * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other
 * extremity (left + width or top + height). Note that it would be more optimized to directly
 * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need
 * to create the lookup table. The table ALWAYS contains at least two items: min and max.
 *
 * @param {number[]} timestamps - timestamps sorted from lowest to highest.
 * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min
 * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.
 * If 'series', timestamps will be positioned at the same distance from each other. In this
 * case, only timestamps that break the time linearity are registered, meaning that in the
 * best case, all timestamps are linear, the table contains only min and max.
 */
function buildLookupTable(timestamps, min, max, distribution) {
	if (distribution === 'linear' || !timestamps.length) {
		return [
			{time: min, pos: 0},
			{time: max, pos: 1}
		];
	}

	var table = [];
	var items = [min];
	var i, ilen, prev, curr, next;

	for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
		curr = timestamps[i];
		if (curr > min && curr < max) {
			items.push(curr);
		}
	}

	items.push(max);

	for (i = 0, ilen = items.length; i < ilen; ++i) {
		next = items[i + 1];
		prev = items[i - 1];
		curr = items[i];

		// only add points that breaks the scale linearity
		if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {
			table.push({time: curr, pos: i / (ilen - 1)});
		}
	}

	return table;
}

// @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/
function lookup(table, key, value) {
	var lo = 0;
	var hi = table.length - 1;
	var mid, i0, i1;

	while (lo >= 0 && lo <= hi) {
		mid = (lo + hi) >> 1;
		i0 = table[mid - 1] || null;
		i1 = table[mid];

		if (!i0) {
			// given value is outside table (before first item)
			return {lo: null, hi: i1};
		} else if (i1[key] < value) {
			lo = mid + 1;
		} else if (i0[key] > value) {
			hi = mid - 1;
		} else {
			return {lo: i0, hi: i1};
		}
	}

	// given value is outside table (after last item)
	return {lo: i1, hi: null};
}

/**
 * Linearly interpolates the given source `value` using the table items `skey` values and
 * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')
 * returns the position for a timestamp equal to 42. If value is out of bounds, values at
 * index [0, 1] or [n - 1, n] are used for the interpolation.
 */
function interpolate$1(table, skey, sval, tkey) {
	var range = lookup(table, skey, sval);

	// Note: the lookup table ALWAYS contains at least 2 items (min and max)
	var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;
	var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;

	var span = next[skey] - prev[skey];
	var ratio = span ? (sval - prev[skey]) / span : 0;
	var offset = (next[tkey] - prev[tkey]) * ratio;

	return prev[tkey] + offset;
}

function toTimestamp(scale, input) {
	var adapter = scale._adapter;
	var options = scale.options.time;
	var parser = options.parser;
	var format = parser || options.format;
	var value = input;

	if (typeof parser === 'function') {
		value = parser(value);
	}

	// Only parse if its not a timestamp already
	if (!helpers$1.isFinite(value)) {
		value = typeof format === 'string'
			? adapter.parse(value, format)
			: adapter.parse(value);
	}

	if (value !== null) {
		return +value;
	}

	// Labels are in an incompatible format and no `parser` has been provided.
	// The user might still use the deprecated `format` option for parsing.
	if (!parser && typeof format === 'function') {
		value = format(input);

		// `format` could return something else than a timestamp, if so, parse it
		if (!helpers$1.isFinite(value)) {
			value = adapter.parse(value);
		}
	}

	return value;
}

function parse(scale, input) {
	if (helpers$1.isNullOrUndef(input)) {
		return null;
	}

	var options = scale.options.time;
	var value = toTimestamp(scale, scale.getRightValue(input));
	if (value === null) {
		return value;
	}

	if (options.round) {
		value = +scale._adapter.startOf(value, options.round);
	}

	return value;
}

/**
 * Figures out what unit results in an appropriate number of auto-generated ticks
 */
function determineUnitForAutoTicks(minUnit, min, max, capacity) {
	var ilen = UNITS.length;
	var i, interval, factor;

	for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {
		interval = INTERVALS[UNITS[i]];
		factor = interval.steps ? interval.steps : MAX_INTEGER;

		if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {
			return UNITS[i];
		}
	}

	return UNITS[ilen - 1];
}

/**
 * Figures out what unit to format a set of ticks with
 */
function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {
	var i, unit;

	for (i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {
		unit = UNITS[i];
		if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {
			return unit;
		}
	}

	return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];
}

function determineMajorUnit(unit) {
	for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {
		if (INTERVALS[UNITS[i]].common) {
			return UNITS[i];
		}
	}
}

/**
 * Generates a maximum of `capacity` timestamps between min and max, rounded to the
 * `minor` unit using the given scale time `options`.
 * Important: this method can return ticks outside the min and max range, it's the
 * responsibility of the calling code to clamp values if needed.
 */
function generate(scale, min, max, capacity) {
	var adapter = scale._adapter;
	var options = scale.options;
	var timeOpts = options.time;
	var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);
	var stepSize = resolve$5([timeOpts.stepSize, timeOpts.unitStepSize, 1]);
	var weekday = minor === 'week' ? timeOpts.isoWeekday : false;
	var first = min;
	var ticks = [];
	var time;

	// For 'week' unit, handle the first day of week option
	if (weekday) {
		first = +adapter.startOf(first, 'isoWeek', weekday);
	}

	// Align first ticks on unit
	first = +adapter.startOf(first, weekday ? 'day' : minor);

	// Prevent browser from freezing in case user options request millions of milliseconds
	if (adapter.diff(max, min, minor) > 100000 * stepSize) {
		throw min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor;
	}

	for (time = first; time < max; time = +adapter.add(time, stepSize, minor)) {
		ticks.push(time);
	}

	if (time === max || options.bounds === 'ticks') {
		ticks.push(time);
	}

	return ticks;
}

/**
 * Returns the start and end offsets from edges in the form of {start, end}
 * where each value is a relative width to the scale and ranges between 0 and 1.
 * They add extra margins on the both sides by scaling down the original scale.
 * Offsets are added when the `offset` option is true.
 */
function computeOffsets(table, ticks, min, max, options) {
	var start = 0;
	var end = 0;
	var first, last;

	if (options.offset && ticks.length) {
		first = interpolate$1(table, 'time', ticks[0], 'pos');
		if (ticks.length === 1) {
			start = 1 - first;
		} else {
			start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;
		}
		last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');
		if (ticks.length === 1) {
			end = last;
		} else {
			end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;
		}
	}

	return {start: start, end: end, factor: 1 / (start + 1 + end)};
}

function setMajorTicks(scale, ticks, map, majorUnit) {
	var adapter = scale._adapter;
	var first = +adapter.startOf(ticks[0].value, majorUnit);
	var last = ticks[ticks.length - 1].value;
	var major, index;

	for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {
		index = map[major];
		if (index >= 0) {
			ticks[index].major = true;
		}
	}
	return ticks;
}

function ticksFromTimestamps(scale, values, majorUnit) {
	var ticks = [];
	var map = {};
	var ilen = values.length;
	var i, value;

	for (i = 0; i < ilen; ++i) {
		value = values[i];
		map[value] = i;

		ticks.push({
			value: value,
			major: false
		});
	}

	// We set the major ticks separately from the above loop because calling startOf for every tick
	// is expensive when there is a large number of ticks
	return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);
}

var defaultConfig$4 = {
	position: 'bottom',

	/**
	 * Data distribution along the scale:
	 * - 'linear': data are spread according to their time (distances can vary),
	 * - 'series': data are spread at the same distance from each other.
	 * @see https://github.com/chartjs/Chart.js/pull/4507
	 * @since 2.7.0
	 */
	distribution: 'linear',

	/**
	 * Scale boundary strategy (bypassed by min/max time options)
	 * - `data`: make sure data are fully visible, ticks outside are removed
	 * - `ticks`: make sure ticks are fully visible, data outside are truncated
	 * @see https://github.com/chartjs/Chart.js/pull/4556
	 * @since 2.7.0
	 */
	bounds: 'data',

	adapters: {},
	time: {
		parser: false, // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment
		unit: false, // false == automatic or override with week, month, year, etc.
		round: false, // none, or override with week, month, year, etc.
		displayFormat: false, // DEPRECATED
		isoWeekday: false, // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/
		minUnit: 'millisecond',
		displayFormats: {}
	},
	ticks: {
		autoSkip: false,

		/**
		 * Ticks generation input values:
		 * - 'auto': generates "optimal" ticks based on scale size and time options.
		 * - 'data': generates ticks from data (including labels from data {t|x|y} objects).
		 * - 'labels': generates ticks from user given `data.labels` values ONLY.
		 * @see https://github.com/chartjs/Chart.js/pull/4507
		 * @since 2.7.0
		 */
		source: 'auto',

		major: {
			enabled: false
		}
	}
};

var scale_time = core_scale.extend({
	initialize: function() {
		this.mergeTicksOptions();
		core_scale.prototype.initialize.call(this);
	},

	update: function() {
		var me = this;
		var options = me.options;
		var time = options.time || (options.time = {});
		var adapter = me._adapter = new core_adapters._date(options.adapters.date);

		// DEPRECATIONS: output a message only one time per update
		deprecated$1('time scale', time.format, 'time.format', 'time.parser');
		deprecated$1('time scale', time.min, 'time.min', 'ticks.min');
		deprecated$1('time scale', time.max, 'time.max', 'ticks.max');

		// Backward compatibility: before introducing adapter, `displayFormats` was
		// supposed to contain *all* unit/string pairs but this can't be resolved
		// when loading the scale (adapters are loaded afterward), so let's populate
		// missing formats on update
		helpers$1.mergeIf(time.displayFormats, adapter.formats());

		return core_scale.prototype.update.apply(me, arguments);
	},

	/**
	 * Allows data to be referenced via 't' attribute
	 */
	getRightValue: function(rawValue) {
		if (rawValue && rawValue.t !== undefined) {
			rawValue = rawValue.t;
		}
		return core_scale.prototype.getRightValue.call(this, rawValue);
	},

	determineDataLimits: function() {
		var me = this;
		var chart = me.chart;
		var adapter = me._adapter;
		var options = me.options;
		var unit = options.time.unit || 'day';
		var min = MAX_INTEGER;
		var max = MIN_INTEGER;
		var timestamps = [];
		var datasets = [];
		var labels = [];
		var i, j, ilen, jlen, data, timestamp, labelsAdded;
		var dataLabels = me._getLabels();

		for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {
			labels.push(parse(me, dataLabels[i]));
		}

		for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {
			if (chart.isDatasetVisible(i)) {
				data = chart.data.datasets[i].data;

				// Let's consider that all data have the same format.
				if (helpers$1.isObject(data[0])) {
					datasets[i] = [];

					for (j = 0, jlen = data.length; j < jlen; ++j) {
						timestamp = parse(me, data[j]);
						timestamps.push(timestamp);
						datasets[i][j] = timestamp;
					}
				} else {
					datasets[i] = labels.slice(0);
					if (!labelsAdded) {
						timestamps = timestamps.concat(labels);
						labelsAdded = true;
					}
				}
			} else {
				datasets[i] = [];
			}
		}

		if (labels.length) {
			min = Math.min(min, labels[0]);
			max = Math.max(max, labels[labels.length - 1]);
		}

		if (timestamps.length) {
			timestamps = ilen > 1 ? arrayUnique(timestamps).sort(sorter) : timestamps.sort(sorter);
			min = Math.min(min, timestamps[0]);
			max = Math.max(max, timestamps[timestamps.length - 1]);
		}

		min = parse(me, getMin(options)) || min;
		max = parse(me, getMax(options)) || max;

		// In case there is no valid min/max, set limits based on unit time option
		min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;
		max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max;

		// Make sure that max is strictly higher than min (required by the lookup table)
		me.min = Math.min(min, max);
		me.max = Math.max(min + 1, max);

		// PRIVATE
		me._table = [];
		me._timestamps = {
			data: timestamps,
			datasets: datasets,
			labels: labels
		};
	},

	buildTicks: function() {
		var me = this;
		var min = me.min;
		var max = me.max;
		var options = me.options;
		var tickOpts = options.ticks;
		var timeOpts = options.time;
		var timestamps = me._timestamps;
		var ticks = [];
		var capacity = me.getLabelCapacity(min);
		var source = tickOpts.source;
		var distribution = options.distribution;
		var i, ilen, timestamp;

		if (source === 'data' || (source === 'auto' && distribution === 'series')) {
			timestamps = timestamps.data;
		} else if (source === 'labels') {
			timestamps = timestamps.labels;
		} else {
			timestamps = generate(me, min, max, capacity);
		}

		if (options.bounds === 'ticks' && timestamps.length) {
			min = timestamps[0];
			max = timestamps[timestamps.length - 1];
		}

		// Enforce limits with user min/max options
		min = parse(me, getMin(options)) || min;
		max = parse(me, getMax(options)) || max;

		// Remove ticks outside the min/max range
		for (i = 0, ilen = timestamps.length; i < ilen; ++i) {
			timestamp = timestamps[i];
			if (timestamp >= min && timestamp <= max) {
				ticks.push(timestamp);
			}
		}

		me.min = min;
		me.max = max;

		// PRIVATE
		// determineUnitForFormatting relies on the number of ticks so we don't use it when
		// autoSkip is enabled because we don't yet know what the final number of ticks will be
		me._unit = timeOpts.unit || (tickOpts.autoSkip
			? determineUnitForAutoTicks(timeOpts.minUnit, me.min, me.max, capacity)
			: determineUnitForFormatting(me, ticks.length, timeOpts.minUnit, me.min, me.max));
		me._majorUnit = !tickOpts.major.enabled || me._unit === 'year' ? undefined
			: determineMajorUnit(me._unit);
		me._table = buildLookupTable(me._timestamps.data, min, max, distribution);
		me._offsets = computeOffsets(me._table, ticks, min, max, options);

		if (tickOpts.reverse) {
			ticks.reverse();
		}

		return ticksFromTimestamps(me, ticks, me._majorUnit);
	},

	getLabelForIndex: function(index, datasetIndex) {
		var me = this;
		var adapter = me._adapter;
		var data = me.chart.data;
		var timeOpts = me.options.time;
		var label = data.labels && index < data.labels.length ? data.labels[index] : '';
		var value = data.datasets[datasetIndex].data[index];

		if (helpers$1.isObject(value)) {
			label = me.getRightValue(value);
		}
		if (timeOpts.tooltipFormat) {
			return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);
		}
		if (typeof label === 'string') {
			return label;
		}
		return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);
	},

	/**
	 * Function to format an individual tick mark
	 * @private
	 */
	tickFormatFunction: function(time, index, ticks, format) {
		var me = this;
		var adapter = me._adapter;
		var options = me.options;
		var formats = options.time.displayFormats;
		var minorFormat = formats[me._unit];
		var majorUnit = me._majorUnit;
		var majorFormat = formats[majorUnit];
		var tick = ticks[index];
		var tickOpts = options.ticks;
		var major = majorUnit && majorFormat && tick && tick.major;
		var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);
		var nestedTickOpts = major ? tickOpts.major : tickOpts.minor;
		var formatter = resolve$5([
			nestedTickOpts.callback,
			nestedTickOpts.userCallback,
			tickOpts.callback,
			tickOpts.userCallback
		]);

		return formatter ? formatter(label, index, ticks) : label;
	},

	convertTicksToLabels: function(ticks) {
		var labels = [];
		var i, ilen;

		for (i = 0, ilen = ticks.length; i < ilen; ++i) {
			labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));
		}

		return labels;
	},

	/**
	 * @private
	 */
	getPixelForOffset: function(time) {
		var me = this;
		var offsets = me._offsets;
		var pos = interpolate$1(me._table, 'time', time, 'pos');
		return me.getPixelForDecimal((offsets.start + pos) * offsets.factor);
	},

	getPixelForValue: function(value, index, datasetIndex) {
		var me = this;
		var time = null;

		if (index !== undefined && datasetIndex !== undefined) {
			time = me._timestamps.datasets[datasetIndex][index];
		}

		if (time === null) {
			time = parse(me, value);
		}

		if (time !== null) {
			return me.getPixelForOffset(time);
		}
	},

	getPixelForTick: function(index) {
		var ticks = this.getTicks();
		return index >= 0 && index < ticks.length ?
			this.getPixelForOffset(ticks[index].value) :
			null;
	},

	getValueForPixel: function(pixel) {
		var me = this;
		var offsets = me._offsets;
		var pos = me.getDecimalForPixel(pixel) / offsets.factor - offsets.end;
		var time = interpolate$1(me._table, 'pos', pos, 'time');

		// DEPRECATION, we should return time directly
		return me._adapter._create(time);
	},

	/**
	 * @private
	 */
	_getLabelSize: function(label) {
		var me = this;
		var ticksOpts = me.options.ticks;
		var tickLabelWidth = me.ctx.measureText(label).width;
		var angle = helpers$1.toRadians(me.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);
		var cosRotation = Math.cos(angle);
		var sinRotation = Math.sin(angle);
		var tickFontSize = valueOrDefault$d(ticksOpts.fontSize, core_defaults.global.defaultFontSize);

		return {
			w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),
			h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)
		};
	},

	/**
	 * Crude approximation of what the label width might be
	 * @private
	 */
	getLabelWidth: function(label) {
		return this._getLabelSize(label).w;
	},

	/**
	 * @private
	 */
	getLabelCapacity: function(exampleTime) {
		var me = this;
		var timeOpts = me.options.time;
		var displayFormats = timeOpts.displayFormats;

		// pick the longest format (milliseconds) for guestimation
		var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;
		var exampleLabel = me.tickFormatFunction(exampleTime, 0, ticksFromTimestamps(me, [exampleTime], me._majorUnit), format);
		var size = me._getLabelSize(exampleLabel);
		var capacity = Math.floor(me.isHorizontal() ? me.width / size.w : me.height / size.h);

		if (me.options.offset) {
			capacity--;
		}

		return capacity > 0 ? capacity : 1;
	}
});

// INTERNAL: static default options, registered in src/index.js
var _defaults$4 = defaultConfig$4;
scale_time._defaults = _defaults$4;

var scales = {
	category: scale_category,
	linear: scale_linear,
	logarithmic: scale_logarithmic,
	radialLinear: scale_radialLinear,
	time: scale_time
};

var FORMATS = {
	datetime: 'MMM D, YYYY, h:mm:ss a',
	millisecond: 'h:mm:ss.SSS a',
	second: 'h:mm:ss a',
	minute: 'h:mm a',
	hour: 'hA',
	day: 'MMM D',
	week: 'll',
	month: 'MMM YYYY',
	quarter: '[Q]Q - YYYY',
	year: 'YYYY'
};

core_adapters._date.override(typeof moment === 'function' ? {
	_id: 'moment', // DEBUG ONLY

	formats: function() {
		return FORMATS;
	},

	parse: function(value, format) {
		if (typeof value === 'string' && typeof format === 'string') {
			value = moment(value, format);
		} else if (!(value instanceof moment)) {
			value = moment(value);
		}
		return value.isValid() ? value.valueOf() : null;
	},

	format: function(time, format) {
		return moment(time).format(format);
	},

	add: function(time, amount, unit) {
		return moment(time).add(amount, unit).valueOf();
	},

	diff: function(max, min, unit) {
		return moment(max).diff(moment(min), unit);
	},

	startOf: function(time, unit, weekday) {
		time = moment(time);
		if (unit === 'isoWeek') {
			return time.isoWeekday(weekday).valueOf();
		}
		return time.startOf(unit).valueOf();
	},

	endOf: function(time, unit) {
		return moment(time).endOf(unit).valueOf();
	},

	// DEPRECATIONS

	/**
	 * Provided for backward compatibility with scale.getValueForPixel().
	 * @deprecated since version 2.8.0
	 * @todo remove at version 3
	 * @private
	 */
	_create: function(time) {
		return moment(time);
	},
} : {});

core_defaults._set('global', {
	plugins: {
		filler: {
			propagate: true
		}
	}
});

var mappers = {
	dataset: function(source) {
		var index = source.fill;
		var chart = source.chart;
		var meta = chart.getDatasetMeta(index);
		var visible = meta && chart.isDatasetVisible(index);
		var points = (visible && meta.dataset._children) || [];
		var length = points.length || 0;

		return !length ? null : function(point, i) {
			return (i < length && points[i]._view) || null;
		};
	},

	boundary: function(source) {
		var boundary = source.boundary;
		var x = boundary ? boundary.x : null;
		var y = boundary ? boundary.y : null;

		if (helpers$1.isArray(boundary)) {
			return function(point, i) {
				return boundary[i];
			};
		}

		return function(point) {
			return {
				x: x === null ? point.x : x,
				y: y === null ? point.y : y,
			};
		};
	}
};

// @todo if (fill[0] === '#')
function decodeFill(el, index, count) {
	var model = el._model || {};
	var fill = model.fill;
	var target;

	if (fill === undefined) {
		fill = !!model.backgroundColor;
	}

	if (fill === false || fill === null) {
		return false;
	}

	if (fill === true) {
		return 'origin';
	}

	target = parseFloat(fill, 10);
	if (isFinite(target) && Math.floor(target) === target) {
		if (fill[0] === '-' || fill[0] === '+') {
			target = index + target;
		}

		if (target === index || target < 0 || target >= count) {
			return false;
		}

		return target;
	}

	switch (fill) {
	// compatibility
	case 'bottom':
		return 'start';
	case 'top':
		return 'end';
	case 'zero':
		return 'origin';
	// supported boundaries
	case 'origin':
	case 'start':
	case 'end':
		return fill;
	// invalid fill values
	default:
		return false;
	}
}

function computeLinearBoundary(source) {
	var model = source.el._model || {};
	var scale = source.el._scale || {};
	var fill = source.fill;
	var target = null;
	var horizontal;

	if (isFinite(fill)) {
		return null;
	}

	// Backward compatibility: until v3, we still need to support boundary values set on
	// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and
	// controllers might still use it (e.g. the Smith chart).

	if (fill === 'start') {
		target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;
	} else if (fill === 'end') {
		target = model.scaleTop === undefined ? scale.top : model.scaleTop;
	} else if (model.scaleZero !== undefined) {
		target = model.scaleZero;
	} else if (scale.getBasePixel) {
		target = scale.getBasePixel();
	}

	if (target !== undefined && target !== null) {
		if (target.x !== undefined && target.y !== undefined) {
			return target;
		}

		if (helpers$1.isFinite(target)) {
			horizontal = scale.isHorizontal();
			return {
				x: horizontal ? target : null,
				y: horizontal ? null : target
			};
		}
	}

	return null;
}

function computeCircularBoundary(source) {
	var scale = source.el._scale;
	var options = scale.options;
	var length = scale.chart.data.labels.length;
	var fill = source.fill;
	var target = [];
	var start, end, center, i, point;

	if (!length) {
		return null;
	}

	start = options.ticks.reverse ? scale.max : scale.min;
	end = options.ticks.reverse ? scale.min : scale.max;
	center = scale.getPointPositionForValue(0, start);
	for (i = 0; i < length; ++i) {
		point = fill === 'start' || fill === 'end'
			? scale.getPointPositionForValue(i, fill === 'start' ? start : end)
			: scale.getBasePosition(i);
		if (options.gridLines.circular) {
			point.cx = center.x;
			point.cy = center.y;
			point.angle = scale.getIndexAngle(i) - Math.PI / 2;
		}
		target.push(point);
	}
	return target;
}

function computeBoundary(source) {
	var scale = source.el._scale || {};

	if (scale.getPointPositionForValue) {
		return computeCircularBoundary(source);
	}
	return computeLinearBoundary(source);
}

function resolveTarget(sources, index, propagate) {
	var source = sources[index];
	var fill = source.fill;
	var visited = [index];
	var target;

	if (!propagate) {
		return fill;
	}

	while (fill !== false && visited.indexOf(fill) === -1) {
		if (!isFinite(fill)) {
			return fill;
		}

		target = sources[fill];
		if (!target) {
			return false;
		}

		if (target.visible) {
			return fill;
		}

		visited.push(fill);
		fill = target.fill;
	}

	return false;
}

function createMapper(source) {
	var fill = source.fill;
	var type = 'dataset';

	if (fill === false) {
		return null;
	}

	if (!isFinite(fill)) {
		type = 'boundary';
	}

	return mappers[type](source);
}

function isDrawable(point) {
	return point && !point.skip;
}

function drawArea(ctx, curve0, curve1, len0, len1) {
	var i, cx, cy, r;

	if (!len0 || !len1) {
		return;
	}

	// building first area curve (normal)
	ctx.moveTo(curve0[0].x, curve0[0].y);
	for (i = 1; i < len0; ++i) {
		helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);
	}

	if (curve1[0].angle !== undefined) {
		cx = curve1[0].cx;
		cy = curve1[0].cy;
		r = Math.sqrt(Math.pow(curve1[0].x - cx, 2) + Math.pow(curve1[0].y - cy, 2));
		for (i = len1 - 1; i > 0; --i) {
			ctx.arc(cx, cy, r, curve1[i].angle, curve1[i - 1].angle, true);
		}
		return;
	}

	// joining the two area curves
	ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);

	// building opposite area curve (reverse)
	for (i = len1 - 1; i > 0; --i) {
		helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);
	}
}

function doFill(ctx, points, mapper, view, color, loop) {
	var count = points.length;
	var span = view.spanGaps;
	var curve0 = [];
	var curve1 = [];
	var len0 = 0;
	var len1 = 0;
	var i, ilen, index, p0, p1, d0, d1, loopOffset;

	ctx.beginPath();

	for (i = 0, ilen = count; i < ilen; ++i) {
		index = i % count;
		p0 = points[index]._view;
		p1 = mapper(p0, index, view);
		d0 = isDrawable(p0);
		d1 = isDrawable(p1);

		if (loop && loopOffset === undefined && d0) {
			loopOffset = i + 1;
			ilen = count + loopOffset;
		}

		if (d0 && d1) {
			len0 = curve0.push(p0);
			len1 = curve1.push(p1);
		} else if (len0 && len1) {
			if (!span) {
				drawArea(ctx, curve0, curve1, len0, len1);
				len0 = len1 = 0;
				curve0 = [];
				curve1 = [];
			} else {
				if (d0) {
					curve0.push(p0);
				}
				if (d1) {
					curve1.push(p1);
				}
			}
		}
	}

	drawArea(ctx, curve0, curve1, len0, len1);

	ctx.closePath();
	ctx.fillStyle = color;
	ctx.fill();
}

var plugin_filler = {
	id: 'filler',

	afterDatasetsUpdate: function(chart, options) {
		var count = (chart.data.datasets || []).length;
		var propagate = options.propagate;
		var sources = [];
		var meta, i, el, source;

		for (i = 0; i < count; ++i) {
			meta = chart.getDatasetMeta(i);
			el = meta.dataset;
			source = null;

			if (el && el._model && el instanceof elements.Line) {
				source = {
					visible: chart.isDatasetVisible(i),
					fill: decodeFill(el, i, count),
					chart: chart,
					el: el
				};
			}

			meta.$filler = source;
			sources.push(source);
		}

		for (i = 0; i < count; ++i) {
			source = sources[i];
			if (!source) {
				continue;
			}

			source.fill = resolveTarget(sources, i, propagate);
			source.boundary = computeBoundary(source);
			source.mapper = createMapper(source);
		}
	},

	beforeDatasetsDraw: function(chart) {
		var metasets = chart._getSortedVisibleDatasetMetas();
		var ctx = chart.ctx;
		var meta, i, el, view, points, mapper, color;

		for (i = metasets.length - 1; i >= 0; --i) {
			meta = metasets[i].$filler;

			if (!meta || !meta.visible) {
				continue;
			}

			el = meta.el;
			view = el._view;
			points = el._children || [];
			mapper = meta.mapper;
			color = view.backgroundColor || core_defaults.global.defaultColor;

			if (mapper && color && points.length) {
				helpers$1.canvas.clipArea(ctx, chart.chartArea);
				doFill(ctx, points, mapper, view, color, el._loop);
				helpers$1.canvas.unclipArea(ctx);
			}
		}
	}
};

var getRtlHelper$1 = helpers$1.rtl.getRtlAdapter;
var noop$1 = helpers$1.noop;
var valueOrDefault$e = helpers$1.valueOrDefault;

core_defaults._set('global', {
	legend: {
		display: true,
		position: 'top',
		align: 'center',
		fullWidth: true,
		reverse: false,
		weight: 1000,

		// a callback that will handle
		onClick: function(e, legendItem) {
			var index = legendItem.datasetIndex;
			var ci = this.chart;
			var meta = ci.getDatasetMeta(index);

			// See controller.isDatasetVisible comment
			meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;

			// We hid a dataset ... rerender the chart
			ci.update();
		},

		onHover: null,
		onLeave: null,

		labels: {
			boxWidth: 40,
			padding: 10,
			// Generates labels shown in the legend
			// Valid properties to return:
			// text : text to display
			// fillStyle : fill of coloured box
			// strokeStyle: stroke of coloured box
			// hidden : if this legend item refers to a hidden item
			// lineCap : cap style for line
			// lineDash
			// lineDashOffset :
			// lineJoin :
			// lineWidth :
			generateLabels: function(chart) {
				var datasets = chart.data.datasets;
				var options = chart.options.legend || {};
				var usePointStyle = options.labels && options.labels.usePointStyle;

				return chart._getSortedDatasetMetas().map(function(meta) {
					var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);

					return {
						text: datasets[meta.index].label,
						fillStyle: style.backgroundColor,
						hidden: !chart.isDatasetVisible(meta.index),
						lineCap: style.borderCapStyle,
						lineDash: style.borderDash,
						lineDashOffset: style.borderDashOffset,
						lineJoin: style.borderJoinStyle,
						lineWidth: style.borderWidth,
						strokeStyle: style.borderColor,
						pointStyle: style.pointStyle,
						rotation: style.rotation,

						// Below is extra data used for toggling the datasets
						datasetIndex: meta.index
					};
				}, this);
			}
		}
	},

	legendCallback: function(chart) {
		var list = document.createElement('ul');
		var datasets = chart.data.datasets;
		var i, ilen, listItem, listItemSpan;

		list.setAttribute('class', chart.id + '-legend');

		for (i = 0, ilen = datasets.length; i < ilen; i++) {
			listItem = list.appendChild(document.createElement('li'));
			listItemSpan = listItem.appendChild(document.createElement('span'));
			listItemSpan.style.backgroundColor = datasets[i].backgroundColor;
			if (datasets[i].label) {
				listItem.appendChild(document.createTextNode(datasets[i].label));
			}
		}

		return list.outerHTML;
	}
});

/**
 * Helper function to get the box width based on the usePointStyle option
 * @param {object} labelopts - the label options on the legend
 * @param {number} fontSize - the label font size
 * @return {number} width of the color box area
 */
function getBoxWidth(labelOpts, fontSize) {
	return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ?
		fontSize :
		labelOpts.boxWidth;
}

/**
 * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
 */
var Legend = core_element.extend({

	initialize: function(config) {
		var me = this;
		helpers$1.extend(me, config);

		// Contains hit boxes for each dataset (in dataset order)
		me.legendHitBoxes = [];

		/**
 		 * @private
 		 */
		me._hoveredItem = null;

		// Are we in doughnut mode which has a different data type
		me.doughnutMode = false;
	},

	// These methods are ordered by lifecycle. Utilities then follow.
	// Any function defined here is inherited by all legend types.
	// Any function can be extended by the legend type

	beforeUpdate: noop$1,
	update: function(maxWidth, maxHeight, margins) {
		var me = this;

		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
		me.beforeUpdate();

		// Absorb the master measurements
		me.maxWidth = maxWidth;
		me.maxHeight = maxHeight;
		me.margins = margins;

		// Dimensions
		me.beforeSetDimensions();
		me.setDimensions();
		me.afterSetDimensions();
		// Labels
		me.beforeBuildLabels();
		me.buildLabels();
		me.afterBuildLabels();

		// Fit
		me.beforeFit();
		me.fit();
		me.afterFit();
		//
		me.afterUpdate();

		return me.minSize;
	},
	afterUpdate: noop$1,

	//

	beforeSetDimensions: noop$1,
	setDimensions: function() {
		var me = this;
		// Set the unconstrained dimension before label rotation
		if (me.isHorizontal()) {
			// Reset position before calculating rotation
			me.width = me.maxWidth;
			me.left = 0;
			me.right = me.width;
		} else {
			me.height = me.maxHeight;

			// Reset position before calculating rotation
			me.top = 0;
			me.bottom = me.height;
		}

		// Reset padding
		me.paddingLeft = 0;
		me.paddingTop = 0;
		me.paddingRight = 0;
		me.paddingBottom = 0;

		// Reset minSize
		me.minSize = {
			width: 0,
			height: 0
		};
	},
	afterSetDimensions: noop$1,

	//

	beforeBuildLabels: noop$1,
	buildLabels: function() {
		var me = this;
		var labelOpts = me.options.labels || {};
		var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];

		if (labelOpts.filter) {
			legendItems = legendItems.filter(function(item) {
				return labelOpts.filter(item, me.chart.data);
			});
		}

		if (me.options.reverse) {
			legendItems.reverse();
		}

		me.legendItems = legendItems;
	},
	afterBuildLabels: noop$1,

	//

	beforeFit: noop$1,
	fit: function() {
		var me = this;
		var opts = me.options;
		var labelOpts = opts.labels;
		var display = opts.display;

		var ctx = me.ctx;

		var labelFont = helpers$1.options._parseFont(labelOpts);
		var fontSize = labelFont.size;

		// Reset hit boxes
		var hitboxes = me.legendHitBoxes = [];

		var minSize = me.minSize;
		var isHorizontal = me.isHorizontal();

		if (isHorizontal) {
			minSize.width = me.maxWidth; // fill all the width
			minSize.height = display ? 10 : 0;
		} else {
			minSize.width = display ? 10 : 0;
			minSize.height = me.maxHeight; // fill all the height
		}

		// Increase sizes here
		if (!display) {
			me.width = minSize.width = me.height = minSize.height = 0;
			return;
		}
		ctx.font = labelFont.string;

		if (isHorizontal) {
			// Labels

			// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one
			var lineWidths = me.lineWidths = [0];
			var totalHeight = 0;

			ctx.textAlign = 'left';
			ctx.textBaseline = 'middle';

			helpers$1.each(me.legendItems, function(legendItem, i) {
				var boxWidth = getBoxWidth(labelOpts, fontSize);
				var width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

				if (i === 0 || lineWidths[lineWidths.length - 1] + width + 2 * labelOpts.padding > minSize.width) {
					totalHeight += fontSize + labelOpts.padding;
					lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;
				}

				// Store the hitbox width and height here. Final position will be updated in `draw`
				hitboxes[i] = {
					left: 0,
					top: 0,
					width: width,
					height: fontSize
				};

				lineWidths[lineWidths.length - 1] += width + labelOpts.padding;
			});

			minSize.height += totalHeight;

		} else {
			var vPadding = labelOpts.padding;
			var columnWidths = me.columnWidths = [];
			var columnHeights = me.columnHeights = [];
			var totalWidth = labelOpts.padding;
			var currentColWidth = 0;
			var currentColHeight = 0;

			helpers$1.each(me.legendItems, function(legendItem, i) {
				var boxWidth = getBoxWidth(labelOpts, fontSize);
				var itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;

				// If too tall, go to new column
				if (i > 0 && currentColHeight + fontSize + 2 * vPadding > minSize.height) {
					totalWidth += currentColWidth + labelOpts.padding;
					columnWidths.push(currentColWidth); // previous column width
					columnHeights.push(currentColHeight);
					currentColWidth = 0;
					currentColHeight = 0;
				}

				// Get max width
				currentColWidth = Math.max(currentColWidth, itemWidth);
				currentColHeight += fontSize + vPadding;

				// Store the hitbox width and height here. Final position will be updated in `draw`
				hitboxes[i] = {
					left: 0,
					top: 0,
					width: itemWidth,
					height: fontSize
				};
			});

			totalWidth += currentColWidth;
			columnWidths.push(currentColWidth);
			columnHeights.push(currentColHeight);
			minSize.width += totalWidth;
		}

		me.width = minSize.width;
		me.height = minSize.height;
	},
	afterFit: noop$1,

	// Shared Methods
	isHorizontal: function() {
		return this.options.position === 'top' || this.options.position === 'bottom';
	},

	// Actually draw the legend on the canvas
	draw: function() {
		var me = this;
		var opts = me.options;
		var labelOpts = opts.labels;
		var globalDefaults = core_defaults.global;
		var defaultColor = globalDefaults.defaultColor;
		var lineDefault = globalDefaults.elements.line;
		var legendHeight = me.height;
		var columnHeights = me.columnHeights;
		var legendWidth = me.width;
		var lineWidths = me.lineWidths;

		if (!opts.display) {
			return;
		}

		var rtlHelper = getRtlHelper$1(opts.rtl, me.left, me.minSize.width);
		var ctx = me.ctx;
		var fontColor = valueOrDefault$e(labelOpts.fontColor, globalDefaults.defaultFontColor);
		var labelFont = helpers$1.options._parseFont(labelOpts);
		var fontSize = labelFont.size;
		var cursor;

		// Canvas setup
		ctx.textAlign = rtlHelper.textAlign('left');
		ctx.textBaseline = 'middle';
		ctx.lineWidth = 0.5;
		ctx.strokeStyle = fontColor; // for strikethrough effect
		ctx.fillStyle = fontColor; // render in correct colour
		ctx.font = labelFont.string;

		var boxWidth = getBoxWidth(labelOpts, fontSize);
		var hitboxes = me.legendHitBoxes;

		// current position
		var drawLegendBox = function(x, y, legendItem) {
			if (isNaN(boxWidth) || boxWidth <= 0) {
				return;
			}

			// Set the ctx for the box
			ctx.save();

			var lineWidth = valueOrDefault$e(legendItem.lineWidth, lineDefault.borderWidth);
			ctx.fillStyle = valueOrDefault$e(legendItem.fillStyle, defaultColor);
			ctx.lineCap = valueOrDefault$e(legendItem.lineCap, lineDefault.borderCapStyle);
			ctx.lineDashOffset = valueOrDefault$e(legendItem.lineDashOffset, lineDefault.borderDashOffset);
			ctx.lineJoin = valueOrDefault$e(legendItem.lineJoin, lineDefault.borderJoinStyle);
			ctx.lineWidth = lineWidth;
			ctx.strokeStyle = valueOrDefault$e(legendItem.strokeStyle, defaultColor);

			if (ctx.setLineDash) {
				// IE 9 and 10 do not support line dash
				ctx.setLineDash(valueOrDefault$e(legendItem.lineDash, lineDefault.borderDash));
			}

			if (labelOpts && labelOpts.usePointStyle) {
				// Recalculate x and y for drawPoint() because its expecting
				// x and y to be center of figure (instead of top left)
				var radius = boxWidth * Math.SQRT2 / 2;
				var centerX = rtlHelper.xPlus(x, boxWidth / 2);
				var centerY = y + fontSize / 2;

				// Draw pointStyle as legend symbol
				helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY, legendItem.rotation);
			} else {
				// Draw box as legend symbol
				ctx.fillRect(rtlHelper.leftForLtr(x, boxWidth), y, boxWidth, fontSize);
				if (lineWidth !== 0) {
					ctx.strokeRect(rtlHelper.leftForLtr(x, boxWidth), y, boxWidth, fontSize);
				}
			}

			ctx.restore();
		};

		var fillText = function(x, y, legendItem, textWidth) {
			var halfFontSize = fontSize / 2;
			var xLeft = rtlHelper.xPlus(x, boxWidth + halfFontSize);
			var yMiddle = y + halfFontSize;

			ctx.fillText(legendItem.text, xLeft, yMiddle);

			if (legendItem.hidden) {
				// Strikethrough the text if hidden
				ctx.beginPath();
				ctx.lineWidth = 2;
				ctx.moveTo(xLeft, yMiddle);
				ctx.lineTo(rtlHelper.xPlus(xLeft, textWidth), yMiddle);
				ctx.stroke();
			}
		};

		var alignmentOffset = function(dimension, blockSize) {
			switch (opts.align) {
			case 'start':
				return labelOpts.padding;
			case 'end':
				return dimension - blockSize;
			default: // center
				return (dimension - blockSize + labelOpts.padding) / 2;
			}
		};

		// Horizontal
		var isHorizontal = me.isHorizontal();
		if (isHorizontal) {
			cursor = {
				x: me.left + alignmentOffset(legendWidth, lineWidths[0]),
				y: me.top + labelOpts.padding,
				line: 0
			};
		} else {
			cursor = {
				x: me.left + labelOpts.padding,
				y: me.top + alignmentOffset(legendHeight, columnHeights[0]),
				line: 0
			};
		}

		helpers$1.rtl.overrideTextDirection(me.ctx, opts.textDirection);

		var itemHeight = fontSize + labelOpts.padding;
		helpers$1.each(me.legendItems, function(legendItem, i) {
			var textWidth = ctx.measureText(legendItem.text).width;
			var width = boxWidth + (fontSize / 2) + textWidth;
			var x = cursor.x;
			var y = cursor.y;

			rtlHelper.setWidth(me.minSize.width);

			// Use (me.left + me.minSize.width) and (me.top + me.minSize.height)
			// instead of me.right and me.bottom because me.width and me.height
			// may have been changed since me.minSize was calculated
			if (isHorizontal) {
				if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {
					y = cursor.y += itemHeight;
					cursor.line++;
					x = cursor.x = me.left + alignmentOffset(legendWidth, lineWidths[cursor.line]);
				}
			} else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {
				x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;
				cursor.line++;
				y = cursor.y = me.top + alignmentOffset(legendHeight, columnHeights[cursor.line]);
			}

			var realX = rtlHelper.x(x);

			drawLegendBox(realX, y, legendItem);

			hitboxes[i].left = rtlHelper.leftForLtr(realX, hitboxes[i].width);
			hitboxes[i].top = y;

			// Fill the actual label
			fillText(realX, y, legendItem, textWidth);

			if (isHorizontal) {
				cursor.x += width + labelOpts.padding;
			} else {
				cursor.y += itemHeight;
			}
		});

		helpers$1.rtl.restoreTextDirection(me.ctx, opts.textDirection);
	},

	/**
	 * @private
	 */
	_getLegendItemAt: function(x, y) {
		var me = this;
		var i, hitBox, lh;

		if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {
			// See if we are touching one of the dataset boxes
			lh = me.legendHitBoxes;
			for (i = 0; i < lh.length; ++i) {
				hitBox = lh[i];

				if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {
					// Touching an element
					return me.legendItems[i];
				}
			}
		}

		return null;
	},

	/**
	 * Handle an event
	 * @private
	 * @param {IEvent} event - The event to handle
	 */
	handleEvent: function(e) {
		var me = this;
		var opts = me.options;
		var type = e.type === 'mouseup' ? 'click' : e.type;
		var hoveredItem;

		if (type === 'mousemove') {
			if (!opts.onHover && !opts.onLeave) {
				return;
			}
		} else if (type === 'click') {
			if (!opts.onClick) {
				return;
			}
		} else {
			return;
		}

		// Chart event already has relative position in it
		hoveredItem = me._getLegendItemAt(e.x, e.y);

		if (type === 'click') {
			if (hoveredItem && opts.onClick) {
				// use e.native for backwards compatibility
				opts.onClick.call(me, e.native, hoveredItem);
			}
		} else {
			if (opts.onLeave && hoveredItem !== me._hoveredItem) {
				if (me._hoveredItem) {
					opts.onLeave.call(me, e.native, me._hoveredItem);
				}
				me._hoveredItem = hoveredItem;
			}

			if (opts.onHover && hoveredItem) {
				// use e.native for backwards compatibility
				opts.onHover.call(me, e.native, hoveredItem);
			}
		}
	}
});

function createNewLegendAndAttach(chart, legendOpts) {
	var legend = new Legend({
		ctx: chart.ctx,
		options: legendOpts,
		chart: chart
	});

	core_layouts.configure(chart, legend, legendOpts);
	core_layouts.addBox(chart, legend);
	chart.legend = legend;
}

var plugin_legend = {
	id: 'legend',

	/**
	 * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making
	 * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of
	 * the plugin, which one will be re-exposed in the chart.js file.
	 * https://github.com/chartjs/Chart.js/pull/2640
	 * @private
	 */
	_element: Legend,

	beforeInit: function(chart) {
		var legendOpts = chart.options.legend;

		if (legendOpts) {
			createNewLegendAndAttach(chart, legendOpts);
		}
	},

	beforeUpdate: function(chart) {
		var legendOpts = chart.options.legend;
		var legend = chart.legend;

		if (legendOpts) {
			helpers$1.mergeIf(legendOpts, core_defaults.global.legend);

			if (legend) {
				core_layouts.configure(chart, legend, legendOpts);
				legend.options = legendOpts;
			} else {
				createNewLegendAndAttach(chart, legendOpts);
			}
		} else if (legend) {
			core_layouts.removeBox(chart, legend);
			delete chart.legend;
		}
	},

	afterEvent: function(chart, e) {
		var legend = chart.legend;
		if (legend) {
			legend.handleEvent(e);
		}
	}
};

var noop$2 = helpers$1.noop;

core_defaults._set('global', {
	title: {
		display: false,
		fontStyle: 'bold',
		fullWidth: true,
		padding: 10,
		position: 'top',
		text: '',
		weight: 2000         // by default greater than legend (1000) to be above
	}
});

/**
 * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!
 */
var Title = core_element.extend({
	initialize: function(config) {
		var me = this;
		helpers$1.extend(me, config);

		// Contains hit boxes for each dataset (in dataset order)
		me.legendHitBoxes = [];
	},

	// These methods are ordered by lifecycle. Utilities then follow.

	beforeUpdate: noop$2,
	update: function(maxWidth, maxHeight, margins) {
		var me = this;

		// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)
		me.beforeUpdate();

		// Absorb the master measurements
		me.maxWidth = maxWidth;
		me.maxHeight = maxHeight;
		me.margins = margins;

		// Dimensions
		me.beforeSetDimensions();
		me.setDimensions();
		me.afterSetDimensions();
		// Labels
		me.beforeBuildLabels();
		me.buildLabels();
		me.afterBuildLabels();

		// Fit
		me.beforeFit();
		me.fit();
		me.afterFit();
		//
		me.afterUpdate();

		return me.minSize;

	},
	afterUpdate: noop$2,

	//

	beforeSetDimensions: noop$2,
	setDimensions: function() {
		var me = this;
		// Set the unconstrained dimension before label rotation
		if (me.isHorizontal()) {
			// Reset position before calculating rotation
			me.width = me.maxWidth;
			me.left = 0;
			me.right = me.width;
		} else {
			me.height = me.maxHeight;

			// Reset position before calculating rotation
			me.top = 0;
			me.bottom = me.height;
		}

		// Reset padding
		me.paddingLeft = 0;
		me.paddingTop = 0;
		me.paddingRight = 0;
		me.paddingBottom = 0;

		// Reset minSize
		me.minSize = {
			width: 0,
			height: 0
		};
	},
	afterSetDimensions: noop$2,

	//

	beforeBuildLabels: noop$2,
	buildLabels: noop$2,
	afterBuildLabels: noop$2,

	//

	beforeFit: noop$2,
	fit: function() {
		var me = this;
		var opts = me.options;
		var minSize = me.minSize = {};
		var isHorizontal = me.isHorizontal();
		var lineCount, textSize;

		if (!opts.display) {
			me.width = minSize.width = me.height = minSize.height = 0;
			return;
		}

		lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;
		textSize = lineCount * helpers$1.options._parseFont(opts).lineHeight + opts.padding * 2;

		me.width = minSize.width = isHorizontal ? me.maxWidth : textSize;
		me.height = minSize.height = isHorizontal ? textSize : me.maxHeight;
	},
	afterFit: noop$2,

	// Shared Methods
	isHorizontal: function() {
		var pos = this.options.position;
		return pos === 'top' || pos === 'bottom';
	},

	// Actually draw the title block on the canvas
	draw: function() {
		var me = this;
		var ctx = me.ctx;
		var opts = me.options;

		if (!opts.display) {
			return;
		}

		var fontOpts = helpers$1.options._parseFont(opts);
		var lineHeight = fontOpts.lineHeight;
		var offset = lineHeight / 2 + opts.padding;
		var rotation = 0;
		var top = me.top;
		var left = me.left;
		var bottom = me.bottom;
		var right = me.right;
		var maxWidth, titleX, titleY;

		ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour
		ctx.font = fontOpts.string;

		// Horizontal
		if (me.isHorizontal()) {
			titleX = left + ((right - left) / 2); // midpoint of the width
			titleY = top + offset;
			maxWidth = right - left;
		} else {
			titleX = opts.position === 'left' ? left + offset : right - offset;
			titleY = top + ((bottom - top) / 2);
			maxWidth = bottom - top;
			rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);
		}

		ctx.save();
		ctx.translate(titleX, titleY);
		ctx.rotate(rotation);
		ctx.textAlign = 'center';
		ctx.textBaseline = 'middle';

		var text = opts.text;
		if (helpers$1.isArray(text)) {
			var y = 0;
			for (var i = 0; i < text.length; ++i) {
				ctx.fillText(text[i], 0, y, maxWidth);
				y += lineHeight;
			}
		} else {
			ctx.fillText(text, 0, 0, maxWidth);
		}

		ctx.restore();
	}
});

function createNewTitleBlockAndAttach(chart, titleOpts) {
	var title = new Title({
		ctx: chart.ctx,
		options: titleOpts,
		chart: chart
	});

	core_layouts.configure(chart, title, titleOpts);
	core_layouts.addBox(chart, title);
	chart.titleBlock = title;
}

var plugin_title = {
	id: 'title',

	/**
	 * Backward compatibility: since 2.1.5, the title is registered as a plugin, making
	 * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of
	 * the plugin, which one will be re-exposed in the chart.js file.
	 * https://github.com/chartjs/Chart.js/pull/2640
	 * @private
	 */
	_element: Title,

	beforeInit: function(chart) {
		var titleOpts = chart.options.title;

		if (titleOpts) {
			createNewTitleBlockAndAttach(chart, titleOpts);
		}
	},

	beforeUpdate: function(chart) {
		var titleOpts = chart.options.title;
		var titleBlock = chart.titleBlock;

		if (titleOpts) {
			helpers$1.mergeIf(titleOpts, core_defaults.global.title);

			if (titleBlock) {
				core_layouts.configure(chart, titleBlock, titleOpts);
				titleBlock.options = titleOpts;
			} else {
				createNewTitleBlockAndAttach(chart, titleOpts);
			}
		} else if (titleBlock) {
			core_layouts.removeBox(chart, titleBlock);
			delete chart.titleBlock;
		}
	}
};

var plugins = {};
var filler = plugin_filler;
var legend = plugin_legend;
var title = plugin_title;
plugins.filler = filler;
plugins.legend = legend;
plugins.title = title;

/**
 * @namespace Chart
 */


core_controller.helpers = helpers$1;

// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!
core_helpers();

core_controller._adapters = core_adapters;
core_controller.Animation = core_animation;
core_controller.animationService = core_animations;
core_controller.controllers = controllers;
core_controller.DatasetController = core_datasetController;
core_controller.defaults = core_defaults;
core_controller.Element = core_element;
core_controller.elements = elements;
core_controller.Interaction = core_interaction;
core_controller.layouts = core_layouts;
core_controller.platform = platform;
core_controller.plugins = core_plugins;
core_controller.Scale = core_scale;
core_controller.scaleService = core_scaleService;
core_controller.Ticks = core_ticks;
core_controller.Tooltip = core_tooltip;

// Register built-in scales

core_controller.helpers.each(scales, function(scale, type) {
	core_controller.scaleService.registerScaleType(type, scale, scale._defaults);
});

// Load to register built-in adapters (as side effects)


// Loading built-in plugins

for (var k in plugins) {
	if (plugins.hasOwnProperty(k)) {
		core_controller.plugins.register(plugins[k]);
	}
}

core_controller.platform.initialize();

var src = core_controller;
if (typeof window !== 'undefined') {
	window.Chart = core_controller;
}

// DEPRECATIONS

/**
 * Provided for backward compatibility, not available anymore
 * @namespace Chart.Chart
 * @deprecated since version 2.8.0
 * @todo remove at version 3
 * @private
 */
core_controller.Chart = core_controller;

/**
 * Provided for backward compatibility, not available anymore
 * @namespace Chart.Legend
 * @deprecated since version 2.1.5
 * @todo remove at version 3
 * @private
 */
core_controller.Legend = plugins.legend._element;

/**
 * Provided for backward compatibility, not available anymore
 * @namespace Chart.Title
 * @deprecated since version 2.1.5
 * @todo remove at version 3
 * @private
 */
core_controller.Title = plugins.title._element;

/**
 * Provided for backward compatibility, use Chart.plugins instead
 * @namespace Chart.pluginService
 * @deprecated since version 2.1.5
 * @todo remove at version 3
 * @private
 */
core_controller.pluginService = core_controller.plugins;

/**
 * Provided for backward compatibility, inheriting from Chart.PlugingBase has no
 * effect, instead simply create/register plugins via plain JavaScript objects.
 * @interface Chart.PluginBase
 * @deprecated since version 2.5.0
 * @todo remove at version 3
 * @private
 */
core_controller.PluginBase = core_controller.Element.extend({});

/**
 * Provided for backward compatibility, use Chart.helpers.canvas instead.
 * @namespace Chart.canvasHelpers
 * @deprecated since version 2.6.0
 * @todo remove at version 3
 * @private
 */
core_controller.canvasHelpers = core_controller.helpers.canvas;

/**
 * Provided for backward compatibility, use Chart.layouts instead.
 * @namespace Chart.layoutService
 * @deprecated since version 2.7.3
 * @todo remove at version 3
 * @private
 */
core_controller.layoutService = core_controller.layouts;

/**
 * Provided for backward compatibility, not available anymore.
 * @namespace Chart.LinearScaleBase
 * @deprecated since version 2.8
 * @todo remove at version 3
 * @private
 */
core_controller.LinearScaleBase = scale_linearbase;

/**
 * Provided for backward compatibility, instead we should create a new Chart
 * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).
 * @deprecated since version 2.8.0
 * @todo remove at version 3
 */
core_controller.helpers.each(
	[
		'Bar',
		'Bubble',
		'Doughnut',
		'Line',
		'PolarArea',
		'Radar',
		'Scatter'
	],
	function(klass) {
		core_controller[klass] = function(ctx, cfg) {
			return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {
				type: klass.charAt(0).toLowerCase() + klass.slice(1)
			}));
		};
	}
);

return src;

})));

},{"moment":"../node_modules/moment/moment.js"}],"../node_modules/bootstrap-select/dist/js/bootstrap-select.js":[function(require,module,exports) {
var define;
/*!
 * Bootstrap-select v1.13.18 (https://developer.snapappointments.com/bootstrap-select)
 *
 * Copyright 2012-2020 SnapAppointments, LLC
 * Licensed under MIT (https://github.com/snapappointments/bootstrap-select/blob/master/LICENSE)
 */
(function (root, factory) {
  if (root === undefined && window !== undefined) root = window;

  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define(["jquery"], function (a0) {
      return factory(a0);
    });
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"));
  } else {
    factory(root["jQuery"]);
  }
})(this, function (jQuery) {
  (function ($) {
    'use strict';

    var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];
    var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];
    var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
    var DefaultWhitelist = {
      // Global attributes allowed on any supplied element below.
      '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],
      a: ['target', 'href', 'title', 'rel'],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      div: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ['src', 'alt', 'title', 'width', 'height'],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: []
    };
    /**
     * A pattern that recognizes a commonly useful subset of URLs that are safe.
     *
     * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
     */

    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;
    /**
     * A pattern that matches safe data URLs. Only matches image, video and audio types.
     *
     * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
     */

    var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

    function allowedAttribute(attr, allowedAttributeList) {
      var attrName = attr.nodeName.toLowerCase();

      if ($.inArray(attrName, allowedAttributeList) !== -1) {
        if ($.inArray(attrName, uriAttrs) !== -1) {
          return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
        }

        return true;
      }

      var regExp = $(allowedAttributeList).filter(function (index, value) {
        return value instanceof RegExp;
      }); // Check if a regular expression validates the attribute.

      for (var i = 0, l = regExp.length; i < l; i++) {
        if (attrName.match(regExp[i])) {
          return true;
        }
      }

      return false;
    }

    function sanitizeHtml(unsafeElements, whiteList, sanitizeFn) {
      if (sanitizeFn && typeof sanitizeFn === 'function') {
        return sanitizeFn(unsafeElements);
      }

      var whitelistKeys = Object.keys(whiteList);

      for (var i = 0, len = unsafeElements.length; i < len; i++) {
        var elements = unsafeElements[i].querySelectorAll('*');

        for (var j = 0, len2 = elements.length; j < len2; j++) {
          var el = elements[j];
          var elName = el.nodeName.toLowerCase();

          if (whitelistKeys.indexOf(elName) === -1) {
            el.parentNode.removeChild(el);
            continue;
          }

          var attributeList = [].slice.call(el.attributes);
          var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);

          for (var k = 0, len3 = attributeList.length; k < len3; k++) {
            var attr = attributeList[k];

            if (!allowedAttribute(attr, whitelistedAttributes)) {
              el.removeAttribute(attr.nodeName);
            }
          }
        }
      }
    } // Polyfill for browsers with no classList support
    // Remove in v2


    if (!('classList' in document.createElement('_'))) {
      (function (view) {
        if (!('Element' in view)) return;

        var classListProp = 'classList',
            protoProp = 'prototype',
            elemCtrProto = view.Element[protoProp],
            objCtr = Object,
            classListGetter = function () {
          var $elem = $(this);
          return {
            add: function (classes) {
              classes = Array.prototype.slice.call(arguments).join(' ');
              return $elem.addClass(classes);
            },
            remove: function (classes) {
              classes = Array.prototype.slice.call(arguments).join(' ');
              return $elem.removeClass(classes);
            },
            toggle: function (classes, force) {
              return $elem.toggleClass(classes, force);
            },
            contains: function (classes) {
              return $elem.hasClass(classes);
            }
          };
        };

        if (objCtr.defineProperty) {
          var classListPropDesc = {
            get: classListGetter,
            enumerable: true,
            configurable: true
          };

          try {
            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
          } catch (ex) {
            // IE 8 doesn't support enumerable:true
            // adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36
            // modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected
            if (ex.number === undefined || ex.number === -0x7FF5EC54) {
              classListPropDesc.enumerable = false;
              objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
            }
          }
        } else if (objCtr[protoProp].__defineGetter__) {
          elemCtrProto.__defineGetter__(classListProp, classListGetter);
        }
      })(window);
    }

    var testElement = document.createElement('_');
    testElement.classList.add('c1', 'c2');

    if (!testElement.classList.contains('c2')) {
      var _add = DOMTokenList.prototype.add,
          _remove = DOMTokenList.prototype.remove;

      DOMTokenList.prototype.add = function () {
        Array.prototype.forEach.call(arguments, _add.bind(this));
      };

      DOMTokenList.prototype.remove = function () {
        Array.prototype.forEach.call(arguments, _remove.bind(this));
      };
    }

    testElement.classList.toggle('c3', false); // Polyfill for IE 10 and Firefox <24, where classList.toggle does not
    // support the second argument.

    if (testElement.classList.contains('c3')) {
      var _toggle = DOMTokenList.prototype.toggle;

      DOMTokenList.prototype.toggle = function (token, force) {
        if (1 in arguments && !this.contains(token) === !force) {
          return force;
        } else {
          return _toggle.call(this, token);
        }
      };
    }

    testElement = null; // shallow array comparison

    function isEqual(array1, array2) {
      return array1.length === array2.length && array1.every(function (element, index) {
        return element === array2[index];
      });
    }

    ; // <editor-fold desc="Shims">

    if (!String.prototype.startsWith) {
      (function () {
        'use strict'; // needed to support `apply`/`call` with `undefined`/`null`

        var defineProperty = function () {
          // IE 8 only supports `Object.defineProperty` on DOM elements
          try {
            var object = {};
            var $defineProperty = Object.defineProperty;
            var result = $defineProperty(object, object, object) && $defineProperty;
          } catch (error) {}

          return result;
        }();

        var toString = {}.toString;

        var startsWith = function (search) {
          if (this == null) {
            throw new TypeError();
          }

          var string = String(this);

          if (search && toString.call(search) == '[object RegExp]') {
            throw new TypeError();
          }

          var stringLength = string.length;
          var searchString = String(search);
          var searchLength = searchString.length;
          var position = arguments.length > 1 ? arguments[1] : undefined; // `ToInteger`

          var pos = position ? Number(position) : 0;

          if (pos != pos) {
            // better `isNaN`
            pos = 0;
          }

          var start = Math.min(Math.max(pos, 0), stringLength); // Avoid the `indexOf` call if no match is possible

          if (searchLength + start > stringLength) {
            return false;
          }

          var index = -1;

          while (++index < searchLength) {
            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {
              return false;
            }
          }

          return true;
        };

        if (defineProperty) {
          defineProperty(String.prototype, 'startsWith', {
            'value': startsWith,
            'configurable': true,
            'writable': true
          });
        } else {
          String.prototype.startsWith = startsWith;
        }
      })();
    }

    if (!Object.keys) {
      Object.keys = function (o, // object
      k, // key
      r // result array
      ) {
        // initialize object and result
        r = []; // iterate over object keys

        for (k in o) {
          // fill result array with non-prototypical keys
          r.hasOwnProperty.call(o, k) && r.push(k);
        } // return result


        return r;
      };
    }

    if (HTMLSelectElement && !HTMLSelectElement.prototype.hasOwnProperty('selectedOptions')) {
      Object.defineProperty(HTMLSelectElement.prototype, 'selectedOptions', {
        get: function () {
          return this.querySelectorAll(':checked');
        }
      });
    }

    function getSelectedOptions(select, ignoreDisabled) {
      var selectedOptions = select.selectedOptions,
          options = [],
          opt;

      if (ignoreDisabled) {
        for (var i = 0, len = selectedOptions.length; i < len; i++) {
          opt = selectedOptions[i];

          if (!(opt.disabled || opt.parentNode.tagName === 'OPTGROUP' && opt.parentNode.disabled)) {
            options.push(opt);
          }
        }

        return options;
      }

      return selectedOptions;
    } // much faster than $.val()


    function getSelectValues(select, selectedOptions) {
      var value = [],
          options = selectedOptions || select.selectedOptions,
          opt;

      for (var i = 0, len = options.length; i < len; i++) {
        opt = options[i];

        if (!(opt.disabled || opt.parentNode.tagName === 'OPTGROUP' && opt.parentNode.disabled)) {
          value.push(opt.value);
        }
      }

      if (!select.multiple) {
        return !value.length ? null : value[0];
      }

      return value;
    } // set data-selected on select element if the value has been programmatically selected
    // prior to initialization of bootstrap-select
    // * consider removing or replacing an alternative method *


    var valHooks = {
      useDefault: false,
      _set: $.valHooks.select.set
    };

    $.valHooks.select.set = function (elem, value) {
      if (value && !valHooks.useDefault) $(elem).data('selected', true);
      return valHooks._set.apply(this, arguments);
    };

    var changedArguments = null;

    var EventIsSupported = function () {
      try {
        new Event('change');
        return true;
      } catch (e) {
        return false;
      }
    }();

    $.fn.triggerNative = function (eventName) {
      var el = this[0],
          event;

      if (el.dispatchEvent) {
        // for modern browsers & IE9+
        if (EventIsSupported) {
          // For modern browsers
          event = new Event(eventName, {
            bubbles: true
          });
        } else {
          // For IE since it doesn't support Event constructor
          event = document.createEvent('Event');
          event.initEvent(eventName, true, false);
        }

        el.dispatchEvent(event);
      } else if (el.fireEvent) {
        // for IE8
        event = document.createEventObject();
        event.eventType = eventName;
        el.fireEvent('on' + eventName, event);
      } else {
        // fall back to jQuery.trigger
        this.trigger(eventName);
      }
    }; // </editor-fold>


    function stringSearch(li, searchString, method, normalize) {
      var stringTypes = ['display', 'subtext', 'tokens'],
          searchSuccess = false;

      for (var i = 0; i < stringTypes.length; i++) {
        var stringType = stringTypes[i],
            string = li[stringType];

        if (string) {
          string = string.toString(); // Strip HTML tags. This isn't perfect, but it's much faster than any other method

          if (stringType === 'display') {
            string = string.replace(/<[^>]+>/g, '');
          }

          if (normalize) string = normalizeToBase(string);
          string = string.toUpperCase();

          if (method === 'contains') {
            searchSuccess = string.indexOf(searchString) >= 0;
          } else {
            searchSuccess = string.startsWith(searchString);
          }

          if (searchSuccess) break;
        }
      }

      return searchSuccess;
    }

    function toInteger(value) {
      return parseInt(value, 10) || 0;
    } // Borrowed from Lodash (_.deburr)

    /** Used to map Latin Unicode letters to basic Latin letters. */


    var deburredLetters = {
      // Latin-1 Supplement block.
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      // Latin Extended-A block.
      '\u0100': 'A',
      '\u0102': 'A',
      '\u0104': 'A',
      '\u0101': 'a',
      '\u0103': 'a',
      '\u0105': 'a',
      '\u0106': 'C',
      '\u0108': 'C',
      '\u010a': 'C',
      '\u010c': 'C',
      '\u0107': 'c',
      '\u0109': 'c',
      '\u010b': 'c',
      '\u010d': 'c',
      '\u010e': 'D',
      '\u0110': 'D',
      '\u010f': 'd',
      '\u0111': 'd',
      '\u0112': 'E',
      '\u0114': 'E',
      '\u0116': 'E',
      '\u0118': 'E',
      '\u011a': 'E',
      '\u0113': 'e',
      '\u0115': 'e',
      '\u0117': 'e',
      '\u0119': 'e',
      '\u011b': 'e',
      '\u011c': 'G',
      '\u011e': 'G',
      '\u0120': 'G',
      '\u0122': 'G',
      '\u011d': 'g',
      '\u011f': 'g',
      '\u0121': 'g',
      '\u0123': 'g',
      '\u0124': 'H',
      '\u0126': 'H',
      '\u0125': 'h',
      '\u0127': 'h',
      '\u0128': 'I',
      '\u012a': 'I',
      '\u012c': 'I',
      '\u012e': 'I',
      '\u0130': 'I',
      '\u0129': 'i',
      '\u012b': 'i',
      '\u012d': 'i',
      '\u012f': 'i',
      '\u0131': 'i',
      '\u0134': 'J',
      '\u0135': 'j',
      '\u0136': 'K',
      '\u0137': 'k',
      '\u0138': 'k',
      '\u0139': 'L',
      '\u013b': 'L',
      '\u013d': 'L',
      '\u013f': 'L',
      '\u0141': 'L',
      '\u013a': 'l',
      '\u013c': 'l',
      '\u013e': 'l',
      '\u0140': 'l',
      '\u0142': 'l',
      '\u0143': 'N',
      '\u0145': 'N',
      '\u0147': 'N',
      '\u014a': 'N',
      '\u0144': 'n',
      '\u0146': 'n',
      '\u0148': 'n',
      '\u014b': 'n',
      '\u014c': 'O',
      '\u014e': 'O',
      '\u0150': 'O',
      '\u014d': 'o',
      '\u014f': 'o',
      '\u0151': 'o',
      '\u0154': 'R',
      '\u0156': 'R',
      '\u0158': 'R',
      '\u0155': 'r',
      '\u0157': 'r',
      '\u0159': 'r',
      '\u015a': 'S',
      '\u015c': 'S',
      '\u015e': 'S',
      '\u0160': 'S',
      '\u015b': 's',
      '\u015d': 's',
      '\u015f': 's',
      '\u0161': 's',
      '\u0162': 'T',
      '\u0164': 'T',
      '\u0166': 'T',
      '\u0163': 't',
      '\u0165': 't',
      '\u0167': 't',
      '\u0168': 'U',
      '\u016a': 'U',
      '\u016c': 'U',
      '\u016e': 'U',
      '\u0170': 'U',
      '\u0172': 'U',
      '\u0169': 'u',
      '\u016b': 'u',
      '\u016d': 'u',
      '\u016f': 'u',
      '\u0171': 'u',
      '\u0173': 'u',
      '\u0174': 'W',
      '\u0175': 'w',
      '\u0176': 'Y',
      '\u0177': 'y',
      '\u0178': 'Y',
      '\u0179': 'Z',
      '\u017b': 'Z',
      '\u017d': 'Z',
      '\u017a': 'z',
      '\u017c': 'z',
      '\u017e': 'z',
      '\u0132': 'IJ',
      '\u0133': 'ij',
      '\u0152': 'Oe',
      '\u0153': 'oe',
      '\u0149': "'n",
      '\u017f': 's'
    };
    /** Used to match Latin Unicode letters (excluding mathematical operators). */

    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    /** Used to compose unicode character classes. */

    var rsComboMarksRange = '\\u0300-\\u036f',
        reComboHalfMarksRange = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange = '\\u20d0-\\u20ff',
        rsComboMarksExtendedRange = '\\u1ab0-\\u1aff',
        rsComboMarksSupplementRange = '\\u1dc0-\\u1dff',
        rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange + rsComboMarksExtendedRange + rsComboMarksSupplementRange;
    /** Used to compose unicode capture groups. */

    var rsCombo = '[' + rsComboRange + ']';
    /**
     * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
     * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
     */

    var reComboMark = RegExp(rsCombo, 'g');

    function deburrLetter(key) {
      return deburredLetters[key];
    }

    ;

    function normalizeToBase(string) {
      string = string.toString();
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    } // List of HTML entities for escaping.


    var escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '`': '&#x60;'
    }; // Functions for escaping and unescaping strings to/from HTML interpolation.

    var createEscaper = function (map) {
      var escaper = function (match) {
        return map[match];
      }; // Regexes for identifying a key that needs to be escaped.


      var source = '(?:' + Object.keys(map).join('|') + ')';
      var testRegexp = RegExp(source);
      var replaceRegexp = RegExp(source, 'g');
      return function (string) {
        string = string == null ? '' : '' + string;
        return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
      };
    };

    var htmlEscape = createEscaper(escapeMap);
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */

    var keyCodeMap = {
      32: ' ',
      48: '0',
      49: '1',
      50: '2',
      51: '3',
      52: '4',
      53: '5',
      54: '6',
      55: '7',
      56: '8',
      57: '9',
      59: ';',
      65: 'A',
      66: 'B',
      67: 'C',
      68: 'D',
      69: 'E',
      70: 'F',
      71: 'G',
      72: 'H',
      73: 'I',
      74: 'J',
      75: 'K',
      76: 'L',
      77: 'M',
      78: 'N',
      79: 'O',
      80: 'P',
      81: 'Q',
      82: 'R',
      83: 'S',
      84: 'T',
      85: 'U',
      86: 'V',
      87: 'W',
      88: 'X',
      89: 'Y',
      90: 'Z',
      96: '0',
      97: '1',
      98: '2',
      99: '3',
      100: '4',
      101: '5',
      102: '6',
      103: '7',
      104: '8',
      105: '9'
    };
    var keyCodes = {
      ESCAPE: 27,
      // KeyboardEvent.which value for Escape (Esc) key
      ENTER: 13,
      // KeyboardEvent.which value for Enter key
      SPACE: 32,
      // KeyboardEvent.which value for space key
      TAB: 9,
      // KeyboardEvent.which value for tab key
      ARROW_UP: 38,
      // KeyboardEvent.which value for up arrow key
      ARROW_DOWN: 40 // KeyboardEvent.which value for down arrow key

    };
    var version = {
      success: false,
      major: '3'
    };

    try {
      version.full = ($.fn.dropdown.Constructor.VERSION || '').split(' ')[0].split('.');
      version.major = version.full[0];
      version.success = true;
    } catch (err) {// do nothing
    }

    var selectId = 0;
    var EVENT_KEY = '.bs.select';
    var classNames = {
      DISABLED: 'disabled',
      DIVIDER: 'divider',
      SHOW: 'open',
      DROPUP: 'dropup',
      MENU: 'dropdown-menu',
      MENURIGHT: 'dropdown-menu-right',
      MENULEFT: 'dropdown-menu-left',
      // to-do: replace with more advanced template/customization options
      BUTTONCLASS: 'btn-default',
      POPOVERHEADER: 'popover-title',
      ICONBASE: 'glyphicon',
      TICKICON: 'glyphicon-ok'
    };
    var Selector = {
      MENU: '.' + classNames.MENU
    };
    var elementTemplates = {
      div: document.createElement('div'),
      span: document.createElement('span'),
      i: document.createElement('i'),
      subtext: document.createElement('small'),
      a: document.createElement('a'),
      li: document.createElement('li'),
      whitespace: document.createTextNode('\u00A0'),
      fragment: document.createDocumentFragment()
    };
    elementTemplates.noResults = elementTemplates.li.cloneNode(false);
    elementTemplates.noResults.className = 'no-results';
    elementTemplates.a.setAttribute('role', 'option');
    elementTemplates.a.className = 'dropdown-item';
    elementTemplates.subtext.className = 'text-muted';
    elementTemplates.text = elementTemplates.span.cloneNode(false);
    elementTemplates.text.className = 'text';
    elementTemplates.checkMark = elementTemplates.span.cloneNode(false);
    var REGEXP_ARROW = new RegExp(keyCodes.ARROW_UP + '|' + keyCodes.ARROW_DOWN);
    var REGEXP_TAB_OR_ESCAPE = new RegExp('^' + keyCodes.TAB + '$|' + keyCodes.ESCAPE);
    var generateOption = {
      li: function (content, classes, optgroup) {
        var li = elementTemplates.li.cloneNode(false);

        if (content) {
          if (content.nodeType === 1 || content.nodeType === 11) {
            li.appendChild(content);
          } else {
            li.innerHTML = content;
          }
        }

        if (typeof classes !== 'undefined' && classes !== '') li.className = classes;
        if (typeof optgroup !== 'undefined' && optgroup !== null) li.classList.add('optgroup-' + optgroup);
        return li;
      },
      a: function (text, classes, inline) {
        var a = elementTemplates.a.cloneNode(true);

        if (text) {
          if (text.nodeType === 11) {
            a.appendChild(text);
          } else {
            a.insertAdjacentHTML('beforeend', text);
          }
        }

        if (typeof classes !== 'undefined' && classes !== '') a.classList.add.apply(a.classList, classes.split(/\s+/));
        if (inline) a.setAttribute('style', inline);
        return a;
      },
      text: function (options, useFragment) {
        var textElement = elementTemplates.text.cloneNode(false),
            subtextElement,
            iconElement;

        if (options.content) {
          textElement.innerHTML = options.content;
        } else {
          textElement.textContent = options.text;

          if (options.icon) {
            var whitespace = elementTemplates.whitespace.cloneNode(false); // need to use <i> for icons in the button to prevent a breaking change
            // note: switch to span in next major release

            iconElement = (useFragment === true ? elementTemplates.i : elementTemplates.span).cloneNode(false);
            iconElement.className = this.options.iconBase + ' ' + options.icon;
            elementTemplates.fragment.appendChild(iconElement);
            elementTemplates.fragment.appendChild(whitespace);
          }

          if (options.subtext) {
            subtextElement = elementTemplates.subtext.cloneNode(false);
            subtextElement.textContent = options.subtext;
            textElement.appendChild(subtextElement);
          }
        }

        if (useFragment === true) {
          while (textElement.childNodes.length > 0) {
            elementTemplates.fragment.appendChild(textElement.childNodes[0]);
          }
        } else {
          elementTemplates.fragment.appendChild(textElement);
        }

        return elementTemplates.fragment;
      },
      label: function (options) {
        var textElement = elementTemplates.text.cloneNode(false),
            subtextElement,
            iconElement;
        textElement.innerHTML = options.display;

        if (options.icon) {
          var whitespace = elementTemplates.whitespace.cloneNode(false);
          iconElement = elementTemplates.span.cloneNode(false);
          iconElement.className = this.options.iconBase + ' ' + options.icon;
          elementTemplates.fragment.appendChild(iconElement);
          elementTemplates.fragment.appendChild(whitespace);
        }

        if (options.subtext) {
          subtextElement = elementTemplates.subtext.cloneNode(false);
          subtextElement.textContent = options.subtext;
          textElement.appendChild(subtextElement);
        }

        elementTemplates.fragment.appendChild(textElement);
        return elementTemplates.fragment;
      }
    };

    function showNoResults(searchMatch, searchValue) {
      if (!searchMatch.length) {
        elementTemplates.noResults.innerHTML = this.options.noneResultsText.replace('{0}', '"' + htmlEscape(searchValue) + '"');
        this.$menuInner[0].firstChild.appendChild(elementTemplates.noResults);
      }
    }

    var Selectpicker = function (element, options) {
      var that = this; // bootstrap-select has been initialized - revert valHooks.select.set back to its original function

      if (!valHooks.useDefault) {
        $.valHooks.select.set = valHooks._set;
        valHooks.useDefault = true;
      }

      this.$element = $(element);
      this.$newElement = null;
      this.$button = null;
      this.$menu = null;
      this.options = options;
      this.selectpicker = {
        main: {},
        search: {},
        current: {},
        // current changes if a search is in progress
        view: {},
        isSearching: false,
        keydown: {
          keyHistory: '',
          resetKeyHistory: {
            start: function () {
              return setTimeout(function () {
                that.selectpicker.keydown.keyHistory = '';
              }, 800);
            }
          }
        }
      };
      this.sizeInfo = {}; // If we have no title yet, try to pull it from the html title attribute (jQuery doesnt' pick it up as it's not a
      // data-attribute)

      if (this.options.title === null) {
        this.options.title = this.$element.attr('title');
      } // Format window padding


      var winPad = this.options.windowPadding;

      if (typeof winPad === 'number') {
        this.options.windowPadding = [winPad, winPad, winPad, winPad];
      } // Expose public methods


      this.val = Selectpicker.prototype.val;
      this.render = Selectpicker.prototype.render;
      this.refresh = Selectpicker.prototype.refresh;
      this.setStyle = Selectpicker.prototype.setStyle;
      this.selectAll = Selectpicker.prototype.selectAll;
      this.deselectAll = Selectpicker.prototype.deselectAll;
      this.destroy = Selectpicker.prototype.destroy;
      this.remove = Selectpicker.prototype.remove;
      this.show = Selectpicker.prototype.show;
      this.hide = Selectpicker.prototype.hide;
      this.init();
    };

    Selectpicker.VERSION = '1.13.18'; // part of this is duplicated in i18n/defaults-en_US.js. Make sure to update both.

    Selectpicker.DEFAULTS = {
      noneSelectedText: 'Nothing selected',
      noneResultsText: 'No results matched {0}',
      countSelectedText: function (numSelected, numTotal) {
        return numSelected == 1 ? '{0} item selected' : '{0} items selected';
      },
      maxOptionsText: function (numAll, numGroup) {
        return [numAll == 1 ? 'Limit reached ({n} item max)' : 'Limit reached ({n} items max)', numGroup == 1 ? 'Group limit reached ({n} item max)' : 'Group limit reached ({n} items max)'];
      },
      selectAllText: 'Select All',
      deselectAllText: 'Deselect All',
      doneButton: false,
      doneButtonText: 'Close',
      multipleSeparator: ', ',
      styleBase: 'btn',
      style: classNames.BUTTONCLASS,
      size: 'auto',
      title: null,
      selectedTextFormat: 'values',
      width: false,
      container: false,
      hideDisabled: false,
      showSubtext: false,
      showIcon: true,
      showContent: true,
      dropupAuto: true,
      header: false,
      liveSearch: false,
      liveSearchPlaceholder: null,
      liveSearchNormalize: false,
      liveSearchStyle: 'contains',
      actionsBox: false,
      iconBase: classNames.ICONBASE,
      tickIcon: classNames.TICKICON,
      showTick: false,
      template: {
        caret: '<span class="caret"></span>'
      },
      maxOptions: false,
      mobile: false,
      selectOnTab: false,
      dropdownAlignRight: false,
      windowPadding: 0,
      virtualScroll: 600,
      display: false,
      sanitize: true,
      sanitizeFn: null,
      whiteList: DefaultWhitelist
    };
    Selectpicker.prototype = {
      constructor: Selectpicker,
      init: function () {
        var that = this,
            id = this.$element.attr('id'),
            element = this.$element[0],
            form = element.form;
        selectId++;
        this.selectId = 'bs-select-' + selectId;
        element.classList.add('bs-select-hidden');
        this.multiple = this.$element.prop('multiple');
        this.autofocus = this.$element.prop('autofocus');

        if (element.classList.contains('show-tick')) {
          this.options.showTick = true;
        }

        this.$newElement = this.createDropdown();
        this.buildData();
        this.$element.after(this.$newElement).prependTo(this.$newElement); // ensure select is associated with form element if it got unlinked after moving it inside newElement

        if (form && element.form === null) {
          if (!form.id) form.id = 'form-' + this.selectId;
          element.setAttribute('form', form.id);
        }

        this.$button = this.$newElement.children('button');
        this.$menu = this.$newElement.children(Selector.MENU);
        this.$menuInner = this.$menu.children('.inner');
        this.$searchbox = this.$menu.find('input');
        element.classList.remove('bs-select-hidden');
        if (this.options.dropdownAlignRight === true) this.$menu[0].classList.add(classNames.MENURIGHT);

        if (typeof id !== 'undefined') {
          this.$button.attr('data-id', id);
        }

        this.checkDisabled();
        this.clickListener();

        if (this.options.liveSearch) {
          this.liveSearchListener();
          this.focusedParent = this.$searchbox[0];
        } else {
          this.focusedParent = this.$menuInner[0];
        }

        this.setStyle();
        this.render();
        this.setWidth();

        if (this.options.container) {
          this.selectPosition();
        } else {
          this.$element.on('hide' + EVENT_KEY, function () {
            if (that.isVirtual()) {
              // empty menu on close
              var menuInner = that.$menuInner[0],
                  emptyMenu = menuInner.firstChild.cloneNode(false); // replace the existing UL with an empty one - this is faster than $.empty() or innerHTML = ''

              menuInner.replaceChild(emptyMenu, menuInner.firstChild);
              menuInner.scrollTop = 0;
            }
          });
        }

        this.$menu.data('this', this);
        this.$newElement.data('this', this);
        if (this.options.mobile) this.mobile();
        this.$newElement.on({
          'hide.bs.dropdown': function (e) {
            that.$element.trigger('hide' + EVENT_KEY, e);
          },
          'hidden.bs.dropdown': function (e) {
            that.$element.trigger('hidden' + EVENT_KEY, e);
          },
          'show.bs.dropdown': function (e) {
            that.$element.trigger('show' + EVENT_KEY, e);
          },
          'shown.bs.dropdown': function (e) {
            that.$element.trigger('shown' + EVENT_KEY, e);
          }
        });

        if (element.hasAttribute('required')) {
          this.$element.on('invalid' + EVENT_KEY, function () {
            that.$button[0].classList.add('bs-invalid');
            that.$element.on('shown' + EVENT_KEY + '.invalid', function () {
              that.$element.val(that.$element.val()) // set the value to hide the validation message in Chrome when menu is opened
              .off('shown' + EVENT_KEY + '.invalid');
            }).on('rendered' + EVENT_KEY, function () {
              // if select is no longer invalid, remove the bs-invalid class
              if (this.validity.valid) that.$button[0].classList.remove('bs-invalid');
              that.$element.off('rendered' + EVENT_KEY);
            });
            that.$button.on('blur' + EVENT_KEY, function () {
              that.$element.trigger('focus').trigger('blur');
              that.$button.off('blur' + EVENT_KEY);
            });
          });
        }

        setTimeout(function () {
          that.buildList();
          that.$element.trigger('loaded' + EVENT_KEY);
        });
      },
      createDropdown: function () {
        // Options
        // If we are multiple or showTick option is set, then add the show-tick class
        var showTick = this.multiple || this.options.showTick ? ' show-tick' : '',
            multiselectable = this.multiple ? ' aria-multiselectable="true"' : '',
            inputGroup = '',
            autofocus = this.autofocus ? ' autofocus' : '';

        if (version.major < 4 && this.$element.parent().hasClass('input-group')) {
          inputGroup = ' input-group-btn';
        } // Elements


        var drop,
            header = '',
            searchbox = '',
            actionsbox = '',
            donebutton = '';

        if (this.options.header) {
          header = '<div class="' + classNames.POPOVERHEADER + '">' + '<button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + '</div>';
        }

        if (this.options.liveSearch) {
          searchbox = '<div class="bs-searchbox">' + '<input type="search" class="form-control" autocomplete="off"' + (this.options.liveSearchPlaceholder === null ? '' : ' placeholder="' + htmlEscape(this.options.liveSearchPlaceholder) + '"') + ' role="combobox" aria-label="Search" aria-controls="' + this.selectId + '" aria-autocomplete="list">' + '</div>';
        }

        if (this.multiple && this.options.actionsBox) {
          actionsbox = '<div class="bs-actionsbox">' + '<div class="btn-group btn-group-sm btn-block">' + '<button type="button" class="actions-btn bs-select-all btn ' + classNames.BUTTONCLASS + '">' + this.options.selectAllText + '</button>' + '<button type="button" class="actions-btn bs-deselect-all btn ' + classNames.BUTTONCLASS + '">' + this.options.deselectAllText + '</button>' + '</div>' + '</div>';
        }

        if (this.multiple && this.options.doneButton) {
          donebutton = '<div class="bs-donebutton">' + '<div class="btn-group btn-block">' + '<button type="button" class="btn btn-sm ' + classNames.BUTTONCLASS + '">' + this.options.doneButtonText + '</button>' + '</div>' + '</div>';
        }

        drop = '<div class="dropdown bootstrap-select' + showTick + inputGroup + '">' + '<button type="button" tabindex="-1" class="' + this.options.styleBase + ' dropdown-toggle" ' + (this.options.display === 'static' ? 'data-display="static"' : '') + 'data-toggle="dropdown"' + autofocus + ' role="combobox" aria-owns="' + this.selectId + '" aria-haspopup="listbox" aria-expanded="false">' + '<div class="filter-option">' + '<div class="filter-option-inner">' + '<div class="filter-option-inner-inner"></div>' + '</div> ' + '</div>' + (version.major === '4' ? '' : '<span class="bs-caret">' + this.options.template.caret + '</span>') + '</button>' + '<div class="' + classNames.MENU + ' ' + (version.major === '4' ? '' : classNames.SHOW) + '">' + header + searchbox + actionsbox + '<div class="inner ' + classNames.SHOW + '" role="listbox" id="' + this.selectId + '" tabindex="-1" ' + multiselectable + '>' + '<ul class="' + classNames.MENU + ' inner ' + (version.major === '4' ? classNames.SHOW : '') + '" role="presentation">' + '</ul>' + '</div>' + donebutton + '</div>' + '</div>';
        return $(drop);
      },
      setPositionData: function () {
        this.selectpicker.view.canHighlight = [];
        this.selectpicker.view.size = 0;
        this.selectpicker.view.firstHighlightIndex = false;

        for (var i = 0; i < this.selectpicker.current.data.length; i++) {
          var li = this.selectpicker.current.data[i],
              canHighlight = true;

          if (li.type === 'divider') {
            canHighlight = false;
            li.height = this.sizeInfo.dividerHeight;
          } else if (li.type === 'optgroup-label') {
            canHighlight = false;
            li.height = this.sizeInfo.dropdownHeaderHeight;
          } else {
            li.height = this.sizeInfo.liHeight;
          }

          if (li.disabled) canHighlight = false;
          this.selectpicker.view.canHighlight.push(canHighlight);

          if (canHighlight) {
            this.selectpicker.view.size++;
            li.posinset = this.selectpicker.view.size;
            if (this.selectpicker.view.firstHighlightIndex === false) this.selectpicker.view.firstHighlightIndex = i;
          }

          li.position = (i === 0 ? 0 : this.selectpicker.current.data[i - 1].position) + li.height;
        }
      },
      isVirtual: function () {
        return this.options.virtualScroll !== false && this.selectpicker.main.elements.length >= this.options.virtualScroll || this.options.virtualScroll === true;
      },
      createView: function (isSearching, setSize, refresh) {
        var that = this,
            scrollTop = 0,
            active = [],
            selected,
            prevActive;
        this.selectpicker.isSearching = isSearching;
        this.selectpicker.current = isSearching ? this.selectpicker.search : this.selectpicker.main;
        this.setPositionData();

        if (setSize) {
          if (refresh) {
            scrollTop = this.$menuInner[0].scrollTop;
          } else if (!that.multiple) {
            var element = that.$element[0],
                selectedIndex = (element.options[element.selectedIndex] || {}).liIndex;

            if (typeof selectedIndex === 'number' && that.options.size !== false) {
              var selectedData = that.selectpicker.main.data[selectedIndex],
                  position = selectedData && selectedData.position;

              if (position) {
                scrollTop = position - (that.sizeInfo.menuInnerHeight + that.sizeInfo.liHeight) / 2;
              }
            }
          }
        }

        scroll(scrollTop, true);
        this.$menuInner.off('scroll.createView').on('scroll.createView', function (e, updateValue) {
          if (!that.noScroll) scroll(this.scrollTop, updateValue);
          that.noScroll = false;
        });

        function scroll(scrollTop, init) {
          var size = that.selectpicker.current.elements.length,
              chunks = [],
              chunkSize,
              chunkCount,
              firstChunk,
              lastChunk,
              currentChunk,
              prevPositions,
              positionIsDifferent,
              previousElements,
              menuIsDifferent = true,
              isVirtual = that.isVirtual();
          that.selectpicker.view.scrollTop = scrollTop;
          chunkSize = Math.ceil(that.sizeInfo.menuInnerHeight / that.sizeInfo.liHeight * 1.5); // number of options in a chunk

          chunkCount = Math.round(size / chunkSize) || 1; // number of chunks

          for (var i = 0; i < chunkCount; i++) {
            var endOfChunk = (i + 1) * chunkSize;

            if (i === chunkCount - 1) {
              endOfChunk = size;
            }

            chunks[i] = [i * chunkSize + (!i ? 0 : 1), endOfChunk];
            if (!size) break;

            if (currentChunk === undefined && scrollTop - 1 <= that.selectpicker.current.data[endOfChunk - 1].position - that.sizeInfo.menuInnerHeight) {
              currentChunk = i;
            }
          }

          if (currentChunk === undefined) currentChunk = 0;
          prevPositions = [that.selectpicker.view.position0, that.selectpicker.view.position1]; // always display previous, current, and next chunks

          firstChunk = Math.max(0, currentChunk - 1);
          lastChunk = Math.min(chunkCount - 1, currentChunk + 1);
          that.selectpicker.view.position0 = isVirtual === false ? 0 : Math.max(0, chunks[firstChunk][0]) || 0;
          that.selectpicker.view.position1 = isVirtual === false ? size : Math.min(size, chunks[lastChunk][1]) || 0;
          positionIsDifferent = prevPositions[0] !== that.selectpicker.view.position0 || prevPositions[1] !== that.selectpicker.view.position1;

          if (that.activeIndex !== undefined) {
            prevActive = that.selectpicker.main.elements[that.prevActiveIndex];
            active = that.selectpicker.main.elements[that.activeIndex];
            selected = that.selectpicker.main.elements[that.selectedIndex];

            if (init) {
              if (that.activeIndex !== that.selectedIndex) {
                that.defocusItem(active);
              }

              that.activeIndex = undefined;
            }

            if (that.activeIndex && that.activeIndex !== that.selectedIndex) {
              that.defocusItem(selected);
            }
          }

          if (that.prevActiveIndex !== undefined && that.prevActiveIndex !== that.activeIndex && that.prevActiveIndex !== that.selectedIndex) {
            that.defocusItem(prevActive);
          }

          if (init || positionIsDifferent) {
            previousElements = that.selectpicker.view.visibleElements ? that.selectpicker.view.visibleElements.slice() : [];

            if (isVirtual === false) {
              that.selectpicker.view.visibleElements = that.selectpicker.current.elements;
            } else {
              that.selectpicker.view.visibleElements = that.selectpicker.current.elements.slice(that.selectpicker.view.position0, that.selectpicker.view.position1);
            }

            that.setOptionStatus(); // if searching, check to make sure the list has actually been updated before updating DOM
            // this prevents unnecessary repaints

            if (isSearching || isVirtual === false && init) menuIsDifferent = !isEqual(previousElements, that.selectpicker.view.visibleElements); // if virtual scroll is disabled and not searching,
            // menu should never need to be updated more than once

            if ((init || isVirtual === true) && menuIsDifferent) {
              var menuInner = that.$menuInner[0],
                  menuFragment = document.createDocumentFragment(),
                  emptyMenu = menuInner.firstChild.cloneNode(false),
                  marginTop,
                  marginBottom,
                  elements = that.selectpicker.view.visibleElements,
                  toSanitize = []; // replace the existing UL with an empty one - this is faster than $.empty()

              menuInner.replaceChild(emptyMenu, menuInner.firstChild);

              for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {
                var element = elements[i],
                    elText,
                    elementData;

                if (that.options.sanitize) {
                  elText = element.lastChild;

                  if (elText) {
                    elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0];

                    if (elementData && elementData.content && !elementData.sanitized) {
                      toSanitize.push(elText);
                      elementData.sanitized = true;
                    }
                  }
                }

                menuFragment.appendChild(element);
              }

              if (that.options.sanitize && toSanitize.length) {
                sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);
              }

              if (isVirtual === true) {
                marginTop = that.selectpicker.view.position0 === 0 ? 0 : that.selectpicker.current.data[that.selectpicker.view.position0 - 1].position;
                marginBottom = that.selectpicker.view.position1 > size - 1 ? 0 : that.selectpicker.current.data[size - 1].position - that.selectpicker.current.data[that.selectpicker.view.position1 - 1].position;
                menuInner.firstChild.style.marginTop = marginTop + 'px';
                menuInner.firstChild.style.marginBottom = marginBottom + 'px';
              } else {
                menuInner.firstChild.style.marginTop = 0;
                menuInner.firstChild.style.marginBottom = 0;
              }

              menuInner.firstChild.appendChild(menuFragment); // if an option is encountered that is wider than the current menu width, update the menu width accordingly
              // switch to ResizeObserver with increased browser support

              if (isVirtual === true && that.sizeInfo.hasScrollBar) {
                var menuInnerInnerWidth = menuInner.firstChild.offsetWidth;

                if (init && menuInnerInnerWidth < that.sizeInfo.menuInnerInnerWidth && that.sizeInfo.totalMenuWidth > that.sizeInfo.selectWidth) {
                  menuInner.firstChild.style.minWidth = that.sizeInfo.menuInnerInnerWidth + 'px';
                } else if (menuInnerInnerWidth > that.sizeInfo.menuInnerInnerWidth) {
                  // set to 0 to get actual width of menu
                  that.$menu[0].style.minWidth = 0;
                  var actualMenuWidth = menuInner.firstChild.offsetWidth;

                  if (actualMenuWidth > that.sizeInfo.menuInnerInnerWidth) {
                    that.sizeInfo.menuInnerInnerWidth = actualMenuWidth;
                    menuInner.firstChild.style.minWidth = that.sizeInfo.menuInnerInnerWidth + 'px';
                  } // reset to default CSS styling


                  that.$menu[0].style.minWidth = '';
                }
              }
            }
          }

          that.prevActiveIndex = that.activeIndex;

          if (!that.options.liveSearch) {
            that.$menuInner.trigger('focus');
          } else if (isSearching && init) {
            var index = 0,
                newActive;

            if (!that.selectpicker.view.canHighlight[index]) {
              index = 1 + that.selectpicker.view.canHighlight.slice(1).indexOf(true);
            }

            newActive = that.selectpicker.view.visibleElements[index];
            that.defocusItem(that.selectpicker.view.currentActive);
            that.activeIndex = (that.selectpicker.current.data[index] || {}).index;
            that.focusItem(newActive);
          }
        }

        $(window).off('resize' + EVENT_KEY + '.' + this.selectId + '.createView').on('resize' + EVENT_KEY + '.' + this.selectId + '.createView', function () {
          var isActive = that.$newElement.hasClass(classNames.SHOW);
          if (isActive) scroll(that.$menuInner[0].scrollTop);
        });
      },
      focusItem: function (li, liData, noStyle) {
        if (li) {
          liData = liData || this.selectpicker.main.data[this.activeIndex];
          var a = li.firstChild;

          if (a) {
            a.setAttribute('aria-setsize', this.selectpicker.view.size);
            a.setAttribute('aria-posinset', liData.posinset);

            if (noStyle !== true) {
              this.focusedParent.setAttribute('aria-activedescendant', a.id);
              li.classList.add('active');
              a.classList.add('active');
            }
          }
        }
      },
      defocusItem: function (li) {
        if (li) {
          li.classList.remove('active');
          if (li.firstChild) li.firstChild.classList.remove('active');
        }
      },
      setPlaceholder: function () {
        var that = this,
            updateIndex = false;

        if (this.options.title && !this.multiple) {
          if (!this.selectpicker.view.titleOption) this.selectpicker.view.titleOption = document.createElement('option'); // this option doesn't create a new <li> element, but does add a new option at the start,
          // so startIndex should increase to prevent having to check every option for the bs-title-option class

          updateIndex = true;
          var element = this.$element[0],
              selectTitleOption = false,
              titleNotAppended = !this.selectpicker.view.titleOption.parentNode,
              selectedIndex = element.selectedIndex,
              selectedOption = element.options[selectedIndex],
              navigation = window.performance && window.performance.getEntriesByType('navigation'),
              // Safari doesn't support getEntriesByType('navigation') - fall back to performance.navigation
          isNotBackForward = navigation && navigation.length ? navigation[0].type !== 'back_forward' : window.performance.navigation.type !== 2;

          if (titleNotAppended) {
            // Use native JS to prepend option (faster)
            this.selectpicker.view.titleOption.className = 'bs-title-option';
            this.selectpicker.view.titleOption.value = ''; // Check if selected or data-selected attribute is already set on an option. If not, select the titleOption option.
            // the selected item may have been changed by user or programmatically before the bootstrap select plugin runs,
            // if so, the select will have the data-selected attribute

            selectTitleOption = !selectedOption || selectedIndex === 0 && selectedOption.defaultSelected === false && this.$element.data('selected') === undefined;
          }

          if (titleNotAppended || this.selectpicker.view.titleOption.index !== 0) {
            element.insertBefore(this.selectpicker.view.titleOption, element.firstChild);
          } // Set selected *after* appending to select,
          // otherwise the option doesn't get selected in IE
          // set using selectedIndex, as setting the selected attr to true here doesn't work in IE11


          if (selectTitleOption && isNotBackForward) {
            element.selectedIndex = 0;
          } else if (document.readyState !== 'complete') {
            // if navigation type is back_forward, there's a chance the select will have its value set by BFCache
            // wait for that value to be set, then run render again
            window.addEventListener('pageshow', function () {
              if (that.selectpicker.view.displayedValue !== element.value) that.render();
            });
          }
        }

        return updateIndex;
      },
      buildData: function () {
        var optionSelector = ':not([hidden]):not([data-hidden="true"])',
            mainData = [],
            optID = 0,
            startIndex = this.setPlaceholder() ? 1 : 0; // append the titleOption if necessary and skip the first option in the loop

        if (this.options.hideDisabled) optionSelector += ':not(:disabled)';
        var selectOptions = this.$element[0].querySelectorAll('select > *' + optionSelector);

        function addDivider(config) {
          var previousData = mainData[mainData.length - 1]; // ensure optgroup doesn't create back-to-back dividers

          if (previousData && previousData.type === 'divider' && (previousData.optID || config.optID)) {
            return;
          }

          config = config || {};
          config.type = 'divider';
          mainData.push(config);
        }

        function addOption(option, config) {
          config = config || {};
          config.divider = option.getAttribute('data-divider') === 'true';

          if (config.divider) {
            addDivider({
              optID: config.optID
            });
          } else {
            var liIndex = mainData.length,
                cssText = option.style.cssText,
                inlineStyle = cssText ? htmlEscape(cssText) : '',
                optionClass = (option.className || '') + (config.optgroupClass || '');
            if (config.optID) optionClass = 'opt ' + optionClass;
            config.optionClass = optionClass.trim();
            config.inlineStyle = inlineStyle;
            config.text = option.textContent;
            config.content = option.getAttribute('data-content');
            config.tokens = option.getAttribute('data-tokens');
            config.subtext = option.getAttribute('data-subtext');
            config.icon = option.getAttribute('data-icon');
            option.liIndex = liIndex;
            config.display = config.content || config.text;
            config.type = 'option';
            config.index = liIndex;
            config.option = option;
            config.selected = !!option.selected;
            config.disabled = config.disabled || !!option.disabled;
            mainData.push(config);
          }
        }

        function addOptgroup(index, selectOptions) {
          var optgroup = selectOptions[index],
              // skip placeholder option
          previous = index - 1 < startIndex ? false : selectOptions[index - 1],
              next = selectOptions[index + 1],
              options = optgroup.querySelectorAll('option' + optionSelector);
          if (!options.length) return;
          var config = {
            display: htmlEscape(optgroup.label),
            subtext: optgroup.getAttribute('data-subtext'),
            icon: optgroup.getAttribute('data-icon'),
            type: 'optgroup-label',
            optgroupClass: ' ' + (optgroup.className || '')
          },
              headerIndex,
              lastIndex;
          optID++;

          if (previous) {
            addDivider({
              optID: optID
            });
          }

          config.optID = optID;
          mainData.push(config);

          for (var j = 0, len = options.length; j < len; j++) {
            var option = options[j];

            if (j === 0) {
              headerIndex = mainData.length - 1;
              lastIndex = headerIndex + len;
            }

            addOption(option, {
              headerIndex: headerIndex,
              lastIndex: lastIndex,
              optID: config.optID,
              optgroupClass: config.optgroupClass,
              disabled: optgroup.disabled
            });
          }

          if (next) {
            addDivider({
              optID: optID
            });
          }
        }

        for (var len = selectOptions.length, i = startIndex; i < len; i++) {
          var item = selectOptions[i];

          if (item.tagName !== 'OPTGROUP') {
            addOption(item, {});
          } else {
            addOptgroup(i, selectOptions);
          }
        }

        this.selectpicker.main.data = this.selectpicker.current.data = mainData;
      },
      buildList: function () {
        var that = this,
            selectData = this.selectpicker.main.data,
            mainElements = [],
            widestOptionLength = 0;

        if ((that.options.showTick || that.multiple) && !elementTemplates.checkMark.parentNode) {
          elementTemplates.checkMark.className = this.options.iconBase + ' ' + that.options.tickIcon + ' check-mark';
          elementTemplates.a.appendChild(elementTemplates.checkMark);
        }

        function buildElement(item) {
          var liElement,
              combinedLength = 0;

          switch (item.type) {
            case 'divider':
              liElement = generateOption.li(false, classNames.DIVIDER, item.optID ? item.optID + 'div' : undefined);
              break;

            case 'option':
              liElement = generateOption.li(generateOption.a(generateOption.text.call(that, item), item.optionClass, item.inlineStyle), '', item.optID);

              if (liElement.firstChild) {
                liElement.firstChild.id = that.selectId + '-' + item.index;
              }

              break;

            case 'optgroup-label':
              liElement = generateOption.li(generateOption.label.call(that, item), 'dropdown-header' + item.optgroupClass, item.optID);
              break;
          }

          item.element = liElement;
          mainElements.push(liElement); // count the number of characters in the option - not perfect, but should work in most cases

          if (item.display) combinedLength += item.display.length;
          if (item.subtext) combinedLength += item.subtext.length; // if there is an icon, ensure this option's width is checked

          if (item.icon) combinedLength += 1;

          if (combinedLength > widestOptionLength) {
            widestOptionLength = combinedLength; // guess which option is the widest
            // use this when calculating menu width
            // not perfect, but it's fast, and the width will be updating accordingly when scrolling

            that.selectpicker.view.widestOption = mainElements[mainElements.length - 1];
          }
        }

        for (var len = selectData.length, i = 0; i < len; i++) {
          var item = selectData[i];
          buildElement(item);
        }

        this.selectpicker.main.elements = this.selectpicker.current.elements = mainElements;
      },
      findLis: function () {
        return this.$menuInner.find('.inner > li');
      },
      render: function () {
        var that = this,
            element = this.$element[0],
            // ensure titleOption is appended and selected (if necessary) before getting selectedOptions
        placeholderSelected = this.setPlaceholder() && element.selectedIndex === 0,
            selectedOptions = getSelectedOptions(element, this.options.hideDisabled),
            selectedCount = selectedOptions.length,
            button = this.$button[0],
            buttonInner = button.querySelector('.filter-option-inner-inner'),
            multipleSeparator = document.createTextNode(this.options.multipleSeparator),
            titleFragment = elementTemplates.fragment.cloneNode(false),
            showCount,
            countMax,
            hasContent = false;
        button.classList.toggle('bs-placeholder', that.multiple ? !selectedCount : !getSelectValues(element, selectedOptions));

        if (!that.multiple && selectedOptions.length === 1) {
          that.selectpicker.view.displayedValue = getSelectValues(element, selectedOptions);
        }

        if (this.options.selectedTextFormat === 'static') {
          titleFragment = generateOption.text.call(this, {
            text: this.options.title
          }, true);
        } else {
          showCount = this.multiple && this.options.selectedTextFormat.indexOf('count') !== -1 && selectedCount > 1; // determine if the number of selected options will be shown (showCount === true)

          if (showCount) {
            countMax = this.options.selectedTextFormat.split('>');
            showCount = countMax.length > 1 && selectedCount > countMax[1] || countMax.length === 1 && selectedCount >= 2;
          } // only loop through all selected options if the count won't be shown


          if (showCount === false) {
            if (!placeholderSelected) {
              for (var selectedIndex = 0; selectedIndex < selectedCount; selectedIndex++) {
                if (selectedIndex < 50) {
                  var option = selectedOptions[selectedIndex],
                      thisData = this.selectpicker.main.data[option.liIndex],
                      titleOptions = {};

                  if (this.multiple && selectedIndex > 0) {
                    titleFragment.appendChild(multipleSeparator.cloneNode(false));
                  }

                  if (option.title) {
                    titleOptions.text = option.title;
                  } else if (thisData) {
                    if (thisData.content && that.options.showContent) {
                      titleOptions.content = thisData.content.toString();
                      hasContent = true;
                    } else {
                      if (that.options.showIcon) {
                        titleOptions.icon = thisData.icon;
                      }

                      if (that.options.showSubtext && !that.multiple && thisData.subtext) titleOptions.subtext = ' ' + thisData.subtext;
                      titleOptions.text = option.textContent.trim();
                    }
                  }

                  titleFragment.appendChild(generateOption.text.call(this, titleOptions, true));
                } else {
                  break;
                }
              } // add ellipsis


              if (selectedCount > 49) {
                titleFragment.appendChild(document.createTextNode('...'));
              }
            }
          } else {
            var optionSelector = ':not([hidden]):not([data-hidden="true"]):not([data-divider="true"])';
            if (this.options.hideDisabled) optionSelector += ':not(:disabled)'; // If this is a multiselect, and selectedTextFormat is count, then show 1 of 2 selected, etc.

            var totalCount = this.$element[0].querySelectorAll('select > option' + optionSelector + ', optgroup' + optionSelector + ' option' + optionSelector).length,
                tr8nText = typeof this.options.countSelectedText === 'function' ? this.options.countSelectedText(selectedCount, totalCount) : this.options.countSelectedText;
            titleFragment = generateOption.text.call(this, {
              text: tr8nText.replace('{0}', selectedCount.toString()).replace('{1}', totalCount.toString())
            }, true);
          }
        }

        if (this.options.title == undefined) {
          // use .attr to ensure undefined is returned if title attribute is not set
          this.options.title = this.$element.attr('title');
        } // If the select doesn't have a title, then use the default, or if nothing is set at all, use noneSelectedText


        if (!titleFragment.childNodes.length) {
          titleFragment = generateOption.text.call(this, {
            text: typeof this.options.title !== 'undefined' ? this.options.title : this.options.noneSelectedText
          }, true);
        } // strip all HTML tags and trim the result, then unescape any escaped tags


        button.title = titleFragment.textContent.replace(/<[^>]*>?/g, '').trim();

        if (this.options.sanitize && hasContent) {
          sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);
        }

        buttonInner.innerHTML = '';
        buttonInner.appendChild(titleFragment);

        if (version.major < 4 && this.$newElement[0].classList.contains('bs3-has-addon')) {
          var filterExpand = button.querySelector('.filter-expand'),
              clone = buttonInner.cloneNode(true);
          clone.className = 'filter-expand';

          if (filterExpand) {
            button.replaceChild(clone, filterExpand);
          } else {
            button.appendChild(clone);
          }
        }

        this.$element.trigger('rendered' + EVENT_KEY);
      },

      /**
       * @param [style]
       * @param [status]
       */
      setStyle: function (newStyle, status) {
        var button = this.$button[0],
            newElement = this.$newElement[0],
            style = this.options.style.trim(),
            buttonClass;

        if (this.$element.attr('class')) {
          this.$newElement.addClass(this.$element.attr('class').replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi, ''));
        }

        if (version.major < 4) {
          newElement.classList.add('bs3');

          if (newElement.parentNode.classList && newElement.parentNode.classList.contains('input-group') && (newElement.previousElementSibling || newElement.nextElementSibling) && (newElement.previousElementSibling || newElement.nextElementSibling).classList.contains('input-group-addon')) {
            newElement.classList.add('bs3-has-addon');
          }
        }

        if (newStyle) {
          buttonClass = newStyle.trim();
        } else {
          buttonClass = style;
        }

        if (status == 'add') {
          if (buttonClass) button.classList.add.apply(button.classList, buttonClass.split(' '));
        } else if (status == 'remove') {
          if (buttonClass) button.classList.remove.apply(button.classList, buttonClass.split(' '));
        } else {
          if (style) button.classList.remove.apply(button.classList, style.split(' '));
          if (buttonClass) button.classList.add.apply(button.classList, buttonClass.split(' '));
        }
      },
      liHeight: function (refresh) {
        if (!refresh && (this.options.size === false || Object.keys(this.sizeInfo).length)) return;
        var newElement = elementTemplates.div.cloneNode(false),
            menu = elementTemplates.div.cloneNode(false),
            menuInner = elementTemplates.div.cloneNode(false),
            menuInnerInner = document.createElement('ul'),
            divider = elementTemplates.li.cloneNode(false),
            dropdownHeader = elementTemplates.li.cloneNode(false),
            li,
            a = elementTemplates.a.cloneNode(false),
            text = elementTemplates.span.cloneNode(false),
            header = this.options.header && this.$menu.find('.' + classNames.POPOVERHEADER).length > 0 ? this.$menu.find('.' + classNames.POPOVERHEADER)[0].cloneNode(true) : null,
            search = this.options.liveSearch ? elementTemplates.div.cloneNode(false) : null,
            actions = this.options.actionsBox && this.multiple && this.$menu.find('.bs-actionsbox').length > 0 ? this.$menu.find('.bs-actionsbox')[0].cloneNode(true) : null,
            doneButton = this.options.doneButton && this.multiple && this.$menu.find('.bs-donebutton').length > 0 ? this.$menu.find('.bs-donebutton')[0].cloneNode(true) : null,
            firstOption = this.$element.find('option')[0];
        this.sizeInfo.selectWidth = this.$newElement[0].offsetWidth;
        text.className = 'text';
        a.className = 'dropdown-item ' + (firstOption ? firstOption.className : '');
        newElement.className = this.$menu[0].parentNode.className + ' ' + classNames.SHOW;
        newElement.style.width = 0; // ensure button width doesn't affect natural width of menu when calculating

        if (this.options.width === 'auto') menu.style.minWidth = 0;
        menu.className = classNames.MENU + ' ' + classNames.SHOW;
        menuInner.className = 'inner ' + classNames.SHOW;
        menuInnerInner.className = classNames.MENU + ' inner ' + (version.major === '4' ? classNames.SHOW : '');
        divider.className = classNames.DIVIDER;
        dropdownHeader.className = 'dropdown-header';
        text.appendChild(document.createTextNode('\u200b'));

        if (this.selectpicker.current.data.length) {
          for (var i = 0; i < this.selectpicker.current.data.length; i++) {
            var data = this.selectpicker.current.data[i];

            if (data.type === 'option') {
              li = data.element;
              break;
            }
          }
        } else {
          li = elementTemplates.li.cloneNode(false);
          a.appendChild(text);
          li.appendChild(a);
        }

        dropdownHeader.appendChild(text.cloneNode(true));

        if (this.selectpicker.view.widestOption) {
          menuInnerInner.appendChild(this.selectpicker.view.widestOption.cloneNode(true));
        }

        menuInnerInner.appendChild(li);
        menuInnerInner.appendChild(divider);
        menuInnerInner.appendChild(dropdownHeader);
        if (header) menu.appendChild(header);

        if (search) {
          var input = document.createElement('input');
          search.className = 'bs-searchbox';
          input.className = 'form-control';
          search.appendChild(input);
          menu.appendChild(search);
        }

        if (actions) menu.appendChild(actions);
        menuInner.appendChild(menuInnerInner);
        menu.appendChild(menuInner);
        if (doneButton) menu.appendChild(doneButton);
        newElement.appendChild(menu);
        document.body.appendChild(newElement);
        var liHeight = li.offsetHeight,
            dropdownHeaderHeight = dropdownHeader ? dropdownHeader.offsetHeight : 0,
            headerHeight = header ? header.offsetHeight : 0,
            searchHeight = search ? search.offsetHeight : 0,
            actionsHeight = actions ? actions.offsetHeight : 0,
            doneButtonHeight = doneButton ? doneButton.offsetHeight : 0,
            dividerHeight = $(divider).outerHeight(true),
            // fall back to jQuery if getComputedStyle is not supported
        menuStyle = window.getComputedStyle ? window.getComputedStyle(menu) : false,
            menuWidth = menu.offsetWidth,
            $menu = menuStyle ? null : $(menu),
            menuPadding = {
          vert: toInteger(menuStyle ? menuStyle.paddingTop : $menu.css('paddingTop')) + toInteger(menuStyle ? menuStyle.paddingBottom : $menu.css('paddingBottom')) + toInteger(menuStyle ? menuStyle.borderTopWidth : $menu.css('borderTopWidth')) + toInteger(menuStyle ? menuStyle.borderBottomWidth : $menu.css('borderBottomWidth')),
          horiz: toInteger(menuStyle ? menuStyle.paddingLeft : $menu.css('paddingLeft')) + toInteger(menuStyle ? menuStyle.paddingRight : $menu.css('paddingRight')) + toInteger(menuStyle ? menuStyle.borderLeftWidth : $menu.css('borderLeftWidth')) + toInteger(menuStyle ? menuStyle.borderRightWidth : $menu.css('borderRightWidth'))
        },
            menuExtras = {
          vert: menuPadding.vert + toInteger(menuStyle ? menuStyle.marginTop : $menu.css('marginTop')) + toInteger(menuStyle ? menuStyle.marginBottom : $menu.css('marginBottom')) + 2,
          horiz: menuPadding.horiz + toInteger(menuStyle ? menuStyle.marginLeft : $menu.css('marginLeft')) + toInteger(menuStyle ? menuStyle.marginRight : $menu.css('marginRight')) + 2
        },
            scrollBarWidth;
        menuInner.style.overflowY = 'scroll';
        scrollBarWidth = menu.offsetWidth - menuWidth;
        document.body.removeChild(newElement);
        this.sizeInfo.liHeight = liHeight;
        this.sizeInfo.dropdownHeaderHeight = dropdownHeaderHeight;
        this.sizeInfo.headerHeight = headerHeight;
        this.sizeInfo.searchHeight = searchHeight;
        this.sizeInfo.actionsHeight = actionsHeight;
        this.sizeInfo.doneButtonHeight = doneButtonHeight;
        this.sizeInfo.dividerHeight = dividerHeight;
        this.sizeInfo.menuPadding = menuPadding;
        this.sizeInfo.menuExtras = menuExtras;
        this.sizeInfo.menuWidth = menuWidth;
        this.sizeInfo.menuInnerInnerWidth = menuWidth - menuPadding.horiz;
        this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth;
        this.sizeInfo.scrollBarWidth = scrollBarWidth;
        this.sizeInfo.selectHeight = this.$newElement[0].offsetHeight;
        this.setPositionData();
      },
      getSelectPosition: function () {
        var that = this,
            $window = $(window),
            pos = that.$newElement.offset(),
            $container = $(that.options.container),
            containerPos;

        if (that.options.container && $container.length && !$container.is('body')) {
          containerPos = $container.offset();
          containerPos.top += parseInt($container.css('borderTopWidth'));
          containerPos.left += parseInt($container.css('borderLeftWidth'));
        } else {
          containerPos = {
            top: 0,
            left: 0
          };
        }

        var winPad = that.options.windowPadding;
        this.sizeInfo.selectOffsetTop = pos.top - containerPos.top - $window.scrollTop();
        this.sizeInfo.selectOffsetBot = $window.height() - this.sizeInfo.selectOffsetTop - this.sizeInfo.selectHeight - containerPos.top - winPad[2];
        this.sizeInfo.selectOffsetLeft = pos.left - containerPos.left - $window.scrollLeft();
        this.sizeInfo.selectOffsetRight = $window.width() - this.sizeInfo.selectOffsetLeft - this.sizeInfo.selectWidth - containerPos.left - winPad[1];
        this.sizeInfo.selectOffsetTop -= winPad[0];
        this.sizeInfo.selectOffsetLeft -= winPad[3];
      },
      setMenuSize: function (isAuto) {
        this.getSelectPosition();

        var selectWidth = this.sizeInfo.selectWidth,
            liHeight = this.sizeInfo.liHeight,
            headerHeight = this.sizeInfo.headerHeight,
            searchHeight = this.sizeInfo.searchHeight,
            actionsHeight = this.sizeInfo.actionsHeight,
            doneButtonHeight = this.sizeInfo.doneButtonHeight,
            divHeight = this.sizeInfo.dividerHeight,
            menuPadding = this.sizeInfo.menuPadding,
            menuInnerHeight,
            menuHeight,
            divLength = 0,
            minHeight,
            _minHeight,
            maxHeight,
            menuInnerMinHeight,
            estimate,
            isDropup;

        if (this.options.dropupAuto) {
          // Get the estimated height of the menu without scrollbars.
          // This is useful for smaller menus, where there might be plenty of room
          // below the button without setting dropup, but we can't know
          // the exact height of the menu until createView is called later
          estimate = liHeight * this.selectpicker.current.elements.length + menuPadding.vert;
          isDropup = this.sizeInfo.selectOffsetTop - this.sizeInfo.selectOffsetBot > this.sizeInfo.menuExtras.vert && estimate + this.sizeInfo.menuExtras.vert + 50 > this.sizeInfo.selectOffsetBot; // ensure dropup doesn't change while searching (so menu doesn't bounce back and forth)

          if (this.selectpicker.isSearching === true) {
            isDropup = this.selectpicker.dropup;
          }

          this.$newElement.toggleClass(classNames.DROPUP, isDropup);
          this.selectpicker.dropup = isDropup;
        }

        if (this.options.size === 'auto') {
          _minHeight = this.selectpicker.current.elements.length > 3 ? this.sizeInfo.liHeight * 3 + this.sizeInfo.menuExtras.vert - 2 : 0;
          menuHeight = this.sizeInfo.selectOffsetBot - this.sizeInfo.menuExtras.vert;
          minHeight = _minHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight;
          menuInnerMinHeight = Math.max(_minHeight - menuPadding.vert, 0);

          if (this.$newElement.hasClass(classNames.DROPUP)) {
            menuHeight = this.sizeInfo.selectOffsetTop - this.sizeInfo.menuExtras.vert;
          }

          maxHeight = menuHeight;
          menuInnerHeight = menuHeight - headerHeight - searchHeight - actionsHeight - doneButtonHeight - menuPadding.vert;
        } else if (this.options.size && this.options.size != 'auto' && this.selectpicker.current.elements.length > this.options.size) {
          for (var i = 0; i < this.options.size; i++) {
            if (this.selectpicker.current.data[i].type === 'divider') divLength++;
          }

          menuHeight = liHeight * this.options.size + divLength * divHeight + menuPadding.vert;
          menuInnerHeight = menuHeight - menuPadding.vert;
          maxHeight = menuHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight;
          minHeight = menuInnerMinHeight = '';
        }

        this.$menu.css({
          'max-height': maxHeight + 'px',
          'overflow': 'hidden',
          'min-height': minHeight + 'px'
        });
        this.$menuInner.css({
          'max-height': menuInnerHeight + 'px',
          'overflow-y': 'auto',
          'min-height': menuInnerMinHeight + 'px'
        }); // ensure menuInnerHeight is always a positive number to prevent issues calculating chunkSize in createView

        this.sizeInfo.menuInnerHeight = Math.max(menuInnerHeight, 1);

        if (this.selectpicker.current.data.length && this.selectpicker.current.data[this.selectpicker.current.data.length - 1].position > this.sizeInfo.menuInnerHeight) {
          this.sizeInfo.hasScrollBar = true;
          this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth + this.sizeInfo.scrollBarWidth;
        }

        if (this.options.dropdownAlignRight === 'auto') {
          this.$menu.toggleClass(classNames.MENURIGHT, this.sizeInfo.selectOffsetLeft > this.sizeInfo.selectOffsetRight && this.sizeInfo.selectOffsetRight < this.sizeInfo.totalMenuWidth - selectWidth);
        }

        if (this.dropdown && this.dropdown._popper) this.dropdown._popper.update();
      },
      setSize: function (refresh) {
        this.liHeight(refresh);
        if (this.options.header) this.$menu.css('padding-top', 0);

        if (this.options.size !== false) {
          var that = this,
              $window = $(window);
          this.setMenuSize();

          if (this.options.liveSearch) {
            this.$searchbox.off('input.setMenuSize propertychange.setMenuSize').on('input.setMenuSize propertychange.setMenuSize', function () {
              return that.setMenuSize();
            });
          }

          if (this.options.size === 'auto') {
            $window.off('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize').on('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize', function () {
              return that.setMenuSize();
            });
          } else if (this.options.size && this.options.size != 'auto' && this.selectpicker.current.elements.length > this.options.size) {
            $window.off('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize');
          }
        }

        this.createView(false, true, refresh);
      },
      setWidth: function () {
        var that = this;

        if (this.options.width === 'auto') {
          requestAnimationFrame(function () {
            that.$menu.css('min-width', '0');
            that.$element.on('loaded' + EVENT_KEY, function () {
              that.liHeight();
              that.setMenuSize(); // Get correct width if element is hidden

              var $selectClone = that.$newElement.clone().appendTo('body'),
                  btnWidth = $selectClone.css('width', 'auto').children('button').outerWidth();
              $selectClone.remove(); // Set width to whatever's larger, button title or longest option

              that.sizeInfo.selectWidth = Math.max(that.sizeInfo.totalMenuWidth, btnWidth);
              that.$newElement.css('width', that.sizeInfo.selectWidth + 'px');
            });
          });
        } else if (this.options.width === 'fit') {
          // Remove inline min-width so width can be changed from 'auto'
          this.$menu.css('min-width', '');
          this.$newElement.css('width', '').addClass('fit-width');
        } else if (this.options.width) {
          // Remove inline min-width so width can be changed from 'auto'
          this.$menu.css('min-width', '');
          this.$newElement.css('width', this.options.width);
        } else {
          // Remove inline min-width/width so width can be changed
          this.$menu.css('min-width', '');
          this.$newElement.css('width', '');
        } // Remove fit-width class if width is changed programmatically


        if (this.$newElement.hasClass('fit-width') && this.options.width !== 'fit') {
          this.$newElement[0].classList.remove('fit-width');
        }
      },
      selectPosition: function () {
        this.$bsContainer = $('<div class="bs-container" />');

        var that = this,
            $container = $(this.options.container),
            pos,
            containerPos,
            actualHeight,
            getPlacement = function ($element) {
          var containerPosition = {},
              // fall back to dropdown's default display setting if display is not manually set
          display = that.options.display || ( // Bootstrap 3 doesn't have $.fn.dropdown.Constructor.Default
          $.fn.dropdown.Constructor.Default ? $.fn.dropdown.Constructor.Default.display : false);
          that.$bsContainer.addClass($element.attr('class').replace(/form-control|fit-width/gi, '')).toggleClass(classNames.DROPUP, $element.hasClass(classNames.DROPUP));
          pos = $element.offset();

          if (!$container.is('body')) {
            containerPos = $container.offset();
            containerPos.top += parseInt($container.css('borderTopWidth')) - $container.scrollTop();
            containerPos.left += parseInt($container.css('borderLeftWidth')) - $container.scrollLeft();
          } else {
            containerPos = {
              top: 0,
              left: 0
            };
          }

          actualHeight = $element.hasClass(classNames.DROPUP) ? 0 : $element[0].offsetHeight; // Bootstrap 4+ uses Popper for menu positioning

          if (version.major < 4 || display === 'static') {
            containerPosition.top = pos.top - containerPos.top + actualHeight;
            containerPosition.left = pos.left - containerPos.left;
          }

          containerPosition.width = $element[0].offsetWidth;
          that.$bsContainer.css(containerPosition);
        };

        this.$button.on('click.bs.dropdown.data-api', function () {
          if (that.isDisabled()) {
            return;
          }

          getPlacement(that.$newElement);
          that.$bsContainer.appendTo(that.options.container).toggleClass(classNames.SHOW, !that.$button.hasClass(classNames.SHOW)).append(that.$menu);
        });
        $(window).off('resize' + EVENT_KEY + '.' + this.selectId + ' scroll' + EVENT_KEY + '.' + this.selectId).on('resize' + EVENT_KEY + '.' + this.selectId + ' scroll' + EVENT_KEY + '.' + this.selectId, function () {
          var isActive = that.$newElement.hasClass(classNames.SHOW);
          if (isActive) getPlacement(that.$newElement);
        });
        this.$element.on('hide' + EVENT_KEY, function () {
          that.$menu.data('height', that.$menu.height());
          that.$bsContainer.detach();
        });
      },
      setOptionStatus: function (selectedOnly) {
        var that = this;
        that.noScroll = false;

        if (that.selectpicker.view.visibleElements && that.selectpicker.view.visibleElements.length) {
          for (var i = 0; i < that.selectpicker.view.visibleElements.length; i++) {
            var liData = that.selectpicker.current.data[i + that.selectpicker.view.position0],
                option = liData.option;

            if (option) {
              if (selectedOnly !== true) {
                that.setDisabled(liData.index, liData.disabled);
              }

              that.setSelected(liData.index, option.selected);
            }
          }
        }
      },

      /**
       * @param {number} index - the index of the option that is being changed
       * @param {boolean} selected - true if the option is being selected, false if being deselected
       */
      setSelected: function (index, selected) {
        var li = this.selectpicker.main.elements[index],
            liData = this.selectpicker.main.data[index],
            activeIndexIsSet = this.activeIndex !== undefined,
            thisIsActive = this.activeIndex === index,
            prevActive,
            a,
            // if current option is already active
        // OR
        // if the current option is being selected, it's NOT multiple, and
        // activeIndex is undefined:
        //  - when the menu is first being opened, OR
        //  - after a search has been performed, OR
        //  - when retainActive is false when selecting a new option (i.e. index of the newly selected option is not the same as the current activeIndex)
        keepActive = thisIsActive || selected && !this.multiple && !activeIndexIsSet;
        liData.selected = selected;
        a = li.firstChild;

        if (selected) {
          this.selectedIndex = index;
        }

        li.classList.toggle('selected', selected);

        if (keepActive) {
          this.focusItem(li, liData);
          this.selectpicker.view.currentActive = li;
          this.activeIndex = index;
        } else {
          this.defocusItem(li);
        }

        if (a) {
          a.classList.toggle('selected', selected);

          if (selected) {
            a.setAttribute('aria-selected', true);
          } else {
            if (this.multiple) {
              a.setAttribute('aria-selected', false);
            } else {
              a.removeAttribute('aria-selected');
            }
          }
        }

        if (!keepActive && !activeIndexIsSet && selected && this.prevActiveIndex !== undefined) {
          prevActive = this.selectpicker.main.elements[this.prevActiveIndex];
          this.defocusItem(prevActive);
        }
      },

      /**
       * @param {number} index - the index of the option that is being disabled
       * @param {boolean} disabled - true if the option is being disabled, false if being enabled
       */
      setDisabled: function (index, disabled) {
        var li = this.selectpicker.main.elements[index],
            a;
        this.selectpicker.main.data[index].disabled = disabled;
        a = li.firstChild;
        li.classList.toggle(classNames.DISABLED, disabled);

        if (a) {
          if (version.major === '4') a.classList.toggle(classNames.DISABLED, disabled);

          if (disabled) {
            a.setAttribute('aria-disabled', disabled);
            a.setAttribute('tabindex', -1);
          } else {
            a.removeAttribute('aria-disabled');
            a.setAttribute('tabindex', 0);
          }
        }
      },
      isDisabled: function () {
        return this.$element[0].disabled;
      },
      checkDisabled: function () {
        if (this.isDisabled()) {
          this.$newElement[0].classList.add(classNames.DISABLED);
          this.$button.addClass(classNames.DISABLED).attr('aria-disabled', true);
        } else {
          if (this.$button[0].classList.contains(classNames.DISABLED)) {
            this.$newElement[0].classList.remove(classNames.DISABLED);
            this.$button.removeClass(classNames.DISABLED).attr('aria-disabled', false);
          }
        }
      },
      clickListener: function () {
        var that = this,
            $document = $(document);
        $document.data('spaceSelect', false);
        this.$button.on('keyup', function (e) {
          if (/(32)/.test(e.keyCode.toString(10)) && $document.data('spaceSelect')) {
            e.preventDefault();
            $document.data('spaceSelect', false);
          }
        });
        this.$newElement.on('show.bs.dropdown', function () {
          if (version.major > 3 && !that.dropdown) {
            that.dropdown = that.$button.data('bs.dropdown');
            that.dropdown._menu = that.$menu[0];
          }
        });
        this.$button.on('click.bs.dropdown.data-api', function () {
          if (!that.$newElement.hasClass(classNames.SHOW)) {
            that.setSize();
          }
        });

        function setFocus() {
          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            that.$menuInner.trigger('focus');
          }
        }

        function checkPopperExists() {
          if (that.dropdown && that.dropdown._popper && that.dropdown._popper.state.isCreated) {
            setFocus();
          } else {
            requestAnimationFrame(checkPopperExists);
          }
        }

        this.$element.on('shown' + EVENT_KEY, function () {
          if (that.$menuInner[0].scrollTop !== that.selectpicker.view.scrollTop) {
            that.$menuInner[0].scrollTop = that.selectpicker.view.scrollTop;
          }

          if (version.major > 3) {
            requestAnimationFrame(checkPopperExists);
          } else {
            setFocus();
          }
        }); // ensure posinset and setsize are correct before selecting an option via a click

        this.$menuInner.on('mouseenter', 'li a', function (e) {
          var hoverLi = this.parentElement,
              position0 = that.isVirtual() ? that.selectpicker.view.position0 : 0,
              index = Array.prototype.indexOf.call(hoverLi.parentElement.children, hoverLi),
              hoverData = that.selectpicker.current.data[index + position0];
          that.focusItem(hoverLi, hoverData, true);
        });
        this.$menuInner.on('click', 'li a', function (e, retainActive) {
          var $this = $(this),
              element = that.$element[0],
              position0 = that.isVirtual() ? that.selectpicker.view.position0 : 0,
              clickedData = that.selectpicker.current.data[$this.parent().index() + position0],
              clickedIndex = clickedData.index,
              prevValue = getSelectValues(element),
              prevIndex = element.selectedIndex,
              prevOption = element.options[prevIndex],
              triggerChange = true; // Don't close on multi choice menu

          if (that.multiple && that.options.maxOptions !== 1) {
            e.stopPropagation();
          }

          e.preventDefault(); // Don't run if the select is disabled

          if (!that.isDisabled() && !$this.parent().hasClass(classNames.DISABLED)) {
            var option = clickedData.option,
                $option = $(option),
                state = option.selected,
                $optgroup = $option.parent('optgroup'),
                $optgroupOptions = $optgroup.find('option'),
                maxOptions = that.options.maxOptions,
                maxOptionsGrp = $optgroup.data('maxOptions') || false;
            if (clickedIndex === that.activeIndex) retainActive = true;

            if (!retainActive) {
              that.prevActiveIndex = that.activeIndex;
              that.activeIndex = undefined;
            }

            if (!that.multiple) {
              // Deselect all others if not multi select box
              if (prevOption) prevOption.selected = false;
              option.selected = true;
              that.setSelected(clickedIndex, true);
            } else {
              // Toggle the one we have chosen if we are multi select.
              option.selected = !state;
              that.setSelected(clickedIndex, !state);
              that.focusedParent.focus();

              if (maxOptions !== false || maxOptionsGrp !== false) {
                var maxReached = maxOptions < getSelectedOptions(element).length,
                    maxReachedGrp = maxOptionsGrp < $optgroup.find('option:selected').length;

                if (maxOptions && maxReached || maxOptionsGrp && maxReachedGrp) {
                  if (maxOptions && maxOptions == 1) {
                    element.selectedIndex = -1;
                    option.selected = true;
                    that.setOptionStatus(true);
                  } else if (maxOptionsGrp && maxOptionsGrp == 1) {
                    for (var i = 0; i < $optgroupOptions.length; i++) {
                      var _option = $optgroupOptions[i];
                      _option.selected = false;
                      that.setSelected(_option.liIndex, false);
                    }

                    option.selected = true;
                    that.setSelected(clickedIndex, true);
                  } else {
                    var maxOptionsText = typeof that.options.maxOptionsText === 'string' ? [that.options.maxOptionsText, that.options.maxOptionsText] : that.options.maxOptionsText,
                        maxOptionsArr = typeof maxOptionsText === 'function' ? maxOptionsText(maxOptions, maxOptionsGrp) : maxOptionsText,
                        maxTxt = maxOptionsArr[0].replace('{n}', maxOptions),
                        maxTxtGrp = maxOptionsArr[1].replace('{n}', maxOptionsGrp),
                        $notify = $('<div class="notify"></div>'); // If {var} is set in array, replace it

                    /** @deprecated */

                    if (maxOptionsArr[2]) {
                      maxTxt = maxTxt.replace('{var}', maxOptionsArr[2][maxOptions > 1 ? 0 : 1]);
                      maxTxtGrp = maxTxtGrp.replace('{var}', maxOptionsArr[2][maxOptionsGrp > 1 ? 0 : 1]);
                    }

                    option.selected = false;
                    that.$menu.append($notify);

                    if (maxOptions && maxReached) {
                      $notify.append($('<div>' + maxTxt + '</div>'));
                      triggerChange = false;
                      that.$element.trigger('maxReached' + EVENT_KEY);
                    }

                    if (maxOptionsGrp && maxReachedGrp) {
                      $notify.append($('<div>' + maxTxtGrp + '</div>'));
                      triggerChange = false;
                      that.$element.trigger('maxReachedGrp' + EVENT_KEY);
                    }

                    setTimeout(function () {
                      that.setSelected(clickedIndex, false);
                    }, 10);
                    $notify[0].classList.add('fadeOut');
                    setTimeout(function () {
                      $notify.remove();
                    }, 1050);
                  }
                }
              }
            }

            if (!that.multiple || that.multiple && that.options.maxOptions === 1) {
              that.$button.trigger('focus');
            } else if (that.options.liveSearch) {
              that.$searchbox.trigger('focus');
            } // Trigger select 'change'


            if (triggerChange) {
              if (that.multiple || prevIndex !== element.selectedIndex) {
                // $option.prop('selected') is current option state (selected/unselected). prevValue is the value of the select prior to being changed.
                changedArguments = [option.index, $option.prop('selected'), prevValue];
                that.$element.triggerNative('change');
              }
            }
          }
        });
        this.$menu.on('click', 'li.' + classNames.DISABLED + ' a, .' + classNames.POPOVERHEADER + ', .' + classNames.POPOVERHEADER + ' :not(.close)', function (e) {
          if (e.currentTarget == this) {
            e.preventDefault();
            e.stopPropagation();

            if (that.options.liveSearch && !$(e.target).hasClass('close')) {
              that.$searchbox.trigger('focus');
            } else {
              that.$button.trigger('focus');
            }
          }
        });
        this.$menuInner.on('click', '.divider, .dropdown-header', function (e) {
          e.preventDefault();
          e.stopPropagation();

          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            that.$button.trigger('focus');
          }
        });
        this.$menu.on('click', '.' + classNames.POPOVERHEADER + ' .close', function () {
          that.$button.trigger('click');
        });
        this.$searchbox.on('click', function (e) {
          e.stopPropagation();
        });
        this.$menu.on('click', '.actions-btn', function (e) {
          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            that.$button.trigger('focus');
          }

          e.preventDefault();
          e.stopPropagation();

          if ($(this).hasClass('bs-select-all')) {
            that.selectAll();
          } else {
            that.deselectAll();
          }
        });
        this.$button.on('focus' + EVENT_KEY, function (e) {
          var tabindex = that.$element[0].getAttribute('tabindex'); // only change when button is actually focused

          if (tabindex !== undefined && e.originalEvent && e.originalEvent.isTrusted) {
            // apply select element's tabindex to ensure correct order is followed when tabbing to the next element
            this.setAttribute('tabindex', tabindex); // set element's tabindex to -1 to allow for reverse tabbing

            that.$element[0].setAttribute('tabindex', -1);
            that.selectpicker.view.tabindex = tabindex;
          }
        }).on('blur' + EVENT_KEY, function (e) {
          // revert everything to original tabindex
          if (that.selectpicker.view.tabindex !== undefined && e.originalEvent && e.originalEvent.isTrusted) {
            that.$element[0].setAttribute('tabindex', that.selectpicker.view.tabindex);
            this.setAttribute('tabindex', -1);
            that.selectpicker.view.tabindex = undefined;
          }
        });
        this.$element.on('change' + EVENT_KEY, function () {
          that.render();
          that.$element.trigger('changed' + EVENT_KEY, changedArguments);
          changedArguments = null;
        }).on('focus' + EVENT_KEY, function () {
          if (!that.options.mobile) that.$button[0].focus();
        });
      },
      liveSearchListener: function () {
        var that = this;
        this.$button.on('click.bs.dropdown.data-api', function () {
          if (!!that.$searchbox.val()) {
            that.$searchbox.val('');
            that.selectpicker.search.previousValue = undefined;
          }
        });
        this.$searchbox.on('click.bs.dropdown.data-api focus.bs.dropdown.data-api touchend.bs.dropdown.data-api', function (e) {
          e.stopPropagation();
        });
        this.$searchbox.on('input propertychange', function () {
          var searchValue = that.$searchbox[0].value;
          that.selectpicker.search.elements = [];
          that.selectpicker.search.data = [];

          if (searchValue) {
            var i,
                searchMatch = [],
                q = searchValue.toUpperCase(),
                cache = {},
                cacheArr = [],
                searchStyle = that._searchStyle(),
                normalizeSearch = that.options.liveSearchNormalize;

            if (normalizeSearch) q = normalizeToBase(q);

            for (var i = 0; i < that.selectpicker.main.data.length; i++) {
              var li = that.selectpicker.main.data[i];

              if (!cache[i]) {
                cache[i] = stringSearch(li, q, searchStyle, normalizeSearch);
              }

              if (cache[i] && li.headerIndex !== undefined && cacheArr.indexOf(li.headerIndex) === -1) {
                if (li.headerIndex > 0) {
                  cache[li.headerIndex - 1] = true;
                  cacheArr.push(li.headerIndex - 1);
                }

                cache[li.headerIndex] = true;
                cacheArr.push(li.headerIndex);
                cache[li.lastIndex + 1] = true;
              }

              if (cache[i] && li.type !== 'optgroup-label') cacheArr.push(i);
            }

            for (var i = 0, cacheLen = cacheArr.length; i < cacheLen; i++) {
              var index = cacheArr[i],
                  prevIndex = cacheArr[i - 1],
                  li = that.selectpicker.main.data[index],
                  liPrev = that.selectpicker.main.data[prevIndex];

              if (li.type !== 'divider' || li.type === 'divider' && liPrev && liPrev.type !== 'divider' && cacheLen - 1 !== i) {
                that.selectpicker.search.data.push(li);
                searchMatch.push(that.selectpicker.main.elements[index]);
              }
            }

            that.activeIndex = undefined;
            that.noScroll = true;
            that.$menuInner.scrollTop(0);
            that.selectpicker.search.elements = searchMatch;
            that.createView(true);
            showNoResults.call(that, searchMatch, searchValue);
          } else if (that.selectpicker.search.previousValue) {
            // for IE11 (#2402)
            that.$menuInner.scrollTop(0);
            that.createView(false);
          }

          that.selectpicker.search.previousValue = searchValue;
        });
      },
      _searchStyle: function () {
        return this.options.liveSearchStyle || 'contains';
      },
      val: function (value) {
        var element = this.$element[0];

        if (typeof value !== 'undefined') {
          var prevValue = getSelectValues(element);
          changedArguments = [null, null, prevValue];
          this.$element.val(value).trigger('changed' + EVENT_KEY, changedArguments);

          if (this.$newElement.hasClass(classNames.SHOW)) {
            if (this.multiple) {
              this.setOptionStatus(true);
            } else {
              var liSelectedIndex = (element.options[element.selectedIndex] || {}).liIndex;

              if (typeof liSelectedIndex === 'number') {
                this.setSelected(this.selectedIndex, false);
                this.setSelected(liSelectedIndex, true);
              }
            }
          }

          this.render();
          changedArguments = null;
          return this.$element;
        } else {
          return this.$element.val();
        }
      },
      changeAll: function (status) {
        if (!this.multiple) return;
        if (typeof status === 'undefined') status = true;
        var element = this.$element[0],
            previousSelected = 0,
            currentSelected = 0,
            prevValue = getSelectValues(element);
        element.classList.add('bs-select-hidden');

        for (var i = 0, data = this.selectpicker.current.data, len = data.length; i < len; i++) {
          var liData = data[i],
              option = liData.option;

          if (option && !liData.disabled && liData.type !== 'divider') {
            if (liData.selected) previousSelected++;
            option.selected = status;
            if (status === true) currentSelected++;
          }
        }

        element.classList.remove('bs-select-hidden');
        if (previousSelected === currentSelected) return;
        this.setOptionStatus();
        changedArguments = [null, null, prevValue];
        this.$element.triggerNative('change');
      },
      selectAll: function () {
        return this.changeAll(true);
      },
      deselectAll: function () {
        return this.changeAll(false);
      },
      toggle: function (e) {
        e = e || window.event;
        if (e) e.stopPropagation();
        this.$button.trigger('click.bs.dropdown.data-api');
      },
      keydown: function (e) {
        var $this = $(this),
            isToggle = $this.hasClass('dropdown-toggle'),
            $parent = isToggle ? $this.closest('.dropdown') : $this.closest(Selector.MENU),
            that = $parent.data('this'),
            $items = that.findLis(),
            index,
            isActive,
            liActive,
            activeLi,
            offset,
            updateScroll = false,
            downOnTab = e.which === keyCodes.TAB && !isToggle && !that.options.selectOnTab,
            isArrowKey = REGEXP_ARROW.test(e.which) || downOnTab,
            scrollTop = that.$menuInner[0].scrollTop,
            isVirtual = that.isVirtual(),
            position0 = isVirtual === true ? that.selectpicker.view.position0 : 0; // do nothing if a function key is pressed

        if (e.which >= 112 && e.which <= 123) return;
        isActive = that.$newElement.hasClass(classNames.SHOW);

        if (!isActive && (isArrowKey || e.which >= 48 && e.which <= 57 || e.which >= 96 && e.which <= 105 || e.which >= 65 && e.which <= 90)) {
          that.$button.trigger('click.bs.dropdown.data-api');

          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
            return;
          }
        }

        if (e.which === keyCodes.ESCAPE && isActive) {
          e.preventDefault();
          that.$button.trigger('click.bs.dropdown.data-api').trigger('focus');
        }

        if (isArrowKey) {
          // if up or down
          if (!$items.length) return;
          liActive = that.selectpicker.main.elements[that.activeIndex];
          index = liActive ? Array.prototype.indexOf.call(liActive.parentElement.children, liActive) : -1;

          if (index !== -1) {
            that.defocusItem(liActive);
          }

          if (e.which === keyCodes.ARROW_UP) {
            // up
            if (index !== -1) index--;
            if (index + position0 < 0) index += $items.length;

            if (!that.selectpicker.view.canHighlight[index + position0]) {
              index = that.selectpicker.view.canHighlight.slice(0, index + position0).lastIndexOf(true) - position0;
              if (index === -1) index = $items.length - 1;
            }
          } else if (e.which === keyCodes.ARROW_DOWN || downOnTab) {
            // down
            index++;
            if (index + position0 >= that.selectpicker.view.canHighlight.length) index = that.selectpicker.view.firstHighlightIndex;

            if (!that.selectpicker.view.canHighlight[index + position0]) {
              index = index + 1 + that.selectpicker.view.canHighlight.slice(index + position0 + 1).indexOf(true);
            }
          }

          e.preventDefault();
          var liActiveIndex = position0 + index;

          if (e.which === keyCodes.ARROW_UP) {
            // up
            // scroll to bottom and highlight last option
            if (position0 === 0 && index === $items.length - 1) {
              that.$menuInner[0].scrollTop = that.$menuInner[0].scrollHeight;
              liActiveIndex = that.selectpicker.current.elements.length - 1;
            } else {
              activeLi = that.selectpicker.current.data[liActiveIndex];
              offset = activeLi.position - activeLi.height;
              updateScroll = offset < scrollTop;
            }
          } else if (e.which === keyCodes.ARROW_DOWN || downOnTab) {
            // down
            // scroll to top and highlight first option
            if (index === that.selectpicker.view.firstHighlightIndex) {
              that.$menuInner[0].scrollTop = 0;
              liActiveIndex = that.selectpicker.view.firstHighlightIndex;
            } else {
              activeLi = that.selectpicker.current.data[liActiveIndex];
              offset = activeLi.position - that.sizeInfo.menuInnerHeight;
              updateScroll = offset > scrollTop;
            }
          }

          liActive = that.selectpicker.current.elements[liActiveIndex];
          that.activeIndex = that.selectpicker.current.data[liActiveIndex].index;
          that.focusItem(liActive);
          that.selectpicker.view.currentActive = liActive;
          if (updateScroll) that.$menuInner[0].scrollTop = offset;

          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            $this.trigger('focus');
          }
        } else if (!$this.is('input') && !REGEXP_TAB_OR_ESCAPE.test(e.which) || e.which === keyCodes.SPACE && that.selectpicker.keydown.keyHistory) {
          var searchMatch,
              matches = [],
              keyHistory;
          e.preventDefault();
          that.selectpicker.keydown.keyHistory += keyCodeMap[e.which];
          if (that.selectpicker.keydown.resetKeyHistory.cancel) clearTimeout(that.selectpicker.keydown.resetKeyHistory.cancel);
          that.selectpicker.keydown.resetKeyHistory.cancel = that.selectpicker.keydown.resetKeyHistory.start();
          keyHistory = that.selectpicker.keydown.keyHistory; // if all letters are the same, set keyHistory to just the first character when searching

          if (/^(.)\1+$/.test(keyHistory)) {
            keyHistory = keyHistory.charAt(0);
          } // find matches


          for (var i = 0; i < that.selectpicker.current.data.length; i++) {
            var li = that.selectpicker.current.data[i],
                hasMatch;
            hasMatch = stringSearch(li, keyHistory, 'startsWith', true);

            if (hasMatch && that.selectpicker.view.canHighlight[i]) {
              matches.push(li.index);
            }
          }

          if (matches.length) {
            var matchIndex = 0;
            $items.removeClass('active').find('a').removeClass('active'); // either only one key has been pressed or they are all the same key

            if (keyHistory.length === 1) {
              matchIndex = matches.indexOf(that.activeIndex);

              if (matchIndex === -1 || matchIndex === matches.length - 1) {
                matchIndex = 0;
              } else {
                matchIndex++;
              }
            }

            searchMatch = matches[matchIndex];
            activeLi = that.selectpicker.main.data[searchMatch];

            if (scrollTop - activeLi.position > 0) {
              offset = activeLi.position - activeLi.height;
              updateScroll = true;
            } else {
              offset = activeLi.position - that.sizeInfo.menuInnerHeight; // if the option is already visible at the current scroll position, just keep it the same

              updateScroll = activeLi.position > scrollTop + that.sizeInfo.menuInnerHeight;
            }

            liActive = that.selectpicker.main.elements[searchMatch];
            that.activeIndex = matches[matchIndex];
            that.focusItem(liActive);
            if (liActive) liActive.firstChild.focus();
            if (updateScroll) that.$menuInner[0].scrollTop = offset;
            $this.trigger('focus');
          }
        } // Select focused option if "Enter", "Spacebar" or "Tab" (when selectOnTab is true) are pressed inside the menu.


        if (isActive && (e.which === keyCodes.SPACE && !that.selectpicker.keydown.keyHistory || e.which === keyCodes.ENTER || e.which === keyCodes.TAB && that.options.selectOnTab)) {
          if (e.which !== keyCodes.SPACE) e.preventDefault();

          if (!that.options.liveSearch || e.which !== keyCodes.SPACE) {
            that.$menuInner.find('.active a').trigger('click', true); // retain active class

            $this.trigger('focus');

            if (!that.options.liveSearch) {
              // Prevent screen from scrolling if the user hits the spacebar
              e.preventDefault(); // Fixes spacebar selection of dropdown items in FF & IE

              $(document).data('spaceSelect', true);
            }
          }
        }
      },
      mobile: function () {
        // ensure mobile is set to true if mobile function is called after init
        this.options.mobile = true;
        this.$element[0].classList.add('mobile-device');
      },
      refresh: function () {
        // update options if data attributes have been changed
        var config = $.extend({}, this.options, this.$element.data());
        this.options = config;
        this.checkDisabled();
        this.buildData();
        this.setStyle();
        this.render();
        this.buildList();
        this.setWidth();
        this.setSize(true);
        this.$element.trigger('refreshed' + EVENT_KEY);
      },
      hide: function () {
        this.$newElement.hide();
      },
      show: function () {
        this.$newElement.show();
      },
      remove: function () {
        this.$newElement.remove();
        this.$element.remove();
      },
      destroy: function () {
        this.$newElement.before(this.$element).remove();

        if (this.$bsContainer) {
          this.$bsContainer.remove();
        } else {
          this.$menu.remove();
        }

        if (this.selectpicker.view.titleOption && this.selectpicker.view.titleOption.parentNode) {
          this.selectpicker.view.titleOption.parentNode.removeChild(this.selectpicker.view.titleOption);
        }

        this.$element.off(EVENT_KEY).removeData('selectpicker').removeClass('bs-select-hidden selectpicker');
        $(window).off(EVENT_KEY + '.' + this.selectId);
      }
    }; // SELECTPICKER PLUGIN DEFINITION
    // ==============================

    function Plugin(option) {
      // get the args of the outer function..
      var args = arguments; // The arguments of the function are explicitly re-defined from the argument list, because the shift causes them
      // to get lost/corrupted in android 2.3 and IE9 #715 #775

      var _option = option;
      [].shift.apply(args); // if the version was not set successfully

      if (!version.success) {
        // try to retreive it again
        try {
          version.full = ($.fn.dropdown.Constructor.VERSION || '').split(' ')[0].split('.');
        } catch (err) {
          // fall back to use BootstrapVersion if set
          if (Selectpicker.BootstrapVersion) {
            version.full = Selectpicker.BootstrapVersion.split(' ')[0].split('.');
          } else {
            version.full = [version.major, '0', '0'];
            console.warn('There was an issue retrieving Bootstrap\'s version. ' + 'Ensure Bootstrap is being loaded before bootstrap-select and there is no namespace collision. ' + 'If loading Bootstrap asynchronously, the version may need to be manually specified via $.fn.selectpicker.Constructor.BootstrapVersion.', err);
          }
        }

        version.major = version.full[0];
        version.success = true;
      }

      if (version.major === '4') {
        // some defaults need to be changed if using Bootstrap 4
        // check to see if they have already been manually changed before forcing them to update
        var toUpdate = [];
        if (Selectpicker.DEFAULTS.style === classNames.BUTTONCLASS) toUpdate.push({
          name: 'style',
          className: 'BUTTONCLASS'
        });
        if (Selectpicker.DEFAULTS.iconBase === classNames.ICONBASE) toUpdate.push({
          name: 'iconBase',
          className: 'ICONBASE'
        });
        if (Selectpicker.DEFAULTS.tickIcon === classNames.TICKICON) toUpdate.push({
          name: 'tickIcon',
          className: 'TICKICON'
        });
        classNames.DIVIDER = 'dropdown-divider';
        classNames.SHOW = 'show';
        classNames.BUTTONCLASS = 'btn-light';
        classNames.POPOVERHEADER = 'popover-header';
        classNames.ICONBASE = '';
        classNames.TICKICON = 'bs-ok-default';

        for (var i = 0; i < toUpdate.length; i++) {
          var option = toUpdate[i];
          Selectpicker.DEFAULTS[option.name] = classNames[option.className];
        }
      }

      var value;
      var chain = this.each(function () {
        var $this = $(this);

        if ($this.is('select')) {
          var data = $this.data('selectpicker'),
              options = typeof _option == 'object' && _option;

          if (!data) {
            var dataAttributes = $this.data();

            for (var dataAttr in dataAttributes) {
              if (Object.prototype.hasOwnProperty.call(dataAttributes, dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {
                delete dataAttributes[dataAttr];
              }
            }

            var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);
            config.template = $.extend({}, Selectpicker.DEFAULTS.template, $.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}, dataAttributes.template, options.template);
            $this.data('selectpicker', data = new Selectpicker(this, config));
          } else if (options) {
            for (var i in options) {
              if (Object.prototype.hasOwnProperty.call(options, i)) {
                data.options[i] = options[i];
              }
            }
          }

          if (typeof _option == 'string') {
            if (data[_option] instanceof Function) {
              value = data[_option].apply(data, args);
            } else {
              value = data.options[_option];
            }
          }
        }
      });

      if (typeof value !== 'undefined') {
        // noinspection JSUnusedAssignment
        return value;
      } else {
        return chain;
      }
    }

    var old = $.fn.selectpicker;
    $.fn.selectpicker = Plugin;
    $.fn.selectpicker.Constructor = Selectpicker; // SELECTPICKER NO CONFLICT
    // ========================

    $.fn.selectpicker.noConflict = function () {
      $.fn.selectpicker = old;
      return this;
    }; // get Bootstrap's keydown event handler for either Bootstrap 4 or Bootstrap 3


    function keydownHandler() {
      if ($.fn.dropdown) {
        // wait to define until function is called in case Bootstrap isn't loaded yet
        var bootstrapKeydown = $.fn.dropdown.Constructor._dataApiKeydownHandler || $.fn.dropdown.Constructor.prototype.keydown;
        return bootstrapKeydown.apply(this, arguments);
      }
    }

    $(document).off('keydown.bs.dropdown.data-api').on('keydown.bs.dropdown.data-api', ':not(.bootstrap-select) > [data-toggle="dropdown"]', keydownHandler).on('keydown.bs.dropdown.data-api', ':not(.bootstrap-select) > .dropdown-menu', keydownHandler).on('keydown' + EVENT_KEY, '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', Selectpicker.prototype.keydown).on('focusin.modal', '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', function (e) {
      e.stopPropagation();
    }); // SELECTPICKER DATA-API
    // =====================

    $(window).on('load' + EVENT_KEY + '.data-api', function () {
      $('.selectpicker').each(function () {
        var $selectpicker = $(this);
        Plugin.call($selectpicker, $selectpicker.data());
      });
    });
  })(jQuery);
});
},{"jquery":"../node_modules/jquery/dist/jquery.js"}],"ts/simulator.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const bots = __importStar(require("../json/bots.json"));

const items = __importStar(require("../json/items.json"));

const common_1 = require("./common");

const commonJquery_1 = require("./commonJquery");

const itemTypes_1 = require("./itemTypes");

const simulatorCalcs_1 = require("./simulatorCalcs");

require("bootstrap");

const chart_js_1 = require("chart.js");

const jQuery = __importStar(require("jquery"));

require("bootstrap-select");

const jq = jQuery.noConflict();
jq(function ($) {
  // Actual accuracy is 60 for ranged and 70 for melee but just assume the
  // defender immobile bonus for + 10
  const initialRangedAccuracy = 70;
  const initialMeleeAccuracy = 80; // Chart variables set on init

  let chart;
  let comparisonChart;
  let currentComparisonData;
  const comparisonBorderColors = ["rgba(228, 26, 28, .8)", "rgba(55, 126, 184, .8)", "rgba(36, 192, 36, .8)", "rgba(152, 78, 163, .8)", "rgba(255, 127, 0, .8)", "rgba(255, 255, 51, .8)", "rgba(243, 145, 146, .8)", "rgba(145, 187, 222, .8)", "rgba(135, 232, 135, .8)", "rgba(202, 159, 209, .8)", "rgba(255, 194, 133, .8)", "rgba(163, 163, 0, .8)"]; // Array of colors currently used to try to avoid duplicating colors when possible

  const comparisonColorsUsed = comparisonBorderColors.map(() => 0); // Flag to cancel a simulation

  let cancelled = false; // Actuator name to tu multiplier map

  const actuatorMap = {
    "0%: None": 1.0,
    "20%: Microactuators": 0.8,
    "30%: Nanoactuators": 0.7,
    "40%: 2 Microactuators": 0.6,
    "50%: Femtoactuators": 0.5
  }; // Armor integrity analyzer chance map

  const armorIntegrityMap = {
    "0%: None": 0,
    "30%: Armor Integrity Analyzer": 30,
    "40%: Imp. Armor Integrity Analyzer": 40,
    "50%: Exp. Armor Integrity Analyzer": 50
  }; // Charger damage increase values

  const chargerMap = {
    "0%: None": 1.0,
    "15%: Particle Charger": 1.15,
    "20%: Imp. Particle Charger": 1.2,
    "25%: Adv. Particle Charger": 1.25,
    "30%: Particle Accelerator": 1.3,
    "40%: Imp. Particle Accelerator": 1.4,
    "50%: Adv. Particle Accelerator": 1.5
  }; // Cycler volley time multiplier map

  const cyclerMap = {
    "0%: None": 1.0,
    "15%: Weapon Cycler": 0.85,
    "20%: Imp. Weapon Cycler": 0.8,
    "25%: Adv. Weapon Cycler": 0.75,
    "30%: Exp. Weapon Cycler": 0.7,
    "50%: Quantum Capacitor": 0.5,
    "50%: Launcher Loader": 0.5
  }; // Damage reduction names

  const externalDamageReductionNameMap = {
    "0%: None": null,
    "25%: Remote Shield": "Remote Shield",
    "25%: Stasis Trap": "Stasis Trap",
    "50%: Phase Wall": "Phase Wall",
    "50%: Remote Force Field (Energy Mantle)": "Remote Force Field",
    "50%: Stasis Bubble": "Stasis Bubble"
  }; // Force booster ids

  const forceBoosterIds = ["forceBoosterInput", "impForceBoosterInput", "advForceBoosterInput"]; // Array of force booster maximum damage increases

  const forceBoosterMaxDamageIncrease = [0.2, 0.3, 0.4]; // Kinecellerator min damage increase values

  const kinecelleratorMap = {
    "0%: None": 1.0,
    "30%: Kinecellerator": 1.3,
    "40%: Imp. Kinecellerator": 1.4,
    "50%: Adv. Kinecellerator": 1.5
  }; // Melee analysis ids

  const meleeAnalysisIds = ["meleeAnalysisInput", "impMeleeAnalysisInput", "advMeleeAnalysisInput", "expMeleeAnalysisInput"]; // Array of melee analysis minimum damage increases

  const meleeAnalysisMinDamageIncrease = [2, 3, 4, 6]; // Melee weapon types

  const meleeTypes = [itemTypes_1.ItemType.ImpactWeapon, itemTypes_1.ItemType.PiercingWeapon, itemTypes_1.ItemType.SlashingWeapon, itemTypes_1.ItemType.SpecialMeleeWeapon]; // Overload util to damage bonus map

  const overloadMap = {
    "0%: None": 0,
    "50%: Overload Amplifier": 0.5,
    "75%: Imp. Overload Amplifier": 0.75,
    "100%: Adv. Overload Amplifier": 1
  }; // Ranged weapon types

  const rangedTypes = [itemTypes_1.ItemType.BallisticCannon, itemTypes_1.ItemType.BallisticGun, itemTypes_1.ItemType.EnergyCannon, itemTypes_1.ItemType.EnergyGun, itemTypes_1.ItemType.Launcher, itemTypes_1.ItemType.SpecialWeapon]; // Bot size mode to accuracy bonus map

  const sizeAccuracyMap = {
    Huge: 30,
    Large: 10,
    Medium: 0,
    Small: -10,
    Tiny: -30
  }; // Siege mode text to accuracy bonus/TUs to activate map

  const siegeModeBonusMap = {
    "No Siege": {
      bonus: 0,
      tus: 0
    },
    "In Siege Mode": {
      bonus: 20,
      tus: 0
    },
    "In High Siege Mode": {
      bonus: 30,
      tus: 0
    },
    "Entering Siege Mode": {
      bonus: 20,
      tus: 500
    },
    "Entering High Siege Mode": {
      bonus: 30,
      tus: 500
    }
  };
  $(() => init());

  function addComparison() {
    const name = $("#comparisonNameInput").val();
    $("#comparisonNameInput").val(""); // Disable the button to avoid adding the dataset multiple times

    const button = $("#addComparisonButton");
    button.addClass("disabled");
    button.prop("disabled", true);
    button.tooltip("hide");
    $("#comparisonContainer").removeClass("not-visible"); // Try to get the first unused color if possible

    const {
      colorIndex
    } = comparisonColorsUsed.reduce((acc, num, index) => {
      if (num < acc.value) {
        return {
          colorIndex: index,
          value: num
        };
      } else {
        return acc;
      }
    }, {
      colorIndex: -1,
      value: Number.MAX_VALUE
    });
    comparisonColorsUsed[colorIndex] += 1; // Create and append the dataset to the chart

    const newDataset = getDatasetSettings(name, "rgb(0, 0, 0, 0)", comparisonBorderColors[colorIndex]);
    newDataset.data = currentComparisonData;
    comparisonChart.data.datasets.push(newDataset); // Create editor elements

    const parent = $('<div class="input-group"></div>');
    const nameInput = $(`<input class="form-control"></input>`);
    nameInput.val(name);
    const deleteButton = $('<button class="btn ml-2" data-toggle="tooltip" title="Removes the dataset.">X</button>');
    parent.append(nameInput[0]);
    parent.append(deleteButton[0]); // Set up callbacks

    deleteButton.tooltip();
    deleteButton.on("click", () => {
      // Remove the dataset from the chart
      const datasets = comparisonChart.data.datasets;
      datasets.splice(datasets.indexOf(newDataset), 1);
      comparisonChart.update();

      if (datasets.length === 0) {
        // Hide the comparison chart section if no more data to show
        $("#comparisonContainer").addClass("not-visible");
      }

      comparisonColorsUsed[colorIndex] -= 1; // Remove the associated item

      deleteButton.tooltip("dispose");
      parent.remove();
    });
    nameInput.on("change", () => {
      newDataset.label = nameInput.val();
      comparisonChart.update();
    });
    $("#comparisonDatasetsContainer").append(parent[0]);
    comparisonChart.update();
  } // Adds a new weapon select dropdown with an optional weapon name


  function addWeaponSelect(weaponName) {
    const spoilersState = commonJquery_1.getSpoilersState();
    const container = $("#weaponSelectContainer");
    const melee = isMelee();
    const types = melee ? meleeTypes : rangedTypes;
    const weapons = [];
    Object.keys(common_1.itemData).forEach(name => {
      const baseItem = common_1.itemData[name]; // Slot check

      if (baseItem.slot !== "Weapon") {
        return;
      }

      const weapon = baseItem; // Ranged/melee type check

      if (!types.includes(weapon.type)) {
        return;
      } // Damage check


      if (weapon.damageType === "Special") {
        return;
      }

      if (common_1.canShowPart(weapon, spoilersState)) {
        weapons.push(name);
      }
    });

    if (melee) {
      weapons.push("Ram");
    } // Sort and create weapon option HTML elements


    weapons.sort(common_1.gallerySort);
    const weaponOptions = weapons.map(w => `<option>${w}</option>`).join(); // Create weapon elements

    const parent = $('<div class="input-group mt-1"></div>');
    const selectLabel = $('<span class="input-group-text" data-toggle="tooltip" title="Name of an equipped weapon to fire">Weapon</span>');
    const select = $(`<select class="selectpicker" data-live-search="true">${weaponOptions}</select>`);
    const helpButton = $('<button class="btn part-help-btn" data-html=true data-toggle="popover">?</button>');
    const massLabel = $(`
        <div class="input-group-prepend ml-2" data-toggle="tooltip" title="The mass of cogmind. Ram damage is a random amount from 0 to (((10 + [mass]) / 5) + 1) * ([speed%] / 100) * [momentum].">
            <span class="input-group-text">Mass</span>
        </div>`);
    const massInput = $('<input class="form-control" placeholder="0"></input>');
    const overloadContainer = $('<div class="btn-group btn-group-toggle ml-2" data-toggle="buttons"></div>');
    const overloadLabelContainer = $('<div class="input-group-prepend" data-toggle="tooltip" title="Whether to fire the weapon as overloaded"></div>');
    const overloadLabel = $('<span class="input-group-text">Overload</span>');
    const noLabel = $('<label class="btn"><input type="radio" name="options">No</input></label>');
    const yesLabel = $('<label class="btn"><input type="radio" name="options">Yes</input></label>');
    const numberLabel = $(`
        <div class="input-group-prepend ml-2" data-toggle="tooltip" title="How many weapons of this type to have equipped.">
            <span class="input-group-text">Number</span>
        </div>`);
    const numberInput = $('<input class="form-control" placeholder="1"></input>');
    const deleteButton = $('<button class="btn ml-2" data-toggle="tooltip" title="Removes the weapon.">X</button>'); // Add elements to DOM

    container.append(parent[0]);
    parent.append(selectLabel[0]);
    parent.append(select[0]);
    parent.append(helpButton[0]);
    parent.append(overloadContainer[0]);
    overloadContainer.append(overloadLabelContainer[0]);
    overloadLabelContainer.append(overloadLabel[0]);
    overloadContainer.append(noLabel[0]);
    overloadContainer.append(yesLabel[0]);
    parent.append(massLabel[0]);
    parent.append(massInput[0]);
    parent.append(numberLabel[0]);
    parent.append(numberInput[0]);
    parent.append(deleteButton[0]);
    commonJquery_1.resetButtonGroup(overloadContainer);
    deleteButton.on("click", () => {
      // Ensure the last dropdown is always empty
      if (parent.next().length === 0) {
        addWeaponSelect("");
      } // Remove the associated item


      select.selectpicker("destroy");
      deleteButton.tooltip("dispose");
      parent.remove();
    });
    select.selectpicker("val", weaponName);

    const updateContent = weaponName => {
      let weapon;

      if (weaponName in common_1.itemData) {
        weapon = common_1.itemData[weaponName];
        helpButton.attr("data-content", common_1.createItemDataContent(weapon));
        helpButton.popover();
      }

      if (weapon === undefined || weapon.overloadStability === undefined) {
        // If no valid weapon or can't be overloaded reset/hide the overload option
        commonJquery_1.resetButtonGroup(overloadContainer);
        overloadContainer.addClass("not-visible");
      } else {
        // Otherwise show the overload option
        overloadContainer.removeClass("not-visible");
      }

      if (weaponName === "Ram") {
        // If ramming then show mass and hide weapon number
        massLabel.removeClass("not-visible");
        massInput.removeClass("not-visible");
        numberLabel.addClass("not-visible");
        numberInput.addClass("not-visible");
      } else {
        // Otherwise do the reverse
        massLabel.addClass("not-visible");
        massInput.addClass("not-visible");
        numberLabel.removeClass("not-visible");
        numberInput.removeClass("not-visible");
      }
    }; // Set initial weapon info


    updateContent(weaponName); // Update content when the weapon selection changes

    select.on("changed.bs.select", () => {
      if (parent.next().length === 0) {
        addWeaponSelect("");
      }

      updateContent(select.selectpicker("val"));
    });
    select.parent().addClass("weapon-dropdown"); // Enable tooltips

    deleteButton.tooltip();
    numberLabel.tooltip();
    selectLabel.tooltip();
    massLabel.tooltip();
    overloadLabelContainer.tooltip(); // Minor hack, the btn-light class is auto-added to dropdowns with search
    // but it doesn't really fit with everything else

    parent.find(".btn-light").removeClass("btn-light");
  } // Gets a dataset's overall settings with some defaults


  function getDatasetSettings(label, backgroundColor, borderColor) {
    return {
      backgroundColor: backgroundColor,
      borderColor: borderColor,
      label: label,
      pointRadius: 0,
      pointHitRadius: 25,
      showLine: true,
      steppedLine: "before"
    };
  } // Gets the number of simulations to perform


  function getNumSimulations() {
    const stringValue = $("#numFightsInput").val().replace(",", "");
    return common_1.parseIntOrDefault(stringValue, 100000);
  } // Initialize the page state


  function init() {
    // Reinstate for beta 12
    // const isB11 = getB11State();
    common_1.initData(items, bots);
    commonJquery_1.createHeader("Simulator", $("#headerContainer")); // $("#beta11Checkbox").prop("checked", getB11State());

    commonJquery_1.registerDisableAutocomplete($(document)); // Set initial state

    commonJquery_1.resetButtonGroup($("#combatTypeContainer"));
    commonJquery_1.resetButtonGroup($("#xAxisContainer"));
    $("#comparisonChartNameInput").val("");
    resetValues();
    updateChoices(); // Register handlers

    $("#spoilersDropdown > button").on("click", e => {
      const state = $(e.target).text();
      $("#spoilers").text(state);
      commonJquery_1.setSpoilersState(state);
      $("#spoilersDropdown > button").tooltip("hide");
      updateChoices();
    });
    $("#reset").on("click", () => {
      $("#reset").tooltip("hide");
      resetValues();
    });
    $("#botSelect").on("changed.bs.select", () => {
      const bot = common_1.botData[$("#botSelect").selectpicker("val")];
      $("#enemyInfoButton").attr("data-content", common_1.createBotDataContent(bot));

      if (bot.name === "A-15 Conveyor") {
        $("#endConditionNoTnc").removeClass("not-visible");
      } else {
        $("#endConditionNoTnc").addClass("not-visible");
      }

      commonJquery_1.refreshSelectpicker($("#endConditionSelect"));
    });
    $("#combatTypeContainer > label > input").on("change", () => {
      updateChoices();
    });
    $("#simulateButton").on("click", () => {
      simulate();
    });
    $("#cancelButton").on("click", () => {
      cancelled = true;
    });
    $("#addComparisonButton").on("click", () => {
      addComparison();
    });
    $("#comparisonChartNameInput").on("change", () => {
      let label = $("#comparisonChartNameInput").val();

      if (label === "") {
        label = "Custom Comparison";
      }

      comparisonChart.options.title.text = label;
      comparisonChart.update();
    }); // Reinstate for beta 12
    // $("#beta11Checkbox").on("change", () => {
    //     const isB11 = $("#beta11Checkbox").prop("checked");
    //     setB11State(isB11);
    //     const newItems = (isB11 ? itemsB11 : items) as any;
    //     const newBots = (isB11 ? botsB11 : bots) as any;
    //     initData(newItems, newBots);
    //     // Initialize page state
    //     resetValues();
    //     updateChoices();
    //     ($("#beta11Checkbox").parent() as any).tooltip("hide");
    // });

    $(window).on("click", e => {
      if ($(e.target).parents(".popover").length === 0 && $(".popover").length >= 1) {
        // If clicking outside of a popover close the current one
        $('[data-toggle="popover"]').not(e.target).popover("hide");
      } else if ($(e.target).parents(".popover").length === 1 && $(".popover").length > 1) {
        // If clicking inside of a popover close any nested popovers
        $(e.target).parents(".popover").find(".bot-popover-item").not(e.target).not($(e.target).parents()).popover("hide");
      }
    }); // Enable tooltips/popovers

    $('[data-toggle="tooltip"]').tooltip(); //Set initial bot info

    const bot = common_1.botData[$("#botSelect").selectpicker("val")];
    $("#enemyInfoButton").attr("data-content", common_1.createBotDataContent(bot));
    $("#enemyInfoButton").popover();
    commonJquery_1.enableBotInfoItemPopovers($("#enemyInfoButton")); // These divs are created at runtime so have to do this at init

    $("#damageReductionSelect").parent().addClass("percent-dropdown");
    $("#botSelectContainer > div").addClass("enemy-dropdown");
    $("#siegeSelectContainer > div").addClass("siege-dropdown");
    $("#chargerSelect").parent().addClass("percent-dropdown");
    $("#kinecelleratorSelect").parent().addClass("percent-dropdown");
    $("#cyclerSelect").parent().addClass("percent-dropdown");
    $("#overloadSelect").parent().addClass("percent-dropdown");
    $("#armorIntegSelect").parent().addClass("percent-dropdown");
    $("#actuatorSelect").parent().addClass("percent-dropdown");
    $("#sneakAttackSelect").parent().addClass("sneak-attack-dropdown"); // Minor hack, the btn-light class is auto-added to dropdowns with search
    // but it doesn't really fit with everything else

    $(".btn-light").removeClass("btn-light");
    initCharts();
  } // Initializes the charts with default settings and no data


  function initCharts() {
    const perXDataset = getDatasetSettings("Current volley kill %", "rgba(0, 98, 0, 0.3)", "rgba(0, 196, 0, 1)");
    const cumulativeDataset = getDatasetSettings("Cumulative kill %", "rgba(96, 96, 96, 0.3)", "rgba(128, 128, 128, 1)");
    let chartElement = $("#chart");
    chart = new chart_js_1.Chart(chartElement, {
      type: "scatter",
      data: {
        datasets: [perXDataset, cumulativeDataset]
      },
      options: {
        legend: {
          labels: {
            fontSize: 16
          }
        },
        scales: {
          xAxes: [{
            gridLines: {
              display: false
            },
            scaleLabel: {
              display: true,
              labelString: "Number of volleys",
              fontSize: 24
            },
            ticks: {
              min: 0,
              stepSize: 1
            }
          }],
          yAxes: [{
            gridLines: {
              color: "rgba(128, 128, 128, 0.8)"
            },
            scaleLabel: {
              display: true,
              labelString: "Percent of kills",
              fontSize: 24
            },
            ticks: {
              beginAtZero: true,
              callback: value => value + "%"
            }
          }]
        },
        title: {
          display: true,
          fontSize: 24
        }
      }
    });
    chartElement = $("#comparisonChart");
    comparisonChart = new chart_js_1.Chart(chartElement, {
      type: "scatter",
      data: {
        datasets: []
      },
      options: {
        legend: {
          labels: {
            fontSize: 16
          }
        },
        scales: {
          xAxes: [{
            gridLines: {
              display: false
            },
            scaleLabel: {
              display: true,
              labelString: "Number of time units",
              fontSize: 24
            },
            ticks: {
              min: 0,
              stepSize: 100
            }
          }],
          yAxes: [{
            gridLines: {
              color: "rgba(128, 128, 128, 0.8)"
            },
            scaleLabel: {
              display: true,
              labelString: "Percent of kills",
              fontSize: 24
            },
            ticks: {
              beginAtZero: true,
              callback: value => value + "%"
            }
          }]
        },
        title: {
          display: true,
          text: "Custom Comparison",
          fontSize: 24
        }
      }
    });
  } // Checks if the combat type is melee or ranged


  function isMelee() {
    return $("#combatTypeMelee").hasClass("active");
  } // Resets a dropdown to the first item


  function resetDropdown(dropdown) {
    dropdown.selectpicker("val", dropdown.children().val());
  } // Resets all values


  function resetValues() {
    // Reset button groups
    commonJquery_1.resetButtonGroup($("#analysisContainer"));
    commonJquery_1.resetButtonGroup($("#movedContainer"));
    commonJquery_1.resetButtonGroup($("#siegeModeContainer")); // Reset dropdowns

    resetDropdown($("#damageReductionSelect"));
    resetDropdown($("#siegeSelect"));
    resetDropdown($("#chargerSelect"));
    resetDropdown($("#kinecelleratorSelect"));
    resetDropdown($("#cyclerSelect"));
    resetDropdown($("#overloadSelect"));
    resetDropdown($("#armorIntegSelect"));
    resetDropdown($("#actuatorSelect"));
    resetDropdown($("#sneakAttackSelect"));
    resetDropdown($("#endConditionSelect")); // Reset text inputs

    $("#numFightsInput").val("");
    $("#targetingInput").val("");
    $("#treadsInput").val("");
    $("#distanceInput").val("");
    $("#recoilInput").val("");
    $("#coreAnalyzerInput").val("");
    $("#targetAnalyzerInput").val("");
    $("#meleeAnalysisContainer > input").val("");
    $("#forceBoosterContainer > input").val("");
    $("#speedInput").val("");
    $("#actuatorArrayInput").val("");
    $("#bonusMomentumInput").val("");
    $("#initialMomentumInput").val("");
    $("#comparisonNameInput").val(""); // Reset with 1 preset weapon and one empty one

    $("#weaponSelectContainer").empty();
    const defaultWeapon = isMelee() ? "Mining Claw" : "Lgt. Assault Rifle";
    addWeaponSelect(defaultWeapon);
    addWeaponSelect("");
    setStatusText("");
    $("#resultsContainer").addClass("not-visible");
  } // Sets controls to disabled/enabled based on if the simulation is running


  function setSimulationRunning(running) {
    function setEnabled(selector) {
      selector.removeClass("disabled");
      selector.prop("disabled", false);
    }

    function setDisabled(selector) {
      selector.addClass("disabled");
      selector.prop("disabled", true);
    }

    const func = running ? setDisabled : setEnabled;
    func($("#spoilers"));
    func($("#combatTypeRanged"));
    func($("#combatTypeRanged > input"));
    func($("#combatTypeMelee"));
    func($("#combatTypeMelee > input"));
    func($("#numFightsInput"));
    func($("#reset"));
    func($("#botSelect").next());
    func($("#analysisNo"));
    func($("#analysisNo > input"));
    func($("#analysisYes"));
    func($("#analysisYes > input"));
    func($("#damageReductionSelect").next());
    func($("#targetingInput"));
    func($("#siegeSelect").next());
    func($("#treadsInput"));
    func($("#distanceInput"));
    func($("#chargerSelect").next());
    func($("#kinecelleratorSelect").next());
    func($("#cyclerSelect").next());
    func($("#recoilInput"));
    func($("#overloadSelect").next());
    func($("#meleeAnalysisContainer > input"));
    func($("#forceBoosterContainer > input"));
    func($("#actuatorSelect").next());
    func($("#actuatorArrayInput"));
    func($("#bonusMomentumInput"));
    func($("#initialMomentumInput"));
    func($("#speedInput"));
    func($("#sneakAttackSelect").next());
    func($("#armorIntegSelect").next());
    func($("#coreAnalyzerInput"));
    func($("#targetAnalyzerInput"));
    func($("#weaponSelectContainer button").not(".weapon-help-btn"));
    func($("#weaponSelectContainer input")); // Update the cancel/simulate buttons

    if (running) {
      $("#cancelButton").removeClass("not-visible");
      $("#simulateButton").addClass("not-visible");
    } else {
      $("#cancelButton").addClass("not-visible");
      $("#simulateButton").removeClass("not-visible");
    }
  } // Sets the status label to the specified value


  function setStatusText(text) {
    $("#statusText").text(text);
  } // Simulates combat with the current settings and updates the chart (simulate button entry point)


  function simulate() {
    // Check inputs first
    const botName = $("#botSelect").selectpicker("val");
    const userWeapons = [];
    $("#weaponSelectContainer select").each((_, s) => {
      const name = $(s).selectpicker("val");

      if (name in common_1.itemData) {
        const weapon = common_1.itemData[name]; // Tread invalid or unfilled numbers as 1

        const number = common_1.parseIntOrDefault($(s).parent().nextAll("input").not(".not-visible").val(), 1);
        const overloaded = !$(s).parent().nextAll(".btn-group").children("label").first().hasClass("active");

        for (let i = 0; i < number; i++) {
          userWeapons.push({
            def: weapon,
            overloaded: overloaded
          });
        }
      } else if (name === "Ram") {
        const weapon = {
          categories: [],
          category: itemTypes_1.ItemRatingCategory.None,
          hackable: false,
          index: 0,
          integrity: 0,
          name: "Ram",
          fullName: "Ram",
          noPrefixName: "Ram",
          projectileCount: 1,
          range: 2,
          rating: 0,
          ratingString: "",
          size: 0,
          slot: "N/A",
          type: itemTypes_1.ItemType.ImpactWeapon,
          mass: common_1.parseIntOrDefault($(s).parent().nextAll("input").val(), 0)
        };
        userWeapons.push({
          def: weapon,
          overloaded: false
        });
      }
    });

    if (!(botName in common_1.botData)) {
      setStatusText(`Bot ${botName} is invalid, this is probably a bug.`);
      return;
    }

    if (userWeapons.length === 0) {
      setStatusText("There must be at least 1 weapon selected.");
      return;
    } // Set up initial calculation state


    const bot = common_1.botData[botName];
    const parts = [];
    bot.componentData.concat(bot.armamentData) // For now just use the first option in each list
    .concat(bot.componentOptionData.map(c => c[0])).concat(bot.armamentOptionData.map(c => c[0])).forEach(item => {
      var _a;

      for (let i = 0; i < item.number; i++) {
        const itemDef = common_1.getItem(item.name);
        const isProtection = itemDef.type === itemTypes_1.ItemType.Protection;
        const coverage = (_a = itemDef.coverage) !== null && _a !== void 0 ? _a : 0;
        parts.push({
          armorAnalyzedCoverage: isProtection ? 0 : coverage,
          coverage: coverage,
          def: itemDef,
          integrity: itemDef.integrity,
          protection: isProtection,
          selfDamageReduction: 1
        });
      }
    });
    const armorAnalyzedCoverage = bot.coreCoverage + parts.reduce((prev, part) => prev + part.armorAnalyzedCoverage, 0);
    const externalDamageReduction = externalDamageReductionNameMap[$("#damageReductionSelect").selectpicker("val")];
    const defensiveState = simulatorCalcs_1.getBotDefensiveState(parts, externalDamageReduction); // Enemy bot state

    const botState = {
      armorAnalyzedCoverage: armorAnalyzedCoverage,
      coreCoverage: bot.coreCoverage,
      coreDisrupted: false,
      coreIntegrity: bot.coreIntegrity,
      corruption: 0,
      def: bot,
      defensiveState: defensiveState,
      externalDamageReduction: externalDamageReduction,
      immunities: bot.immunities,
      initialCoreIntegrity: bot.coreIntegrity,
      parts: parts,
      regen: simulatorCalcs_1.getRegen(bot),
      resistances: bot.resistances === undefined ? {} : bot.resistances,
      totalCoverage: bot.totalCoverage
    }; // Weapons and other offensive state

    let ramming = false;
    const melee = isMelee();
    const numTreads = common_1.parseIntOrDefault($("#treadsInput").val(), 0); // Accuracy bonuses and penalties

    const siegeBonus = melee ? null : siegeModeBonusMap[$("#siegeSelect").selectpicker("val")];
    let targetingComputerBonus = 0;

    if (!melee) {
      targetingComputerBonus = common_1.parseIntOrDefault($("#targetingInput").val(), 0);
    } // Melee analysis/force boosters


    const meleeAnalysis = [0, 0, 0, 0];
    const forceBoosters = [0, 0, 0];

    if (melee) {
      meleeAnalysisIds.map((id, i) => {
        meleeAnalysis[i] = common_1.parseIntOrDefault($(`#${id}`).val(), 0);
      });
      forceBoosterIds.map((id, i) => {
        forceBoosters[i] = common_1.parseIntOrDefault($(`#${id}`).val(), 0);
      }); // Reduce force boosters to the 2 highest rating parts

      let numBoostersRemaining = 2;

      for (let i = forceBoosters.length - 1; i >= 0; i--) {
        if (forceBoosters[i] > numBoostersRemaining) {
          forceBoosters[i] = numBoostersRemaining;
          numBoostersRemaining = 0;
        } else {
          numBoostersRemaining -= forceBoosters[i];
        }
      }
    } // Invalid / 6 or more tiles = 0 bonus


    let distance = common_1.parseIntOrDefault($("#distanceInput").val(), 6);

    if (distance <= 1) {
      // Less than or equal to 1, just assign to 1
      distance = 1;
    } // Recoil reduction


    const recoilReduction = common_1.parseIntOrDefault($("#recoilInput").val(), 0);
    const allRecoil = userWeapons.reduce((prev, weapon) => simulatorCalcs_1.getRecoil(weapon.def, numTreads, recoilReduction) + prev, 0); // Target Analyzer crit bonus

    const critBonus = common_1.parseIntOrDefault($("#targetAnalyzerInput").val(), 0);
    const weapons = userWeapons.map((weapon, i) => {
      var _a;

      const def = weapon.def;
      let damageMin = 0;
      let damageMax = 0;
      let damageType = undefined;
      let explosionMin = 0;
      let explosionMax = 0;
      let explosionType = undefined;

      if (def.damage !== undefined) {
        // Found regular damage
        if (def.damage.includes("-")) {
          const split = def.damage.split("-");
          damageMin = parseInt(split[0]);
          damageMax = parseInt(split[1]);
        } else {
          damageMin = parseInt(def.damage);
          damageMax = damageMin;
        }

        if (def.type === itemTypes_1.ItemType.BallisticGun || def.type === itemTypes_1.ItemType.BallisticCannon) {
          // Increase minimum damage for kinecellerators (2)
          const kinecelleratorName = $("#kinecelleratorSelect").selectpicker("val");
          const kinecelleratorBonus = kinecelleratorMap[kinecelleratorName]; // Ensure min damage can't exceed max

          damageMin = Math.min(Math.trunc(damageMin * kinecelleratorBonus), damageMax);
        } else if (melee) {
          // Apply damage for melee analyses/force boosters (2)
          let minDamageIncrease = 0;

          for (let i = 0; i < meleeAnalysisMinDamageIncrease.length; i++) {
            minDamageIncrease += meleeAnalysis[i] * meleeAnalysisMinDamageIncrease[i];
          } // Ensure min damage can't exceed max


          damageMin = Math.min(minDamageIncrease + damageMin, damageMax); // Apply force boosters
          // Earlier code ensures that there are at most 2 boosters enabled in the array

          let maxDamageIncrease = 0;
          let numBoostersProcessed = 0;

          for (let i = forceBoosters.length - 1; i >= 0; i--) {
            if (forceBoosters[i] == 2) {
              maxDamageIncrease = 1.5 * forceBoosterMaxDamageIncrease[i];
              numBoostersProcessed += 2;
            } else if (forceBoosters[i] == 1) {
              maxDamageIncrease += forceBoosterMaxDamageIncrease[i] * (numBoostersProcessed == 0 ? 1 : 0.5);
              numBoostersProcessed += 1;
            }
          }

          damageMax = Math.floor(damageMax * (1 + maxDamageIncrease));
        }

        damageType = def.damageType;
      }

      if (def.explosionDamage !== undefined) {
        // Found explosion damage
        if (def.explosionDamage.includes("-")) {
          const split = def.explosionDamage.split("-");
          explosionMin = parseInt(split[0]);
          explosionMax = parseInt(split[1]);
        } else {
          explosionMin = parseInt(def.explosionDamage);
          explosionMax = explosionMin;
        }

        explosionType = def.explosionType;
      } // Get crit chance, only apply target analyzer if there's a specific bonus


      let critical;

      if (def.criticalType === itemTypes_1.Critical.Meltdown) {
        // Meltdown ignores target analyzer bonus
        critical = def.critical;
      } else {
        critical = def.critical === undefined || def.critical === 0 ? 0 : def.critical + critBonus;
      } // Calculate base accuracy that can't change over the course of the fight


      let baseAccuracy = melee ? initialMeleeAccuracy : initialRangedAccuracy;

      if (!melee) {
        baseAccuracy += targetingComputerBonus;
      } // Size bonus/penalty


      if (bot.size in sizeAccuracyMap) {
        baseAccuracy += sizeAccuracyMap[bot.size];
      } else {
        console.log(`${botName} has invalid size ${bot.size}`);
      } // Builtin targeting


      if (def.targeting !== undefined) {
        baseAccuracy += def.targeting;
      }

      const delay = common_1.parseIntOrDefault(def.delay, 0); // Follow-up attacks on melee gain a 10% bonus to targeting

      const followUp = melee && i != 0;

      if (followUp) {
        baseAccuracy += 10;
      }

      const disruption = (_a = def.disruption) !== null && _a !== void 0 ? _a : 0;
      const spectrum = simulatorCalcs_1.spectrumToNumber(def.spectrum);
      const explosionSpectrum = simulatorCalcs_1.spectrumToNumber(def.explosionSpectrum);

      if (def.name === "Ram") {
        ramming = true;
      } // All launchers are missiles except for special cases


      const isMissile = def.type === "Launcher" && def.name != "Sigix Terminator" && def.name != "Supercharged Sigix Terminator" && def.name != "Vortex Catalyst Activator";
      const state = {
        accelerated: def.type === "Energy Gun" || def.type === "Energy Cannon",
        accuracy: baseAccuracy,
        baseAccuracy: baseAccuracy,
        criticalChance: critical,
        criticalType: def.criticalType,
        damageMin: damageMin,
        damageMax: damageMax,
        damageType: damageType,
        def: def,
        delay: delay,
        disruption: disruption,
        explosionMin: explosionMin,
        explosionMax: explosionMax,
        explosionSpectrum: explosionSpectrum,
        explosionType: explosionType,
        isMissile: isMissile,
        numProjectiles: def.projectileCount,
        overflow: !def.type.includes("Gun"),
        overloaded: weapon.overloaded,
        spectrum: spectrum
      };
      return state;
    }); // Charger bonus

    const chargerName = $("#chargerSelect").selectpicker("val");
    const chargerBonus = chargerMap[chargerName]; // Armor Integrity Analyzer chance

    const armorAnalyzerName = $("#armorIntegSelect").selectpicker("val");
    const armorAnalyzerChance = armorIntegrityMap[armorAnalyzerName]; // Core Analyzer chance

    const coreAnalyzerChance = common_1.parseIntOrDefault($("#coreAnalyzerInput").val(), 0); // Actuator Array chance

    const actuatorArrayBonus = common_1.parseIntOrDefault($("#actuatorArrayInput").val(), 0); // Overload bonus damage

    const overloadName = $("#overloadSelect").selectpicker("val");
    const overloadBonus = overloadMap[overloadName]; // Calculate followup chance

    const followupChances = [];

    if (melee) {
      // melee followup% = 20 + ([(primary weapon speed mod) - (followup weapon speed mod)] / 10)
      const baseChance = 20 + actuatorArrayBonus;
      weapons.forEach((weapon, i) => {
        if (i != 0) {
          let chance = baseChance + Math.trunc((weapons[0].delay - weapon.delay) / 10); // Clamp between 0-100

          chance = Math.min(chance, 100);
          chance = Math.max(chance, 0);
          followupChances.push(chance);
        }
      });
    } // Get speed


    const speed = common_1.parseIntOrDefault($("#speedInput").val(), 100); // Get momentum

    const bonusMomentum = common_1.parseIntOrDefault($("#bonusMomentumInput").val(), 0);
    const initialMomentum = common_1.parseIntOrDefault($("#initialMomentumInput").val(), 0); // Determine sneak attack strategy

    const sneakAttackStrategy = $("#sneakAttackSelect").selectpicker("val"); // Calculate total (ranged) or initial (melee) volley time

    const volleyTimeModifier = melee ? actuatorMap[$("#actuatorSelect").selectpicker("val")] : cyclerMap[$("#cyclerSelect").selectpicker("val")];
    const volleyTime = melee ? weapons[0].delay + simulatorCalcs_1.volleyTimeMap[1] : simulatorCalcs_1.getRangedVolleyTime(weapons.map(w => w.def), volleyTimeModifier); // Other misc offensive state

    const offensiveState = {
      armorAnalyzerChance: armorAnalyzerChance,
      analysis: $("#analysisYes").hasClass("active"),
      chargerBonus: chargerBonus,
      coreAnalyzerChance: coreAnalyzerChance,
      distance: distance,
      followupChances: followupChances,
      forceBoosters: forceBoosters,
      melee: melee,
      meleeAnalysis: meleeAnalysis,
      momentum: {
        bonus: bonusMomentum,
        current: bonusMomentum + initialMomentum,
        initial: initialMomentum
      },
      numTreads: numTreads,
      overloadBonus: overloadBonus,
      ramming: ramming,
      recoil: allRecoil,
      recoilReduction: recoilReduction,
      siegeBonus: siegeBonus,
      sneakAttack: false,
      sneakAttackStrategy: sneakAttackStrategy,
      speed: speed,
      targetingComputerBonus: targetingComputerBonus,
      volleyTime: volleyTime,
      volleyTimeModifier: volleyTimeModifier
    };
    const endCondition = $("#endConditionSelect").selectpicker("val"); // Overall state

    const state = {
      botState: botState,
      endCondition: endCondition,
      initialBotState: botState,
      killTus: {},
      killVolleys: {},
      offensiveState: offensiveState,
      tus: 0,
      weapons: weapons
    }; // Disable all input fields while the simulation is running

    setSimulationRunning(true); // Run simulation

    cancelled = false;
    let i = 0;
    const numSimulations = getNumSimulations();
    const initial = performance.now();
    let lastFrame = initial;
    let lastStatusUpdate = lastFrame; // Run simulation in batches via setTimeout to avoid UI lockup.
    // After each 100 simulations check if we've surpassed 30 ms since the
    // last update (aim for ~30 fps)
    // If so then pass control back so events/updates can be processed.

    function run() {
      for (; i < numSimulations; i++) {
        if (i % 100 === 0) {
          if (cancelled) {
            // User cancelled
            setStatusText("Cancelled simulation");
            cancelled = false;
            setSimulationRunning(false);
            return;
          }

          const now = performance.now();

          if (now - lastFrame > 30) {
            lastFrame = now;

            if (now - lastStatusUpdate > 100) {
              // Only update status ~ 10 times a second
              const percent = (i * 100 / numSimulations).toFixed(1);
              setStatusText(`${String(percent).padStart(4, "0")} % completed.`);
              lastStatusUpdate = now;
            }

            setTimeout(run, 0);
            break;
          }
        }

        try {
          if (!simulatorCalcs_1.simulateCombat(state)) {
            // Combat can only fail if we exceed max volleys
            setStatusText(`The simulation exceeded ${simulatorCalcs_1.maxVolleys} volleys and will likely never kill.`);
            setSimulationRunning(false);
            return;
          }
        } catch (e) {
          console.log(e);
          setStatusText("The simulation encountered an unexpected error, this is a bug.");
          setSimulationRunning(false);
          return;
        }
      }

      if (i >= numSimulations) {
        setSimulationRunning(false);
        let time = performance.now() - initial;
        time /= 1000;
        setStatusText(`Completed in ${time.toFixed(2)} seconds.`);
        updateChart(state);
        const button = $("#addComparisonButton");
        button.removeClass("disabled");
        button.prop("disabled", false);
      }
    }

    run();
  } // Updates the chart based on the current simulation state


  function updateChart(state) {
    const numSimulations = getNumSimulations(); // Calculate data, round to the given number of decimal places and
    // ignore values smaller to reduce clutter

    function getData(perXKillsKeys, perXKillsObject, numDecimalPlaces, stepSize) {
      const data = perXKillsKeys.filter(numX => perXKillsObject[numX] / numSimulations > Math.pow(10, -2 - numDecimalPlaces)).map(numX => {
        return {
          x: parseInt(numX),
          y: Math.trunc(perXKillsObject[numX] / numSimulations * Math.pow(10, 2 + numDecimalPlaces)) / Math.pow(10, numDecimalPlaces)
        };
      });

      if (data.length < 5) {
        // Add a 0 kill ending point if there aren't many data points
        // to fill out a bit more nicely
        data.push({
          x: data[data.length - 1].x + stepSize,
          y: 0
        });
      }

      return data;
    }

    function getCumulativeData(data) {
      const cumulativeData = [];
      let total = 0;
      data.forEach(point => {
        total += point.y;
        cumulativeData.push({
          x: point.x,
          y: Math.trunc(total * 100) / 100
        });
      });
      return cumulativeData;
    } // Get datasets


    const perXDataset = chart.data.datasets[0];
    const cumulativeDataset = chart.data.datasets[1];
    const perVolleys = $("#xAxisVolleys").hasClass("active");
    let perXData;
    const perXString = $("#endConditionSelect").selectpicker("val");
    let stepSize;
    let xString;
    let xAxisString; // Get comparison data first

    const perXKillsKeys = Object.keys(state.killTus);
    perXKillsKeys.sort((a, b) => parseFloat(a) - parseFloat(b)); // Note: Melee (especially with followups) can create a lot of
    // relatively  lower probability scenarios due to strange melee delays
    // so add an extra decimal place to avoid cutting out too many
    // results that the max total % would end up being unreasonably
    // low (like under 80%) when killing enemies with particularly
    // large health pools.

    const tuData = getData(perXKillsKeys, state.killTus, state.offensiveState.melee ? 3 : 1, 100);
    currentComparisonData = getCumulativeData(tuData);

    if (perVolleys) {
      // Show data per volley
      xString = "Volleys";
      stepSize = 1;
      xAxisString = "Number of volleys";
      perXData = getData(Object.keys(state.killVolleys), state.killVolleys, 1, 1);
    } else {
      // Show data per time unit
      xString = "Time Units";
      stepSize = state.offensiveState.volleyTime;
      xAxisString = "Number of time units";
      perXData = getData(perXKillsKeys, state.killTus, state.offensiveState.melee ? 3 : 1, stepSize);
    }

    const cumulativeData = getCumulativeData(perXData); // Update chart

    chart.options.scales.xAxes[0].ticks.stepSize = stepSize;
    chart.options.scales.xAxes[0].scaleLabel.labelString = xAxisString;
    perXDataset.data = perXData;
    cumulativeDataset.data = cumulativeData;
    chart.options.title.text = `${xString}/${perXString} vs. ${$("#botSelect").selectpicker("val")}`;
    chart.update();
    $("#resultsContainer").removeClass("not-visible");
  } // Updates the available choices for the dropdowns depending on spoiler state and combat type


  function updateChoices() {
    const spoilersState = commonJquery_1.getSpoilersState(); // Update all bot selections after saving old pick

    const select = $("#botSelect");
    const oldBot = select.selectpicker("val");
    select.empty();
    const sortedBots = Object.keys(common_1.botData);
    sortedBots.sort();
    sortedBots.forEach(name => {
      const bot = common_1.botData[name];

      if (bot.categories.some(c => c === "Spoilers")) {
        // Spoiler bots allowed for spoilers/redacted
        if (spoilersState === "Spoilers" || spoilersState === "Redacted") {
          select.append(`<option>${name}</option>`);
        }
      } else if (bot.categories.some(c => c === "Redacted")) {
        // Redacted bots only allowed for spoilers/redacted
        if (spoilersState === "Redacted") {
          select.append(`<option>${name}</option>`);
        }
      } else {
        // Non-spoiler bot always allowed
        select.append(`<option>${name}</option>`);
      }
    }); // Don't show arch tele condition when not on redacted

    if (spoilersState === "Redacted") {
      $("#endConditionArchTele").removeClass("not-visible");
    } else {
      $("#endConditionArchTele").addClass("not-visible");
    }

    commonJquery_1.refreshSelectpicker($("#endConditionSelect"));
    commonJquery_1.refreshSelectpicker(select); // Try to preserve the old bot, otherwise default

    select.selectpicker("val", oldBot);

    if (select.selectpicker("val") === null) {
      select.selectpicker("val", "G-34 Mercenary");
    }

    const melee = isMelee();

    function setVisibility(selector, visible) {
      visible ? selector.removeClass("not-visible") : selector.addClass("not-visible");
    }

    setVisibility($("#rangedAccuracyContainer"), !melee);
    setVisibility($("#rangedUtilitiesContainer"), !melee);
    setVisibility($("#rangedUtilitiesContainer2"), !melee);
    setVisibility($("#meleeAnalysisContainer"), melee);
    setVisibility($("#forceBoosterContainer"), melee);
    setVisibility($("#meleeBehaviorContainer"), melee);
    setVisibility($("#meleeUtilitiesContainer"), melee); // Reset with 1 preset weapon and one empty one

    const defaultWeapon = melee ? "Mining Claw" : "Lgt. Assault Rifle";
    $("#weaponSelectContainer").empty();
    addWeaponSelect(defaultWeapon);
    addWeaponSelect("");
  }
});
},{"../json/bots.json":"json/bots.json","../json/items.json":"json/items.json","./common":"ts/common.ts","./commonJquery":"ts/commonJquery.ts","./itemTypes":"ts/itemTypes.ts","./simulatorCalcs":"ts/simulatorCalcs.ts","bootstrap":"../node_modules/bootstrap/dist/js/bootstrap.js","chart.js":"../node_modules/chart.js/dist/Chart.js","jquery":"../node_modules/jquery/dist/jquery.js","bootstrap-select":"../node_modules/bootstrap-select/dist/js/bootstrap-select.js"}],"../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "33551" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","ts/simulator.ts"], null)
//# sourceMappingURL=/simulator.0c4877d2.js.map