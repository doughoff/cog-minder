// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"json/items.json":[function(require,module,exports) {
module.exports = {
  "Matter": {
    "Slot": "N/A",
    "Name": "Matter",
    "Type": "Matter",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Used to fuse components, and is consumed by ballistic weapons, which convert it to the appropriate type of ammunition.",
    "Index": 0
  },
  "Data Core": {
    "Slot": "N/A",
    "Name": "Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contains a unique dynamic key that can be used to improve the chances of hacking its associated terminal, if used before its renewal time expires (40 turns).",
    "Index": 1
  },
  "Derelict Log": {
    "Slot": "N/A",
    "Name": "Derelict Log",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contains intel data collected by derelicts.",
    "Index": 2
  },
  "Schematic Archive": {
    "Slot": "N/A",
    "Name": "Schematic Archive",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contains a part or robot schematic.",
    "Index": 3
  },
  "Imprinter Data Core": {
    "Slot": "N/A",
    "Name": "Imprinter Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 4
  },
  "A2 Data Core": {
    "Slot": "N/A",
    "Name": "A2 Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 5
  },
  "A7 Data Core": {
    "Slot": "N/A",
    "Name": "A7 Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 6
  },
  "MAIN.C Data Core": {
    "Slot": "N/A",
    "Name": "MAIN.C Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 7
  },
  "Architect Data Core": {
    "Slot": "N/A",
    "Name": "Architect Data Core",
    "Type": "Data Core",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Contents unknown.",
    "Index": 8
  },
  "Scrap": {
    "Slot": "N/A",
    "Name": "Scrap",
    "Type": "Scrap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "50",
    "Description": "A collection of debris and components that may or may not contain something useful.",
    "Index": 9
  },
  "Protomatter": {
    "Slot": "N/A",
    "Name": "Protomatter",
    "Type": "Protomatter",
    "Rating": "1",
    "Size": "1",
    "Integrity": "1",
    "Description": "Used to restore integrity of core and attached parts at a rate of 1 protomatter per 3 integrity. Wait while standing on protomatter to automatically apply up to 8 of it per turn.",
    "Index": 10
  },
  "Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Ion Engine",
    "Type": "Engine",
    "Rating": "1",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 20-48 thermal damage with a radius of 2 (falloff: 8; salvage: -4). High heat transfer.",
    "Energy Generation": "5",
    "Energy Storage": "150",
    "Explosion Radius": "2",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-4",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 11
  },
  "Lgt. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Ion Engine",
    "Type": "Engine",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "40",
    "Coverage": "60",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 20-48 thermal damage with a radius of 2 (falloff: 8; salvage: -4). High heat transfer.",
    "Energy Generation": "5",
    "Energy Storage": "25",
    "Explosion Radius": "2",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-4",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 12
  },
  "Backup Power I": {
    "Slot": "Power",
    "Name": "Backup Power I",
    "Type": "Engine",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "40",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 20-48 thermal damage with a radius of 2 (falloff: 8; salvage: -4). High heat transfer.",
    "Energy Generation": "4",
    "Explosion Radius": "2",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-4",
    "Index": 13
  },
  "Imp. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Ion Engine",
    "Type": "Engine",
    "Rating": "2",
    "Size": "1",
    "Mass": "7",
    "Integrity": "70",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "7",
    "Energy Storage": "165",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 14
  },
  "Rnf. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Ion Engine",
    "Type": "Engine",
    "Rating": "2",
    "Size": "1",
    "Mass": "10",
    "Integrity": "140",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "7",
    "Energy Storage": "165",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 15
  },
  "Hvy. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hvy. Ion Engine",
    "Type": "Engine",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "180",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 16
  },
  "Cld. Ion Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Ion Engine",
    "Type": "Engine",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 25-57 thermal damage with a radius of 2 (falloff: 8; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "180",
    "Power Stability": "99%",
    "Explosion Radius": "2",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 17
  },
  "Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Deuterium Engine",
    "Type": "Engine",
    "Rating": "3",
    "Size": "1",
    "Mass": "9",
    "Integrity": "75",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "175",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 18
  },
  "Lgt. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Deuterium Engine",
    "Type": "Engine",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "60",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "40",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 19
  },
  "Backup Power III": {
    "Slot": "Power",
    "Name": "Backup Power III",
    "Type": "Engine",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "40",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "6",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Index": 20
  },
  "Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Nuclear Core",
    "Type": "Power Core",
    "Rating": "3",
    "Size": "1",
    "Mass": "7",
    "Integrity": "75",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "140",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 21
  },
  "Lgt. Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Nuclear Core",
    "Type": "Power Core",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "9",
    "Energy Storage": "60",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 22
  },
  "Imp. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "11",
    "Energy Storage": "190",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 23
  },
  "Rnf. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "15",
    "Integrity": "160",
    "Coverage": "60",
    "Heat Generation": "10",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "11",
    "Energy Storage": "190",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 24
  },
  "Hyb. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hyb. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "5",
    "Energy Storage": "700",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 25
  },
  "Hvy. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hvy. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "210",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 26
  },
  "Cld. Deuterium Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Deuterium Engine",
    "Type": "Engine",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "3",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "210",
    "Power Stability": "99%",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 27
  },
  "Enh. Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Enh. Nuclear Core",
    "Type": "Power Core",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "12",
    "Energy Storage": "200",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 28
  },
  "Mic. Nuclear Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mic. Nuclear Core",
    "Type": "Power Core",
    "Rating": "4",
    "Size": "1",
    "Mass": "6",
    "Integrity": "50",
    "Coverage": "30",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "10",
    "Energy Storage": "50",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 29
  },
  "Mak. Power Source": {
    "Slot": "Power",
    "Name": "Mak. Power Source",
    "Type": "Engine",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "50",
    "Heat Generation": "10",
    "Description": "If triggered by chain reaction, explodes for 36-74 thermal damage with a radius of 2 (falloff: 11; salvage: -6). High heat transfer.",
    "Energy Generation": "10",
    "Energy Storage": "70",
    "Explosion Radius": "2",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 30
  },
  "Angular Momentum Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Angular Momentum Engine",
    "Type": "Engine",
    "Rating": "5",
    "Size": "1",
    "Mass": "13",
    "Integrity": "90",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "200",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 31
  },
  "Lgt. Angular Momentum Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Angular Momentum Engine",
    "Type": "Engine",
    "Rating": "5",
    "Size": "1",
    "Mass": "9",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "50",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 32
  },
  "F-cell Engine": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "F-cell Engine",
    "Type": "Engine",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "135",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "14",
    "Energy Storage": "400",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 33
  },
  "Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Fission Core",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "10",
    "Integrity": "90",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "210",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 34
  },
  "Lgt. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Fission Core",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "7",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "13",
    "Energy Storage": "60",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 35
  },
  "Hyb. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hyb. Fission Core",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "60",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 30-66 thermal damage with a radius of 2 (falloff: 10; salvage: -5). High heat transfer.",
    "Energy Generation": "6",
    "Energy Storage": "800",
    "Explosion Radius": "2",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 36
  },
  "Fusion Compressor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Fusion Compressor",
    "Type": "Power Core",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "50",
    "Heat Generation": "15",
    "Energy Generation": "20",
    "Matter Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 37
  },
  "Cold Fusion Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cold Fusion Reactor",
    "Type": "Reactor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "150",
    "Coverage": "60",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "12",
    "Energy Storage": "100",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 38
  },
  "Neutrino Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Neutrino Core",
    "Type": "Power Core",
    "Rating": "6",
    "Size": "1",
    "Mass": "14",
    "Integrity": "95",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 24-40 electromagnetic damage with a radius of 2 (falloff: 3; salvage: 3; disruption: 2%). Wide spectrum.",
    "Energy Generation": "14",
    "Energy Storage": "215",
    "Explosion Radius": "2",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "40",
    "Falloff": "3",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 39
  },
  "Lgt. Neutrino Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Neutrino Core",
    "Type": "Power Core",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "80",
    "Coverage": "50",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 24-40 electromagnetic damage with a radius of 2 (falloff: 3; salvage: 3; disruption: 2%). Wide spectrum.",
    "Energy Generation": "14",
    "Energy Storage": "70",
    "Explosion Radius": "2",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "40",
    "Falloff": "3",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 40
  },
  "Rnf. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Fission Core",
    "Type": "Power Core",
    "Rating": "6",
    "Size": "1",
    "Mass": "21",
    "Integrity": "250",
    "Coverage": "60",
    "Heat Generation": "12",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "14",
    "Energy Storage": "210",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 41
  },
  "Enh. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Enh. Fission Core",
    "Type": "Power Core",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "150",
    "Coverage": "60",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "250",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 42
  },
  "Cld. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Fission Core",
    "Type": "Power Core",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "14",
    "Integrity": "150",
    "Coverage": "60",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "250",
    "Power Stability": "99%",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 43
  },
  "Mic. Fission Core": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mic. Fission Core",
    "Type": "Power Core",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "30",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "10",
    "Energy Storage": "50",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 44
  },
  "Fusion Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Fusion Reactor",
    "Type": "Reactor",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "15",
    "Description": "If triggered by chain reaction, explodes for 46-92 thermal damage with a radius of 2 (falloff: 13; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "195",
    "Explosion Radius": "2",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 45
  },
  "Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "16",
    "Integrity": "100",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "225",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 46
  },
  "Lgt. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "70",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "70",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 47
  },
  "Rnf. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "24",
    "Integrity": "300",
    "Coverage": "60",
    "Heat Generation": "13",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "225",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 48
  },
  "Hyb. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hyb. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "70",
    "Coverage": "60",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 41-83 thermal damage with a radius of 2 (falloff: 12; salvage: -6). High heat transfer.",
    "Energy Generation": "8",
    "Energy Storage": "1000",
    "Explosion Radius": "2",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 49
  },
  "Backup Power VII": {
    "Slot": "Power",
    "Name": "Backup Power VII",
    "Type": "Power Core",
    "Rating": "7",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "40",
    "Heat Generation": "6",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "12",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 50
  },
  "Hvy. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Hvy. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "18",
    "Integrity": "180",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "240",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 51
  },
  "Mni. Fusion Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mni. Fusion Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "100",
    "Coverage": "40",
    "Heat Generation": "15",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Energy Storage": "70",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 52
  },
  "Imp. Fusion Compressor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Fusion Compressor",
    "Type": "Power Core",
    "Rating": "7",
    "Size": "1",
    "Mass": "7",
    "Integrity": "100",
    "Coverage": "50",
    "Heat Generation": "20",
    "Energy Generation": "30",
    "Matter Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 53
  },
  "Mic. Neutrino Core": {
    "Slot": "Power",
    "Name": "Mic. Neutrino Core",
    "Type": "Power Core",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "20",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "16",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 54
  },
  "Zio. Light DM Reactor": {
    "Slot": "Power",
    "Name": "Zio. Light DM Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "20",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "22",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 55
  },
  "Zio. Heavy DM Reactor": {
    "Slot": "Power",
    "Name": "Zio. Heavy DM Reactor",
    "Type": "Reactor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "20",
    "Integrity": "130",
    "Coverage": "60",
    "Heat Generation": "30",
    "Description": "If triggered by chain reaction, explodes for 51-101 thermal damage with a radius of 3 (falloff: 14; salvage: -7). High heat transfer.",
    "Energy Generation": "30",
    "Explosion Radius": "3",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 56
  },
  "Particle Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Particle Reactor",
    "Type": "Reactor",
    "Rating": "8",
    "Size": "1",
    "Mass": "18",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "240",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 57
  },
  "Lgt. Particle Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Particle Reactor",
    "Type": "Reactor",
    "Rating": "8",
    "Size": "1",
    "Mass": "14",
    "Integrity": "75",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "80",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 58
  },
  "Mic. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Mic. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "8",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "30",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "14",
    "Energy Storage": "50",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 59
  },
  "Com. Particle Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Com. Particle Reactor",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "90",
    "Coverage": "30",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "35",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 60
  },
  "Cld. Antimatter Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Cld. Antimatter Reactor",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "18",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "4",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "18",
    "Energy Storage": "280",
    "Power Stability": "99%",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "204/102/68",
    "Index": 61
  },
  "Graviton Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Graviton Reactor",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "110",
    "Coverage": "60",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "24",
    "Energy Storage": "240",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 62
  },
  "Asb. Flux Generator": {
    "Slot": "Power",
    "Name": "Asb. Flux Generator",
    "Type": "Reactor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "40",
    "Integrity": "350",
    "Coverage": "160",
    "Heat Generation": "8",
    "Description": "If triggered by chain reaction, explodes for 57-109 thermal damage with a radius of 3 (falloff: 15; salvage: -7). High heat transfer.",
    "Energy Generation": "40",
    "Explosion Radius": "3",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-7",
    "Index": 63
  },
  "Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9",
    "Size": "1",
    "Mass": "20",
    "Integrity": "120",
    "Coverage": "60",
    "Heat Generation": "10",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "250",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 64
  },
  "Lgt. Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Lgt. Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9",
    "Size": "1",
    "Mass": "15",
    "Integrity": "80",
    "Coverage": "60",
    "Heat Generation": "9",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "90",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 65
  },
  "Rnf. Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Rnf. Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9",
    "Size": "1",
    "Mass": "30",
    "Integrity": "360",
    "Coverage": "60",
    "Heat Generation": "15",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "20",
    "Energy Storage": "250",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 66
  },
  "Imp. Quantum Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Imp. Quantum Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "17",
    "Integrity": "125",
    "Coverage": "60",
    "Heat Generation": "2",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "24",
    "Energy Storage": "250",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 67
  },
  "Zero-point Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Zero-point Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "150",
    "Coverage": "40",
    "Heat Generation": "7",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "28",
    "Energy Storage": "140",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 68
  },
  "Vortex Chain Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Vortex Chain Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "35",
    "Integrity": "300",
    "Coverage": "120",
    "Heat Generation": "12",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "50",
    "Energy Storage": "600",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 69
  },
  "Singularity Reactor": {
    "Slot": "Power",
    "Hackable Schematic": "1",
    "Name": "Singularity Reactor",
    "Type": "Reactor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "50",
    "Integrity": "600",
    "Coverage": "240",
    "Heat Generation": "5",
    "Description": "If triggered by chain reaction, explodes for 62-118 thermal damage with a radius of 3 (falloff: 16; salvage: -8). High heat transfer.",
    "Energy Generation": "70",
    "Energy Storage": "1000",
    "Explosion Radius": "3",
    "Explosion Damage Min": "62",
    "Explosion Damage Max": "118",
    "Falloff": "16",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "High (50)",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 70
  },
  "Matter Drive": {
    "Slot": "Power",
    "Name": "Matter Drive",
    "Type": "Reactor",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "22",
    "Integrity": "400",
    "Coverage": "160",
    "Heat Generation": "20",
    "Effect": "Converts each adjacent wall, earth, and door to 100-300 energy.",
    "Index": 71
  },
  "Lgt. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Lgt. Treads",
    "Type": "Treads",
    "Rating": "1",
    "Size": "1",
    "Integrity": "140",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 72
  },
  "Imp. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Treads",
    "Type": "Treads",
    "Rating": "2",
    "Size": "1",
    "Integrity": "155",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "23",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 73
  },
  "Spk. Treads": {
    "Slot": "Propulsion",
    "Name": "Spk. Treads",
    "Type": "Treads",
    "Rating": "2",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "140",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "100",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 74
  },
  "Arm. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Treads",
    "Type": "Treads",
    "Rating": "3",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "160",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "170",
    "Drag": "20",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 75
  },
  "Adv. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Treads",
    "Type": "Treads",
    "Rating": "3",
    "Size": "1",
    "Integrity": "170",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "22",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 76
  },
  "Med. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Med. Treads",
    "Type": "Treads",
    "Rating": "4",
    "Size": "1",
    "Integrity": "185",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "28",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 77
  },
  "Imp. Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Medium Treads",
    "Type": "Treads",
    "Rating": "5",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "30",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 78
  },
  "Spk. Medium Treads": {
    "Slot": "Propulsion",
    "Name": "Spk. Medium Treads",
    "Type": "Treads",
    "Rating": "5",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "140",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "28",
    "Penalty": "100",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 79
  },
  "Arm. Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Medium Treads",
    "Type": "Treads",
    "Rating": "6",
    "Size": "1",
    "Integrity": "450",
    "Coverage": "160",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "170",
    "Drag": "20",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "27",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 80
  },
  "Hvy. Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hvy. Treads",
    "Type": "Treads",
    "Rating": "6",
    "Size": "2",
    "Integrity": "500",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "5",
    "Heat/Move": "3",
    "Support": "70",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 81
  },
  "Adv. Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Medium Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "1",
    "Integrity": "230",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "20",
    "Energy/Move": "5",
    "Heat/Move": "2",
    "Support": "30",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 82
  },
  "Enh. Armored Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Armored Medium Treads",
    "Type": "Treads",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "500",
    "Coverage": "160",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "20",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "35",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 83
  },
  "Imp. Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "2",
    "Integrity": "550",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "6",
    "Heat/Move": "3",
    "Support": "75",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 84
  },
  "Hvy. Siege Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hvy. Siege Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "2",
    "Integrity": "500",
    "Coverage": "280",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "180",
    "Drag": "50",
    "Energy/Move": "5",
    "Heat/Move": "10",
    "Support": "70",
    "Penalty": "90",
    "Siege": "High",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 85
  },
  "Spk. Heavy Treads": {
    "Slot": "Propulsion",
    "Name": "Spk. Heavy Treads",
    "Type": "Treads",
    "Rating": "7",
    "Size": "2",
    "Integrity": "650",
    "Coverage": "280",
    "Effect": "20% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "75",
    "Penalty": "100",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 86
  },
  "Biometal Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biometal Medium Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "1",
    "Integrity": "245",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "20",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "35",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 87
  },
  "Arm. Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Heavy Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "2",
    "Integrity": "900",
    "Coverage": "320",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "170",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "60",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 88
  },
  "Adv. Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Heavy Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "2",
    "Integrity": "600",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "40",
    "Energy/Move": "10",
    "Heat/Move": "4",
    "Support": "70",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 89
  },
  "Imp. Heavy Siege Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Siege Treads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "2",
    "Integrity": "550",
    "Coverage": "280",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "180",
    "Drag": "50",
    "Energy/Move": "6",
    "Heat/Move": "10",
    "Support": "75",
    "Penalty": "90",
    "Siege": "High",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 90
  },
  "Centrium Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Centrium Heavy Treads",
    "Type": "Treads",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "800",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "80",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 91
  },
  "Megatreads": {
    "Slot": "Propulsion",
    "Name": "Megatreads",
    "Type": "Treads",
    "Rating": "8",
    "Size": "6",
    "Integrity": "4000",
    "Coverage": "960",
    "Effect": "35% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-6 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "275",
    "Drag": "120",
    "Energy/Move": "50",
    "Heat/Move": "80",
    "Support": "600",
    "Penalty": "90",
    "Siege": "High",
    "Index": 92
  },
  "Biometal Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biometal Heavy Treads",
    "Type": "Treads",
    "Rating": "9",
    "Size": "2",
    "Integrity": "650",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "145",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "3",
    "Support": "75",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 93
  },
  "Exp. Biometal Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Biometal Heavy Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "850",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "135",
    "Drag": "40",
    "Energy/Move": "8",
    "Heat/Move": "4",
    "Support": "85",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 94
  },
  "Enh. Armored Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Armored Heavy Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "1200",
    "Coverage": "320",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "3",
    "Support": "80",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 95
  },
  "Adv. Heavy Siege Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Heavy Siege Treads",
    "Type": "Treads",
    "Rating": "9",
    "Size": "2",
    "Integrity": "600",
    "Coverage": "280",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "50",
    "Energy/Move": "7",
    "Heat/Move": "8",
    "Support": "80",
    "Penalty": "90",
    "Siege": "High",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 96
  },
  "Hdn. Centrium Heavy Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hdn. Centrium Heavy Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Integrity": "1000",
    "Coverage": "240",
    "Effect": "10% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-2 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "160",
    "Drag": "40",
    "Energy/Move": "7",
    "Heat/Move": "4",
    "Support": "90",
    "Penalty": "80",
    "Siege": "Standard",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 97
  },
  "Exp. Biometal Medium Treads": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Biometal Medium Treads",
    "Type": "Treads",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "120",
    "Effect": "5% chance to crush robots when ramming them. Cannot crush targets of large or greater size, or those with more than 50 core integrity.\n <stacks, capped at 35%>",
    "Description": "-1 recoil from each weapon, and immunity to knockback.",
    "Time/Move": "135",
    "Drag": "20",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "40",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 98
  },
  "Aluminum Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Aluminum Leg",
    "Type": "Leg",
    "Rating": "1",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "10",
    "Penalty": "70",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 99
  },
  "Imp. Aluminum Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Aluminum Leg",
    "Type": "Leg",
    "Rating": "2",
    "Size": "1",
    "Integrity": "100",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "13",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 100
  },
  "Carbon-fiber Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Carbon-fiber Leg",
    "Type": "Leg",
    "Rating": "3",
    "Size": "1",
    "Integrity": "110",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "15",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 101
  },
  "Titanium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Titanium Leg",
    "Type": "Leg",
    "Rating": "3",
    "Size": "1",
    "Integrity": "145",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "130",
    "Drag": "10",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "17",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 102
  },
  "VSS Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "VSS Leg",
    "Type": "Leg",
    "Rating": "3",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "4",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 103
  },
  "Imp. Carbon-fiber Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Carbon-fiber Leg",
    "Type": "Leg",
    "Rating": "4",
    "Size": "1",
    "Integrity": "125",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "18",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 104
  },
  "Imp. Titanium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Titanium Leg",
    "Type": "Leg",
    "Rating": "4",
    "Size": "1",
    "Integrity": "165",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "130",
    "Drag": "10",
    "Energy/Move": "4",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 105
  },
  "Mak. Leg": {
    "Slot": "Propulsion",
    "Name": "Mak. Leg",
    "Type": "Leg",
    "Rating": "4",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "140",
    "Drag": "10",
    "Energy/Move": "1",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 106
  },
  "Flexi-carbon Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Flexi-carbon Leg",
    "Type": "Leg",
    "Rating": "5",
    "Size": "1",
    "Integrity": "135",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 107
  },
  "Arm. Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Leg",
    "Type": "Leg",
    "Rating": "5",
    "Size": "1",
    "Integrity": "330",
    "Coverage": "100",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "2",
    "Support": "16",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 108
  },
  "Imp. VSS Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. VSS Leg",
    "Type": "Leg",
    "Rating": "5",
    "Size": "1",
    "Integrity": "110",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "5",
    "Heat/Move": "2",
    "Support": "15",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 109
  },
  "Zio. Composite Leg I": {
    "Slot": "Propulsion",
    "Name": "Zio. Composite Leg I",
    "Type": "Leg",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "24",
    "Penalty": "100",
    "Index": 110
  },
  "Enh. Flexi-carbon Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Flexi-carbon Leg",
    "Type": "Leg",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "180",
    "Coverage": "50",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "28",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 111
  },
  "Enh. Armored Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Armored Leg",
    "Type": "Leg",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "100",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "20",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 112
  },
  "Myomer Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Myomer Leg",
    "Type": "Leg",
    "Rating": "7",
    "Size": "1",
    "Integrity": "160",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "25",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 113
  },
  "Adv. VSS Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. VSS Leg",
    "Type": "Leg",
    "Rating": "7",
    "Size": "1",
    "Integrity": "130",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "5",
    "Heat/Move": "2",
    "Support": "18",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 114
  },
  "Adv. Myomer Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Myomer Leg",
    "Type": "Leg",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "225",
    "Coverage": "50",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "1",
    "Support": "30",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 115
  },
  "Exp. Flexi-carbon Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Flexi-carbon Leg",
    "Type": "Leg",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "50",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "2",
    "Support": "23",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 116
  },
  "Zio. Composite Leg II": {
    "Slot": "Propulsion",
    "Name": "Zio. Composite Leg II",
    "Type": "Leg",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "240",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Support": "28",
    "Penalty": "100",
    "Index": 117
  },
  "Biometal Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biometal Leg",
    "Type": "Leg",
    "Rating": "8",
    "Size": "1",
    "Integrity": "180",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "28",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 118
  },
  "Enh. Biometal Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Enh. Biometal Leg",
    "Type": "Leg",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "100",
    "Drag": "10",
    "Energy/Move": "2",
    "Heat/Move": "1",
    "Support": "30",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 119
  },
  "Exp. Myomer Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Myomer Leg",
    "Type": "Leg",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "225",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "2",
    "Support": "25",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 120
  },
  "Asb. Alloy Leg": {
    "Slot": "Propulsion",
    "Name": "Asb. Alloy Leg",
    "Type": "Leg",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "100",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "150",
    "Drag": "10",
    "Energy/Move": "5",
    "Support": "30",
    "Penalty": "30",
    "Index": 121
  },
  "Centrium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Centrium Leg",
    "Type": "Leg",
    "Rating": "9",
    "Size": "1",
    "Integrity": "450",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "30",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 122
  },
  "Hdn. Centrium Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hdn. Centrium Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "600",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "120",
    "Drag": "10",
    "Energy/Move": "3",
    "Heat/Move": "2",
    "Support": "32",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 123
  },
  "Exp. Biometal Leg": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Biometal Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "250",
    "Coverage": "80",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "2",
    "Support": "28",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 124
  },
  "Sigix Exoskeleton": {
    "Slot": "Propulsion",
    "Name": "Sigix Exoskeleton",
    "Type": "Leg",
    "Rating": "9**",
    "Category": "Alien",
    "Size": "3",
    "Integrity": "4000",
    "Coverage": "30000",
    "Effect": "Increases Sigix non-AOE weapon damage by 100%. Incompatible with other part-based damage-modifying effects. Also enables resistance against all standard forms of damage: 50%. \n <no_stack>",
    "Description": "Standard leg-based kicking and running mechanics apply.",
    "Time/Move": "30",
    "Drag": "30",
    "Energy/Move": "2",
    "Support": "60",
    "Penalty": "60",
    "Index": 125
  },
  "Zio. Supercomposite Leg": {
    "Slot": "Propulsion",
    "Name": "Zio. Supercomposite Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "270",
    "Coverage": "60",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "110",
    "Drag": "10",
    "Energy/Move": "3",
    "Support": "35",
    "Penalty": "100",
    "Index": 126
  },
  "Potential Leg": {
    "Slot": "Propulsion",
    "Name": "Potential Leg",
    "Type": "Leg",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "400",
    "Coverage": "80",
    "Description": "This leg can be overloaded to double its effective speed, during which the leg is subject to burnout. Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "90",
    "Drag": "10",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "30",
    "Penalty": "80",
    "Burnout": "5%",
    "Index": 127
  },
  "Myomer Exoskeleton": {
    "Slot": "Propulsion",
    "Name": "Myomer Exoskeleton",
    "Type": "Leg",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "3",
    "Integrity": "1200",
    "Coverage": "300",
    "Description": "Each active leg slot provides a 20% chance to kick non-huge targets out of the way. Moving on legs also confers the Running state, which increases evasion but decreases accuracy, each by 5% per level of momentum (up to 3).",
    "Time/Move": "100",
    "Drag": "30",
    "Energy/Move": "6",
    "Heat/Move": "6",
    "Support": "100",
    "Penalty": "60",
    "Index": 128
  },
  "Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Wheel",
    "Type": "Wheel",
    "Rating": "1",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "50",
    "Time/Move": "80",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "10",
    "Penalty": "15",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 129
  },
  "Com. Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Com. Wheel",
    "Type": "Wheel",
    "Rating": "1",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Time/Move": "100",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "16",
    "Penalty": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 130
  },
  "Arm. Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Wheel",
    "Type": "Wheel",
    "Rating": "2",
    "Size": "1",
    "Integrity": "100",
    "Coverage": "60",
    "Time/Move": "90",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "12",
    "Penalty": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 131
  },
  "Arm. Huge Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Arm. Huge Wheel",
    "Type": "Wheel",
    "Rating": "4",
    "Size": "2",
    "Integrity": "250",
    "Coverage": "120",
    "Time/Move": "100",
    "Drag": "10",
    "Energy/Move": "4",
    "Support": "28",
    "Penalty": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 132
  },
  "Centrium Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Centrium Wheel",
    "Type": "Wheel",
    "Rating": "7",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "50",
    "Time/Move": "90",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "16",
    "Penalty": "20",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 133
  },
  "Hdn. Centrium Wheel": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hdn. Centrium Wheel",
    "Type": "Wheel",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "300",
    "Coverage": "50",
    "Time/Move": "90",
    "Drag": "5",
    "Energy/Move": "1",
    "Support": "20",
    "Penalty": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 134
  },
  "Hover Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Hover Unit",
    "Type": "Hover Unit",
    "Rating": "1",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 135
  },
  "Backup Propulsion I": {
    "Slot": "Propulsion",
    "Name": "Backup Propulsion I",
    "Type": "Hover Unit",
    "Rating": "1",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "6",
    "Penalty": "80",
    "Index": 136
  },
  "Imp. Hover Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Hover Unit",
    "Type": "Hover Unit",
    "Rating": "2",
    "Size": "1",
    "Integrity": "35",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 137
  },
  "Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Airjet",
    "Type": "Hover Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 138
  },
  "Aerolev Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Aerolev Unit",
    "Type": "Hover Unit",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 139
  },
  "Backup Propulsion III": {
    "Slot": "Propulsion",
    "Name": "Backup Propulsion III",
    "Type": "Hover Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "80",
    "Index": 140
  },
  "Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Gravmag System",
    "Type": "Hover Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "45",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "9",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 141
  },
  "Imp. Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Airjet",
    "Type": "Hover Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "9",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 142
  },
  "Cld. Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Airjet",
    "Type": "Hover Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "8",
    "Penalty": "60",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 143
  },
  "Imp. Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Gravmag System",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "50",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "10",
    "Penalty": "50",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 144
  },
  "Cld. Aerolev Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Aerolev Unit",
    "Type": "Hover Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "100",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "9",
    "Penalty": "50",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 145
  },
  "Cmb. Airjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Airjet",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "130",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 146
  },
  "Gravmag Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Gravmag Array",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "2",
    "Integrity": "180",
    "Coverage": "80",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "20",
    "Penalty": "50",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 147
  },
  "Mak. Hover Unit": {
    "Slot": "Propulsion",
    "Name": "Mak. Hover Unit",
    "Type": "Hover Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "40",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "70",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "12",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 148
  },
  "Zio. Glidesys I": {
    "Slot": "Propulsion",
    "Name": "Zio. Glidesys I",
    "Type": "Hover Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "14",
    "Penalty": "70",
    "Index": 149
  },
  "Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Antigrav System",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "55",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "11",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 150
  },
  "Gyrokinetic Inverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Gyrokinetic Inverter",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "50",
    "Coverage": "7",
    "Energy Upkeep": "2",
    "Heat Generation": "5",
    "Time/Move": "70",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "11",
    "Penalty": "40",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 151
  },
  "Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "55",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "9",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 152
  },
  "Cld. Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Gravmag System",
    "Type": "Hover Unit",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "120",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "11",
    "Penalty": "50",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 153
  },
  "Cmb. Gravmag System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Gravmag System",
    "Type": "Hover Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "150",
    "Coverage": "35",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "14",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 154
  },
  "Imp. Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Antigrav System",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "60",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 155
  },
  "Imp. Gyrokinetic Inverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Gyrokinetic Inverter",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "7",
    "Energy Upkeep": "2",
    "Heat Generation": "5",
    "Time/Move": "70",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "40",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 156
  },
  "Imp. Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "10",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 157
  },
  "Backup Propulsion VII": {
    "Slot": "Propulsion",
    "Name": "Backup Propulsion VII",
    "Type": "Hover Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "35",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "12",
    "Penalty": "80",
    "Index": 158
  },
  "Zio. Glidesys II": {
    "Slot": "Propulsion",
    "Name": "Zio. Glidesys II",
    "Type": "Hover Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Support": "16",
    "Penalty": "70",
    "Index": 159
  },
  "Cld. Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Antigrav System",
    "Type": "Hover Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "150",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Time/Move": "50",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "13",
    "Penalty": "50",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 160
  },
  "Cmb. Antigrav System": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Antigrav System",
    "Type": "Hover Unit",
    "Rating": "8",
    "Size": "1",
    "Integrity": "210",
    "Coverage": "35",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "80",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "16",
    "Penalty": "70",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 161
  },
  "Antigrav Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Antigrav Array",
    "Type": "Hover Unit",
    "Rating": "8",
    "Size": "2",
    "Integrity": "200",
    "Coverage": "70",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "26",
    "Penalty": "50",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 162
  },
  "Exp. Gyrokinetic Inverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Gyrokinetic Inverter",
    "Type": "Hover Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "7",
    "Energy Upkeep": "2",
    "Heat Generation": "4",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "14",
    "Penalty": "40",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 163
  },
  "Cld. Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "140",
    "Coverage": "55",
    "Energy Upkeep": "2",
    "Time/Move": "40",
    "Mod/Extra": "-4",
    "Energy/Move": "0.5",
    "Support": "14",
    "Penalty": "70",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 164
  },
  "Cmb. Linear Gravjet": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cmb. Linear Gravjet",
    "Type": "Hover Unit",
    "Rating": "9",
    "Size": "1",
    "Integrity": "200",
    "Coverage": "35",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "2",
    "Support": "17",
    "Penalty": "100",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 165
  },
  "Flight Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Flight Unit",
    "Type": "Flight Unit",
    "Rating": "1",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 166
  },
  "VTOL Module": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "VTOL Module",
    "Type": "Flight Unit",
    "Rating": "2",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 167
  },
  "Imp. Flight Unit": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Flight Unit",
    "Type": "Flight Unit",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "15",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 168
  },
  "Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 169
  },
  "Surge Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Surge Thruster",
    "Type": "Flight Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "70",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "3",
    "Penalty": "40",
    "Burnout": "40%",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 170
  },
  "Imp. VTOL Module": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. VTOL Module",
    "Type": "Flight Unit",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "50",
    "Coverage": "15",
    "Energy Upkeep": "0.5",
    "Heat Generation": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 171
  },
  "Xenon Bombardment Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Xenon Bombardment Thruster",
    "Type": "Flight Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 172
  },
  "Imp. Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "15",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "65",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 173
  },
  "Cld. VTOL Module": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. VTOL Module",
    "Type": "Flight Unit",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "15",
    "Energy Upkeep": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "65",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 174
  },
  "Mak. Flight Unit": {
    "Slot": "Propulsion",
    "Name": "Mak. Flight Unit",
    "Type": "Flight Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "20",
    "Energy Upkeep": "0.5",
    "Heat Generation": "2",
    "Time/Move": "55",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "90",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 175
  },
  "Nuclear Pulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Nuclear Pulse Thruster",
    "Type": "Flight Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 176
  },
  "Imp. Surge Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Surge Thruster",
    "Type": "Flight Unit",
    "Rating": "5",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "70",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "40",
    "Burnout": "40%",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 177
  },
  "Mni. Nuclear Pulse Thruster": {
    "Slot": "Propulsion",
    "Name": "Mni. Nuclear Pulse Thruster",
    "Type": "Flight Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "10",
    "Energy Upkeep": "0.5",
    "Time/Move": "25",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "100",
    "Index": 178
  },
  "Cld. Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "15",
    "Energy Upkeep": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "80",
    "Burnout": "15%",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 179
  },
  "Biomechanical Wings": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Biomechanical Wings",
    "Type": "Flight Unit",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "5",
    "Energy Upkeep": "0.5",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Support": "6",
    "Penalty": "65",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 180
  },
  "Field Propulsion Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Field Propulsion Drive",
    "Type": "Flight Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "45",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 181
  },
  "Cld. Nuclear Pulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Nuclear Pulse Thruster",
    "Type": "Flight Unit",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "20",
    "Energy Upkeep": "1",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "70",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 182
  },
  "Exp. Cesium-ion Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Cesium-ion Thruster",
    "Type": "Flight Unit",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "70",
    "Coverage": "20",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "25",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "5",
    "Penalty": "90",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 183
  },
  "Nuclear Pulse Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Nuclear Pulse Array",
    "Type": "Flight Unit",
    "Rating": "6",
    "Size": "2",
    "Integrity": "110",
    "Coverage": "60",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "13",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 184
  },
  "Impulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Impulse Thruster",
    "Type": "Flight Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "30",
    "Energy Upkeep": "1.5",
    "Heat Generation": "2",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 185
  },
  "Adv. Surge Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Adv. Surge Thruster",
    "Type": "Flight Unit",
    "Rating": "7",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "70",
    "Energy Upkeep": "1.5",
    "Heat Generation": "2",
    "Time/Move": "25",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "4",
    "Penalty": "40",
    "Burnout": "40%",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 186
  },
  "Cld. Field Propulsion Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Field Propulsion Drive",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "20",
    "Energy Upkeep": "1.5",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "65",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 187
  },
  "Field Propulsion Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Field Propulsion Array",
    "Type": "Flight Unit",
    "Rating": "7",
    "Size": "2",
    "Integrity": "140",
    "Coverage": "60",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "15",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 188
  },
  "Diametric Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Diametric Drive",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "45",
    "Coverage": "30",
    "Energy Upkeep": "0.5",
    "Heat Generation": "3",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 189
  },
  "Flying Fortress v7": {
    "Slot": "Propulsion",
    "Name": "Flying Fortress v7",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "4",
    "Integrity": "800",
    "Coverage": "480",
    "Energy Upkeep": "2.5",
    "Heat Generation": "7",
    "Time/Move": "50",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "50",
    "Penalty": "100",
    "Index": 190
  },
  "Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Q-thruster",
    "Type": "Flight Unit",
    "Rating": "8",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "30",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "40",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 191
  },
  "Electron Diverter": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Electron Diverter",
    "Type": "Flight Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "20",
    "Energy Upkeep": "1",
    "Heat Generation": "3",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 192
  },
  "Imp. Diametric Drive": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Diametric Drive",
    "Type": "Flight Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "20",
    "Energy Upkeep": "0.5",
    "Heat Generation": "3",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "70",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 193
  },
  "Cld. Impulse Thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Impulse Thruster",
    "Type": "Flight Unit",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "90",
    "Coverage": "20",
    "Energy Upkeep": "1.5",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "70",
    "Burnout": "10%",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 194
  },
  "Impulse Thruster Array": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Impulse Thruster Array",
    "Type": "Flight Unit",
    "Rating": "8",
    "Size": "2",
    "Integrity": "140",
    "Coverage": "40",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "45",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "16",
    "Penalty": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 195
  },
  "Imp. Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Imp. Q-thruster",
    "Type": "Flight Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "15",
    "Energy Upkeep": "1.5",
    "Heat Generation": "3",
    "Time/Move": "35",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "8",
    "Penalty": "60",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 196
  },
  "Cld. Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Cld. Q-thruster",
    "Type": "Flight Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "15",
    "Energy Upkeep": "1.5",
    "Time/Move": "30",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "7",
    "Penalty": "55",
    "Burnout": "20%",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 197
  },
  "Exp. Q-thruster": {
    "Slot": "Propulsion",
    "Hackable Schematic": "1",
    "Name": "Exp. Q-thruster",
    "Type": "Flight Unit",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "80",
    "Coverage": "15",
    "Energy Upkeep": "1.5",
    "Heat Generation": "2",
    "Time/Move": "20",
    "Mod/Extra": "-3",
    "Energy/Move": "0.5",
    "Heat/Move": "1",
    "Support": "6",
    "Penalty": "90",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 198
  },
  "Desublimator": {
    "Slot": "Utility",
    "Name": "Desublimator",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "160",
    "Coverage": "50",
    "Effect": "Converts energy to matter at a ratio of 20:5 every turn.\n <parallel_ok>",
    "Index": 199
  },
  "Power Amplifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Power Amplifier",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "24",
    "Coverage": "20",
    "Effect": "Increases generation of power sources by 20%.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 200
  },
  "Adv. Power Amplifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Power Amplifier",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "31",
    "Coverage": "20",
    "Effect": "Increases generation of power sources by 30%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 201
  },
  "Exp. Power Amplifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Power Amplifier",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "20",
    "Effect": "Increases generation of power sources by 40%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 202
  },
  "Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Generator",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "7",
    "Integrity": "25",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 10 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 203
  },
  "Imp. Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Thermal Generator",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "9",
    "Integrity": "40",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 8 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 204
  },
  "Adv. Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Thermal Generator",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "11",
    "Integrity": "40",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 6 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 205
  },
  "Exp. Thermal Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Thermal Generator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "60",
    "Coverage": "20",
    "Effect": "Generates 1 energy per 3 surplus heat every turn.\n <parallel_ok>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 206
  },
  "Cryofiber Web": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cryofiber Web",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "8",
    "Effect": "Lowers base temperature to -100. Also protects power sources from forced shutdown while overheating, and has a 25% chance to prevent other types of overheating side effects.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 207
  },
  "Imp. Cryofiber Web": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Cryofiber Web",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "32",
    "Coverage": "8",
    "Effect": "Lowers base temperature to -150. Also protects power sources from forced shutdown while overheating, and has a 30% chance to prevent other types of overheating side effects.\n <no_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 208
  },
  "Adv. Cryofiber Web": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Cryofiber Web",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "34",
    "Coverage": "8",
    "Effect": "Lowers base temperature to -200. Also protects power sources from forced shutdown while overheating, and has a 35% chance to prevent other types of overheating side effects.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 209
  },
  "Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Heat Sink",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "20",
    "Effect": "Dissipates 10 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 210
  },
  "Imp. Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Heat Sink",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "20",
    "Effect": "Dissipates 14 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 211
  },
  "Adv. Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Heat Sink",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "20",
    "Effect": "Dissipates 19 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 212
  },
  "Exp. Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Heat Sink",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "80",
    "Coverage": "20",
    "Effect": "Dissipates 26 heat per turn.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 213
  },
  "Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cooling System",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "30",
    "Effect": "Dissipates 22 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 214
  },
  "Imp. Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Cooling System",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "30",
    "Effect": "Dissipates 27 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 215
  },
  "Adv. Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Cooling System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "90",
    "Coverage": "30",
    "Effect": "Dissipates 31 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 216
  },
  "Exp. Cooling System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Cooling System",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Coverage": "50",
    "Effect": "Dissipates 38 heat per turn.\n <stacks>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 217
  },
  "Coolant Network": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Coolant Network",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "2",
    "Integrity": "300",
    "Coverage": "100",
    "Effect": "Dissipates 90 heat per turn.\n <stacks>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 218
  },
  "Asb. Nanovents": {
    "Slot": "Utility",
    "Name": "Asb. Nanovents",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "5",
    "Coverage": "6",
    "Effect": "Dissipates 15 heat per turn.\n <stacks>",
    "Index": 219
  },
  "2N-1CE's Frost Array": {
    "Slot": "Utility",
    "Name": "2N-1CE's Frost Array",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "50",
    "Coverage": "5",
    "Effect": "Dissipates 100 heat per turn.\n <stacks>",
    "Energy Upkeep": "2",
    "Index": 220
  },
  "Disposable Heat Sink": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Disposable Heat Sink",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "10",
    "Effect": "Dissipates 50 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 221
  },
  "Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Coolant Injector",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "75",
    "Coverage": "10",
    "Effect": "Dissipates 65 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 222
  },
  "Imp. Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Coolant Injector",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Effect": "Dissipates 80 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 223
  },
  "Adv. Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Coolant Injector",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "125",
    "Coverage": "10",
    "Effect": "Dissipates 100 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 224
  },
  "Exp. Coolant Injector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Coolant Injector",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "150",
    "Coverage": "10",
    "Effect": "Dissipates 120 heat per turn, losing 2 integrity in the process, but is applied after all standard heat dissipation, and only when heat levels rise above 200.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 225
  },
  "Sml. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sml. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 3.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 226
  },
  "Med. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "10",
    "Integrity": "250",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 5.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 227
  },
  "Lrg. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrg. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "20",
    "Integrity": "350",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 10.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 228
  },
  "Hcp. Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hcp. Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "40",
    "Integrity": "500",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 15.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 229
  },
  "Huge Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Huge Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "80",
    "Integrity": "600",
    "Coverage": "25",
    "Effect": "Increases inventory capacity by 20.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 230
  },
  "Cargo Storage Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cargo Storage Unit",
    "Type": "Storage",
    "Rating": "1",
    "Size": "2",
    "Mass": "140",
    "Integrity": "700",
    "Coverage": "50",
    "Effect": "Increases inventory capacity by 25.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 231
  },
  "Humpback": {
    "Slot": "Utility",
    "Name": "Humpback",
    "Type": "Storage",
    "Rating": "1",
    "Size": "2",
    "Mass": "200",
    "Integrity": "400",
    "Coverage": "160",
    "Effect": "Increases inventory capacity by 30.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 232
  },
  "Lightpack 2.0": {
    "Slot": "Utility",
    "Name": "Lightpack 2.0",
    "Type": "Storage",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "5",
    "Integrity": "500",
    "Coverage": "45",
    "Effect": "Increases inventory capacity by 35.\n <no_stack>",
    "Description": "The space within this storage unit doesn't seem very stable.",
    "Index": 233
  },
  "Sml. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sml. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 100. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 234
  },
  "Med. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 150. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 235
  },
  "Lrg. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrg. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 200. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 236
  },
  "Hcp. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hcp. Battery",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "4",
    "Integrity": "45",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 250. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 237
  },
  "Com. Battery": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Com. Battery",
    "Type": "Storage",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 200. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 238
  },
  "Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Energy Well",
    "Type": "Storage",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 350. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 239
  },
  "Imp. Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Energy Well",
    "Type": "Storage",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 400. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 240
  },
  "Adv. Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Energy Well",
    "Type": "Storage",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 500. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 241
  },
  "Exp. Energy Well": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Energy Well",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 600. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 242
  },
  "Zio. Biocell": {
    "Slot": "Utility",
    "Name": "Zio. Biocell",
    "Type": "Storage",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Increases energy storage capacity by 600. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 243
  },
  "Asb. Biocell Array": {
    "Slot": "Utility",
    "Name": "Asb. Biocell Array",
    "Type": "Storage",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Increases energy storage capacity by 1000. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 244
  },
  "Zio. Biocell Array": {
    "Slot": "Utility",
    "Name": "Zio. Biocell Array",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "15",
    "Effect": "Increases energy storage capacity by 750. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 245
  },
  "Superbattery": {
    "Slot": "Utility",
    "Name": "Superbattery",
    "Type": "Storage",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "12",
    "Effect": "Increases energy storage capacity by 1500. Also stores surplus generated energy while in inventory, but cannot be accessed for use until attached. Stored energy can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 246
  },
  "Sml. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sml. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 50. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 247
  },
  "Med. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 100. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 248
  },
  "Lrg. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrg. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 150. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 249
  },
  "Hcp. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hcp. Matter Pod",
    "Type": "Storage",
    "Rating": "1",
    "Size": "1",
    "Mass": "4",
    "Integrity": "45",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 200. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 250
  },
  "Com. Matter Pod": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Com. Matter Pod",
    "Type": "Storage",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 150. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 251
  },
  "Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Matter Compressor",
    "Type": "Storage",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 250. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 252
  },
  "Imp. Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Matter Compressor",
    "Type": "Storage",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 300. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 253
  },
  "Adv. Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Matter Compressor",
    "Type": "Storage",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 400. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 254
  },
  "Exp. Matter Compressor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Matter Compressor",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "80",
    "Coverage": "8",
    "Effect": "Increases matter storage capacity by 500. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 255
  },
  "YI-UF0's Bottomless Matter Pit": {
    "Slot": "Utility",
    "Name": "YI-UF0's Bottomless Matter Pit",
    "Type": "Storage",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Increases matter storage capacity by 1500. Also stores surplus collected matter while in inventory, but cannot be accessed for use until attached. Stored matter can also be extracted directly if on the ground at current position.\n <stacks>",
    "Index": 256
  },
  "Weight Redist. System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Weight Redist. System",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "8",
    "Effect": "Increases mass support by 6.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 257
  },
  "Adv. Weight Redist. System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Weight Redist. System",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "8",
    "Effect": "Increases mass support by 9.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 258
  },
  "Gravity Neutralizer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Gravity Neutralizer",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "8",
    "Effect": "Increases mass support by 12.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 259
  },
  "Adv. Gravity Neutralizer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Gravity Neutralizer",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Increases mass support by 16.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 260
  },
  "Quantum Shading Machine": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Quantum Shading Machine",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "8",
    "Effect": "Increases mass support by 20.\n <no_stack>",
    "Energy Upkeep": "12",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 261
  },
  "Asb. Suspension Frame": {
    "Slot": "Utility",
    "Name": "Asb. Suspension Frame",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "55",
    "Coverage": "75",
    "Effect": "Increases mass support by 20.\n <no_stack>",
    "Energy Upkeep": "2",
    "Index": 262
  },
  "Adv. Quantum Shading Machine": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Quantum Shading Machine",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "38",
    "Coverage": "8",
    "Effect": "Increases mass support by 25.\n <no_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 263
  },
  "Asb. Metafiber Network": {
    "Slot": "Utility",
    "Name": "Asb. Metafiber Network",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Increases active leg speed by 20%.\n <no_stack>\n",
    "Energy Upkeep": "5",
    "Index": 264
  },
  "Zio. Metafield Generator": {
    "Slot": "Utility",
    "Name": "Zio. Metafield Generator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "30",
    "Effect": "Doubles core/hover/flight speed, applied before considering any overweight penalties.\n <no_stack>\n",
    "Energy Upkeep": "15",
    "Index": 265
  },
  "ST Field Compressor": {
    "Slot": "Utility",
    "Name": "ST Field Compressor",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "30",
    "Effect": "Doubles core/hover/flight speed, applied before considering any overweight penalties.\n <no_stack>\n",
    "Energy Upkeep": "8",
    "Index": 266
  },
  "Structural Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Structural Scanner",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "Scans all visible walls to analyze the structure behind them and identify hidden doorways. Also highlights areas that will soon cave in due to instability even without further stimulation.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 267
  },
  "Trap Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Trap Scanner",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "4% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 268
  },
  "Imp. Trap Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Trap Scanner",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "22",
    "Coverage": "8",
    "Effect": "6% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 269
  },
  "Mak. Trap Scanner": {
    "Slot": "Utility",
    "Name": "Mak. Trap Scanner",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "20% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 270
  },
  "Adv. Trap Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Trap Scanner",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "27",
    "Coverage": "8",
    "Effect": "8% chance to detect each hidden trap within field of view, checked each turn on a per-trap basis.\n <stacks>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 271
  },
  "Machine Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Machine Analyzer",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "1",
    "Effect": "Analyzes visible machines to locate others on the 0b10 network. Also determines whether an explosive machine has been destabilized and how long until detonation.",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 272
  },
  "Triangulator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Triangulator",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "8",
    "Effect": "Reasons likely distance at which each visible hostile can spot you, enables predictions of visible robot travel paths, and analyzes ambient signals to determine how many hostiles are currently tracking you, as well as pinpoint them if within a range of 24.",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 273
  },
  "Visual Processing Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Visual Processing Unit",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 2.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 274
  },
  "Adv. Visual Processing Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Visual Processing Unit",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 4.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 275
  },
  "Enh. Optical Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Enh. Optical Array",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 6.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 276
  },
  "Exp. Optical Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Optical Array",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "31",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 7.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 277
  },
  "Spectral Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Spectral Analyzer",
    "Type": "Processor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "1",
    "Effect": "Increases visual sensor range by 8.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 278
  },
  "Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Sensor Array",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 14, once per turn.",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 279
  },
  "Imp. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Sensor Array",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "22",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 15, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 280
  },
  "Adv. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Sensor Array",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "24",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 16, once per turn.",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 281
  },
  "Lrn. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrn. Sensor Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "2",
    "Integrity": "27",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 18, once per turn.",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 282
  },
  "Mak. Sensor Array": {
    "Slot": "Utility",
    "Name": "Mak. Sensor Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "5",
    "Integrity": "25",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 19, once per turn.",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 283
  },
  "Exp. Sensor Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Sensor Array",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables robot scanning up to a distance of 20, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 284
  },
  "Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Signal Interpreter",
    "Type": "Processor",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "1",
    "Effect": "Strength 1: Robot scan signals differentiate between object sizes. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 285
  },
  "Imp. Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Signal Interpreter",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Strength 2: Robot scan signals accurately reflect target size and class, and are unaffected by system corruption. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 286
  },
  "Adv. Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Signal Interpreter",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "1",
    "Effect": "Strength 3: Robot scan signals accurately reflect target size and specific class rating, and are unaffected by system corruption. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 287
  },
  "Exp. Signal Interpreter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Signal Interpreter",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "1",
    "Effect": "Strength 4: Robot scan signals accurately reflect target size and specific class rating, are unaffected by system corruption, and can discern dormant, unpowered, disabled, and broken robots. (Requires data from a Sensor Array.) Also enables deciphering of signals emitted from adjacent exits, revealing where they lead, and at garrisons know the time until the next response dispatch, if any. When multiple exits lead to the same destination, after having identified the first, subsequent ones will be identified on sight even without an interpreter.",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 288
  },
  "Active Sensor Suite": {
    "Slot": "Utility",
    "Name": "Active Sensor Suite",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "4",
    "Integrity": "100",
    "Coverage": "45",
    "Effect": "Enables robot scanning up to a distance of 20, once per turn, in addition to all effects of a maximum-strength Signal Interpreter. Also detects long-term residual evidence of prior robot activity within field of view. 0b10 combat robots scanned by this device will report the event, once per bot.",
    "Energy Upkeep": "5",
    "Index": 289
  },
  "Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Terrain Scanner",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 14, once per turn.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 290
  },
  "Imp. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Terrain Scanner",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "22",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 16, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 291
  },
  "Adv. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Terrain Scanner",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "24",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 20, once per turn.",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 292
  },
  "Mak. Terrain Scanner": {
    "Slot": "Utility",
    "Name": "Mak. Terrain Scanner",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 18, once per turn.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 293
  },
  "Lrn. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrn. Terrain Scanner",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "2",
    "Integrity": "27",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 24, once per turn.",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 294
  },
  "Exp. Terrain Scanner": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Terrain Scanner",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables terrain scanning up to a distance of 30, once per turn.",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 295
  },
  "Surveybot 24 Scanner": {
    "Slot": "Utility",
    "Name": "Surveybot 24 Scanner",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "5",
    "Integrity": "5",
    "Coverage": "30",
    "Effect": "Enables terrain scanning up to a distance of 24, once per turn.",
    "Energy Upkeep": "10",
    "Index": 296
  },
  "Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 75. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 297
  },
  "Imp. Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 100. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 298
  },
  "Mak. Terrain Scan Processor": {
    "Slot": "Utility",
    "Name": "Mak. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "25",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 125. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 299
  },
  "Adv. Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 200. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 300
  },
  "Exp. Terrain Scan Processor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Terrain Scan Processor",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 1000. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 301
  },
  "Surveybot 24 Chip": {
    "Slot": "Utility",
    "Name": "Surveybot 24 Chip",
    "Type": "Processor",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "1",
    "Coverage": "1",
    "Effect": "Increases terrain scanning density by 2000. (Requires data from a Terrain Scanner.)\n <stacks>",
    "Index": 302
  },
  "Seismic Detector": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Seismic Detector",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "15",
    "Effect": "Enables real-time seismic detection and analysis up to a distance of 22.\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 303
  },
  "Transport Network Coupler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Transport Network Coupler",
    "Type": "Processor",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "1",
    "Effect": "Enables real-time tracking of 0b10 Haulers across the entire floor. Only applies in 0b10-controlled areas.",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 304
  },
  "Modified TNC": {
    "Slot": "Utility",
    "Name": "Modified TNC",
    "Type": "Processor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "1",
    "Effect": "Enables both real-time tracking of 0b10 Haulers across the entire floor, and gives access to their current manifest. Toggle active state to temporarily list all inventories in view. Only applies in 0b10-controlled areas.",
    "Index": 305
  },
  "0b10 Decoder Chip [Generic]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Generic]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about items, traps, exits, hidden doorways, interactive machines, and active patrol and security positions.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 306
  },
  "0b10 Decoder Chip [Looter]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Looter]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about items.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 307
  },
  "0b10 Decoder Chip [Scout]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Scout]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about traps, exits, garrisons, and hidden doorways.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 308
  },
  "0b10 Decoder Chip [Skirmisher]": {
    "Slot": "Utility",
    "Name": "0b10 Decoder Chip [Skirmisher]",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Decodes ambient 0b10 transmissions to extract bits of useful data over time. This variant is tuned to prioritize info about garrisons and active patrol, investigation, reinforcement, and security positions.\n <parallel_ok>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 309
  },
  "0b10 Alert Chip": {
    "Slot": "Utility",
    "Name": "0b10 Alert Chip",
    "Type": "Processor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "1",
    "Effect": "Analyzes ambient 0b10 signals to gauge the current alert level, and reduces all influence increases by 20%.",
    "Index": 310
  },
  "Salvage Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "22",
    "Coverage": "1",
    "Effect": "Increases salvage recovered from targets, +1 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 311
  },
  "Imp. Salvage Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases salvage recovered from targets, +2 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 312
  },
  "Mak. Salvage Targeting Computer": {
    "Slot": "Utility",
    "Name": "Mak. Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "5",
    "Coverage": "2",
    "Effect": "Increases salvage recovered from targets, +4 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 313
  },
  "Adv. Salvage Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Salvage Targeting Computer",
    "Type": "Processor",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "31",
    "Coverage": "1",
    "Effect": "Increases salvage recovered from targets, +3 modifier. Compatible only with gun-type weapons that fire a single projectile.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 314
  },
  "Asb. Combat Suite": {
    "Slot": "Utility",
    "Name": "Asb. Combat Suite",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "8",
    "Effect": "Increases non-melee weapon accuracy by 8% <stacks>. Increases target core exposure by 8%. Reduces enemy targeting accuracy by 8%.\n <no_stack>",
    "Energy Upkeep": "5",
    "Index": 315
  },
  "Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Targeting Computer",
    "Type": "Processor",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 5%.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 316
  },
  "Imp. Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Targeting Computer",
    "Type": "Processor",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 6%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 317
  },
  "Adv. Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Targeting Computer",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 8%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 318
  },
  "Exp. Targeting Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Targeting Computer",
    "Type": "Processor",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases non-melee weapon accuracy by 12%.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 319
  },
  "Tactical Coordination Suite": {
    "Slot": "Utility",
    "Name": "Tactical Coordination Suite",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Increases non-melee weapon accuracy by 10%, applying benefit to both self and any allies within a range of 10.\n <stacks>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 320
  },
  "Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 5%, and minimum damage by 2 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 321
  },
  "Imp. Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 6%, and minimum damage by 3 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 322
  },
  "Adv. Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 8%, and minimum damage by 4 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 323
  },
  "Exp. Melee Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Melee Analysis Suite",
    "Type": "Processor",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Increases melee attack accuracy by 12%, and minimum damage by 6 (cannot exceed weapon's maximum damage).\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 324
  },
  "Launcher Guidance Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Launcher Guidance Computer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "27",
    "Coverage": "1",
    "Effect": "Increases launcher accuracy by 20%. Also prevents launcher misfires caused by system corruption.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 325
  },
  "Imp. Launcher Guidance Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Launcher Guidance Computer",
    "Type": "Processor",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "31",
    "Coverage": "1",
    "Effect": "Increases launcher accuracy by 30%. Also prevents launcher misfires caused by system corruption.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 326
  },
  "Adv. Launcher Guidance Computer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Launcher Guidance Computer",
    "Type": "Processor",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "1",
    "Effect": "Increases launcher accuracy by 40%. Also prevents launcher misfires caused by system corruption.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 327
  },
  "Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Target Analyzer",
    "Type": "Processor",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 5%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 328
  },
  "Imp. Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Target Analyzer",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 6%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 329
  },
  "Adv. Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Target Analyzer",
    "Type": "Processor",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "35",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 8%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 330
  },
  "Exp. Target Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Target Analyzer",
    "Type": "Processor",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "2",
    "Effect": "Increases weapon critical chances by 10%. Only affects weapons that are already capable of critical hits, and not applicable for the Meltdown critical.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 331
  },
  "Core Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Core Analyzer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "24",
    "Coverage": "2",
    "Effect": "Increases target core exposure by 6%. Applies only to gun, cannon, and melee attacks.\n <half_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 332
  },
  "Exp. Core Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Core Analyzer",
    "Type": "Processor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "2",
    "Effect": "Increases target core exposure by 8%. Applies only to gun, cannon, and melee attacks.\n <half_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 333
  },
  "Armor Integrity Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Armor Integrity Analyzer",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "29",
    "Coverage": "2",
    "Effect": "Enables 30% chance to bypass target armor. Does not apply to AOE attacks.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 334
  },
  "Imp. Armor Integrity Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Armor Integrity Analyzer",
    "Type": "Processor",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "35",
    "Coverage": "2",
    "Effect": "Enables 40% chance to bypass target armor. Does not apply to AOE attacks.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 335
  },
  "Exp. Armor Integrity Analyzer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Armor Integrity Analyzer",
    "Type": "Processor",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "36",
    "Coverage": "2",
    "Effect": "Enables 50% chance to bypass target armor. Does not apply to AOE attacks.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 336
  },
  "Recoil Stabilizer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Recoil Stabilizer",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Effect": "Reduces recoil from each weapon in a volley by 4.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 337
  },
  "Recoil Nullifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Recoil Nullifier",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "30",
    "Effect": "Reduces recoil from each weapon in a volley by 6.\n <stacks>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 338
  },
  "Matter Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Matter Filter",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "40",
    "Coverage": "50",
    "Effect": "Reduces matter cost of firing any weapon by 30%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 339
  },
  "Prc. Matter Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Prc. Matter Filter",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Reduces matter cost of firing any weapon by 50%.\n <half_stack>",
    "Energy Upkeep": "10",
    "Heat Generation": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 340
  },
  "Energy Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Energy Filter",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "40",
    "Coverage": "50",
    "Effect": "Reduces energy cost of firing any weapon by 30%.\n <half_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 341
  },
  "Prc. Energy Filter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Prc. Energy Filter",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Reduces energy cost of firing any weapon by 50%.\n <half_stack>",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 342
  },
  "Particle Charger": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Particle Charger",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "25",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 15%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 343
  },
  "Imp. Particle Charger": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Particle Charger",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "35",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 20%.\n <half_stack>",
    "Energy Upkeep": "7",
    "Heat Generation": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 344
  },
  "Adv. Particle Charger": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Particle Charger",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "5",
    "Integrity": "45",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 25%.\n <half_stack>",
    "Energy Upkeep": "9",
    "Heat Generation": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 345
  },
  "Particle Accelerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Particle Accelerator",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 30%.\n <half_stack>",
    "Energy Upkeep": "10",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 346
  },
  "Imp. Particle Accelerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Particle Accelerator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 40%.\n <half_stack>",
    "Energy Upkeep": "15",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 347
  },
  "Adv. Particle Accelerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Particle Accelerator",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Increases energy gun/cannon damage by 50%.\n <half_stack>",
    "Energy Upkeep": "20",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 348
  },
  "Kinecellerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Kinecellerator",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Increases ballistic gun/cannon minimum damage by 30%, and may allow some weapons to exceed their normal maximum damage as well.\n <no_stack>",
    "Energy Upkeep": "4",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 349
  },
  "Imp. Kinecellerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Kinecellerator",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Increases ballistic gun/cannon minimum damage by 40%, and may allow some weapons to exceed their normal maximum damage as well.\n <no_stack>",
    "Energy Upkeep": "6",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 350
  },
  "Adv. Kinecellerator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Kinecellerator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "90",
    "Coverage": "50",
    "Effect": "Increases ballistic gun/cannon minimum damage by 50%, and may allow some weapons to exceed their normal maximum damage as well.\n <no_stack>",
    "Energy Upkeep": "8",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 351
  },
  "Launcher Loader": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Launcher Loader",
    "Type": "Device",
    "Rating": "5",
    "Size": "2",
    "Mass": "12",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Reduces firing time for any launcher by 50%, if fired alone. Incompatible with Weapon Cyclers and autonomous or overloaded weapons.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 352
  },
  "Quantum Capacitor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Quantum Capacitor",
    "Type": "Device",
    "Rating": "7",
    "Size": "2",
    "Mass": "5",
    "Integrity": "80",
    "Coverage": "20",
    "Effect": "Reduces firing time for an energy gun or cannon by 50%, if fired alone. Incompatible with Weapon Cyclers and autonomous or overloaded weapons.\n <no_stack>",
    "Energy Upkeep": "5",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 353
  },
  "Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Weapon Cycler",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "10",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 15%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 354
  },
  "Imp. Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Weapon Cycler",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "10",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 20%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 355
  },
  "Adv. Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Weapon Cycler",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "10",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 25%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 356
  },
  "Exp. Weapon Cycler": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Weapon Cycler",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "60",
    "Coverage": "8",
    "Effect": "Reduces collective firing time of all guns, cannons, and launchers by 30%. Incompatible with Quantum Capacitor and autonomous weapons.\n <stacks, capped at 30%>",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 357
  },
  "Microactuators": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Microactuators",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Effect": "Reduces melee attack time by 20%.\n <stacks, capped at 50%>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 358
  },
  "Nanoactuators": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Nanoactuators",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "12",
    "Effect": "Reduces melee attack time by 30%.\n <stacks, capped at 50%>",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 359
  },
  "Femtoactuators": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Femtoactuators",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "40",
    "Coverage": "8",
    "Effect": "Reduces melee attack time by 50%.\n <stacks, capped at 50%>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 360
  },
  "Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Actuator Array",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "100",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 10%.\n <half_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 361
  },
  "Imp. Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Actuator Array",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 12%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 362
  },
  "Adv. Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Actuator Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "7",
    "Integrity": "140",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 16%.\n <half_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 363
  },
  "Exp. Actuator Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Actuator Array",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "160",
    "Coverage": "25",
    "Effect": "Increases per-weapon chance of follow-up melee attacks by 20%.\n <half_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 364
  },
  "Force Booster": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Force Booster",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "5",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Increases melee weapon maximum damage by 20%, and decreases melee attack accuracy by 4%.\n <half_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 365
  },
  "Imp. Force Booster": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Force Booster",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Increases melee weapon maximum damage by 30%, and decreases melee attack accuracy by 6%.\n <half_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 366
  },
  "Adv. Force Booster": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Force Booster",
    "Type": "Device",
    "Rating": "9",
    "Size": "1",
    "Mass": "10",
    "Integrity": "160",
    "Coverage": "50",
    "Effect": "Increases melee weapon maximum damage by 40%, and decreases melee attack accuracy by 8%.\n <half_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 367
  },
  "Stasis Canceller": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Stasis Canceller",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "30",
    "Coverage": "50",
    "Effect": "Ignore all effects of stasis beams and stasis traps.",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 368
  },
  "Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Transmission Jammer",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 12, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 369
  },
  "Mak. Transmission Jammer": {
    "Slot": "Utility",
    "Name": "Mak. Transmission Jammer",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 14, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 370
  },
  "Imp. Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Transmission Jammer",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 14, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 371
  },
  "Adv. Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Transmission Jammer",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 16, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "9",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 372
  },
  "Exp. Transmission Jammer": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Transmission Jammer",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Blocks local transmissions from visible hostiles within a range of 22, making it impossible for them to share information about your current position. Also prevents calls for reinforcements, and suppresses alarm traps.",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 373
  },
  "ECM Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "ECM Suite",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "20",
    "Coverage": "8",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 2x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 374
  },
  "Mak. ECM Suite": {
    "Slot": "Utility",
    "Name": "Mak. ECM Suite",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "15",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 3x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "7",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 375
  },
  "Adv. ECM Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. ECM Suite",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "30",
    "Coverage": "8",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 3x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 376
  },
  "Exp. ECM Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. ECM Suite",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "8",
    "Effect": "Increases difficulty of long-distance tracking by hostile robots, causing them to lose your position 4x as quickly outside line of sight.\n <stacks>",
    "Energy Upkeep": "25",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 377
  },
  "Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Reaction Control System",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 4% to dodge while on legs, or 8% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 378
  },
  "Imp. Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Reaction Control System",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 5% to dodge while on legs, or 10% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 379
  },
  "Adv. Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Reaction Control System",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 6% to dodge while on legs, or 12% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 380
  },
  "Exp. Reaction Control System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Reaction Control System",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "60",
    "Effect": "Enables responsive movement to avoid direct attacks, 7% to dodge while on legs, or 14% while hovering or flying (no effect on tracked or wheeled movement). Same chance to evade triggered traps, and a +1 to effective momentum for melee attacks and ramming. No effects while overweight.\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 381
  },
  "Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Phase Shifter",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 5%.\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 382
  },
  "Imp. Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Phase Shifter",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "2",
    "Integrity": "45",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 10%.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 383
  },
  "Adv. Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Phase Shifter",
    "Type": "Device",
    "Rating": "9",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 15%.\n <no_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 384
  },
  "Exp. Phase Shifter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Phase Shifter",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "80",
    "Effect": "Reduces enemy ranged targeting accuracy by 20%.\n <no_stack>",
    "Energy Upkeep": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 385
  },
  "Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Cloaking Device",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "30",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 2. Also -8% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 386
  },
  "Mak. Cloaking Device": {
    "Slot": "Utility",
    "Name": "Mak. Cloaking Device",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "60",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 3. Also -12% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 387
  },
  "Imp. Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Cloaking Device",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "45",
    "Coverage": "30",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 3. Also -12% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 388
  },
  "Adv. Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Cloaking Device",
    "Type": "Device",
    "Rating": "9",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "30",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 4. Also -16% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 389
  },
  "Exp. Cloaking Device": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Cloaking Device",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "8",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 4. Also -16% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 390
  },
  "Cloak of Protection": {
    "Slot": "Utility",
    "Name": "Cloak of Protection",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "300",
    "Coverage": "400",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 5. Also -20% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "15",
    "Index": 391
  },
  "5H-AD0's Cloak": {
    "Slot": "Utility",
    "Name": "5H-AD0's Cloak",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "400",
    "Coverage": "300",
    "Effect": "Effective sight range of robots attempting to spot you reduced by 6. Also -24% chance of being noticed by hostiles if passing through their field of view when not their turn.\n <half_stack>",
    "Energy Upkeep": "20",
    "Index": 392
  },
  "Core Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Core Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 20% of damage that would otherwise affect core. Also negates extra effects of critical strikes against core.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 393
  },
  "Imp. Core Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Core Shielding",
    "Type": "Protection",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 30% of damage that would otherwise affect core. Also negates extra effects of critical strikes against core.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 394
  },
  "Exp. Core Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Core Shielding",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 40% of damage that would otherwise affect core. Also negates extra effects of critical strikes against core.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 395
  },
  "Power Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Power Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect power sources. Also negates extra effects of critical strikes against power sources, and prevents chain reactions due to electromagnetic damage.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 396
  },
  "Imp. Power Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Power Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect power sources. Also negates extra effects of critical strikes against power sources, and prevents chain reactions due to electromagnetic damage.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 397
  },
  "Exp. Power Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Power Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect power sources. Also negates extra effects of critical strikes against power sources, and prevents chain reactions due to electromagnetic damage.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 398
  },
  "Propulsion Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Propulsion Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect propulsion units. Also negates extra effects of critical strikes against propulsion units.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 399
  },
  "Imp. Propulsion Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Propulsion Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect propulsion units. Also negates extra effects of critical strikes against propulsion units.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 400
  },
  "Exp. Propulsion Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Propulsion Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect propulsion units. Also negates extra effects of critical strikes against propulsion units.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 401
  },
  "Utility Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Utility Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect utilities. Does not protect armor, but negates extra effects of critical strikes against utilities.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 402
  },
  "Imp. Utility Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Utility Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect utilities. Does not protect armor, but negates extra effects of critical strikes against utilities.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 403
  },
  "Exp. Utility Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Utility Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect utilities. Does not protect armor, but negates extra effects of critical strikes against utilities.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 404
  },
  "Weapon Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Weapon Shielding",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Effect": "Absorbs 33% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 405
  },
  "Imp. Weapon Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Weapon Shielding",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Effect": "Absorbs 66% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 406
  },
  "Exp. Weapon Shielding": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Weapon Shielding",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 90% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 407
  },
  "Zio. Weapon Casing": {
    "Slot": "Utility",
    "Name": "Zio. Weapon Casing",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Effect": "Absorbs 100% of damage that would otherwise affect weapons. Also negates extra effects of critical strikes against weapons.\n <no_stack>",
    "Index": 408
  },
  "Lgt. Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lgt. Armor Plating",
    "Type": "Protection",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "90",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 409
  },
  "Med. Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Armor Plating",
    "Type": "Protection",
    "Rating": "2",
    "Size": "1",
    "Mass": "7",
    "Integrity": "120",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 410
  },
  "Hvy. Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Armor Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 411
  },
  "Zio. Light Carapace": {
    "Slot": "Utility",
    "Name": "Zio. Light Carapace",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "90",
    "Coverage": "400",
    "Effect": "Protects other parts via high coverage.",
    "Index": 412
  },
  "Zio. Heavy Carapace": {
    "Slot": "Utility",
    "Name": "Zio. Heavy Carapace",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "200",
    "Coverage": "1200",
    "Effect": "Protects other parts via high coverage.",
    "Index": 413
  },
  "Hrd. Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hrd. Light Armor Plating",
    "Type": "Protection",
    "Rating": "2",
    "Size": "1",
    "Mass": "5",
    "Integrity": "180",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 414
  },
  "Hrd. Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hrd. Medium Armor Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "8",
    "Integrity": "240",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 415
  },
  "Hrd. Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hrd. Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "2",
    "Mass": "20",
    "Integrity": "600",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 416
  },
  "Imp. Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Light Armor Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "180",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 417
  },
  "Imp. Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Medium Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "240",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 418
  },
  "Imp. Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "15",
    "Integrity": "600",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 419
  },
  "Lyr. Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lyr. Light Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "240",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 420
  },
  "Mak. Armor Plating": {
    "Slot": "Utility",
    "Name": "Mak. Armor Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "300",
    "Coverage": "100",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 421
  },
  "Lyr. Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lyr. Medium Armor Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "330",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 422
  },
  "Lyr. Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lyr. Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "6",
    "Size": "2",
    "Mass": "20",
    "Integrity": "750",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 423
  },
  "Centrium Light Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Centrium Light Armor Plating",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "450",
    "Coverage": "150",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 424
  },
  "Centrium Medium Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Centrium Medium Armor Plating",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "600",
    "Coverage": "225",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 425
  },
  "Centrium Heavy Armor Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Centrium Heavy Armor Plating",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "1500",
    "Coverage": "600",
    "Effect": "Protects other parts via high coverage.",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 426
  },
  "Centrium Linked Plating": {
    "Slot": "Utility",
    "Name": "Centrium Linked Plating",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "600",
    "Coverage": "500",
    "Effect": "Protects other parts via high coverage.",
    "Index": 427
  },
  "Reactive Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Reactive Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "150",
    "Effect": "Enables kinetic damage resistance: 20%.\n <no_stack>",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 428
  },
  "Med. Reactive Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Reactive Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "20",
    "Integrity": "240",
    "Coverage": "225",
    "Effect": "Enables kinetic damage resistance: 30%.\n <no_stack>",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 429
  },
  "Mak. Kinetic Plating": {
    "Slot": "Utility",
    "Name": "Mak. Kinetic Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "100",
    "Effect": "Enables kinetic damage resistance: 10%.\n <no_stack>",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 430
  },
  "Hvy. Reactive Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Reactive Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "35",
    "Integrity": "600",
    "Coverage": "600",
    "Effect": "Enables kinetic damage resistance: 40%.\n <no_stack>",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 431
  },
  "Reflective Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Reflective Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "150",
    "Effect": "Enables thermal damage resistance: 10%.\n <no_stack>",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 432
  },
  "Med. Reflective Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Reflective Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "225",
    "Effect": "Enables thermal damage resistance: 15%.\n <no_stack>",
    "Heat Generation": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 433
  },
  "Mak. Thermal Plating": {
    "Slot": "Utility",
    "Name": "Mak. Thermal Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "100",
    "Effect": "Enables thermal damage resistance: 10%.\n <no_stack>",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 434
  },
  "Hvy. Reflective Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Reflective Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "600",
    "Effect": "Enables thermal damage resistance: 25%.\n <no_stack>",
    "Heat Generation": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 435
  },
  "8R-AWN's Armor/TH": {
    "Slot": "Utility",
    "Name": "8R-AWN's Armor/TH",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "18",
    "Integrity": "120",
    "Coverage": "750",
    "Effect": "Enables thermal damage resistance: 90%.\n <no_stack>",
    "Index": 436
  },
  "8R-AWN's Armor/EX": {
    "Slot": "Utility",
    "Name": "8R-AWN's Armor/EX",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "24",
    "Integrity": "700",
    "Coverage": "900",
    "Effect": "Enables explosive damage resistance: 90%.\n <no_stack>",
    "Index": 437
  },
  "Insulated Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Insulated Plating",
    "Type": "Protection",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "150",
    "Effect": "Enables electromagnetic damage resistance: 15%.\n <no_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 438
  },
  "Med. Insulated Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Med. Insulated Plating",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "225",
    "Effect": "Enables electromagnetic damage resistance: 20%.\n <no_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 439
  },
  "Hvy. Insulated Plating": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hvy. Insulated Plating",
    "Type": "Protection",
    "Rating": "5",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "600",
    "Effect": "Enables electromagnetic damage resistance: 30%.\n <no_stack>",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 440
  },
  "Damper Plating": {
    "Slot": "Utility",
    "Name": "Damper Plating",
    "Type": "Protection",
    "Rating": "6",
    "Size": "4",
    "Mass": "45",
    "Integrity": "1200",
    "Coverage": "1600",
    "Effect": "Enables electromagnetic damage resistance: 90%.\n <no_stack>",
    "Heat Generation": "15",
    "Index": 441
  },
  "Zio. Shade Carapace": {
    "Slot": "Utility",
    "Name": "Zio. Shade Carapace",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "400",
    "Effect": "Enables resistance against all standard forms of damage: 20%.\n <no_stack>",
    "Index": 442
  },
  "Zio. Shade Armor": {
    "Slot": "Utility",
    "Name": "Zio. Shade Armor",
    "Type": "Protection",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "200",
    "Coverage": "225",
    "Effect": "Enables resistance against all standard forms of damage: 30%.\n <no_stack>",
    "Heat Generation": "4",
    "Index": 443
  },
  "Asb. Alloy Armor": {
    "Slot": "Utility",
    "Name": "Asb. Alloy Armor",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "200",
    "Coverage": "100",
    "Effect": "Enables resistance against all standard forms of damage: 15%.\n <no_stack>",
    "Index": 444
  },
  "Mak. Ablative Armor": {
    "Slot": "Utility",
    "Name": "Mak. Ablative Armor",
    "Type": "Protection",
    "Rating": "6",
    "Size": "1",
    "Mass": "8",
    "Integrity": "250",
    "Coverage": "225",
    "Effect": "Dissipates heat each turn, losing 1 integrity per 20 heat dissipated, applied after all standard heat dissipation and any injectors, and only when heat levels rise above 200. If multiple similar parts attached, heat is distributed among them equally where possible.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 445
  },
  "Active Cooling Armor": {
    "Slot": "Utility",
    "Name": "Active Cooling Armor",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "32",
    "Integrity": "2500",
    "Coverage": "900",
    "Effect": "Dissipates 60 heat per turn.\n <stacks>",
    "Energy Upkeep": "8",
    "Index": 446
  },
  "Powered Armor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Powered Armor",
    "Type": "Protection",
    "Rating": "4",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Heat Generation": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 447
  },
  "Imp. Powered Armor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Powered Armor",
    "Type": "Protection",
    "Rating": "6",
    "Size": "1",
    "Mass": "12",
    "Integrity": "240",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 448
  },
  "Adv. Powered Armor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Powered Armor",
    "Type": "Protection",
    "Rating": "8",
    "Size": "1",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 449
  },
  "Exp. Powered Armor": {
    "Slot": "Utility",
    "Name": "Exp. Powered Armor",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "450",
    "Coverage": "400",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "1",
    "Index": 450
  },
  "1C-UTU's Buckler": {
    "Slot": "Utility",
    "Name": "1C-UTU's Buckler",
    "Type": "Protection",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "400",
    "Coverage": "200",
    "Effect": "Blocks 50% of damage to this part in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).",
    "Energy Upkeep": "2",
    "Index": 451
  },
  "Lgt. Regenerative Plating": {
    "Slot": "Utility",
    "Name": "Lgt. Regenerative Plating",
    "Type": "Protection",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "240",
    "Coverage": "150",
    "Effect": "Regenerates integrity at a rate of 1 per 3 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "3",
    "Heat Generation": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 452
  },
  "Med. Regenerative Plating": {
    "Slot": "Utility",
    "Name": "Med. Regenerative Plating",
    "Type": "Protection",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "330",
    "Coverage": "225",
    "Effect": "Regenerates integrity at a rate of 1 per 2 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "4",
    "Heat Generation": "5",
    "Index": 453
  },
  "Hvy. Regenerative Plating": {
    "Slot": "Utility",
    "Name": "Hvy. Regenerative Plating",
    "Type": "Protection",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "21",
    "Integrity": "750",
    "Coverage": "600",
    "Effect": "Regenerates integrity at a rate of 1 per turn.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Heat Generation": "10",
    "Index": 454
  },
  "SHELL Armor": {
    "Slot": "Utility",
    "Name": "SHELL Armor",
    "Type": "Protection",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "30",
    "Integrity": "1200",
    "Coverage": "900",
    "Effect": "Regenerates integrity at a rate of 3 per turn.\n <parallel_ok>",
    "Energy Upkeep": "3",
    "Heat Generation": "8",
    "Index": 455
  },
  "Phase Armor": {
    "Slot": "Utility",
    "Name": "Phase Armor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "40",
    "Integrity": "900",
    "Coverage": "1200",
    "Effect": "While active, 50% of damage to this part is instead passed along to the core.",
    "Energy Upkeep": "10",
    "Index": 456
  },
  "Graphene Brace": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Graphene Brace",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Coverage": "8",
    "Effect": "100% chance to negate the effects of incoming critical strikes.",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 457
  },
  "Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Focal Shield",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 20%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 458
  },
  "Imp. Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Focal Shield",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "31",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 459
  },
  "Adv. Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Focal Shield",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 460
  },
  "Exp. Focal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Focal Shield",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "36",
    "Coverage": "15",
    "Effect": "Enables kinetic damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 461
  },
  "Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Shield",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 20%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 462
  },
  "Imp. Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Thermal Shield",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "31",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 463
  },
  "Adv. Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Thermal Shield",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "35",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 464
  },
  "Exp. Thermal Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Thermal Shield",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "36",
    "Coverage": "15",
    "Effect": "Enables thermal damage resistance: 30%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 465
  },
  "Thermal Barrier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Barrier",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "20",
    "Effect": "Enables thermal damage resistance: 50%.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 466
  },
  "Beam Splitter": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Beam Splitter",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "20",
    "Effect": "Enables thermal damage resistance: 75%.\n <no_stack>",
    "Energy Upkeep": "20",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 467
  },
  "Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Thermal Defense Suite",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "100",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 20%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 468
  },
  "Imp. Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Thermal Defense Suite",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 25%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "12",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 469
  },
  "Adv. Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Thermal Defense Suite",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "120",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 30%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "14",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 470
  },
  "Exp. Thermal Defense Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Thermal Defense Suite",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "30",
    "Effect": "Enables thermal damage resistance: 30%, applying benefit to both self and any allies within a range of 10.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 471
  },
  "Shock Absorption System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Shock Absorption System",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "27",
    "Coverage": "70",
    "Effect": "Enables explosive damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 472
  },
  "Imp. Shock Absorption System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Shock Absorption System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "31",
    "Coverage": "80",
    "Effect": "Enables explosive damage resistance: 50%.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 473
  },
  "Exp. Shock Absorption System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Shock Absorption System",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "90",
    "Effect": "Enables explosive damage resistance: 75%.\n <no_stack>",
    "Energy Upkeep": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 474
  },
  "EM Disruption Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "EM Disruption Field",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "1",
    "Integrity": "27",
    "Coverage": "15",
    "Effect": "Enables electromagnetic damage resistance: 25%.\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 475
  },
  "Adv. EM Disruption Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. EM Disruption Field",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "29",
    "Coverage": "15",
    "Effect": "Enables electromagnetic damage resistance: 50%.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "187/93/62",
    "Index": 476
  },
  "Exp. EM Disruption Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. EM Disruption Field",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "31",
    "Coverage": "15",
    "Effect": "Enables electromagnetic damage resistance: 70%.\n <no_stack>",
    "Energy Upkeep": "20",
    "Fabrication Number": "2",
    "Fabrication Time": "204/102/68",
    "Index": 477
  },
  "ME-RLN's Chromatic Screen": {
    "Slot": "Utility",
    "Name": "ME-RLN's Chromatic Screen",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "15",
    "Effect": "Enables resistance against all standard forms of damage: 20%.\n <no_stack>",
    "Energy Upkeep": "4",
    "Index": 478
  },
  "Hardlight Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hardlight Generator",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "30",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 4 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 479
  },
  "Imp. Hardlight Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Hardlight Generator",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "40",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 6 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "12",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 480
  },
  "Adv. Hardlight Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Hardlight Generator",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "10",
    "Integrity": "50",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 8 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "15",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 481
  },
  "Exp. Hardlight Generator": {
    "Slot": "Utility",
    "Name": "Exp. Hardlight Generator",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "30",
    "Effect": "Reduces damage of each incoming kinetic or thermal projectile by 10 (only usable if no active force fields, shield generators, remote shields, or energy mantles).\n <no_stack>",
    "Energy Upkeep": "20",
    "Index": 482
  },
  "Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Shield Generator",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:6 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 483
  },
  "Imp. Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Shield Generator",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "40",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:5 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 484
  },
  "Adv. Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Shield Generator",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:4 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 485
  },
  "Exp. Shield Generator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Shield Generator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "50",
    "Effect": "Blocks 25% of damage in exchange for energy loss at a 1:2 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 486
  },
  "Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Force Field",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "7",
    "Integrity": "50",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:7 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 487
  },
  "Imp. Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Force Field",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "60",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:6 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 488
  },
  "Adv. Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Force Field",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "15",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:5 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 489
  },
  "Exp. Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Force Field",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "90",
    "Coverage": "50",
    "Effect": "Blocks 50% of damage in exchange for energy loss at a 1:3 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 490
  },
  "7V-RTL's Ultimate Field": {
    "Slot": "Utility",
    "Name": "7V-RTL's Ultimate Field",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "20",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Blocks 75% of damage in exchange for energy loss at a 1:3 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "20",
    "Index": 491
  },
  "Vortex Field Projector": {
    "Slot": "Utility",
    "Name": "Vortex Field Projector",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "4",
    "Mass": "200",
    "Integrity": "480",
    "Coverage": "600",
    "Effect": "Blocks 75% of damage in exchange for energy loss at a 1:1 ratio (no effect if insufficient energy).\n <no_stack>",
    "Energy Upkeep": "60",
    "Heat Generation": "40",
    "Index": 492
  },
  "Remote Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Remote Shield",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "50",
    "Coverage": "70",
    "Effect": "Blocks 25% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:6 ratio.\n <no_stack>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 493
  },
  "Imp. Remote Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Remote Shield",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "70",
    "Effect": "Blocks 25% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:5 ratio.\n <no_stack>",
    "Energy Upkeep": "7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 494
  },
  "Adv. Remote Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Remote Shield",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "70",
    "Effect": "Blocks 25% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:4 ratio.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 495
  },
  "Remote Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Remote Force Field",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:8 ratio.\n <no_stack>",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 496
  },
  "Imp. Remote Force Field": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Remote Force Field",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "15",
    "Integrity": "90",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:7 ratio.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 497
  },
  "Energy Mantle": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Energy Mantle",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "18",
    "Integrity": "90",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:6 ratio.\n <no_stack>",
    "Energy Upkeep": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 498
  },
  "Imp. Energy Mantle": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Energy Mantle",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "100",
    "Coverage": "70",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:5 ratio.\n <no_stack>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 499
  },
  "AEGIS Remote Shield": {
    "Slot": "Utility",
    "Name": "AEGIS Remote Shield",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "120",
    "Coverage": "30",
    "Effect": "Blocks 50% of damage to self and any visible allies within a range of 10 in exchange for energy loss at a 1:2 ratio.\n <no_stack>",
    "Energy Upkeep": "20",
    "Index": 500
  },
  "Phase Redirector": {
    "Slot": "Utility",
    "Name": "Phase Redirector",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "15",
    "Integrity": "100",
    "Coverage": "200",
    "Effect": "25% of damage to parts is instead transferred directly to the core.\n <stacks>",
    "Energy Upkeep": "5",
    "Index": 501
  },
  "Point Defense System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Point Defense System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "30",
    "Effect": "8.00% chance to shoot down grenades, rockets, or missiles that pass within a range of 3, checked every time the projectile moves. Can also intercept Remote Datajack projectiles.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 502
  },
  "Point Defense Array": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Point Defense Array",
    "Type": "Device",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "30",
    "Effect": "16.00% chance to shoot down grenades, rockets, or missiles that pass within a range of 3, checked every time the projectile moves. Can also intercept Remote Datajack projectiles.\n <parallel_ok>",
    "Energy Upkeep": "7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 503
  },
  "Antimissile System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Antimissile System",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "30",
    "Effect": "24.00% chance to shoot down grenades, rockets, or missiles that pass within a range of 3, checked every time the projectile moves. Can also intercept Remote Datajack projectiles.\n <parallel_ok>",
    "Energy Upkeep": "9",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 504
  },
  "EX Chip 1": {
    "Slot": "Utility",
    "Name": "EX Chip 1",
    "Type": "Hackware",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "1",
    "Coverage": "1",
    "Effect": "Increases chance of successful machine hack by 7. Also provides a +3% bonus to rewiring traps and disrupted robots, and applies a -1% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 505
  },
  "Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hacking Suite",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 10. Also provides a +5% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 506
  },
  "Mak. Hacking Suite": {
    "Slot": "Utility",
    "Name": "Mak. Hacking Suite",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 11. Also provides a +5% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 507
  },
  "Imp. Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Hacking Suite",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 12. Also provides a +6% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 508
  },
  "Adv. Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Hacking Suite",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 14. Also provides a +7% bonus to rewiring traps and disrupted robots, and applies a -2% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 509
  },
  "Exp. Hacking Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Hacking Suite",
    "Type": "Hackware",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 16. Also provides a +8% bonus to rewiring traps and disrupted robots, and applies a -3% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 510
  },
  "System Mapper": {
    "Slot": "Utility",
    "Name": "System Mapper",
    "Type": "Hackware",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 20. Also provides a +10% bonus to rewiring traps and disrupted robots, and applies a -4% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 511
  },
  "Deep Network Scanner": {
    "Slot": "Utility",
    "Name": "Deep Network Scanner",
    "Type": "Hackware",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Increases chance of successful machine hack by 25. Also provides a +12% bonus to rewiring traps and disrupted robots, and applies a -5% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 512
  },
  "Architect God Chip A": {
    "Slot": "Utility",
    "Name": "Architect God Chip A",
    "Type": "Hackware",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "25",
    "Coverage": "1",
    "Effect": "Increases chance of successful machine hack by 100. Also provides a +50% bonus to rewiring traps and disrupted robots, and applies a -20% penalty to hostile programmers attempting to defend their allies against your hacks.\n <stacks>",
    "Index": 513
  },
  "EX Chip 2": {
    "Slot": "Utility",
    "Name": "EX Chip 2",
    "Type": "Hackware",
    "Rating": "2",
    "Size": "1",
    "Mass": "0",
    "Integrity": "1",
    "Coverage": "1",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 7. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 3%. Blocks hacking feedback side effects 14% of the time, and repels 14% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 514
  },
  "System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Shield",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 10. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 5%. Blocks hacking feedback side effects 20% of the time, and repels 20% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 515
  },
  "Mak. System Shield": {
    "Slot": "Utility",
    "Name": "Mak. System Shield",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 11. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 5%. Blocks hacking feedback side effects 22% of the time, and repels 22% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 516
  },
  "Imp. System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. System Shield",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 12. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 6%. Blocks hacking feedback side effects 24% of the time, and repels 24% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 517
  },
  "Adv. System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. System Shield",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 14. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 7%. Blocks hacking feedback side effects 28% of the time, and repels 28% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 518
  },
  "Exp. System Shield": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. System Shield",
    "Type": "Hackware",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 16. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 8%. Blocks hacking feedback side effects 32% of the time, and repels 32% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 519
  },
  "Ghost Barrier": {
    "Slot": "Utility",
    "Name": "Ghost Barrier",
    "Type": "Hackware",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 20. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 10%. Blocks hacking feedback side effects 40% of the time, and repels 40% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 520
  },
  "Quantum Router": {
    "Slot": "Utility",
    "Name": "Quantum Router",
    "Type": "Hackware",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 25. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 12%. Blocks hacking feedback side effects 50% of the time, and repels 50% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 521
  },
  "Architect God Chip D": {
    "Slot": "Utility",
    "Name": "Architect God Chip D",
    "Type": "Hackware",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "0",
    "Integrity": "25",
    "Coverage": "1",
    "Effect": "While hacking machines, reduces both chance of detection and rate of detection chance increases by 100. Reduces tracing progress advances by the same amount. Also a lower chance that hacking machines will be considered serious enough to trigger an increase in security level, and reduces central database lockout chance by 50%. Blocks hacking feedback side effects 100% of the time, and repels 200% of hacking attempts against allies within a range of 10.\n <stacks>",
    "Index": 522
  },
  "Authchip [R/NC]": {
    "Slot": "Utility",
    "Name": "Authchip [R/NC]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for most non-combat 0b10 bots, including Workers, Tunnelers, Haulers, Recyclers, Minesweepers, Mechanics, Operators, Protectors, and Researchers.",
    "Index": 523
  },
  "Authchip [R/Combat]": {
    "Slot": "Utility",
    "Name": "Authchip [R/Combat]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for most 0b10 combat bots, including Swarmers, Cutters, Saboteurs, Grunts, Brawlers, Duelists, Sentries, Demolishers, Specialists, Hunters, and Programmers.",
    "Index": 524
  },
  "Authchip [Power]": {
    "Slot": "Utility",
    "Name": "Authchip [Power]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all types of power sources.",
    "Index": 525
  },
  "Authchip [Propulsion]": {
    "Slot": "Utility",
    "Name": "Authchip [Propulsion]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all types of propulsion.",
    "Index": 526
  },
  "Authchip [Device]": {
    "Slot": "Utility",
    "Name": "Authchip [Device]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Device-type utilities.",
    "Index": 527
  },
  "Authchip [Storage]": {
    "Slot": "Utility",
    "Name": "Authchip [Storage]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Storage-type utilities.",
    "Index": 528
  },
  "Authchip [Processor]": {
    "Slot": "Utility",
    "Name": "Authchip [Processor]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Processors and Hackware-type utilities.",
    "Index": 529
  },
  "Authchip [Armor]": {
    "Slot": "Utility",
    "Name": "Authchip [Armor]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all Armor-type utilities.",
    "Index": 530
  },
  "Authchip [Weapon]": {
    "Slot": "Utility",
    "Name": "Authchip [Weapon]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "While attached during Fabricator operation, loading and building a single schematic will not be detected or traced.",
    "Description": "Applies to schematics for all types of weapons.",
    "Index": 531
  },
  "Relay Coupler [NC]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [NC]",
    "Type": "Hackware",
    "Rating": "1",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to non-combat 0b10 bots, including Workers, Builders, Tunnelers, Haulers, Recyclers, Mechanics, Operators, Watchers, Protectors, Researchers, and Compactors.",
    "Index": 532
  },
  "Relay Coupler [C]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [C]",
    "Type": "Hackware",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to common front-line 0b10 combat bots, including Swarmers, Grunts, Brawlers, and Duelists.",
    "Index": 533
  },
  "Relay Coupler [ARC]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [ARC]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to 0b10 Carriers.",
    "Index": 534
  },
  "Relay Coupler [Swarmer]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Swarmer]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Swarmer variant.",
    "Index": 535
  },
  "Relay Coupler [Cutter]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Cutter]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Cutter variant.",
    "Index": 536
  },
  "Relay Coupler [Grunt]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Grunt]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Grunt variant.",
    "Index": 537
  },
  "Relay Coupler [Brawler]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Brawler]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Brawler variant.",
    "Index": 538
  },
  "Relay Coupler [Duelist]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Duelist]",
    "Type": "Hackware",
    "Rating": "3",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Duelist variant.",
    "Index": 539
  },
  "Relay Coupler [Sentry]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Sentry]",
    "Type": "Hackware",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Sentry variant.",
    "Index": 540
  },
  "Relay Coupler [Demolisher]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Demolisher]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Demolisher variant.",
    "Index": 541
  },
  "Relay Coupler [Specialist]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Specialist]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Specialist variant.",
    "Index": 542
  },
  "Relay Coupler [Hunter]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Hunter]",
    "Type": "Hackware",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Hunter variant.",
    "Index": 543
  },
  "Relay Coupler [Heavy]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Heavy]",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Heavy variant.",
    "Index": 544
  },
  "Relay Coupler [Behemoth]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Behemoth]",
    "Type": "Hackware",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Behemoth variant.",
    "Index": 545
  },
  "Relay Coupler [Programmer]": {
    "Slot": "Utility",
    "Name": "Relay Coupler [Programmer]",
    "Type": "Hackware",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Enables additional robot hacks when used in conjunction with RIF and Datajack. Requires having used a RIF Installer inside a Garrison.",
    "Description": "Applies to any standard 0b10 Programmer variant.",
    "Index": 546
  },
  "Skeleton Box": {
    "Slot": "Utility",
    "Name": "Skeleton Box",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Effect": "Automatically hacks visible door terminals within a range of 10. Requires being within that range for 10 turns.",
    "Index": 547
  },
  "01-MTF's Autohacker": {
    "Slot": "Utility",
    "Name": "01-MTF's Autohacker",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Effect": "Automatically hacks visible door terminals within a range of 10. Requires being within that range for 1 turn.",
    "Index": 548
  },
  "Component Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Component Analysis Suite",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "3% chance to identify a random unidentified part in inventory each turn.\n <parallel_ok>",
    "Energy Upkeep": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 549
  },
  "Imp. Component Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Component Analysis Suite",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "4% chance to identify a random unidentified part in inventory each turn.\n <parallel_ok>",
    "Energy Upkeep": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 550
  },
  "Adv. Component Analysis Suite": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Component Analysis Suite",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "10% chance to identify a random unidentified part in inventory each turn.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 551
  },
  "Dynamic Insulation System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Dynamic Insulation System",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "27",
    "Coverage": "8",
    "Effect": "Cuts chance of system corruption from electromagnetic damage by 50%. Also a 20% chance to prevent the effects of a shock or surge trap.\n <stacks>",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 552
  },
  "Imp. Dynamic Insulation System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Dynamic Insulation System",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "31",
    "Coverage": "8",
    "Effect": "Cuts chance of system corruption from electromagnetic damage by 67%. Also a 30% chance to prevent the effects of a shock or surge trap.\n <stacks>",
    "Energy Upkeep": "3",
    "Heat Generation": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 553
  },
  "Adv. Dynamic Insulation System": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Dynamic Insulation System",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "35",
    "Coverage": "8",
    "Effect": "Cuts chance of system corruption from electromagnetic damage by 75%. Also a 40% chance to prevent the effects of a shock or surge trap.\n <stacks>",
    "Energy Upkeep": "6",
    "Heat Generation": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 554
  },
  "System Guard": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Guard",
    "Type": "Processor",
    "Rating": "5",
    "Size": "1",
    "Mass": "0",
    "Integrity": "10",
    "Coverage": "2",
    "Effect": "Reduces effective system corruption by 8.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 555
  },
  "Imp. System Guard": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. System Guard",
    "Type": "Processor",
    "Rating": "7",
    "Size": "1",
    "Mass": "0",
    "Integrity": "15",
    "Coverage": "2",
    "Effect": "Reduces effective system corruption by 12.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 556
  },
  "Exp. System Guard": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. System Guard",
    "Type": "Processor",
    "Rating": "9",
    "Size": "1",
    "Mass": "0",
    "Integrity": "20",
    "Coverage": "2",
    "Effect": "Reduces effective system corruption by 20.\n <stacks>",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 557
  },
  "Corruption Screen": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Corruption Screen",
    "Type": "Processor",
    "Rating": "4",
    "Size": "1",
    "Mass": "0",
    "Integrity": "16",
    "Coverage": "2",
    "Effect": "Prevents infliction of new system corruption from any source, losing 2 integrity per percent of corruption blocked.",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 558
  },
  "Imp. Corruption Screen": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Corruption Screen",
    "Type": "Processor",
    "Rating": "6",
    "Size": "1",
    "Mass": "0",
    "Integrity": "30",
    "Coverage": "2",
    "Effect": "Prevents infliction of new system corruption from any source, losing 2 integrity per percent of corruption blocked.",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 559
  },
  "Adv. Corruption Screen": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Corruption Screen",
    "Type": "Processor",
    "Rating": "8",
    "Size": "1",
    "Mass": "0",
    "Integrity": "40",
    "Coverage": "2",
    "Effect": "Prevents infliction of new system corruption from any source, losing 2 integrity per percent of corruption blocked.",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 560
  },
  "System Restoration Module": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Restoration Module",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "15",
    "Coverage": "15",
    "Effect": "4.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 561
  },
  "Mak. System Restoration Module": {
    "Slot": "Utility",
    "Name": "Mak. System Restoration Module",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "5",
    "Integrity": "45",
    "Coverage": "20",
    "Effect": "1.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 562
  },
  "Imp. System Restoration Module": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. System Restoration Module",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "21",
    "Coverage": "15",
    "Effect": "4.70% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "3",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 563
  },
  "Adv. System Restoration Module": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. System Restoration Module",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "30",
    "Coverage": "15",
    "Effect": "5.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 564
  },
  "System Purifier": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "System Purifier",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "45",
    "Coverage": "15",
    "Effect": "3.80% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 565
  },
  "Exp. System Purifier": {
    "Slot": "Utility",
    "Name": "Exp. System Purifier",
    "Type": "Device",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "300",
    "Coverage": "15",
    "Effect": "10.00% chance each turn to purge 1% of system corruption, losing 3 integrity each time the effect is applied.\n <parallel_ok>",
    "Energy Upkeep": "15",
    "Index": 566
  },
  "Tractor Beam": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Tractor Beam",
    "Type": "Device",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "30",
    "Effect": "Automatically collects matter within a range of 4.",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 567
  },
  "Hpw. Tractor Beam": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Hpw. Tractor Beam",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Effect": "Automatically collects matter within a range of 8.",
    "Energy Upkeep": "1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 568
  },
  "Lrn. Tractor Beam": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Lrn. Tractor Beam",
    "Type": "Device",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "30",
    "Effect": "Automatically collects matter within a range of 16.",
    "Energy Upkeep": "2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 569
  },
  "Mobile Refinery Mk. CCLXVII": {
    "Slot": "Utility",
    "Name": "Mobile Refinery Mk. CCLXVII",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "40",
    "Effect": "Attracts any visible debris within a range of 16, converting it to matter on arrival.",
    "Energy Upkeep": "40",
    "Index": 570
  },
  "Trap Extractor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Trap Extractor",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "15",
    "Effect": "Enables 60% chance to extract a non-hostile trap at current location, adding it to the extractor inventory if possible. Can hold up to 4 traps of the same type, but cannot store stasis traps. Each extraction attempt requires 5 matter. Activate a second time to begin dropping stored traps to the ground at a rate of one per turn. Also prevents user system corruption from accidentally triggering a trap at current location due to movement.",
    "Energy Upkeep": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 571
  },
  "Imp. Trap Extractor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Trap Extractor",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "85",
    "Coverage": "15",
    "Effect": "Enables 80% chance to extract a non-hostile trap at current location, adding it to the extractor inventory if possible. Can hold up to 6 traps of the same type, but cannot store stasis traps. Each extraction attempt requires 5 matter. Activate a second time to begin dropping stored traps to the ground at a rate of one per turn. Also prevents user system corruption from accidentally triggering a trap at current location due to movement.",
    "Energy Upkeep": "6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 572
  },
  "Adv. Trap Extractor": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Trap Extractor",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "100",
    "Coverage": "15",
    "Effect": "Enables 100% chance to extract a non-hostile trap at current location, adding it to the extractor inventory if possible. Can hold up to 8 traps of the same type, but cannot store stasis traps. Each extraction attempt requires 5 matter. Activate a second time to begin dropping stored traps to the ground at a rate of one per turn. Also prevents user system corruption from accidentally triggering a trap at current location due to movement.",
    "Energy Upkeep": "8",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 573
  },
  "Trap Reconfigurator": {
    "Slot": "Utility",
    "Name": "Trap Reconfigurator",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "65",
    "Coverage": "15",
    "Effect": "Automatically and instantly reprograms visible hostile traps within a range of 14.",
    "Energy Upkeep": "2",
    "Index": 574
  },
  "Recalibrator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Recalibrator",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "25",
    "Coverage": "15",
    "Effect": "0.70% chance each turn to restore a broken part, attached or in inventory, to functionality. Unable to repair alien technology, or prototypes above rating 8.\n <parallel_ok>",
    "Energy Upkeep": "10",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 575
  },
  "Imp. Recalibrator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Recalibrator",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "15",
    "Effect": "1.00% chance each turn to restore a broken part, attached or in inventory, to functionality. Unable to repair alien technology, or prototypes above rating 8.\n <parallel_ok>",
    "Energy Upkeep": "14",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 576
  },
  "Adv. Recalibrator": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Recalibrator",
    "Type": "Device",
    "Rating": "8",
    "Size": "1",
    "Mass": "1",
    "Integrity": "35",
    "Coverage": "15",
    "Effect": "2.00% chance each turn to restore a broken part, attached or in inventory, to functionality. Unable to repair alien technology, or prototypes above rating 8.\n <parallel_ok>",
    "Energy Upkeep": "18",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 577
  },
  "Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Field Recycling Unit",
    "Type": "Device",
    "Rating": "2",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (25% efficiency) at a rate of 2 per turn. Can hold no more than 100 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "4",
    "Heat Generation": "6",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 578
  },
  "Imp. Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Imp. Field Recycling Unit",
    "Type": "Device",
    "Rating": "4",
    "Size": "1",
    "Mass": "12",
    "Integrity": "70",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (45% efficiency) at a rate of 4 per turn. Can hold no more than 200 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "6",
    "Heat Generation": "8",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 579
  },
  "Adv. Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Field Recycling Unit",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "16",
    "Integrity": "80",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (60% efficiency) at a rate of 6 per turn. Can hold no more than 300 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "8",
    "Heat Generation": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 580
  },
  "Exp. Field Recycling Unit": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Exp. Field Recycling Unit",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "120",
    "Coverage": "15",
    "Effect": "Activate a second time to begin automatically collecting parts at current location to recycle them into matter (75% efficiency) at a rate of 7 per turn. Can hold no more than 350 scrap at a time.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "2",
    "Heat Generation": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 581
  },
  "Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Drone Bay",
    "Type": "Device",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "200",
    "Effect": "Holds up to 2 Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 582
  },
  "Z-Drone Bay": {
    "Slot": "Utility",
    "Name": "Z-Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "200",
    "Effect": "Holds up to 2 Z-Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 583
  },
  "Mni. Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Mni. Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "2",
    "Integrity": "150",
    "Coverage": "100",
    "Effect": "Holds up to 3 Mini Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 584
  },
  "Mapping Drone Bay": {
    "Slot": "Utility",
    "Name": "Mapping Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "100",
    "Coverage": "80",
    "Effect": "Holds up to 3 Mapping Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 585
  },
  "Adv. Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Adv. Drone Bay",
    "Type": "Device",
    "Rating": "6",
    "Size": "2",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "400",
    "Effect": "Holds up to 2 Advanced Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 586
  },
  "Bomb Drone Bay": {
    "Slot": "Utility",
    "Name": "Bomb Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "320",
    "Coverage": "400",
    "Effect": "Holds up to 16 Bomb Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nBomb Drones explode for 57-109 explosive damage with a radius of 6 (falloff: 15; salvage: -15).",
    "Index": 587
  },
  "Thief Drone Bay": {
    "Slot": "Utility",
    "Name": "Thief Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "200",
    "Coverage": "100",
    "Effect": "Holds up to 3 Thief Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 588
  },
  "Decoy Drone Bay": {
    "Slot": "Utility",
    "Name": "Decoy Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "14",
    "Integrity": "270",
    "Coverage": "400",
    "Effect": "Holds up to 16 Decoy Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nWhen deployed, Decoy Drones immediately draw hostiles to a distant location then self-destruct.",
    "Index": 589
  },
  "Splice Drone Bay": {
    "Slot": "Utility",
    "Name": "Splice Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "200",
    "Coverage": "200",
    "Effect": "Holds up to 6 Splice Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 590
  },
  "Combat Drone Bay": {
    "Slot": "Utility",
    "Name": "Combat Drone Bay",
    "Type": "Device",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "350",
    "Coverage": "400",
    "Effect": "Holds up to 2 Combat Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 591
  },
  "Assault Drone Bay": {
    "Slot": "Utility",
    "Name": "Assault Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "400",
    "Coverage": "500",
    "Effect": "Holds up to 2 Assault Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 592
  },
  "Stealth Drone Bay": {
    "Slot": "Utility",
    "Hackable Schematic": "1",
    "Name": "Stealth Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "250",
    "Coverage": "200",
    "Effect": "Holds up to 2 Stealth Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 593
  },
  "Swarm Drone Bay": {
    "Slot": "Utility",
    "Name": "Swarm Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "250",
    "Coverage": "600",
    "Effect": "Holds up to 4 Swarm Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 1025
  },
  "Supersonic Drone Bay": {
    "Slot": "Utility",
    "Name": "Supersonic Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "120",
    "Coverage": "50",
    "Effect": "Holds 1 Trailblazer. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 595
  },
  "Sensor Drone Bay": {
    "Slot": "Utility",
    "Name": "Sensor Drone Bay",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "14",
    "Integrity": "400",
    "Coverage": "100",
    "Effect": "Holds up to 20 Sensor Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 596
  },
  "Hacking Drone Bay": {
    "Slot": "Utility",
    "Name": "Hacking Drone Bay",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "150",
    "Coverage": "60",
    "Effect": "Holds 1 Hacking Drone. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nHacking Drones automatically attempt to perform useful hacks on any Terminals in your view, and will always stop before their actions are traced.",
    "Index": 597
  },
  "Minesniffer Drone Bay": {
    "Slot": "Utility",
    "Name": "Minesniffer Drone Bay",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "100",
    "Effect": "Holds up to 10 Minesniffer Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nMinesniffer Drones automatically attempt to retrieve known hostile traps in your view which they are able to extract, and also seek out hidden traps.",
    "Index": 598
  },
  "Army-in-a-Box": {
    "Slot": "Utility",
    "Name": "Army-in-a-Box",
    "Type": "Device",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "6",
    "Mass": "80",
    "Integrity": "1000",
    "Coverage": "600",
    "Effect": "Holds up to 30 Army Drones. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.\n\nArmy Drones receive a randomized loadout on deployment.",
    "Index": 599
  },
  "Wardrone Bay": {
    "Slot": "Utility",
    "Name": "Wardrone Bay",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "8",
    "Mass": "50",
    "Integrity": "2750",
    "Coverage": "1600",
    "Effect": "Holds 1 Wardrone. Launched when bay is activated. Matching drones operate as long as this bay is functional and attached, though it does not have to remain active. Additional available bays in inventory can also receive returning drones as long as one already attached.",
    "Description": "If on the ground at current position use > or right-click on self to release all drones without attaching. Must already have another matching functional bay attached to do this.",
    "Index": 600
  },
  "Bomb Factory No. 2": {
    "Slot": "Utility",
    "Name": "Bomb Factory No. 2",
    "Type": "Device",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "30",
    "Integrity": "400",
    "Coverage": "200",
    "Effect": "Fabricates a Dirty Bomb Trap at a rate of 1 per 25 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "10",
    "Matter Upkeep": "2",
    "Heat Generation": "10",
    "Index": 601
  },
  "Mobile Assembly Unit": {
    "Slot": "Utility",
    "Name": "Mobile Assembly Unit",
    "Type": "Device",
    "Rating": "4",
    "Size": "4",
    "Mass": "40",
    "Integrity": "200",
    "Coverage": "400",
    "Effect": "Fabricates a random Assembled at a rate of 1 per 10 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "10",
    "Matter Upkeep": "1",
    "Heat Generation": "10",
    "Index": 602
  },
  "Heart of Steel": {
    "Slot": "Utility",
    "Name": "Heart of Steel",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "60",
    "Effect": "Undergoes a transformaton after remaining active for 200 turns.\n <parallel_ok, resume_ok>",
    "Energy Upkeep": "10",
    "Matter Upkeep": "10",
    "Index": 603
  },
  "GOLEM Unit": {
    "Slot": "Utility",
    "Name": "GOLEM Unit",
    "Type": "Device",
    "Rating": "8",
    "Size": "2",
    "Mass": "1",
    "Integrity": "200",
    "Coverage": "30",
    "Effect": "Autonomous self-powered unit capable of building and maintaining a complete Golem. Construction requires approximately 900 turns.",
    "Index": 604
  },
  "PSU Rigger": {
    "Slot": "Utility",
    "Name": "PSU Rigger",
    "Type": "Device",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "15",
    "Effect": "Stand on a power source and use > or right-click on self to convert it into a proximity mine that detonates when any enemy moves adjacent to it. Rigging requires 5 matter.",
    "Index": 605
  },
  "Phasing AFG": {
    "Slot": "Utility",
    "Name": "Phasing AFG",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "20",
    "Integrity": "240",
    "Coverage": "50",
    "Effect": "Attracts any loose items within a range of 16, even if they have to be drawn through solid materials to arrive. Each turn the process damages each item it affects by 1% of max integrity or 1, whichever is greater.",
    "Energy Upkeep": "30",
    "Index": 606
  },
  "AS-neutralizer No. 17b": {
    "Slot": "Utility",
    "Name": "AS-neutralizer No. 17b",
    "Type": "Device",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "80",
    "Coverage": "60",
    "Effect": "Every 5 turns emits a powerful signal tuned to power down all Assembled within a range of 16.",
    "Energy Upkeep": "5",
    "Index": 607
  },
  "Chronowheel": {
    "Slot": "Utility",
    "Name": "Chronowheel",
    "Type": "Device",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "10",
    "Effect": "Sets a temporal reversion point when attached, then loses 1 integrity per turn. Once integrity is depleted naturally, you are forced back to that point in time. If destroyed prematurely the reversion will not occur.",
    "Index": 608
  },
  "Dimensional Node Initializer": {
    "Slot": "Utility",
    "Name": "Dimensional Node Initializer",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Initializes a dimensional slip node at the current position. Transdimensional reconstruction automatically targets the nearest active slip node, regardless of distance.\n <consumed>",
    "Index": 609
  },
  "Transdimensional Reconstructor": {
    "Slot": "Utility",
    "Name": "Transdimensional Reconstructor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Teleports the user to an approximate distance of 32 from current position, traveling along dimensional pathways of least resistance.\n <consumed>",
    "Index": 610
  },
  "Hpw. Transdimensional Reconstructor": {
    "Slot": "Utility",
    "Name": "Hpw. Transdimensional Reconstructor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Teleports the user to an approximate distance of 64 from current position, traveling along dimensional pathways of least resistance.\n <consumed>",
    "Index": 611
  },
  "Core Expander": {
    "Slot": "Utility",
    "Name": "Core Expander",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Evolves a new slot of a random type.",
    "Index": 612
  },
  "Core Regenerator": {
    "Slot": "Utility",
    "Name": "Core Regenerator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Restores 25% of core integrity.\n <consumed>",
    "Index": 613
  },
  "Integrity Redistributor": {
    "Slot": "Utility",
    "Name": "Integrity Redistributor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Drains a core at or above half integrity to restore integrity of all attached parts at a 1:6 ratio. Process is reversed for cores below half integrity.\n <consumed>",
    "Index": 614
  },
  "Integrated Dissipator": {
    "Slot": "Utility",
    "Name": "Integrated Dissipator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core heat dissipation by 20.\n <consumed>",
    "Index": 615
  },
  "Supercharged Integrated Dissipator": {
    "Slot": "Utility",
    "Name": "Supercharged Integrated Dissipator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core heat dissipation by 40.\n <consumed>",
    "Index": 616
  },
  "Integrated Thermoelectric Network": {
    "Slot": "Utility",
    "Name": "Integrated Thermoelectric Network",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Converts all heat above 250 to energy every turn at a 3:1 ratio.\n <consumed>",
    "Index": 617
  },
  "Integrated Reactor": {
    "Slot": "Utility",
    "Name": "Integrated Reactor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core energy generation by 10.\n <consumed>",
    "Index": 618
  },
  "Supercharged Integrated Reactor": {
    "Slot": "Utility",
    "Name": "Supercharged Integrated Reactor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases core energy generation by 15.\n <consumed>",
    "Index": 619
  },
  "Integrated Mediator": {
    "Slot": "Utility",
    "Name": "Integrated Mediator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Energy and matter required for part attachment permanently reduced by 50%. Also enables 50% chance to avoid negative effects of attaching a faulty prototype or corrupted part, but this feature requires 20 matter to take effect.\n <no_stack>",
    "Index": 620
  },
  "Core Membrane": {
    "Slot": "Utility",
    "Name": "Core Membrane",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Provides permanent immunity against system corruption.\n <consumed>",
    "Index": 621
  },
  "Navigation Efficiency Matrix": {
    "Slot": "Utility",
    "Name": "Navigation Efficiency Matrix",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Upgrades subspace navigation controls.\n <consumed>",
    "Index": 622
  },
  "Core Reset Matrix": {
    "Slot": "Utility",
    "Name": "Core Reset Matrix",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Removes all corruption and wipes entire memory, including part knowledge, robot analysis, schematics, and map data. Also restores knowledge of alien technology.\n <consumed>",
    "Index": 623
  },
  "Subatomic Replicator": {
    "Slot": "Utility",
    "Name": "Subatomic Replicator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Duplicates object at current location.\n <consumed>",
    "Index": 624
  },
  "Terrabomb": {
    "Slot": "Utility",
    "Name": "Terrabomb",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Destroys all walls and earth up to a distance of 20 without affecting other materials.\n <consumed>",
    "Index": 625
  },
  "Core Physics Calibrator": {
    "Slot": "Utility",
    "Name": "Core Physics Calibrator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "5",
    "Effect": "Enables greater freedom during assignment of evolution parameters.",
    "Index": 626
  },
  "Spacefold Activator": {
    "Slot": "Utility",
    "Name": "Spacefold Activator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "250",
    "Coverage": "15",
    "Effect": "Move through up to 3 consecutive solid objects to the first open space on the other side, in the process taking core integrity damage equivalent to 1% of maximum for each space traveled.",
    "Index": 627
  },
  "Microwarp Drive": {
    "Slot": "Utility",
    "Name": "Microwarp Drive",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "6",
    "Integrity": "400",
    "Coverage": "100",
    "Effect": "Warp across any number of open spaces nearly instantly, taking 2 damage to core integrity for each space traveled.",
    "Index": 628
  },
  "LC Capacitor": {
    "Slot": "Utility",
    "Name": "LC Capacitor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "3",
    "Mass": "15",
    "Integrity": "250",
    "Coverage": "90",
    "Energy Upkeep": "5",
    "Index": 629
  },
  "LRC Armor": {
    "Slot": "Utility",
    "Name": "LRC Armor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "250",
    "Coverage": "600",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases maximum core integrity by 250.\n <consumed>",
    "Index": 630
  },
  "LRC Storage": {
    "Slot": "Utility",
    "Name": "LRC Storage",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases inventory capacity by 2.\n <consumed>",
    "Index": 631
  },
  "LRC Energy Well": {
    "Slot": "Utility",
    "Name": "LRC Energy Well",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases energy capacity by 250.\n <consumed>",
    "Index": 632
  },
  "LRC Matter Compressor": {
    "Slot": "Utility",
    "Name": "LRC Matter Compressor",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases matter storage capacity by 125.\n <consumed>",
    "Index": 633
  },
  "LRC Boosters": {
    "Slot": "Utility",
    "Name": "LRC Boosters",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently increases mass support by 10 (regardless of propulsion).\n <consumed>",
    "Index": 634
  },
  "LRC Insulator": {
    "Slot": "Utility",
    "Name": "LRC Insulator",
    "Type": "Artifact",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "10",
    "Special Trait": "Consumable",
    "Effect": "Permanently sets base electromagnetic damage resistance to 25%, if not already better.\n <consumed>",
    "Index": 635
  },
  "EM Pulse Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EM Pulse Gun",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "45",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "16",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 636
  },
  "Hvy. EM Pulse Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. EM Pulse Gun",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "20",
    "Shot Heat": "45",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 637
  },
  "EM Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EM Shotgun",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "8",
    "Shot Energy": "20",
    "Shot Heat": "45",
    "Projectile Count": "2",
    "Damage Min": "7",
    "Damage Max": "9",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "2",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 638
  },
  "Imp. EM Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. EM Shotgun",
    "Type": "Energy Gun",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "100",
    "Range": "8",
    "Shot Energy": "20",
    "Shot Heat": "45",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "10",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "3",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 639
  },
  "Shock Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shock Rifle",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "16",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 640
  },
  "Riot Gun": {
    "Slot": "Weapon",
    "Name": "Riot Gun",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "28",
    "Shot Heat": "50",
    "Targeting": "-5",
    "Projectile Count": "2",
    "Damage Min": "8",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 641
  },
  "Hvy. EM Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. EM Shotgun",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "24",
    "Shot Heat": "50",
    "Projectile Count": "2",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 642
  },
  "Lightning Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lightning Gun",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "28",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "8",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 643
  },
  "Hvy. Riot Gun": {
    "Slot": "Weapon",
    "Name": "Hvy. Riot Gun",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "65",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "32",
    "Shot Heat": "60",
    "Targeting": "-5",
    "Projectile Count": "2",
    "Damage Min": "8",
    "Damage Max": "13",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 644
  },
  "Arc Projector": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Arc Projector",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "28",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Damage Min": "8",
    "Damage Max": "12",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "25",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 645
  },
  "Prc. Shock Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Shock Rifle",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "28",
    "Shot Heat": "55",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 646
  },
  "Hpw. Shock Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hpw. Shock Rifle",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "65",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "32",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "21",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "2",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 647
  },
  "Arc Thrower": {
    "Slot": "Weapon",
    "Name": "Arc Thrower",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "40",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "36",
    "Shot Heat": "70",
    "Projectile Count": "3",
    "Damage Min": "4",
    "Damage Max": "6",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "15",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 648
  },
  "Imp. Lightning Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Lightning Gun",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "90",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "32",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "23",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "10",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 649
  },
  "Tesla Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tesla Rifle",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "75",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "19",
    "Damage Max": "23",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "2",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 650
  },
  "Imp. Arc Projector": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Arc Projector",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "75",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Intermediate (30)",
    "Disruption": "40",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 651
  },
  "Hvy. Tesla Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Tesla Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "40",
    "Shot Heat": "70",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "28",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "2",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 652
  },
  "Hyp. EM Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Hyp. EM Gauss Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "22",
    "Shot Energy": "70",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "2",
    "Damage Type": "Electromagnetic",
    "Penetration": "100 / 80 / 60",
    "Spectrum": "Fine (100)",
    "Disruption": "60",
    "Salvage": "4",
    "Index": 653
  },
  "Imp. Arc Thrower": {
    "Slot": "Weapon",
    "Name": "Imp. Arc Thrower",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "48",
    "Shot Heat": "90",
    "Projectile Count": "5",
    "Damage Min": "4",
    "Damage Max": "6",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Wide (10)",
    "Disruption": "15",
    "Salvage": "1",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 654
  },
  "01-MTF's Shockpuncher": {
    "Slot": "Weapon",
    "Name": "01-MTF's Shockpuncher",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "5",
    "Integrity": "120",
    "Coverage": "100",
    "Range": "6",
    "Shot Energy": "60",
    "Shot Heat": "50",
    "Projectile Count": "2",
    "Damage Min": "15",
    "Damage Max": "25",
    "Damage Type": "Electromagnetic",
    "Critical": "5% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "50",
    "Salvage": "3",
    "Index": 655
  },
  "Gamma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gamma Rifle",
    "Type": "Energy Gun",
    "Rating": "8",
    "Size": "1",
    "Mass": "6",
    "Integrity": "85",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "44",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "25",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 656
  },
  "Tachyon Dispersion Ray": {
    "Slot": "Weapon",
    "Name": "Tachyon Dispersion Ray",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "85",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "48",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Fine (100)",
    "Disruption": "80",
    "Salvage": "4",
    "Index": 657
  },
  "Immobilizer": {
    "Slot": "Weapon",
    "Name": "Immobilizer",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "70",
    "Coverage": "100",
    "Effect": "Disables one hover or flight propulsion component with each hit. No effect on targets with disruption immunity.",
    "Range": "14",
    "Shot Energy": "24",
    "Shot Heat": "80",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "3",
    "Damage Max": "6",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "2",
    "Index": 658
  },
  "Modified EM Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Modified EM Gauss Rifle",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "120",
    "Coverage": "100",
    "Effect": "Performs a random hack on any standard 0b10 Swarmer, Cutter, Grunt, Brawler, Duelist, Sentry, Demolisher, Specialist, Hunter, Heavy, or Behemoth variant.\n <no_stack>",
    "Description": "V3-CT5 says this can hack standard 0b10 combat robots.",
    "Range": "22",
    "Shot Energy": "70",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "2",
    "Damage Type": "Electromagnetic",
    "Penetration": "100 / 80 / 60",
    "Spectrum": "Fine (100)",
    "Disruption": "60",
    "Salvage": "4",
    "Index": 659
  },
  "AWS/EX-DEC": {
    "Slot": "Weapon",
    "Name": "AWS/EX-DEC",
    "Type": "Energy Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "220",
    "Coverage": "200",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "10",
    "Targeting": "20",
    "Delay": "-100",
    "Projectile Count": "2",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Electromagnetic",
    "Critical": "3% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "2",
    "Salvage": "1",
    "Index": 660
  },
  "Enh. Gamma Rifle": {
    "Slot": "Weapon",
    "Name": "Enh. Gamma Rifle",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "44",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "33",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "6",
    "Salvage": "8",
    "Index": 661
  },
  "Med. Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Med. Laser",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "10",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "13",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 662
  },
  "Sml. Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Sml. Laser",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "70",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "8",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 663
  },
  "Backup Laser I": {
    "Slot": "Weapon",
    "Name": "Backup Laser I",
    "Type": "Energy Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "30",
    "Range": "10",
    "Shot Energy": "6",
    "Shot Heat": "30",
    "Projectile Count": "1",
    "Damage Min": "8",
    "Damage Max": "10",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 664
  },
  "Beam Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Beam Rifle",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "75",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "13",
    "Shot Heat": "56",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "15",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 665
  },
  "Particle Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Particle Gun",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "75",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "10",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "13",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 666
  },
  "Spread Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Spread Laser",
    "Type": "Energy Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "10",
    "Shot Energy": "16",
    "Shot Heat": "65",
    "Targeting": "-10",
    "Projectile Count": "6",
    "Damage Min": "3",
    "Damage Max": "5",
    "Damage Type": "Thermal",
    "Heat Transfer": "Minimal (5)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 667
  },
  "Imp. Medium Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Medium Laser",
    "Type": "Energy Gun",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "8",
    "Shot Heat": "56",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 668
  },
  "Field Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Field Laser",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "15",
    "Shot Heat": "63",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 669
  },
  "Pulse Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Pulse Rifle",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "18",
    "Shot Heat": "63",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 670
  },
  "Backup Laser III": {
    "Slot": "Weapon",
    "Name": "Backup Laser III",
    "Type": "Energy Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "30",
    "Range": "14",
    "Shot Energy": "10",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 671
  },
  "Hvy. Particle Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Particle Gun",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 672
  },
  "Prc. Beam Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Beam Rifle",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "61",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 673
  },
  "Adv. Beam Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Beam Rifle",
    "Type": "Energy Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "61",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 674
  },
  "Hvy. Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Laser",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "85",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "18",
    "Shot Heat": "69",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 675
  },
  "Gatling Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gatling Laser",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "85",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "20",
    "Shot Heat": "80",
    "Delay": "20",
    "Projectile Count": "3",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 676
  },
  "Cld. Pulse Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Pulse Rifle",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "20",
    "Shot Heat": "20",
    "Targeting": "10",
    "Overload Stability": "94%",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 677
  },
  "Hpw. Field Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hpw. Field Laser",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "60",
    "Description": "1",
    "Range": "14",
    "Shot Energy": "20",
    "Shot Heat": "70",
    "Projectile Count": "23",
    "Damage Min": "26",
    "Damage Max": "Thermal",
    "Damage Type": "10% Burn",
    "Penetration": "Medium (37)",
    "Fabrication Number": "134/67/44",
    "Index": 678
  },
  "Imp. Spread Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Spread Laser",
    "Type": "Energy Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "10",
    "Shot Energy": "16",
    "Shot Heat": "75",
    "Targeting": "-10",
    "Projectile Count": "6",
    "Damage Min": "5",
    "Damage Max": "7",
    "Damage Type": "Thermal",
    "Heat Transfer": "Minimal (5)",
    "Salvage": "-1",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 679
  },
  "Mak. Laser": {
    "Slot": "Weapon",
    "Name": "Mak. Laser",
    "Type": "Energy Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "40",
    "Range": "12",
    "Shot Energy": "16",
    "Shot Heat": "50",
    "Overload Stability": "70%",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "15% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 680
  },
  "Plasma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Rifle",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "20",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "23",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 681
  },
  "Thermic Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Thermic Laser",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "18",
    "Shot Heat": "85",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "20% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 682
  },
  "Beamcaster": {
    "Slot": "Weapon",
    "Name": "Beamcaster",
    "Type": "Energy Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "20",
    "Shot Energy": "20",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 683
  },
  "Force Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Force Rifle",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "20",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "10% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "5",
    "Fabrication Number": "2",
    "Fabrication Time": "152/76/50",
    "Index": 684
  },
  "Imp. Heavy Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Laser",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "17",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 685
  },
  "Storm Laser": {
    "Slot": "Weapon",
    "Name": "Storm Laser",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "4",
    "Mass": "20",
    "Integrity": "480",
    "Coverage": "240",
    "Range": "14",
    "Shot Energy": "100",
    "Shot Heat": "250",
    "Targeting": "-20",
    "Delay": "200",
    "Projectile Count": "12",
    "Damage Min": "16",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 686
  },
  "Zio. Laser-S": {
    "Slot": "Weapon",
    "Name": "Zio. Laser-S",
    "Type": "Energy Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "15",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "25",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 687
  },
  "Wave Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Wave Gun",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "95",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "23",
    "Shot Heat": "81",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 688
  },
  "Variable Charge Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Variable Charge Gun",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "95",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "23",
    "Shot Heat": "75",
    "Overload Stability": "95%",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 689
  },
  "Hvy. Beamcaster": {
    "Slot": "Weapon",
    "Name": "Hvy. Beamcaster",
    "Type": "Energy Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "95",
    "Coverage": "60",
    "Range": "20",
    "Shot Energy": "23",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "24",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 690
  },
  "Cld. Plasma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Plasma Rifle",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "23",
    "Shot Heat": "24",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 691
  },
  "Enh. Force Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Force Rifle",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "23",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "25% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "5",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 692
  },
  "Hvy. Gatling Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Gatling Laser",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "130",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "100",
    "Delay": "20",
    "Projectile Count": "3",
    "Damage Min": "14",
    "Damage Max": "16",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 693
  },
  "Zio. Phaser-S": {
    "Slot": "Weapon",
    "Name": "Zio. Phaser-S",
    "Type": "Energy Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "20",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "30",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "33",
    "Damage Type": "Phasic",
    "Critical": "7% Intensify",
    "Index": 694
  },
  "Phase Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Phase Gun",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 695
  },
  "Dispersion Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Dispersion Rifle",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "15% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 696
  },
  "Backup Laser VII": {
    "Slot": "Weapon",
    "Name": "Backup Laser VII",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "30",
    "Range": "14",
    "Shot Energy": "18",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 697
  },
  "Plasma Storm": {
    "Slot": "Weapon",
    "Name": "Plasma Storm",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "5",
    "Mass": "25",
    "Integrity": "600",
    "Coverage": "300",
    "Description": "Thermal explosion at targets inflict 23-27 damage with a radius of 2 (falloff: 2). Low heat transfer.",
    "Range": "16",
    "Shot Energy": "120",
    "Shot Heat": "300",
    "Delay": "100",
    "Arc": "30",
    "Projectile Count": "10",
    "Damage Min": "2",
    "Damage Max": "6",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Explosion Radius": "2",
    "Explosion Damage Min": "23",
    "Explosion Damage Max": "27",
    "Falloff": "2",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Low (25)",
    "Index": 698
  },
  "Adv. Plasma Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Plasma Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "120",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "29",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 699
  },
  "Hvy. Wave Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Wave Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "140",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "88",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 700
  },
  "Adv. Variable Charge Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Variable Charge Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "140",
    "Coverage": "60",
    "Range": "12",
    "Shot Energy": "25",
    "Shot Heat": "80",
    "Overload Stability": "95%",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "40",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 701
  },
  "Cld. Phase Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Phase Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "140",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "25",
    "Shot Heat": "26",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 702
  },
  "Lrn. Gatling Laser": {
    "Slot": "Weapon",
    "Name": "Lrn. Gatling Laser",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "60",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "110",
    "Delay": "40",
    "Projectile Count": "3",
    "Damage Min": "15",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 703
  },
  "Warp Gun": {
    "Slot": "Weapon",
    "Name": "Warp Gun",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "90",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "25",
    "Shot Heat": "90",
    "Waypoints": "1",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "10% Destroy",
    "Heat Transfer": "Medium (37)",
    "Index": 704
  },
  "Vortex Rifle": {
    "Slot": "Weapon",
    "Name": "Vortex Rifle",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "70",
    "Coverage": "60",
    "Special Trait": "Unstable (35)",
    "Range": "22",
    "Shot Energy": "10",
    "Shot Heat": "40",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "60",
    "Damage Type": "Entropic",
    "Critical": "5% Detonate",
    "Salvage": "-10",
    "Index": 705
  },
  "Zio. Laser-M": {
    "Slot": "Weapon",
    "Name": "Zio. Laser-M",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "17",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "30",
    "Shot Heat": "73",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "35",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 706
  },
  "AWS/Thermal": {
    "Slot": "Weapon",
    "Name": "AWS/Thermal",
    "Type": "Energy Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "8",
    "Integrity": "300",
    "Coverage": "120",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "14",
    "Targeting": "30",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "32",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 707
  },
  "PD Laser": {
    "Slot": "Weapon",
    "Name": "PD Laser",
    "Type": "Energy Gun",
    "Rating": "7",
    "Size": "3",
    "Mass": "10",
    "Integrity": "150",
    "Coverage": "180",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Range": "10",
    "Shot Energy": "70",
    "Shot Heat": "100",
    "Targeting": "-20",
    "Projectile Count": "3",
    "Damage Min": "25",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 708
  },
  "Quantum Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Quantum Rifle",
    "Type": "Energy Gun",
    "Rating": "8",
    "Size": "1",
    "Mass": "6",
    "Integrity": "105",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "94",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 709
  },
  "Prc. Phase Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Phase Gun",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "94",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 710
  },
  "Hvy. Dispersion Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Dispersion Rifle",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "150",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "28",
    "Shot Heat": "94",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "30",
    "Damage Type": "Thermal",
    "Critical": "25% Destroy",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 711
  },
  "Vortex Shotgun": {
    "Slot": "Weapon",
    "Name": "Vortex Shotgun",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "60",
    "Special Trait": "Unstable (50)",
    "Range": "18",
    "Shot Energy": "15",
    "Shot Heat": "60",
    "Targeting": "-10",
    "Projectile Count": "3",
    "Damage Min": "25",
    "Damage Max": "30",
    "Damage Type": "Entropic",
    "Critical": "5% Detonate",
    "Salvage": "-5",
    "Index": 712
  },
  "Vortex Rail": {
    "Slot": "Weapon",
    "Name": "Vortex Rail",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "80",
    "Coverage": "60",
    "Special Trait": "Unstable (40)",
    "Range": "24",
    "Shot Energy": "12",
    "Shot Heat": "45",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "50",
    "Damage Type": "Entropic",
    "Critical": "20% Detonate",
    "Penetration": "80 / 65 / 50 / 35",
    "Salvage": "-10",
    "Index": 713
  },
  "Zio. Phaser-M": {
    "Slot": "Weapon",
    "Name": "Zio. Phaser-M",
    "Type": "Energy Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "22",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "35",
    "Shot Heat": "73",
    "Projectile Count": "1",
    "Damage Min": "38",
    "Damage Max": "38",
    "Damage Type": "Phasic",
    "Critical": "7% Intensify",
    "Index": 714
  },
  "Enh. Quantum Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Quantum Rifle",
    "Type": "Energy Gun",
    "Rating": "9",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "60",
    "Range": "14",
    "Shot Energy": "24",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "32",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "139/69/46",
    "Index": 715
  },
  "Zio. Laser-H": {
    "Slot": "Weapon",
    "Name": "Zio. Laser-H",
    "Type": "Energy Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "20",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "35",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "38",
    "Damage Max": "41",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 716
  },
  "Hvy. Quantum Rifle": {
    "Slot": "Weapon",
    "Name": "Hvy. Quantum Rifle",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "180",
    "Coverage": "60",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "36",
    "Damage Max": "42",
    "Damage Type": "Thermal",
    "Heat Transfer": "Medium (37)",
    "Index": 717
  },
  "Zio. Phaser-H": {
    "Slot": "Weapon",
    "Name": "Zio. Phaser-H",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "25",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "40",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "44",
    "Damage Max": "44",
    "Damage Type": "Phasic",
    "Critical": "7% Intensify",
    "Index": 718
  },
  "Gatling Beam": {
    "Slot": "Weapon",
    "Name": "Gatling Beam",
    "Type": "Energy Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "170",
    "Coverage": "60",
    "Range": "16",
    "Shot Energy": "42",
    "Shot Heat": "120",
    "Projectile Count": "3",
    "Damage Min": "20",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Critical": "5% Burn",
    "Heat Transfer": "Medium (37)",
    "Index": 719
  },
  "Sigix Sheargun": {
    "Slot": "Weapon",
    "Name": "Sigix Sheargun",
    "Type": "Energy Gun",
    "Rating": "9**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "7",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "32",
    "Damage Type": "Slashing",
    "Critical": "4% Sever",
    "Penetration": "100",
    "Salvage": "2",
    "Index": 720
  },
  "Modified Sigix Sheargun": {
    "Slot": "Weapon",
    "Name": "Modified Sigix Sheargun",
    "Type": "Energy Gun",
    "Rating": "9**",
    "Category": "Alien",
    "Size": "1",
    "Mass": "7",
    "Integrity": "150",
    "Coverage": "800",
    "Range": "20",
    "Shot Energy": "30",
    "Shot Heat": "80",
    "Delay": "-30",
    "Damage Min": "29",
    "Damage Max": "40",
    "Damage Type": "Slashing",
    "Critical": "4% Sever",
    "Penetration": "50",
    "Salvage": "2",
    "Index": 721
  },
  "Lgt. EM Pulse Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. EM Pulse Cannon",
    "Type": "Energy Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "40",
    "Shot Heat": "56",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "20",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "4",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 722
  },
  "EM Pulse Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EM Pulse Cannon",
    "Type": "Energy Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "48",
    "Shot Heat": "63",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "23",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Narrow (50)",
    "Disruption": "4",
    "Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 723
  },
  "Imp. EM Pulse Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. EM Pulse Cannon",
    "Type": "Energy Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "56",
    "Shot Heat": "69",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "26",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 724
  },
  "Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "64",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "29",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 725
  },
  "Lrn. Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lrn. Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "72",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "31",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "4",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 726
  },
  "Disruptor Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Disruptor Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "72",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "16",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "30",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 727
  },
  "Hvy. Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "130",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "85",
    "Shot Heat": "81",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Electromagnetic",
    "Critical": "4% Corrupt",
    "Spectrum": "Intermediate (30)",
    "Disruption": "6",
    "Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 728
  },
  "HERF Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "HERF Cannon",
    "Type": "Energy Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "11",
    "Integrity": "100",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "80",
    "Shot Heat": "88",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 729
  },
  "Hvy. Disruptor Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Disruptor Cannon",
    "Type": "Energy Cannon",
    "Rating": "7",
    "Size": "2",
    "Mass": "16",
    "Integrity": "140",
    "Coverage": "200",
    "Range": "16",
    "Shot Energy": "100",
    "Shot Heat": "110",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "31",
    "Damage Type": "Electromagnetic",
    "Critical": "4% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "60",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 730
  },
  "Cld. Proton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Proton Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "130",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "80",
    "Shot Heat": "40",
    "Overload Stability": "88%",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Electromagnetic",
    "Critical": "4% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 731
  },
  "Proton Burst Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Proton Burst Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "90",
    "Shot Heat": "100",
    "Targeting": "-10",
    "Delay": "25",
    "Projectile Count": "3",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Narrow (50)",
    "Disruption": "3",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 732
  },
  "Com. HERF Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. HERF Cannon",
    "Type": "Energy Cannon",
    "Rating": "8",
    "Size": "1",
    "Mass": "7",
    "Integrity": "70",
    "Coverage": "30",
    "Range": "16",
    "Shot Energy": "88",
    "Shot Heat": "94",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "37",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 733
  },
  "Latent Energy Streamer": {
    "Slot": "Weapon",
    "Name": "Latent Energy Streamer",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "90",
    "Effect": "Redirects latent energy from up to a range of 12, using no more than necessary to achieve average detonation power limit (100).",
    "Range": "18",
    "Shot Energy": "160",
    "Shot Heat": "60",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "4",
    "Damage Max": "8",
    "Damage Type": "Electromagnetic",
    "Spectrum": "Wide (10)",
    "Explosion Radius": "4",
    "Explosion Damage Min": "90",
    "Explosion Damage Max": "110",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "1",
    "Explosion Salvage": "4",
    "Index": 734
  },
  "NK-0LA's Tesla Doomcannon": {
    "Slot": "Weapon",
    "Name": "NK-0LA's Tesla Doomcannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "16",
    "Integrity": "300",
    "Coverage": "200",
    "Range": "18",
    "Shot Energy": "160",
    "Shot Heat": "110",
    "Targeting": "-10",
    "Projectile Count": "4",
    "Damage Min": "20",
    "Damage Max": "28",
    "Damage Type": "Electromagnetic",
    "Critical": "2% Corrupt",
    "Spectrum": "Fine (100)",
    "Disruption": "4",
    "Salvage": "4",
    "Index": 735
  },
  "EMDS": {
    "Slot": "Weapon",
    "Name": "EMDS",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "140",
    "Coverage": "300",
    "Range": "22",
    "Shot Energy": "100",
    "Shot Matter": "10",
    "Shot Heat": "70",
    "Recoil": "6",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "45",
    "Damage Type": "Electromagnetic",
    "Critical": "20% Corrupt",
    "Penetration": "90",
    "Spectrum": "Wide (10)",
    "Disruption": "4",
    "Index": 736
  },
  "Hpw. Disruptor Cannon": {
    "Slot": "Weapon",
    "Name": "Hpw. Disruptor Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "220",
    "Coverage": "200",
    "Range": "16",
    "Shot Energy": "120",
    "Shot Heat": "110",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "37",
    "Damage Type": "Electromagnetic",
    "Critical": "6% Corrupt",
    "Spectrum": "Fine (100)",
    "Disruption": "90",
    "Salvage": "4",
    "Index": 737
  },
  "Beam Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Beam Cannon",
    "Type": "Energy Cannon",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "100",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "12",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "17",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 738
  },
  "Particle Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Particle Cannon",
    "Type": "Energy Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "110",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "15",
    "Shot Heat": "68",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "21",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 739
  },
  "Adv. Beam Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Beam Cannon",
    "Type": "Energy Cannon",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "130",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "13",
    "Shot Heat": "68",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "21",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 740
  },
  "Hvy. Particle Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Particle Cannon",
    "Type": "Energy Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "130",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "18",
    "Shot Heat": "75",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 741
  },
  "Ion Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ion Cannon",
    "Type": "Energy Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "115",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "18",
    "Shot Heat": "60",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "24",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 742
  },
  "Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "125",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "21",
    "Shot Heat": "80",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "27",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 743
  },
  "Hvy. Ion Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Ion Cannon",
    "Type": "Energy Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "8",
    "Integrity": "135",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "21",
    "Shot Heat": "65",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "28",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 744
  },
  "Cld. Particle Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Particle Cannon",
    "Type": "Energy Cannon",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "21",
    "Shot Heat": "30",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "28",
    "Damage Type": "Thermal",
    "Critical": "1% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 745
  },
  "Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "130",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "85",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "32",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 746
  },
  "Hvy. Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "10",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "33",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 747
  },
  "Cld. Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "24",
    "Shot Heat": "35",
    "Overload Stability": "93%",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "34",
    "Damage Type": "Thermal",
    "Critical": "3% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 748
  },
  "Com. Ion Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Ion Cannon",
    "Type": "Energy Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "160",
    "Coverage": "30",
    "Range": "18",
    "Shot Energy": "24",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "29",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 749
  },
  "Ion Burst Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ion Burst Cannon",
    "Type": "Energy Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "170",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Recoil": "10",
    "Targeting": "-15",
    "Delay": "50",
    "Projectile Count": "3",
    "Damage Min": "20",
    "Damage Max": "22",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 750
  },
  "Adv. Plasma Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "140",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "27",
    "Shot Heat": "98",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "35",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "High (50)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 751
  },
  "Hvy. Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "10",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "27",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "36",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 752
  },
  "Neutron Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Neutron Cannon",
    "Type": "Energy Cannon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "14",
    "Shot Energy": "30",
    "Shot Heat": "90",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "35",
    "Damage Max": "40",
    "Damage Type": "Thermal",
    "Spectrum": "Narrow (50)",
    "Disruption": "8",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "169/84/56",
    "Index": 753
  },
  "Matter Neutralizer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Matter Neutralizer",
    "Type": "Energy Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "10",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "30",
    "Shot Heat": "105",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "38",
    "Damage Type": "Thermal",
    "Critical": "6% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 754
  },
  "Hvy. Neutron Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Neutron Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "190",
    "Coverage": "80",
    "Range": "14",
    "Shot Energy": "33",
    "Shot Heat": "110",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "43",
    "Damage Type": "Thermal",
    "Spectrum": "Narrow (50)",
    "Disruption": "12",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "187/93/62",
    "Index": 755
  },
  "Lrn. Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lrn. Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "185",
    "Coverage": "80",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "105",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "38",
    "Damage Type": "Thermal",
    "Critical": "3% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 756
  },
  "Cld. Phase Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Cld. Phase Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "180",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "30",
    "Shot Heat": "40",
    "Overload Stability": "92%",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "38",
    "Damage Type": "Thermal",
    "Critical": "2% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 757
  },
  "Vortex Cannon": {
    "Slot": "Weapon",
    "Name": "Vortex Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "14",
    "Integrity": "130",
    "Coverage": "80",
    "Special Trait": "Unstable (26)",
    "Range": "22",
    "Shot Energy": "15",
    "Shot Heat": "50",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "80",
    "Damage Type": "Entropic",
    "Critical": "50% Sunder",
    "Salvage": "-15",
    "Index": 758
  },
  "Gui. Plasma Cannon": {
    "Slot": "Weapon",
    "Name": "Gui. Plasma Cannon",
    "Type": "Energy Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "130",
    "Coverage": "80",
    "Description": "Eventually breaks down. Recalibrators restore functionality, but breakdowns become increasingly frequent.",
    "Range": "18",
    "Shot Energy": "30",
    "Shot Heat": "120",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "40",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Index": 759
  },
  "Nova Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Nova Cannon",
    "Type": "Energy Cannon",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "155",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "33",
    "Shot Heat": "113",
    "Projectile Count": "1",
    "Damage Min": "37",
    "Damage Max": "42",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 760
  },
  "Imp. Matter Neutralizer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Matter Neutralizer",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "170",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "33",
    "Shot Heat": "113",
    "Projectile Count": "1",
    "Damage Min": "37",
    "Damage Max": "42",
    "Damage Type": "Thermal",
    "Critical": "8% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 761
  },
  "Vortex Driver": {
    "Slot": "Weapon",
    "Name": "Vortex Driver",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "16",
    "Integrity": "150",
    "Coverage": "80",
    "Special Trait": "Unstable (30)",
    "Range": "24",
    "Shot Energy": "40",
    "Shot Heat": "100",
    "Projectile Count": "1",
    "Damage Min": "70",
    "Damage Max": "100",
    "Damage Type": "Entropic",
    "Critical": "75% Sunder",
    "Penetration": "90",
    "Salvage": "-20",
    "Index": 762
  },
  "Zio. Alpha Cannon": {
    "Slot": "Weapon",
    "Name": "Zio. Alpha Cannon",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "28",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "80",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "53",
    "Damage Max": "53",
    "Damage Type": "Phasic",
    "Critical": "5% Phase",
    "Index": 763
  },
  "Asb. Focal Cannon": {
    "Slot": "Weapon",
    "Name": "Asb. Focal Cannon",
    "Type": "Energy Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "24",
    "Shot Energy": "120",
    "Shot Heat": "25",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "60",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Index": 764
  },
  "Enh. Nova Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Nova Cannon",
    "Type": "Energy Cannon",
    "Rating": "9",
    "Size": "1",
    "Mass": "13",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "120",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "45",
    "Damage Type": "Thermal",
    "Critical": "4% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Fabrication Number": "1",
    "Fabrication Time": "139/69/46",
    "Index": 765
  },
  "Firepult": {
    "Slot": "Weapon",
    "Name": "Firepult",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "325",
    "Coverage": "160",
    "Description": "Thermal explosion at targets inflict 25-35 damage with a radius of 3 (falloff: 5). Massive heat transfer.",
    "Range": "18",
    "Shot Energy": "65",
    "Shot Heat": "250",
    "Arc": "20",
    "Projectile Count": "4",
    "Damage Min": "10",
    "Damage Max": "25",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Explosion Radius": "3",
    "Explosion Damage Min": "15",
    "Explosion Damage Max": "25",
    "Falloff": "5",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Index": 766
  },
  "YOLO Cannon": {
    "Slot": "Weapon",
    "Name": "YOLO Cannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "18",
    "Integrity": "350",
    "Coverage": "160",
    "Description": "Thermal explosion inflicts 65-85 damage with a radius of 3 (falloff: 10). Massive heat transfer.",
    "Range": "18",
    "Shot Energy": "70",
    "Shot Heat": "100",
    "Recoil": "50",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Min": "75",
    "Damage Max": "150",
    "Damage Type": "Thermal",
    "Critical": "50% Meltdown",
    "Heat Transfer": "Massive (80)",
    "Salvage": "-10",
    "Explosion Radius": "3",
    "Explosion Damage Min": "65",
    "Explosion Damage Max": "85",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-8",
    "Index": 767
  },
  "Potential Cannon": {
    "Slot": "Weapon",
    "Name": "Potential Cannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "25",
    "Integrity": "280",
    "Coverage": "160",
    "Description": "Thermal explosion inflicts 75-125 damage with a radius of 3 (falloff: 25). Massive heat transfer.",
    "Range": "18",
    "Shot Energy": "300",
    "Shot Heat": "200",
    "Recoil": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "100",
    "Damage Max": "200",
    "Damage Type": "Thermal",
    "Critical": "20% Meltdown",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Explosion Radius": "3",
    "Explosion Damage Min": "75",
    "Explosion Damage Max": "125",
    "Falloff": "25",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-10",
    "Index": 768
  },
  "Warp Cannon": {
    "Slot": "Weapon",
    "Name": "Warp Cannon",
    "Type": "Energy Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "140",
    "Coverage": "80",
    "Description": "Eventually breaks down.",
    "Range": "16",
    "Shot Energy": "40",
    "Shot Heat": "100",
    "Waypoints": "1",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "50",
    "Damage Type": "Thermal",
    "Critical": "15% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Index": 769
  },
  "Cld. Nova Cannon": {
    "Slot": "Weapon",
    "Name": "Cld. Nova Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "240",
    "Coverage": "80",
    "Range": "16",
    "Shot Energy": "36",
    "Shot Heat": "50",
    "Overload Stability": "90%",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "45",
    "Damage Type": "Thermal",
    "Critical": "3% Meltdown",
    "Heat Transfer": "Medium (37)",
    "Index": 770
  },
  "Null Cannon": {
    "Slot": "Weapon",
    "Name": "Null Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "160",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "60",
    "Shot Heat": "130",
    "Recoil": "10",
    "Projectile Count": "1",
    "Damage Min": "80",
    "Damage Max": "100",
    "Damage Type": "Thermal",
    "Critical": "10% Meltdown",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Index": 771
  },
  "Imp. Potential Cannon": {
    "Slot": "Weapon",
    "Name": "Imp. Potential Cannon",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "320",
    "Coverage": "160",
    "Description": "Thermal explosion inflicts 90-130 damage with a radius of 3 (falloff: 20). Massive heat transfer.",
    "Range": "20",
    "Shot Energy": "350",
    "Shot Heat": "200",
    "Recoil": "20",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "120",
    "Damage Max": "200",
    "Damage Type": "Thermal",
    "Critical": "10% Meltdown",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Explosion Radius": "3",
    "Explosion Damage Min": "90",
    "Explosion Damage Max": "130",
    "Falloff": "20",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-10",
    "Index": 772
  },
  "Disintegrator": {
    "Slot": "Weapon",
    "Name": "Disintegrator",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "250",
    "Coverage": "160",
    "Range": "5",
    "Shot Energy": "300",
    "Shot Heat": "200",
    "Targeting": "10",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "5",
    "Damage Type": "Thermal",
    "Critical": "25% Meltdown",
    "Penetration": "100 / 100 / 100 / 100",
    "Salvage": "20",
    "Index": 773
  },
  "Core Cannon": {
    "Slot": "Weapon",
    "Name": "Core Cannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "350",
    "Coverage": "160",
    "Effect": "Core loses 10-30 integrity with each discharge.",
    "Range": "22",
    "Shot Energy": "300",
    "Shot Heat": "300",
    "Recoil": "20",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "200",
    "Damage Max": "200",
    "Damage Type": "Thermal",
    "Critical": "100% Destroy",
    "Penetration": "Unlimited",
    "Salvage": "-20",
    "Index": 774
  },
  "Sigix Shearcannon": {
    "Slot": "Weapon",
    "Name": "Sigix Shearcannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "24",
    "Integrity": "350",
    "Coverage": "200",
    "Range": "18",
    "Shot Energy": "90",
    "Shot Heat": "180",
    "Arc": "10",
    "Projectile Count": "8",
    "Damage Min": "15",
    "Damage Max": "25",
    "Damage Type": "Slashing",
    "Critical": "4% Sever",
    "Penetration": "100",
    "Index": 775
  },
  "Drained L-Cannon": {
    "Slot": "Weapon",
    "Name": "Drained L-Cannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "4",
    "Mass": "55",
    "Integrity": "1400",
    "Coverage": "480",
    "Description": "Incompatible with Quantum Capacitor, Weapon Cyclers, Energy Filters, and Particle Chargers/Accelerators.",
    "Range": "100000",
    "Shot Energy": "10000",
    "Shot Heat": "900",
    "Recoil": "50",
    "Targeting": "-20",
    "Delay": "1800",
    "Projectile Count": "1",
    "Damage Min": "5000",
    "Damage Max": "5000",
    "Damage Type": "Thermal",
    "Critical": "100% Phase",
    "Penetration": "Unlimited",
    "Salvage": "-100",
    "Index": 776
  },
  "L-Cannon": {
    "Slot": "Weapon",
    "Name": "L-Cannon",
    "Type": "Energy Cannon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "4",
    "Mass": "70",
    "Integrity": "1400",
    "Coverage": "480",
    "Description": "Incompatible with Quantum Capacitor, Weapon Cyclers, and Particle Chargers/Accelerators.",
    "Range": "100000",
    "Shot Heat": "900",
    "Recoil": "50",
    "Targeting": "-20",
    "Delay": "800",
    "Projectile Count": "1",
    "Damage Min": "5000",
    "Damage Max": "5000",
    "Damage Type": "Thermal",
    "Critical": "100% Phase",
    "Penetration": "Unlimited",
    "Salvage": "-100",
    "Index": 777
  },
  "Zio. Alpha Cannon Mk. II": {
    "Slot": "Weapon",
    "Name": "Zio. Alpha Cannon Mk. II",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "30",
    "Coverage": "80",
    "Range": "20",
    "Shot Energy": "90",
    "Shot Heat": "90",
    "Projectile Count": "1",
    "Damage Min": "65",
    "Damage Max": "65",
    "Damage Type": "Phasic",
    "Critical": "5% Phase",
    "Index": 778
  },
  "BFG-9k Vortex Edition": {
    "Slot": "Weapon",
    "Name": "BFG-9k Vortex Edition",
    "Type": "Energy Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "6",
    "Mass": "50",
    "Integrity": "600",
    "Coverage": "480",
    "Special Trait": "Unstable (40)",
    "Range": "24",
    "Shot Energy": "200",
    "Shot Heat": "300",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "400",
    "Damage Max": "500",
    "Damage Type": "Entropic",
    "Critical": "90% Sunder",
    "Salvage": "-50",
    "Index": 779
  },
  "Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "20",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "15",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 780
  },
  "Lgt. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "80",
    "Coverage": "60",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "1",
    "Shot Heat": "20",
    "Recoil": "1",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "6",
    "Damage Max": "10",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 781
  },
  "Hvy. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "115",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "23",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 782
  },
  "Autogun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Autogun",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "115",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "23",
    "Recoil": "2",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 783
  },
  "Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shotgun",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "115",
    "Coverage": "100",
    "Range": "10",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "23",
    "Recoil": "6",
    "Targeting": "-5",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "12",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 784
  },
  "Battle Rifle": {
    "Slot": "Weapon",
    "Name": "Battle Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "25",
    "Recoil": "3",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 785
  },
  "Imp. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "23",
    "Recoil": "2",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "99/49/33",
    "Index": 786
  },
  "Minigun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Minigun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "2",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 787
  },
  "Hpw. Shotgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hpw. Shotgun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "12",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "8",
    "Targeting": "-10",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 788
  },
  "Barrage Gun": {
    "Slot": "Weapon",
    "Name": "Barrage Gun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "5",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 789
  },
  "Enh. Autogun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Autogun",
    "Type": "Ballistic Gun",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "160",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "2",
    "Delay": "-40",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 790
  },
  "Gauss Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "3% Destroy",
    "Penetration": "65",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 791
  },
  "Flak Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Flak Gun",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "16",
    "Shot Energy": "2",
    "Shot Matter": "5",
    "Shot Heat": "28",
    "Recoil": "4",
    "Targeting": "-15",
    "Projectile Count": "6",
    "Damage Min": "5",
    "Damage Max": "6",
    "Damage Type": "Kinetic",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 792
  },
  "Prc. Assault Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Assault Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "160",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "2",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 793
  },
  "Hvy. Battle Rifle": {
    "Slot": "Weapon",
    "Name": "Hvy. Battle Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "3",
    "Shot Heat": "33",
    "Recoil": "5",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Salvage": "-1",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 794
  },
  "Mak. Shrapnel Gun": {
    "Slot": "Weapon",
    "Name": "Mak. Shrapnel Gun",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "70",
    "Coverage": "70",
    "Range": "14",
    "Shot Energy": "2",
    "Shot Matter": "5",
    "Shot Heat": "24",
    "Recoil": "6",
    "Targeting": "-10",
    "Projectile Count": "3",
    "Damage Min": "6",
    "Damage Max": "15",
    "Damage Type": "Kinetic",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 795
  },
  "Coil Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "60 / 30",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 796
  },
  "Hyp. Gauss Rifle": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "6",
    "Integrity": "140",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "33",
    "Recoil": "1",
    "Projectile Count": "1",
    "Damage Min": "6",
    "Damage Max": "7",
    "Damage Type": "Kinetic",
    "Critical": "35% Destroy",
    "Penetration": "100 / 65 / 35",
    "Salvage": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 797
  },
  "Hvy. Machine Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Machine Gun",
    "Type": "Ballistic Gun",
    "Rating": "5",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "4",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 798
  },
  "Imp. Heavy Machine Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Heavy Machine Gun",
    "Type": "Ballistic Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "15",
    "Recoil": "2",
    "Delay": "-20",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-2",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 799
  },
  "Com. Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Com. Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "1",
    "Integrity": "100",
    "Coverage": "25",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "3% Destroy",
    "Penetration": "65",
    "Index": 800
  },
  "XL Autogun Subcomponent": {
    "Slot": "Weapon",
    "Name": "XL Autogun Subcomponent",
    "Type": "Ballistic Gun",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "150",
    "Coverage": "80",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "3",
    "Shot Heat": "20",
    "Recoil": "3",
    "Delay": "-50",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "22",
    "Damage Type": "Kinetic",
    "Index": 801
  },
  "KE Penetrator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "KE Penetrator",
    "Type": "Ballistic Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "5",
    "Integrity": "165",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "33",
    "Recoil": "3",
    "Projectile Count": "1",
    "Damage Min": "19",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "80",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 802
  },
  "Hyp. Coil Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "6",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "35",
    "Recoil": "1",
    "Projectile Count": "1",
    "Damage Min": "7",
    "Damage Max": "8",
    "Damage Type": "Kinetic",
    "Critical": "35% Destroy",
    "Penetration": "100 / 75 / 50",
    "Salvage": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 803
  },
  "Imp. KE Penetrator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. KE Penetrator",
    "Type": "Ballistic Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "33",
    "Recoil": "3",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "10% Destroy",
    "Penetration": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 804
  },
  "Enh. Coil Gun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "30",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "10% Destroy",
    "Penetration": "60 / 30",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 805
  },
  "Com. Coil Gun": {
    "Slot": "Weapon",
    "Name": "Com. Coil Gun",
    "Type": "Ballistic Gun",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "25",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "35",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "60 / 30",
    "Index": 806
  },
  "Railgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Railgun",
    "Type": "Ballistic Gun",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "175",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "35",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 807
  },
  "Adv. KE Penetrator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. KE Penetrator",
    "Type": "Ballistic Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "200",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "3",
    "Shot Matter": "4",
    "Shot Heat": "35",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "20% Destroy",
    "Penetration": "80",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 808
  },
  "Linked Autogun": {
    "Slot": "Weapon",
    "Name": "Linked Autogun",
    "Type": "Ballistic Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "190",
    "Coverage": "200",
    "Range": "14",
    "Shot Energy": "3",
    "Shot Matter": "10",
    "Shot Heat": "30",
    "Recoil": "4",
    "Targeting": "20",
    "Delay": "-100",
    "Projectile Count": "2",
    "Damage Min": "18",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Index": 809
  },
  "AWS/Gauss": {
    "Slot": "Weapon",
    "Name": "AWS/Gauss",
    "Type": "Ballistic Gun",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "400",
    "Coverage": "200",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "20",
    "Targeting": "30",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Index": 810
  },
  "Hyp. Railgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Railgun",
    "Type": "Ballistic Gun",
    "Rating": "8",
    "Size": "1",
    "Mass": "7",
    "Integrity": "175",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "40",
    "Recoil": "1",
    "Projectile Count": "1",
    "Damage Min": "8",
    "Damage Max": "9",
    "Damage Type": "Kinetic",
    "Critical": "40% Destroy",
    "Penetration": "80 / 65 / 50 / 50",
    "Salvage": "4",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 811
  },
  "Helical Railgun": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Helical Railgun",
    "Type": "Ballistic Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "220",
    "Coverage": "100",
    "Range": "24",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "38",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "33",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Penetration": "50 / 50",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 812
  },
  "Com. Railgun": {
    "Slot": "Weapon",
    "Name": "Com. Railgun",
    "Type": "Ballistic Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "25",
    "Range": "18",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "40",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "30",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Index": 813
  },
  "XL Autogun Array": {
    "Slot": "Weapon",
    "Name": "XL Autogun Array",
    "Type": "Ballistic Gun",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "4",
    "Mass": "15",
    "Integrity": "840",
    "Coverage": "400",
    "Description": "Despite its high integrity, does not seem like it will hold up well against lots of wear and tear.",
    "Range": "20",
    "Shot Energy": "10",
    "Shot Matter": "15",
    "Shot Heat": "60",
    "Recoil": "10",
    "Delay": "-100",
    "Projectile Count": "4",
    "Damage Min": "20",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Index": 814
  },
  "12-ASH's Boomstick": {
    "Slot": "Weapon",
    "Name": "12-ASH's Boomstick",
    "Type": "Ballistic Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "220",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "6",
    "Shot Heat": "20",
    "Recoil": "10",
    "Delay": "-40",
    "Projectile Count": "2",
    "Damage Min": "22",
    "Damage Max": "36",
    "Damage Type": "Kinetic",
    "Critical": "5% Destroy",
    "Salvage": "-3",
    "Index": 815
  },
  "8R-AWN's Boregun": {
    "Slot": "Weapon",
    "Name": "8R-AWN's Boregun",
    "Type": "Ballistic Gun",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "180",
    "Coverage": "100",
    "Range": "20",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "30",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "50% Destroy",
    "Penetration": "100 / 100",
    "Salvage": "4",
    "Index": 816
  },
  "Multirail": {
    "Slot": "Weapon",
    "Name": "Multirail",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "200",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "45",
    "Recoil": "8",
    "Projectile Count": "3",
    "Damage Min": "12",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Penetration": "50 / 50",
    "Index": 817
  },
  "Hyp. Multirail": {
    "Slot": "Weapon",
    "Name": "Hyp. Multirail",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "190",
    "Coverage": "120",
    "Range": "20",
    "Shot Energy": "5",
    "Shot Matter": "6",
    "Shot Heat": "50",
    "Recoil": "10",
    "Projectile Count": "3",
    "Damage Min": "5",
    "Damage Max": "7",
    "Damage Type": "Kinetic",
    "Critical": "50% Destroy",
    "Penetration": "80 / 65 / 50 / 50",
    "Index": 818
  },
  "5H-AD0's Sniper Rifle": {
    "Slot": "Weapon",
    "Name": "5H-AD0's Sniper Rifle",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "250",
    "Coverage": "100",
    "Range": "24",
    "Shot Matter": "3",
    "Recoil": "20",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "70",
    "Damage Type": "Kinetic",
    "Critical": "6% Destroy",
    "Penetration": "100 / 90 / 60",
    "Index": 819
  },
  "A3's Sniper Rifle": {
    "Slot": "Weapon",
    "Name": "A3's Sniper Rifle",
    "Type": "Ballistic Gun",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "300",
    "Coverage": "100",
    "Range": "24",
    "Shot Energy": "10",
    "Shot Matter": "5",
    "Shot Heat": "30",
    "Recoil": "30",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "70",
    "Damage Type": "Kinetic",
    "Critical": "10% Destroy",
    "Penetration": "100 / 75 / 50 / 25",
    "Index": 820
  },
  "Lgt. Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "35",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-4",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 821
  },
  "Imp. Light Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Light Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "135",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "39",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "24",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 822
  },
  "Battle Cannon": {
    "Slot": "Weapon",
    "Name": "Battle Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "39",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 823
  },
  "Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "5",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "3",
    "Shot Matter": "5",
    "Shot Heat": "44",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "28",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-5",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 824
  },
  "Hvy. Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "3",
    "Size": "2",
    "Mass": "12",
    "Integrity": "250",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "8",
    "Shot Heat": "60",
    "Recoil": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "64",
    "Damage Type": "Kinetic",
    "Critical": "15% Blast",
    "Penetration": "20",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 825
  },
  "Flak Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Flak Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "3",
    "Shot Matter": "6",
    "Shot Heat": "44",
    "Recoil": "6",
    "Targeting": "-15",
    "Projectile Count": "6",
    "Damage Min": "6",
    "Damage Max": "7",
    "Damage Type": "Kinetic",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 826
  },
  "Adv. Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "6",
    "Integrity": "160",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "31",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 827
  },
  "Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "170",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "31",
    "Damage Type": "Kinetic",
    "Critical": "15% Blast",
    "Penetration": "20",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 828
  },
  "Slug Cannon": {
    "Slot": "Weapon",
    "Name": "Slug Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "165",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "6",
    "Targeting": "-20",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "45",
    "Damage Type": "Kinetic",
    "Critical": "20% Destroy",
    "Penetration": "10",
    "Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 829
  },
  "Mni. Assault Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mni. Assault Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "200",
    "Coverage": "30",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "48",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "31",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 830
  },
  "Magnetic Acceleration Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Magnetic Acceleration Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "53",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-6",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 831
  },
  "Hvy. Flak Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Flak Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "4",
    "Shot Matter": "7",
    "Shot Heat": "53",
    "Recoil": "6",
    "Targeting": "-15",
    "Projectile Count": "6",
    "Damage Min": "7",
    "Damage Max": "8",
    "Damage Type": "Kinetic",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 832
  },
  "Bore Cannon": {
    "Slot": "Weapon",
    "Name": "Bore Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5",
    "Size": "1",
    "Mass": "9",
    "Integrity": "165",
    "Coverage": "130",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "57",
    "Recoil": "6",
    "Targeting": "-20",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "60% Destroy",
    "Penetration": "60 / 40 / 20",
    "Salvage": "-4",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 833
  },
  "Antimatter Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Antimatter Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "240",
    "Coverage": "110",
    "Range": "24",
    "Shot Energy": "4",
    "Shot Matter": "6",
    "Shot Heat": "40",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 834
  },
  "Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "195",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "57",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "7% Blast",
    "Penetration": "25",
    "Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 835
  },
  "Hvy. Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "2",
    "Mass": "20",
    "Integrity": "270",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "8",
    "Shot Matter": "11",
    "Shot Heat": "75",
    "Recoil": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "50",
    "Damage Max": "85",
    "Damage Type": "Kinetic",
    "Critical": "15% Blast",
    "Penetration": "25",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 836
  },
  "Enh. Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "195",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "7",
    "Shot Heat": "57",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "39",
    "Damage Type": "Kinetic",
    "Critical": "20% Blast",
    "Penetration": "20",
    "Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 837
  },
  "Hyp. Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "6",
    "Size": "1",
    "Mass": "10",
    "Integrity": "175",
    "Coverage": "130",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "61",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "60% Destroy",
    "Penetration": "40 / 20",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 838
  },
  "Tri-rail Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tri-rail Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "200",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "8",
    "Shot Heat": "60",
    "Recoil": "6",
    "Projectile Count": "3",
    "Damage Min": "20",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "3% Blast",
    "Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 839
  },
  "Hardcell Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hardcell Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "10",
    "Integrity": "210",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "65",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "46",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-7",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 840
  },
  "Hvy. Gauss Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Gauss Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "210",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "61",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "20% Blast",
    "Penetration": "20",
    "Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 841
  },
  "Hyp. Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hyp. Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "7",
    "Size": "1",
    "Mass": "12",
    "Integrity": "195",
    "Coverage": "130",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "66",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Critical": "70% Destroy",
    "Penetration": "50 / 25",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 842
  },
  "Hvy. Autocannon": {
    "Slot": "Weapon",
    "Name": "Hvy. Autocannon",
    "Type": "Ballistic Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "35",
    "Integrity": "450",
    "Coverage": "300",
    "Range": "24",
    "Shot Energy": "8",
    "Shot Matter": "18",
    "Shot Heat": "90",
    "Recoil": "8",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "90",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-10",
    "Index": 843
  },
  "Lgt. Antimatter Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lgt. Antimatter Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "200",
    "Coverage": "70",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "7",
    "Shot Heat": "60",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "43",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 844
  },
  "Linear Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "225",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "66",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "46",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-8",
    "Fabrication Number": "2",
    "Fabrication Time": "128/64/42",
    "Index": 845
  },
  "Hvy. Linear Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "8",
    "Size": "2",
    "Mass": "27",
    "Integrity": "350",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "9",
    "Shot Matter": "12",
    "Shot Heat": "83",
    "Recoil": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "65",
    "Damage Max": "90",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Penetration": "10",
    "Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 846
  },
  "Com. Mass Driver": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Mass Driver",
    "Type": "Ballistic Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "220",
    "Coverage": "40",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "66",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "49",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Penetration": "25",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 847
  },
  "Hvy. Hardcell Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Hardcell Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "400",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "8",
    "Shot Matter": "10",
    "Shot Heat": "80",
    "Recoil": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "100",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 848
  },
  "Com. Linear Accelerator": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "240",
    "Coverage": "40",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "70",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "46",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 849
  },
  "Hyp. Linear Accelerator": {
    "Slot": "Weapon",
    "Name": "Hyp. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "17",
    "Integrity": "300",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "14",
    "Shot Matter": "10",
    "Shot Heat": "80",
    "Recoil": "6",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "35",
    "Damage Type": "Kinetic",
    "Critical": "60% Destroy",
    "Penetration": "80 / 40",
    "Salvage": "-4",
    "Index": 850
  },
  "Hcl. Linear Accelerator": {
    "Slot": "Weapon",
    "Name": "Hcl. Linear Accelerator",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "15",
    "Integrity": "300",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "12",
    "Shot Matter": "8",
    "Shot Heat": "10",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "35",
    "Damage Max": "50",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Salvage": "-8",
    "Index": 851
  },
  "Graviton Cannon": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Graviton Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "300",
    "Coverage": "110",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "8",
    "Shot Heat": "70",
    "Recoil": "4",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "60",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 852
  },
  "Blast Cannon": {
    "Slot": "Weapon",
    "Name": "Blast Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "40",
    "Integrity": "600",
    "Coverage": "300",
    "Description": "Kinetic explosion inflicts 15-19 damage with a radius of 1 (falloff: 2).",
    "Range": "20",
    "Shot Energy": "12",
    "Shot Matter": "30",
    "Shot Heat": "120",
    "Recoil": "12",
    "Projectile Count": "3",
    "Damage Min": "25",
    "Damage Max": "40",
    "Damage Type": "Kinetic",
    "Critical": "9% Blast",
    "Penetration": "50",
    "Salvage": "-12",
    "Explosion Radius": "1",
    "Explosion Damage Min": "15",
    "Explosion Damage Max": "19",
    "Falloff": "2",
    "Explosion Type": "Kinetic",
    "Explosion Salvage": "-1",
    "Index": 853
  },
  "P1-3CE's Gatling Flakker": {
    "Slot": "Weapon",
    "Name": "P1-3CE's Gatling Flakker",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "425",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "12",
    "Shot Heat": "80",
    "Recoil": "10",
    "Projectile Count": "6",
    "Damage Min": "20",
    "Damage Max": "25",
    "Damage Type": "Kinetic",
    "Salvage": "-1",
    "Index": 854
  },
  "AWS/Autocannon": {
    "Slot": "Weapon",
    "Name": "AWS/Autocannon",
    "Type": "Ballistic Cannon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "3",
    "Mass": "60",
    "Integrity": "900",
    "Coverage": "360",
    "Effect": "Selects its own targets and attacks them if in range, at no time cost to you.",
    "Description": "Eventually breaks down.",
    "Range": "24",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "70",
    "Damage Max": "100",
    "Damage Type": "Kinetic",
    "Critical": "12% Blast",
    "Salvage": "-10",
    "Index": 855
  },
  "Perforator": {
    "Slot": "Weapon",
    "Name": "Perforator",
    "Type": "Ballistic Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "400",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "6",
    "Shot Matter": "40",
    "Shot Heat": "100",
    "Recoil": "10",
    "Targeting": "-20",
    "Delay": "100",
    "Projectile Count": "11",
    "Damage Min": "2",
    "Damage Max": "4",
    "Damage Type": "Kinetic",
    "Critical": "40% Destroy",
    "Penetration": "100 / 75 / 50",
    "Index": 856
  },
  "Omega Cannon": {
    "Slot": "Weapon",
    "Name": "Omega Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "22",
    "Integrity": "500",
    "Coverage": "220",
    "Range": "26",
    "Shot Energy": "30",
    "Shot Matter": "20",
    "Shot Heat": "100",
    "Recoil": "10",
    "Targeting": "20",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "80",
    "Damage Max": "120",
    "Damage Type": "Kinetic",
    "Critical": "20% Blast",
    "Salvage": "-20",
    "Index": 857
  },
  "EMP Blaster": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "EMP Blaster",
    "Type": "Launcher",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "50",
    "Shot Matter": "4",
    "Shot Heat": "33",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "12",
    "Explosion Damage Max": "24",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Narrow (50)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 858
  },
  "Shock Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shock Bomb Launcher",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "60",
    "Shot Matter": "5",
    "Shot Heat": "36",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "14",
    "Explosion Damage Max": "26",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 859
  },
  "Adv. EMP Blaster": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. EMP Blaster",
    "Type": "Launcher",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "60",
    "Shot Matter": "5",
    "Shot Heat": "36",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "17",
    "Explosion Damage Max": "29",
    "Falloff": "4",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Narrow (50)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "116/58/38",
    "Index": 860
  },
  "Proton Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Proton Missile Launcher",
    "Type": "Launcher",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "70",
    "Shot Matter": "5",
    "Shot Heat": "39",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "16",
    "Explosion Damage Max": "30",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 861
  },
  "Imp. Proton Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Proton Missile Launcher",
    "Type": "Launcher",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "80",
    "Shot Matter": "6",
    "Shot Heat": "43",
    "Targeting": "15",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "17",
    "Explosion Damage Max": "33",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 862
  },
  "Gui. EMP Blaster": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gui. EMP Blaster",
    "Type": "Launcher",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "110",
    "Coverage": "220",
    "Range": "12",
    "Shot Energy": "90",
    "Shot Matter": "10",
    "Shot Heat": "50",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "14",
    "Explosion Damage Max": "26",
    "Falloff": "5",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 863
  },
  "Hvy. Shock Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Shock Bomb Launcher",
    "Type": "Launcher",
    "Rating": "6",
    "Size": "1",
    "Mass": "9",
    "Integrity": "95",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "90",
    "Shot Matter": "7",
    "Shot Heat": "46",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "36",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 864
  },
  "Tesla Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tesla Bomb Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "90",
    "Shot Matter": "7",
    "Shot Heat": "46",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "40",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 865
  },
  "Hvy. Proton Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Proton Missile Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "16",
    "Shot Energy": "100",
    "Shot Matter": "7",
    "Shot Heat": "40",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "36",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 866
  },
  "Com. Tesla Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Com. Tesla Bomb Launcher",
    "Type": "Launcher",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "110",
    "Coverage": "30",
    "Range": "12",
    "Shot Energy": "100",
    "Shot Matter": "8",
    "Shot Heat": "49",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "21",
    "Explosion Damage Max": "39",
    "Falloff": "6",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "4",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 867
  },
  "Gamma Bomb Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gamma Bomb Array",
    "Type": "Launcher",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "110",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "140",
    "Shot Matter": "10",
    "Shot Heat": "80",
    "Targeting": "-10",
    "Arc": "30",
    "Projectile Count": "4",
    "Explosion Radius": "4",
    "Explosion Damage Min": "9",
    "Explosion Damage Max": "15",
    "Falloff": "2",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "3",
    "Explosion Salvage": "2",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 868
  },
  "Enh. Gamma Bomb Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Gamma Bomb Array",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "12",
    "Shot Energy": "160",
    "Shot Matter": "12",
    "Shot Heat": "60",
    "Arc": "30",
    "Projectile Count": "4",
    "Explosion Radius": "4",
    "Explosion Damage Min": "11",
    "Explosion Damage Max": "17",
    "Falloff": "2",
    "Explosion Type": "Electromagnetic",
    "Explosion Spectrum": "Wide (10)",
    "Explosion Disruption": "4",
    "Explosion Salvage": "3",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 869
  },
  "Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Grenade Launcher",
    "Type": "Launcher",
    "Rating": "1",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "110",
    "Range": "10",
    "Shot Matter": "10",
    "Shot Heat": "30",
    "Targeting": "15",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 870
  },
  "Rocket Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Rocket Launcher",
    "Type": "Launcher",
    "Rating": "2",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "11",
    "Shot Heat": "33",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-9",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 871
  },
  "Mni. Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mni. Grenade Launcher",
    "Type": "Launcher",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "30",
    "Range": "10",
    "Shot Matter": "10",
    "Shot Heat": "30",
    "Targeting": "10",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "57",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-9",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 872
  },
  "Imp. Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Grenade Launcher",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "10",
    "Shot Matter": "13",
    "Shot Heat": "36",
    "Targeting": "15",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 873
  },
  "Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Missile Launcher",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "13",
    "Shot Heat": "36",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 874
  },
  "Concussive RPG": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Concussive RPG",
    "Type": "Launcher",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "30",
    "Special Trait": "Disposable (1)",
    "Description": "Robots within radius are knocked back 2-3 spaces. Projectile also inflicts 10-20 impact damage on direct hit.",
    "Range": "10",
    "Targeting": "-10",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Impact",
    "Explosion Radius": "4",
    "Explosion Damage Min": "15",
    "Explosion Damage Max": "29",
    "Falloff": "1",
    "Explosion Type": "Explosive",
    "Fabrication Number": "3",
    "Fabrication Time": "73/36/24",
    "Index": 875
  },
  "YI-UF0's Doublenader": {
    "Slot": "Weapon",
    "Name": "YI-UF0's Doublenader",
    "Type": "Launcher",
    "Rating": "3*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "75",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "25",
    "Shot Heat": "70",
    "Projectile Count": "2",
    "Explosion Radius": "4",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "48",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-8",
    "Index": 876
  },
  "Hvy. Rocket Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Rocket Launcher",
    "Type": "Launcher",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "14",
    "Shot Heat": "39",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-11",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 877
  },
  "Hvy. Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Missile Launcher",
    "Type": "Launcher",
    "Rating": "4",
    "Size": "1",
    "Mass": "7",
    "Integrity": "85",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "14",
    "Shot Heat": "39",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "36",
    "Explosion Damage Max": "74",
    "Falloff": "11",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-11",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 878
  },
  "Gui. Missile Launcher": {
    "Slot": "Weapon",
    "Name": "Gui. Missile Launcher",
    "Type": "Launcher",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "15",
    "Shot Heat": "39",
    "Waypoints": "3",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Index": 879
  },
  "Prc. Grenade Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Grenade Launcher",
    "Type": "Launcher",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "110",
    "Coverage": "110",
    "Range": "10",
    "Shot Matter": "13",
    "Shot Heat": "36",
    "Targeting": "30",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "30",
    "Explosion Damage Max": "66",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-10",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 880
  },
  "Rocket Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Rocket Array",
    "Type": "Launcher",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "7",
    "Integrity": "120",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "20",
    "Shot Heat": "45",
    "Delay": "100",
    "Arc": "36",
    "Projectile Count": "6",
    "Explosion Radius": "4",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "36",
    "Falloff": "4",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 881
  },
  "Lrn. Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lrn. Missile Launcher",
    "Type": "Launcher",
    "Rating": "5",
    "Size": "1",
    "Mass": "8",
    "Integrity": "90",
    "Coverage": "110",
    "Range": "20",
    "Shot Matter": "15",
    "Shot Heat": "43",
    "Targeting": "10",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 882
  },
  "Imp. Concussive RPG": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Concussive RPG",
    "Type": "Launcher",
    "Rating": "5",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "30",
    "Special Trait": "Disposable (1)",
    "Description": "Robots within radius are knocked back 3-4 spaces. Projectile also inflicts 12-28 impact damage on direct hit.",
    "Range": "10",
    "Targeting": "-10",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "28",
    "Damage Type": "Impact",
    "Explosion Radius": "5",
    "Explosion Damage Min": "20",
    "Explosion Damage Max": "36",
    "Falloff": "1",
    "Explosion Type": "Explosive",
    "Fabrication Number": "3",
    "Fabrication Time": "95/47/31",
    "Index": 883
  },
  "Prc. Rocket Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Prc. Rocket Launcher",
    "Type": "Launcher",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "15",
    "Shot Heat": "43",
    "Targeting": "20",
    "Delay": "10",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "41",
    "Explosion Damage Max": "83",
    "Falloff": "12",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 884
  },
  "Scatter Rocket Array": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Scatter Rocket Array",
    "Type": "Launcher",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "50",
    "Shot Heat": "50",
    "Targeting": "-30",
    "Delay": "150",
    "Arc": "44",
    "Projectile Count": "10",
    "Explosion Radius": "3",
    "Explosion Damage Min": "24",
    "Explosion Damage Max": "36",
    "Falloff": "4",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 885
  },
  "Smartbomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Smartbomb Launcher",
    "Type": "Launcher",
    "Rating": "6",
    "Size": "2",
    "Mass": "9",
    "Integrity": "100",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "16",
    "Shot Heat": "46",
    "Delay": "10",
    "Waypoints": "6",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-13",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 886
  },
  "Mni. Smartbomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mni. Smartbomb Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "30",
    "Range": "16",
    "Shot Matter": "25",
    "Shot Heat": "80",
    "Delay": "30",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "40",
    "Explosion Damage Max": "80",
    "Falloff": "12",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-12",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 887
  },
  "Tiamat Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tiamat Missile Launcher",
    "Type": "Launcher",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "160",
    "Coverage": "110",
    "Range": "18",
    "Shot Matter": "25",
    "Shot Heat": "46",
    "Targeting": "30",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "46",
    "Explosion Damage Max": "92",
    "Falloff": "13",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-13",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 888
  },
  "Thermoblaster": {
    "Slot": "Weapon",
    "Name": "Thermoblaster",
    "Type": "Launcher",
    "Rating": "6",
    "Size": "1",
    "Mass": "8",
    "Integrity": "130",
    "Coverage": "110",
    "Range": "6",
    "Shot Energy": "85",
    "Shot Heat": "260",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "50",
    "Explosion Damage Max": "70",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Massive (80)",
    "Explosion Salvage": "-7",
    "Index": 889
  },
  "Micro-nuke Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Micro-nuke Launcher",
    "Type": "Launcher",
    "Rating": "7",
    "Size": "1",
    "Mass": "11",
    "Integrity": "105",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "18",
    "Shot Heat": "49",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "14",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-14",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 890
  },
  "Adv. Concussive RPG": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Concussive RPG",
    "Type": "Launcher",
    "Rating": "7",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "30",
    "Special Trait": "Disposable (1)",
    "Description": "Robots within radius are knocked back 4-5 spaces. Projectile also inflicts 14-36 impact damage on direct hit.",
    "Range": "10",
    "Targeting": "-10",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "36",
    "Damage Type": "Impact",
    "Explosion Radius": "5",
    "Explosion Damage Min": "25",
    "Explosion Damage Max": "43",
    "Falloff": "1",
    "Explosion Type": "Explosive",
    "Fabrication Number": "3",
    "Fabrication Time": "117/58/39",
    "Index": 891
  },
  "Neutron Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Neutron Missile Launcher",
    "Type": "Launcher",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "11",
    "Integrity": "140",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "25",
    "Shot Heat": "49",
    "Targeting": "25",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Explosion Type": "Explosive",
    "Explosion Spectrum": "Intermediate (30)",
    "Explosion Disruption": "2",
    "Explosion Salvage": "-14",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 892
  },
  "Fusion Bomb Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Fusion Bomb Launcher",
    "Type": "Launcher",
    "Rating": "8",
    "Size": "1",
    "Mass": "12",
    "Integrity": "115",
    "Coverage": "110",
    "Range": "14",
    "Shot Matter": "19",
    "Shot Heat": "52",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 893
  },
  "Hellfire Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hellfire Missile Launcher",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "150",
    "Coverage": "110",
    "Range": "16",
    "Shot Matter": "30",
    "Shot Heat": "60",
    "Targeting": "30",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "7",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-20",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 894
  },
  "Adv. Micro-nuke Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Micro-nuke Launcher",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "9",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "16",
    "Shot Matter": "15",
    "Shot Heat": "30",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 895
  },
  "Tactical Quantum Warhead": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Tactical Quantum Warhead",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "16",
    "Integrity": "150",
    "Coverage": "90",
    "Range": "20",
    "Shot Matter": "70",
    "Shot Heat": "20",
    "Targeting": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Explosion Radius": "10",
    "Explosion Damage Min": "60",
    "Explosion Damage Max": "80",
    "Falloff": "3",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-30",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 896
  },
  "Vortex Catalyst Activator": {
    "Slot": "Weapon",
    "Name": "Vortex Catalyst Activator",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "20",
    "Integrity": "200",
    "Coverage": "220",
    "Special Trait": "Unstable (10)",
    "Range": "22",
    "Shot Energy": "30",
    "Shot Heat": "20",
    "Projectile Count": "1",
    "Explosion Radius": "5",
    "Explosion Damage Min": "134",
    "Explosion Damage Max": "186",
    "Falloff": "7",
    "Explosion Type": "Entropic",
    "Explosion Salvage": "-30",
    "Index": 897
  },
  "Chain Missile Launcher": {
    "Slot": "Weapon",
    "Name": "Chain Missile Launcher",
    "Type": "Launcher",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "25",
    "Integrity": "225",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "50",
    "Shot Heat": "160",
    "Delay": "100",
    "Projectile Count": "3",
    "Explosion Radius": "3",
    "Explosion Damage Min": "60",
    "Explosion Damage Max": "80",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Index": 898
  },
  "Ragnarok Missile Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ragnarok Missile Launcher",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "160",
    "Coverage": "110",
    "Range": "16",
    "Shot Matter": "35",
    "Shot Heat": "70",
    "Targeting": "30",
    "Delay": "20",
    "Projectile Count": "1",
    "Explosion Radius": "4",
    "Explosion Damage Min": "70",
    "Explosion Damage Max": "130",
    "Falloff": "7",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-20",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 899
  },
  "Point Singularity Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Point Singularity Launcher",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "13",
    "Integrity": "250",
    "Coverage": "90",
    "Range": "14",
    "Shot Matter": "50",
    "Shot Heat": "55",
    "Projectile Count": "1",
    "Explosion Radius": "3",
    "Explosion Damage Min": "120",
    "Explosion Damage Max": "200",
    "Falloff": "40",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-100",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 900
  },
  "Gui. Micro-nuke Launcher": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gui. Micro-nuke Launcher",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "11",
    "Integrity": "140",
    "Coverage": "220",
    "Range": "20",
    "Shot Matter": "25",
    "Shot Heat": "55",
    "Delay": "20",
    "Waypoints": "9",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "57",
    "Explosion Damage Max": "109",
    "Falloff": "15",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-15",
    "Fabrication Number": "1",
    "Fabrication Time": "222/111/74",
    "Index": 901
  },
  "99-TNT's Nukerbomber": {
    "Slot": "Weapon",
    "Name": "99-TNT's Nukerbomber",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "24",
    "Integrity": "280",
    "Coverage": "220",
    "Range": "18",
    "Shot Matter": "66",
    "Shot Heat": "30",
    "Recoil": "15",
    "Arc": "20",
    "Projectile Count": "4",
    "Explosion Radius": "4",
    "Explosion Damage Min": "51",
    "Explosion Damage Max": "101",
    "Falloff": "10",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-14",
    "Index": 902
  },
  "Z-bomb Delivery System": {
    "Slot": "Weapon",
    "Name": "Z-bomb Delivery System",
    "Type": "Launcher",
    "Rating": "10*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "16",
    "Integrity": "280",
    "Coverage": "90",
    "Range": "14",
    "Shot Matter": "100",
    "Shot Heat": "30",
    "Projectile Count": "1",
    "Explosion Radius": "2",
    "Explosion Damage Min": "250",
    "Explosion Damage Max": "250",
    "Falloff": "40",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-100",
    "Index": 903
  },
  "Sigix Terminator": {
    "Slot": "Weapon",
    "Name": "Sigix Terminator",
    "Type": "Launcher",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "20",
    "Integrity": "100",
    "Coverage": "220",
    "Special Trait": "Disposable (1)",
    "Range": "24",
    "Waypoints": "10",
    "Projectile Count": "1",
    "Explosion Radius": "20",
    "Explosion Damage Min": "1000",
    "Explosion Damage Max": "1000",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Deadly (120)",
    "Explosion Salvage": "-500",
    "Index": 904
  },
  "Supercharged Sigix Terminator": {
    "Slot": "Weapon",
    "Name": "Supercharged Sigix Terminator",
    "Type": "Launcher",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "20",
    "Integrity": "100",
    "Coverage": "220",
    "Special Trait": "Disposable (1)",
    "Range": "24",
    "Waypoints": "10",
    "Projectile Count": "1",
    "Explosion Radius": "40",
    "Explosion Damage Min": "1500",
    "Explosion Damage Max": "1500",
    "Falloff": "10",
    "Explosion Type": "Thermal",
    "Explosion Heat Transfer": "Deadly (120)",
    "Explosion Salvage": "-500",
    "Index": 905
  },
  "Containment Facilitator": {
    "Slot": "Weapon",
    "Name": "Containment Facilitator",
    "Type": "Launcher",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "110",
    "Special Trait": "Disposable (1)",
    "Effect": "Holds targets in place. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "16",
    "Targeting": "20",
    "Projectile Count": "1",
    "Explosion Radius": "6",
    "Explosion Damage Min": "1",
    "Explosion Damage Max": "1",
    "Explosion Type": "Special",
    "Index": 906
  },
  "Dirty Datajack": {
    "Slot": "Weapon",
    "Name": "Dirty Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "10",
    "Special Trait": "Disposable (20)",
    "Effect": "Performs a random hack on any standard 0b10 Swarmer, Cutter, Grunt, Brawler, Duelist, Sentry, Demolisher, Specialist, Hunter, Heavy, or Behemoth variant.\n <no_stack>",
    "Range": "2",
    "Shot Energy": "15",
    "Shot Heat": "15",
    "Targeting": "20",
    "Delay": "-150",
    "Projectile Count": "1",
    "Damage Min": "1",
    "Damage Max": "3",
    "Damage Type": "Piercing",
    "Index": 907
  },
  "Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "20",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Description": "Active melee Datajacks can be used in an attempt to disarm or reprogram known traps by moving into them (10% chance).",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "3",
    "Delay": "-50",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "51/25/17",
    "Index": 908
  },
  "Imp. Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "1",
    "Integrity": "20",
    "Coverage": "20",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Description": "Active melee Datajacks can be used in an attempt to disarm or reprogram known traps by moving into them (10% chance).",
    "Range": "2",
    "Shot Energy": "9",
    "Shot Heat": "5",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 909
  },
  "Adv. Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Datajack",
    "Type": "Special Melee Weapon",
    "Rating": "7",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "20",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Description": "Active melee Datajacks can be used in an attempt to disarm or reprogram known traps by moving into them (10% chance).",
    "Range": "2",
    "Shot Energy": "12",
    "Shot Heat": "7",
    "Delay": "-150",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 910
  },
  "Remote Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "12",
    "Shot Matter": "5",
    "Shot Heat": "5",
    "Targeting": "10",
    "Delay": "-50",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 911
  },
  "Imp. Remote Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "14",
    "Shot Matter": "7",
    "Shot Heat": "7",
    "Targeting": "20",
    "Delay": "-75",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 912
  },
  "Adv. Remote Datajack": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Adv. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "8",
    "Size": "1",
    "Mass": "5",
    "Integrity": "90",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "16",
    "Shot Matter": "10",
    "Shot Heat": "10",
    "Targeting": "20",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 913
  },
  "Exp. Remote Datajack": {
    "Slot": "Weapon",
    "Name": "Exp. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "16",
    "Shot Matter": "7",
    "Shot Heat": "7",
    "Targeting": "30",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 914
  },
  "Gui. Remote Datajack": {
    "Slot": "Weapon",
    "Name": "Gui. Remote Datajack",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "5",
    "Integrity": "100",
    "Coverage": "50",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "16",
    "Shot Matter": "10",
    "Shot Heat": "10",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 915
  },
  "ME-RLN's Wand": {
    "Slot": "Weapon",
    "Name": "ME-RLN's Wand",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "200",
    "Coverage": "30",
    "Effect": "Penetrates target robot just enough to enable system access for hacking. Also a base 50% chance to rewire temporarily disabled hostiles, further modified by any offensive hackware. Can be used to parse almost any robot system. Many more hacking options available after using a RIF Installer inside a Garrison, and with Relay Couplers.",
    "Range": "24",
    "Shot Matter": "2",
    "Shot Heat": "2",
    "Waypoints": "2",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 916
  },
  "Field Lobotomy Kit": {
    "Slot": "Weapon",
    "Name": "Field Lobotomy Kit",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "130",
    "Coverage": "110",
    "Special Trait": "Disposable (5)",
    "Effect": "100% chance to instantly assimilate any robot without disruption immunity. No effect on unpowered, unconnected, or broken bots.",
    "Range": "16",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 917
  },
  "Mining Laser": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mining Laser",
    "Type": "Special Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "2",
    "Shot Energy": "40",
    "Shot Heat": "100",
    "Targeting": "-20",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "24",
    "Damage Type": "Thermal",
    "Heat Transfer": "High (50)",
    "Salvage": "-20",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 918
  },
  "Welding Torch": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Welding Torch",
    "Type": "Special Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "20",
    "Targeting": "-20",
    "Delay": "20",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "4",
    "Damage Type": "Thermal",
    "Heat Transfer": "Low (25)",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 919
  },
  "Plasma Cutter": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Cutter",
    "Type": "Special Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "3",
    "Shot Energy": "16",
    "Shot Heat": "20",
    "Targeting": "-10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Critical": "5% Sever",
    "Heat Transfer": "Medium (37)",
    "Salvage": "15",
    "Fabrication Number": "3",
    "Fabrication Time": "62/31/20",
    "Index": 920
  },
  "Imp. Plasma Cutter": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Imp. Plasma Cutter",
    "Type": "Special Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "3",
    "Shot Energy": "16",
    "Shot Heat": "20",
    "Targeting": "-10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "18",
    "Damage Type": "Thermal",
    "Critical": "10% Sever",
    "Heat Transfer": "Medium (37)",
    "Salvage": "30",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 921
  },
  "Flamer": {
    "Slot": "Weapon",
    "Name": "Flamer",
    "Type": "Special Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "20",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Critical": "10% Burn",
    "Heat Transfer": "Massive (80)",
    "Disruption": "25",
    "Salvage": "-5",
    "Fabrication Number": "1",
    "Fabrication Time": "62/31/20",
    "Index": 922
  },
  "Enh. Flamer": {
    "Slot": "Weapon",
    "Name": "Enh. Flamer",
    "Type": "Special Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "100",
    "Range": "6",
    "Shot Energy": "20",
    "Shot Heat": "80",
    "Targeting": "10",
    "Delay": "80",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Critical": "15% Burn",
    "Heat Transfer": "Massive (80)",
    "Disruption": "30",
    "Salvage": "-6",
    "Fabrication Number": "1",
    "Fabrication Time": "73/36/24",
    "Index": 923
  },
  "Plasma Flamer": {
    "Slot": "Weapon",
    "Name": "Plasma Flamer",
    "Type": "Special Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Critical": "20% Burn",
    "Heat Transfer": "Massive (80)",
    "Disruption": "40",
    "Salvage": "-8",
    "Fabrication Number": "1",
    "Fabrication Time": "95/47/31",
    "Index": 924
  },
  "RU-N14's Throwing Claymores": {
    "Slot": "Weapon",
    "Name": "RU-N14's Throwing Claymores",
    "Type": "Special Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "8",
    "Integrity": "150",
    "Coverage": "50",
    "Special Trait": "Disposable (10)",
    "Description": "Directional explosion with a 90-degree arc also inflicts 85-115 damage out to a distance of 7 (falloff: 7; salvage: -20).",
    "Range": "16",
    "Shot Energy": "30",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "45",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Explosion Radius": "7",
    "Explosion Damage Min": "85",
    "Explosion Damage Max": "115",
    "Falloff": "7",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-20",
    "Index": 925
  },
  "RU-N14's Throwing Claymores v3": {
    "Slot": "Weapon",
    "Name": "RU-N14's Throwing Claymores v3",
    "Type": "Special Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "10",
    "Integrity": "180",
    "Coverage": "50",
    "Special Trait": "Disposable (10)",
    "Description": "Directional explosion with a 90-degree arc also inflicts 102-138 damage out to a distance of 8 (falloff: 8; salvage: -30).",
    "Range": "16",
    "Shot Energy": "40",
    "Targeting": "30",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "60",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Explosion Radius": "8",
    "Explosion Damage Min": "102",
    "Explosion Damage Max": "138",
    "Falloff": "8",
    "Explosion Type": "Explosive",
    "Explosion Salvage": "-30",
    "Index": 926
  },
  "AD-0RF's Magmablaster": {
    "Slot": "Weapon",
    "Name": "AD-0RF's Magmablaster",
    "Type": "Special Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "12",
    "Integrity": "180",
    "Coverage": "110",
    "Range": "10",
    "Shot Energy": "40",
    "Shot Heat": "220",
    "Targeting": "20",
    "Delay": "100",
    "Projectile Count": "4",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Disruption": "20",
    "Salvage": "-3",
    "Index": 927
  },
  "Stasis Beam": {
    "Slot": "Weapon",
    "Name": "Stasis Beam",
    "Type": "Special Weapon",
    "Rating": "8",
    "Size": "1",
    "Mass": "5",
    "Integrity": "70",
    "Coverage": "100",
    "Effect": "Holds target in place. Beam strength: 1. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "10",
    "Shot Energy": "40",
    "Targeting": "1000",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 928
  },
  "Stasis Projector": {
    "Slot": "Weapon",
    "Name": "Stasis Projector",
    "Type": "Special Weapon",
    "Rating": "9",
    "Size": "1",
    "Mass": "6",
    "Integrity": "100",
    "Coverage": "100",
    "Effect": "Holds target in place. Beam strength: 2. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "12",
    "Shot Energy": "60",
    "Targeting": "1000",
    "Delay": "200",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 929
  },
  "Exp. Stasis Projector": {
    "Slot": "Weapon",
    "Name": "Exp. Stasis Projector",
    "Type": "Special Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "6",
    "Integrity": "120",
    "Coverage": "100",
    "Effect": "Holds target in place. Beam strength: 3. Also cancels a flying/hovering target's 10%/5% bonus to dodge for the duration.",
    "Range": "14",
    "Shot Energy": "60",
    "Targeting": "1000",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 930
  },
  "Molecular Deconstructor": {
    "Slot": "Weapon",
    "Name": "Molecular Deconstructor",
    "Type": "Special Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "6",
    "Integrity": "200",
    "Coverage": "220",
    "Description": "Delivers an entropy package to target, gradually eroding it from the inside out. Against robots causes a total 20-50 entropic damage, where salvage loss is equivalent to the amount of damage. Against terrain destroys the initial target while potentially spreading through adjacent connected terrain, disintegrating it.",
    "Range": "10",
    "Shot Energy": "100",
    "Shot Matter": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Type": "Special",
    "Index": 931
  },
  "Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hammer",
    "Type": "Impact Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "27",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-1",
    "Fabrication Number": "2",
    "Fabrication Time": "51/25/17",
    "Index": 932
  },
  "Mace": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mace",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "45",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 933
  },
  "Flail": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Flail",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "120",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "54",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 934
  },
  "Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Maul",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "120",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "54",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 935
  },
  "Hvy. Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Hammer",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "60",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "62/31/20",
    "Index": 936
  },
  "Hvy. Mace": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Mace",
    "Type": "Impact Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 937
  },
  "Hvy. Flail": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Flail",
    "Type": "Impact Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "72",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 938
  },
  "Great Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Great Maul",
    "Type": "Impact Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "4",
    "Integrity": "130",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 939
  },
  "Powered Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Powered Hammer",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "6",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 940
  },
  "Mak. Hammer": {
    "Slot": "Weapon",
    "Name": "Mak. Hammer",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "6",
    "Targeting": "-15",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "20% Smash",
    "Salvage": "-2",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 941
  },
  "Power Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Power Maul",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "32",
    "Damage Max": "63",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 942
  },
  "Impact Mace": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Impact Mace",
    "Type": "Impact Weapon",
    "Rating": "4*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "140",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "7",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "72",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "134/67/44",
    "Index": 943
  },
  "Shock Maul": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Shock Maul",
    "Type": "Impact Weapon",
    "Rating": "5*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "150",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "15",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "34",
    "Damage Max": "72",
    "Damage Type": "Impact",
    "Critical": "40% Smash",
    "Disruption": "25",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "152/76/50",
    "Index": 944
  },
  "Thunder Hammer": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Thunder Hammer",
    "Type": "Impact Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "160",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "80",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 945
  },
  "Gravity Flail": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Gravity Flail",
    "Type": "Impact Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "180",
    "Coverage": "30",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "7",
    "Targeting": "-10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "32",
    "Damage Max": "96",
    "Damage Type": "Impact",
    "Critical": "30% Smash",
    "Salvage": "-3",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 946
  },
  "CL-ANK's Mallet": {
    "Slot": "Weapon",
    "Name": "CL-ANK's Mallet",
    "Type": "Impact Weapon",
    "Rating": "9*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "12",
    "Integrity": "280",
    "Coverage": "80",
    "Range": "2",
    "Shot Energy": "120",
    "Shot Heat": "25",
    "Targeting": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "45",
    "Damage Max": "120",
    "Damage Type": "Kinetic",
    "Critical": "95% Smash",
    "Salvage": "-5",
    "Index": 947
  },
  "Core Stripper": {
    "Slot": "Weapon",
    "Name": "Core Stripper",
    "Type": "Impact Weapon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "225",
    "Coverage": "220",
    "Effect": "Splits robots into constituent parts on 33% of successful hits.",
    "Range": "2",
    "Shot Energy": "300",
    "Shot Heat": "200",
    "Targeting": "20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "80",
    "Damage Type": "Kinetic",
    "Disruption": "25",
    "Index": 948
  },
  "Mining Claw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Mining Claw",
    "Type": "Slashing Weapon",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "4",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "22",
    "Damage Max": "25",
    "Damage Type": "Slashing",
    "Fabrication Number": "3",
    "Fabrication Time": "51/25/17",
    "Index": 949
  },
  "Katana": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Katana",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "36",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 950
  },
  "Scythe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Scythe",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "32",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 951
  },
  "Axe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Axe",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "42",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 952
  },
  "Blade Saw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Blade Saw",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "40",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "13",
    "Damage Max": "20",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "73/36/24",
    "Index": 953
  },
  "Chainsword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Chainsword",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "42",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 954
  },
  "Ripper": {
    "Slot": "Weapon",
    "Name": "Ripper",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "44",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "84/42/28",
    "Index": 955
  },
  "Mak. Axe": {
    "Slot": "Weapon",
    "Name": "Mak. Axe",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "44",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 956
  },
  "Mak. Sword": {
    "Slot": "Weapon",
    "Name": "Mak. Sword",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "38",
    "Damage Type": "Slashing",
    "Critical": "15% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 957
  },
  "Great Axe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Great Axe",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "55",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "75",
    "Projectile Count": "1",
    "Damage Min": "29",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 958
  },
  "Greatsword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Greatsword",
    "Type": "Slashing Weapon",
    "Rating": "4",
    "Size": "2",
    "Mass": "5",
    "Integrity": "140",
    "Coverage": "160",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "42",
    "Damage Max": "59",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 959
  },
  "Power Sword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Power Sword",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 960
  },
  "Falx": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Falx",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "36",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 961
  },
  "Carbide Saw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Carbide Saw",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "40",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "15",
    "Damage Max": "24",
    "Damage Type": "Slashing",
    "Critical": "35% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 962
  },
  "Segregator": {
    "Slot": "Weapon",
    "Name": "Segregator",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "40",
    "Description": "Overloads the highest-listed active power source to create a powerful directed charge that blasts up to four components clean off the target.",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Thermal",
    "Index": 963
  },
  "Tearclaws": {
    "Slot": "Weapon",
    "Name": "Tearclaws",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "2",
    "Mass": "10",
    "Integrity": "80",
    "Coverage": "80",
    "Description": "20% chance to rip component off target.",
    "Range": "2",
    "Shot Energy": "60",
    "Shot Heat": "20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "30",
    "Damage Type": "Slashing",
    "Index": 964
  },
  "Phasing Sabre": {
    "Slot": "Weapon",
    "Name": "Phasing Sabre",
    "Type": "Slashing Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "65",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "12",
    "Shot Heat": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "53",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "106/53/35",
    "Index": 965
  },
  "Plasma Sword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Sword",
    "Type": "Slashing Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "65",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "8",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "53",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 966
  },
  "Ionic Axe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Ionic Axe",
    "Type": "Slashing Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "65",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "33",
    "Damage Max": "59",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 967
  },
  "Dual-blade Saw": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Dual-blade Saw",
    "Type": "Slashing Weapon",
    "Rating": "7",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "40",
    "Range": "2",
    "Shot Energy": "9",
    "Shot Heat": "7",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "18",
    "Damage Max": "29",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Fabrication Number": "2",
    "Fabrication Time": "117/58/39",
    "Index": 968
  },
  "Vibroblade": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Vibroblade",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "50",
    "Coverage": "5",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "62",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 969
  },
  "Molecular Scythe": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Molecular Scythe",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "70",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "38",
    "Damage Max": "64",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 970
  },
  "Centrium Greatsword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Centrium Greatsword",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "5",
    "Integrity": "220",
    "Coverage": "200",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "59",
    "Damage Max": "75",
    "Damage Type": "Slashing",
    "Critical": "40% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 971
  },
  "Master Tearclaws": {
    "Slot": "Weapon",
    "Name": "Master Tearclaws",
    "Type": "Slashing Weapon",
    "Rating": "7",
    "Size": "2",
    "Mass": "12",
    "Integrity": "180",
    "Coverage": "100",
    "Description": "40% chance to rip component off target.",
    "Range": "2",
    "Shot Energy": "80",
    "Shot Heat": "30",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "10",
    "Damage Type": "Slashing",
    "Index": 972
  },
  "Longsword +1": {
    "Slot": "Weapon",
    "Name": "Longsword +1",
    "Type": "Slashing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "90",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "2",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "35",
    "Damage Max": "55",
    "Damage Type": "Slashing",
    "Critical": "20% Sever",
    "Index": 973
  },
  "Nanosword": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Nanosword",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "5",
    "Range": "2",
    "Shot Energy": "7",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "70",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Fabrication Number": "1",
    "Fabrication Time": "204/102/68",
    "Index": 974
  },
  "Particle Cleaver": {
    "Slot": "Weapon",
    "Name": "Particle Cleaver",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "2",
    "Shot Energy": "12",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "80",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Index": 975
  },
  "1C-UTU's Sword \"Lootmaker\"": {
    "Slot": "Weapon",
    "Name": "1C-UTU's Sword \"Lootmaker\"",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Targeting": "10",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "50",
    "Damage Type": "Slashing",
    "Critical": "30% Sever",
    "Salvage": "5",
    "Index": 976
  },
  "1C-UTU's Sword \"Choppy\"": {
    "Slot": "Weapon",
    "Name": "1C-UTU's Sword \"Choppy\"",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "6",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "80",
    "Damage Type": "Slashing",
    "Critical": "25% Destroy",
    "Index": 977
  },
  "Sigix Broadsword": {
    "Slot": "Weapon",
    "Name": "Sigix Broadsword",
    "Type": "Slashing Weapon",
    "Rating": "10**",
    "Category": "Alien",
    "Size": "2",
    "Mass": "10",
    "Integrity": "300",
    "Coverage": "800",
    "Effect": "Regenerates integrity at a rate of 2 per turn. Must be active, and requires 5 energy.\n <parallel_ok>",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "50",
    "Damage Max": "100",
    "Damage Type": "Slashing",
    "Critical": "25% Sever",
    "Index": 978
  },
  "Spear": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Spear",
    "Type": "Piercing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "35",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 979
  },
  "Mak. Spear": {
    "Slot": "Weapon",
    "Name": "Mak. Spear",
    "Type": "Piercing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "2",
    "Integrity": "40",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-10",
    "Projectile Count": "1",
    "Damage Min": "21",
    "Damage Max": "35",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "84/42/28",
    "Index": 980
  },
  "CR-A16's Pointy Stick": {
    "Slot": "Weapon",
    "Name": "CR-A16's Pointy Stick",
    "Type": "Piercing Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Targeting": "-20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "35",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Index": 981
  },
  "Hvy. Pick": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Hvy. Pick",
    "Type": "Piercing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "45",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "23",
    "Damage Max": "40",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "95/47/31",
    "Index": 982
  },
  "Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Lance",
    "Type": "Piercing Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "24",
    "Damage Max": "45",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "2",
    "Fabrication Time": "106/53/35",
    "Index": 983
  },
  "Kinetic Spear": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Kinetic Spear",
    "Type": "Piercing Weapon",
    "Rating": "6*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "60",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "26",
    "Damage Max": "50",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "169/84/56",
    "Index": 984
  },
  "Force Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Force Lance",
    "Type": "Piercing Weapon",
    "Rating": "7",
    "Size": "1",
    "Mass": "6",
    "Integrity": "55",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "60",
    "Damage Type": "Piercing",
    "Critical": "15% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "117/58/39",
    "Index": 985
  },
  "Plasma Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Plasma Lance",
    "Type": "Piercing Weapon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "3",
    "Integrity": "70",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "28",
    "Damage Max": "55",
    "Damage Type": "Piercing",
    "Critical": "10% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "187/93/62",
    "Index": 986
  },
  "Enh. Force Lance": {
    "Slot": "Weapon",
    "Hackable Schematic": "1",
    "Name": "Enh. Force Lance",
    "Type": "Piercing Weapon",
    "Rating": "8",
    "Size": "1",
    "Mass": "8",
    "Integrity": "60",
    "Coverage": "10",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "25",
    "Damage Max": "65",
    "Damage Type": "Piercing",
    "Critical": "15% Impale",
    "Fabrication Number": "1",
    "Fabrication Time": "128/64/42",
    "Index": 987
  },
  "Vortex Lance": {
    "Slot": "Weapon",
    "Name": "Vortex Lance",
    "Type": "Piercing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "4",
    "Integrity": "80",
    "Coverage": "10",
    "Special Trait": "Unstable (40)",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "2",
    "Projectile Count": "1",
    "Damage Min": "60",
    "Damage Max": "100",
    "Damage Type": "Entropic",
    "Critical": "35% Sunder",
    "Salvage": "-5",
    "Index": 988
  },
  "CR-A16's Behemoth Slayer": {
    "Slot": "Weapon",
    "Name": "CR-A16's Behemoth Slayer",
    "Type": "Piercing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "1",
    "Mass": "2",
    "Integrity": "80",
    "Coverage": "5",
    "Range": "2",
    "Shot Energy": "50",
    "Shot Heat": "20",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "50",
    "Damage Type": "Piercing",
    "Critical": "25% Impale",
    "Index": 989
  },
  "Blade Trap": {
    "Slot": "N/A",
    "Name": "Blade Trap",
    "Type": "Trap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "10",
    "Description": "Severs 1-3 components from victim, damaging each by 12-20% of remaining integrity. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 990
  },
  "Segregator Trap": {
    "Slot": "N/A",
    "Name": "Segregator Trap",
    "Type": "Trap",
    "Rating": "6",
    "Size": "1",
    "Integrity": "10",
    "Description": "Blows 2-4 components off victim, damaging each by 20-33% of remaining integrity. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 991
  },
  "Explosive Trap": {
    "Slot": "N/A",
    "Name": "Explosive Trap",
    "Type": "Trap",
    "Rating": "2",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 20-48 explosive damage with a radius of 3 (falloff: 8; salvage: -8). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 992
  },
  "Heavy Explosive Trap": {
    "Slot": "N/A",
    "Name": "Heavy Explosive Trap",
    "Type": "Trap",
    "Rating": "4",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 41-83 explosive damage with a radius of 4 (falloff: 12; salvage: -12). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 993
  },
  "Tiamat Bomb Trap": {
    "Slot": "N/A",
    "Name": "Tiamat Bomb Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 46-92 explosive damage with a radius of 4 (falloff: 13; salvage: -13). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 994
  },
  "Fusion Bomb Trap": {
    "Slot": "N/A",
    "Name": "Fusion Bomb Trap",
    "Type": "Trap",
    "Rating": "6",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 57-109 explosive damage with a radius of 5 (falloff: 15; salvage: -15). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 995
  },
  "Hellfire Trap": {
    "Slot": "N/A",
    "Name": "Hellfire Trap",
    "Type": "Trap",
    "Rating": "7",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 57-109 explosive damage with a radius of 4 (falloff: 7; salvage: -20). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 996
  },
  "Armageddon Trap": {
    "Slot": "N/A",
    "Name": "Armageddon Trap",
    "Type": "Trap",
    "Rating": "9",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 100-140 explosive damage with a radius of 10 (falloff: 3; salvage: -30). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 997
  },
  "Dirty Bomb Trap": {
    "Slot": "N/A",
    "Name": "Dirty Bomb Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 50-90 electromagnetic damage with a radius of 5 (falloff: 10; salvage: -10). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 998
  },
  "EMP Trap": {
    "Slot": "N/A",
    "Name": "EMP Trap",
    "Type": "Trap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 12-24 electromagnetic damage with a radius of 3 (falloff: 5; salvage: 2). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 999
  },
  "Proton Bomb Trap": {
    "Slot": "N/A",
    "Name": "Proton Bomb Trap",
    "Type": "Trap",
    "Rating": "3",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 16-30 electromagnetic damage with a radius of 4 (falloff: 6; salvage: 3). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1000
  },
  "Tesla Bomb Trap": {
    "Slot": "N/A",
    "Name": "Tesla Bomb Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 24-40 electromagnetic damage with a radius of 4 (falloff: 3; salvage: 3). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1001
  },
  "Gamma Bomb Trap": {
    "Slot": "N/A",
    "Name": "Gamma Bomb Trap",
    "Type": "Trap",
    "Rating": "7",
    "Size": "1",
    "Integrity": "10",
    "Description": "Explodes for 42-50 electromagnetic damage with a radius of 5 (falloff: 2; salvage: 6). Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1002
  },
  "Shock Trap": {
    "Slot": "N/A",
    "Name": "Shock Trap",
    "Type": "Trap",
    "Rating": "1",
    "Size": "1",
    "Integrity": "10",
    "Description": "Shocks victim for 50-80% system corruption. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1003
  },
  "EM Surge Trap": {
    "Slot": "N/A",
    "Name": "EM Surge Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Shocks victim for 80-120% system corruption. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1004
  },
  "Fire Trap": {
    "Slot": "N/A",
    "Name": "Fire Trap",
    "Type": "Trap",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Burns victim 3-5 times for 12-14 thermal damage each, and add 200-400 heat to victim and any adjacent robots. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1005
  },
  "Stasis Trap": {
    "Slot": "N/A",
    "Name": "Stasis Trap",
    "Type": "Trap",
    "Rating": "2",
    "Size": "1",
    "Integrity": "10",
    "Life": "100",
    "Description": "Holds victim until stasis field depleted. Drop on the ground and use > or right-click on self to install trap.",
    "Index": 1006
  },
  "Signal Generator": {
    "Slot": "N/A",
    "Name": "Signal Generator",
    "Type": "Item",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Description": "Generates signals likely to trigger an assault dispatch in 0b10-controlled areas, or if there is an active assault squad in the area redirect it to the source of the signals.",
    "Index": 1007
  },
  "Self-destruct Interrupter": {
    "Slot": "N/A",
    "Name": "Self-destruct Interrupter",
    "Type": "Item",
    "Rating": "5",
    "Size": "1",
    "Integrity": "10",
    "Life": "50",
    "Description": "Remotely deactivates self-destruction routines employed by 0b10 robots in some scenarios. Drop to activate, retrieve to deactivate.",
    "Index": 1008
  },
  "Sapper Charge": {
    "Slot": "N/A",
    "Name": "Sapper Charge",
    "Type": "Item",
    "Rating": "7",
    "Size": "1",
    "Integrity": "50",
    "Description": "If on the ground at current position use > or right-click on self to start timer. Automatically detonates after 8 turns. Thermal explosion inflicts 110 damage with a radius of 4 (falloff: 10). Deadly heat transfer.",
    "Index": 1009
  },
  "Deploy-a-Sentry": {
    "Slot": "N/A",
    "Name": "Deploy-a-Sentry",
    "Type": "Item",
    "Rating": "7",
    "Size": "1",
    "Integrity": "200",
    "Description": "Drop on the ground and use > or right-click on self to prepare for deployment, then move aside.",
    "Index": 1010
  },
  "GAL Module": {
    "Slot": "N/A",
    "Name": "GAL Module",
    "Type": "Item",
    "Rating": "8",
    "Size": "1",
    "Integrity": "20",
    "Description": "Module given by V3-CT5, from a project to improve the Hypervelocity EM Gauss Rifle.",
    "Index": 1011
  },
  "Portable AFG": {
    "Slot": "N/A",
    "Name": "Portable AFG",
    "Type": "Item",
    "Rating": "9",
    "Size": "1",
    "Integrity": "40",
    "Life": "100",
    "Description": "Attracts any loose items within a range of 16. Drop to activate, retrieve to deactivate.",
    "Index": 1012
  },
  "SGEMP Prototype": {
    "Slot": "N/A",
    "Name": "SGEMP Prototype",
    "Type": "Item",
    "Rating": "10",
    "Size": "2",
    "Integrity": "100",
    "Description": "There does not seem to be any way to use it.",
    "Index": 1013
  },
  "Terrabomb Derivative": {
    "Slot": "N/A",
    "Name": "Terrabomb Derivative",
    "Type": "Item",
    "Rating": "10",
    "Size": "2",
    "Integrity": "100",
    "Description": "There does not seem to be any way to use it.",
    "Index": 1014
  },
  "Sigix Containment Pod": {
    "Slot": "N/A",
    "Name": "Sigix Containment Pod",
    "Type": "Item",
    "Rating": "10",
    "Size": "2",
    "Integrity": "100",
    "Description": "Pod contains a live Sigix.",
    "Index": 1015
  },
  "Sigix Corpse": {
    "Slot": "N/A",
    "Name": "Sigix Corpse",
    "Type": "Item",
    "Rating": "10",
    "Size": "1",
    "Integrity": "10",
    "Description": "The post-autopsy corpse of a Sigix Warrior.",
    "Index": 1016
  },
  "Meganuke": {
    "Slot": "N/A",
    "Name": "Meganuke",
    "Type": "Item",
    "Rating": "10",
    "Size": "1",
    "Integrity": "100",
    "Description": "If on the ground at current position use > or right-click on self to detonate. Thermal explosion inflicts 2000 damage with a radius of 35 (falloff: 10). Massive heat transfer.",
    "Index": 1017
  },
  "Gamma Refractor": {
    "Slot": "N/A",
    "Name": "Gamma Refractor",
    "Type": "Item",
    "Rating": "10",
    "Size": "1",
    "Integrity": "100",
    "Description": "If on the ground at current position use > or right-click on self to detonate. Electromagnetic explosion inflicts 200 damage with a radius of 25 (falloff: 1), piercing any walls or barriers. Fine spectrum.",
    "Index": 1018
  },
  "T-thruster": {
    "Slot": "Propulsion",
    "Name": "T-thruster",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "10",
    "Coverage": "5",
    "Time/Move": "3",
    "Mod/Extra": "-3",
    "Support": "1",
    "Penalty": "200",
    "Index": 1019
  },
  "Mak. Microthruster": {
    "Slot": "Propulsion",
    "Name": "Mak. Microthruster",
    "Type": "Flight Unit",
    "Rating": "6",
    "Size": "1",
    "Integrity": "20",
    "Coverage": "10",
    "Time/Move": "20",
    "Mod/Extra": "0",
    "Support": "1",
    "Penalty": "200",
    "Index": 1020
  },
  "Integrated Tracker Drive": {
    "Slot": "Propulsion",
    "Name": "Integrated Tracker Drive",
    "Type": "Flight Unit",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "1",
    "Integrity": "60",
    "Coverage": "10",
    "Time/Move": "15",
    "Mod/Extra": "-3",
    "Energy/Move": "2",
    "Heat/Move": "2",
    "Support": "22",
    "Penalty": "200",
    "Index": 1021
  },
  "Detonator": {
    "Slot": "Weapon",
    "Name": "Detonator",
    "Type": "Special Melee Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "1",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "2",
    "Targeting": "1000",
    "Index": 1022
  },
  "Splice Injector": {
    "Slot": "Weapon",
    "Name": "Splice Injector",
    "Type": "Special Melee Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "1",
    "Integrity": "10",
    "Coverage": "5",
    "Description": "Performs a random hack on any standard 0b10 Swarmer, Cutter, Grunt, Brawler, Duelist, Sentry, Demolisher, Specialist, Hunter, Heavy, or Behemoth variant.\n <no_stack>",
    "Range": "2",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "2",
    "Damage Max": "5",
    "Damage Type": "Piercing",
    "Index": 1023
  },
  "Mni. Tearclaws": {
    "Slot": "Weapon",
    "Name": "Mni. Tearclaws",
    "Type": "Slashing Weapon",
    "Rating": "6",
    "Size": "1",
    "Mass": "4",
    "Integrity": "60",
    "Coverage": "20",
    "Description": "50% chance to rip component off target.",
    "Range": "2",
    "Shot Energy": "30",
    "Shot Heat": "10",
    "Projectile Count": "1",
    "Damage Min": "5",
    "Damage Max": "10",
    "Damage Type": "Slashing",
    "Index": 1024
  },
  "DAS Cannon": {
    "Slot": "Weapon",
    "Name": "DAS Cannon",
    "Type": "Ballistic Cannon",
    "Rating": "7*",
    "Category": "Prototype",
    "Size": "2",
    "Mass": "30",
    "Integrity": "300",
    "Coverage": "220",
    "Range": "22",
    "Shot Energy": "5",
    "Shot Matter": "10",
    "Shot Heat": "60",
    "Recoil": "5",
    "Targeting": "20",
    "Projectile Count": "1",
    "Damage Min": "40",
    "Damage Max": "70",
    "Damage Type": "Kinetic",
    "Critical": "5% Blast",
    "Salvage": "-10",
    "Index": 1026
  },
  "Compactor": {
    "Slot": "Weapon",
    "Name": "Compactor",
    "Type": "Impact Weapon",
    "Rating": "6",
    "Size": "4",
    "Mass": "20",
    "Integrity": "500",
    "Coverage": "400",
    "Range": "2",
    "Shot Energy": "20",
    "Shot Heat": "15",
    "Targeting": "20",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "30",
    "Damage Max": "60",
    "Damage Type": "Kinetic",
    "Critical": "50% Destroy",
    "Index": 1027
  },
  "Asb. Blade": {
    "Slot": "Weapon",
    "Name": "Asb. Blade",
    "Type": "Slashing Weapon",
    "Rating": "3",
    "Size": "1",
    "Mass": "2",
    "Integrity": "50",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "27",
    "Damage Max": "36",
    "Damage Type": "Slashing",
    "Critical": "5% Sever",
    "Index": 1028
  },
  "Asb. F-torch": {
    "Slot": "Weapon",
    "Name": "Asb. F-torch",
    "Type": "Special Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "30",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "20",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "100",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "12",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Disruption": "25",
    "Salvage": "-5",
    "Index": 1029
  },
  "Asb. Gauss Rifle": {
    "Slot": "Weapon",
    "Name": "Asb. Gauss Rifle",
    "Type": "Ballistic Gun",
    "Rating": "4",
    "Size": "1",
    "Mass": "4",
    "Integrity": "140",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "2",
    "Shot Matter": "4",
    "Shot Heat": "28",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "23",
    "Damage Type": "Kinetic",
    "Critical": "3% Destroy",
    "Penetration": "65",
    "Index": 1030
  },
  "Asb. Heavy Rifle": {
    "Slot": "Weapon",
    "Name": "Asb. Heavy Rifle",
    "Type": "Ballistic Gun",
    "Rating": "2",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "25",
    "Recoil": "3",
    "Delay": "-10",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "20",
    "Damage Type": "Kinetic",
    "Critical": "2% Destroy",
    "Index": 1031
  },
  "Asb. Hover System": {
    "Slot": "Propulsion",
    "Name": "Asb. Hover System",
    "Type": "Hover Unit",
    "Rating": "4",
    "Size": "1",
    "Integrity": "45",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "11",
    "Penalty": "60",
    "Index": 1032
  },
  "Asb. Hover Unit": {
    "Slot": "Propulsion",
    "Name": "Asb. Hover Unit",
    "Type": "Hover Unit",
    "Rating": "3",
    "Size": "1",
    "Integrity": "40",
    "Coverage": "55",
    "Energy Upkeep": "1",
    "Heat Generation": "1",
    "Time/Move": "60",
    "Mod/Extra": "-4",
    "Energy/Move": "1",
    "Heat/Move": "1",
    "Support": "9",
    "Penalty": "60",
    "Index": 1033
  },
  "Asb. Maul": {
    "Slot": "Weapon",
    "Name": "Asb. Maul",
    "Type": "Impact Weapon",
    "Rating": "2",
    "Size": "1",
    "Mass": "3",
    "Integrity": "56",
    "Coverage": "20",
    "Range": "2",
    "Shot Energy": "5",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "14",
    "Damage Max": "36",
    "Damage Type": "Impact",
    "Index": 1034
  },
  "Asb. P-maul": {
    "Slot": "Weapon",
    "Name": "Asb. P-maul",
    "Type": "Impact Weapon",
    "Rating": "4",
    "Size": "1",
    "Mass": "3",
    "Integrity": "69",
    "Coverage": "20",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "6",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "16",
    "Damage Max": "48",
    "Damage Type": "Impact",
    "Index": 1035
  },
  "Asb. P-torch": {
    "Slot": "Weapon",
    "Name": "Asb. P-torch",
    "Type": "Special Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "50",
    "Coverage": "100",
    "Range": "5",
    "Shot Energy": "30",
    "Shot Heat": "100",
    "Targeting": "10",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "12",
    "Damage Max": "14",
    "Damage Type": "Thermal",
    "Heat Transfer": "Massive (80)",
    "Disruption": "40",
    "Salvage": "-8",
    "Index": 1036
  },
  "Asb. P-sword": {
    "Slot": "Weapon",
    "Name": "Asb. P-sword",
    "Type": "Slashing Weapon",
    "Rating": "5",
    "Size": "1",
    "Mass": "3",
    "Integrity": "60",
    "Coverage": "15",
    "Range": "2",
    "Shot Energy": "8",
    "Shot Heat": "5",
    "Delay": "50",
    "Projectile Count": "1",
    "Damage Min": "31",
    "Damage Max": "48",
    "Damage Type": "Slashing",
    "Critical": "5% Sever",
    "Index": 1037
  },
  "Asb. Rifle": {
    "Slot": "Weapon",
    "Name": "Asb. Rifle",
    "Type": "Ballistic Gun",
    "Rating": "1",
    "Size": "1",
    "Mass": "2",
    "Integrity": "100",
    "Coverage": "100",
    "Range": "18",
    "Shot Energy": "1",
    "Shot Matter": "3",
    "Shot Heat": "20",
    "Recoil": "2",
    "Projectile Count": "1",
    "Damage Min": "10",
    "Damage Max": "15",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Index": 1038
  },
  "Asb. Shotgun": {
    "Slot": "Weapon",
    "Name": "Asb. Shotgun",
    "Type": "Ballistic Gun",
    "Rating": "3",
    "Size": "1",
    "Mass": "3",
    "Integrity": "125",
    "Coverage": "100",
    "Range": "12",
    "Shot Energy": "1",
    "Shot Matter": "4",
    "Shot Heat": "25",
    "Recoil": "10",
    "Targeting": "-10",
    "Projectile Count": "2",
    "Damage Min": "9",
    "Damage Max": "18",
    "Damage Type": "Kinetic",
    "Critical": "1% Destroy",
    "Salvage": "-2",
    "Index": 1039
  },
  "Vortex Shredder": {
    "Slot": "Weapon",
    "Name": "Vortex Shredder",
    "Type": "Slashing Weapon",
    "Rating": "8*",
    "Category": "Prototype",
    "Size": "6",
    "Mass": "200",
    "Integrity": "1000",
    "Coverage": "600",
    "Range": "2",
    "Targeting": "1000",
    "Projectile Count": "1",
    "Damage Min": "9999",
    "Damage Max": "9999",
    "Damage Type": "Entropic",
    "Index": 1040
  },
  "Centrium Claws": {
    "Slot": "Weapon",
    "Name": "Centrium Claws",
    "Type": "Slashing Weapon",
    "Rating": "8",
    "Size": "2",
    "Mass": "4",
    "Integrity": "100",
    "Range": "2",
    "Shot Energy": "10",
    "Shot Heat": "5",
    "Delay": "-100",
    "Projectile Count": "1",
    "Damage Min": "20",
    "Damage Max": "80",
    "Damage Type": "Slashing",
    "Critical": "10% Destroy",
    "Index": 1041
  },
  "T.R.O.L.L. Exoskeleton": {
    "Slot": "Propulsion",
    "Name": "T.R.O.L.L. Exoskeleton",
    "Type": "Leg",
    "Rating": "8",
    "Size": "3",
    "Integrity": "1",
    "Description": "Each active leg slot provides a 20% chance to kick targets out of the way instead of ramming them, resulting in no damage to self. Not applicable against huge targets.",
    "Time/Move": "40",
    "Drag": "30",
    "Energy/Move": "10",
    "Support": "85",
    "Penalty": "40",
    "Index": 1042
  }
};
},{}],"json/item_categories.json":[function(require,module,exports) {
module.exports = {
  "Matter": [],
  "Data Core": ["0b10"],
  "Derelict Log": ["Derelict"],
  "Schematic Archive": ["Derelict"],
  "Imprinter Data Core": ["Spoiler"],
  "A2 Data Core": ["Architects", "Redacted"],
  "A7 Data Core": ["Architects", "Spoiler"],
  "Architect Data Core": ["Redacted"],
  "MAIN.C Data Core": ["0b10", "Redacted"],
  "Scrap": ["Derelict"],
  "Protomatter": [],
  "Ion Engine": ["0b10"],
  "Lgt. Ion Engine": ["0b10"],
  "Backup Power I": ["0b10"],
  "Imp. Ion Engine": ["0b10"],
  "Rnf. Ion Engine": ["0b10"],
  "Hvy. Ion Engine": ["0b10"],
  "Cld. Ion Engine": ["0b10"],
  "Deuterium Engine": ["0b10"],
  "Lgt. Deuterium Engine": ["0b10"],
  "Backup Power III": ["0b10"],
  "Nuclear Core": ["0b10"],
  "Lgt. Nuclear Core": ["0b10"],
  "Imp. Deuterium Engine": ["0b10"],
  "Rnf. Deuterium Engine": ["0b10"],
  "Hyb. Deuterium Engine": ["0b10"],
  "Hvy. Deuterium Engine": ["0b10"],
  "Cld. Deuterium Engine": ["0b10"],
  "Enh. Nuclear Core": ["0b10"],
  "Mic. Nuclear Core": ["0b10"],
  "Mak. Power Source": ["Derelict"],
  "Angular Momentum Engine": ["0b10"],
  "Lgt. Angular Momentum Engine": ["0b10"],
  "F-cell Engine": ["0b10"],
  "Hyb. Fission Core": ["0b10"],
  "Fission Core": ["0b10"],
  "Lgt. Fission Core": ["0b10"],
  "Cold Fusion Reactor": ["0b10"],
  "Neutrino Core": ["0b10"],
  "Lgt. Neutrino Core": ["0b10"],
  "Rnf. Fission Core": ["0b10"],
  "Enh. Fission Core": ["0b10"],
  "Cld. Fission Core": ["0b10"],
  "Mic. Fission Core": ["0b10"],
  "Fusion Reactor": ["0b10"],
  "Antimatter Reactor": ["0b10"],
  "Hyb. Antimatter Reactor": ["0b10"],
  "Mic. Antimatter Reactor": ["0b10"],
  "Lgt. Antimatter Reactor": ["0b10"],
  "Rnf. Antimatter Reactor": ["0b10"],
  "Backup Power VII": ["0b10"],
  "Hvy. Antimatter Reactor": ["0b10"],
  "Mni. Fusion Reactor": ["0b10"],
  "Mic. Neutrino Core": ["0b10"],
  "Zio. Light DM Reactor": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Heavy DM Reactor": ["Derelict", "Spoiler", "Zionite"],
  "Particle Reactor": ["0b10"],
  "Lgt. Particle Reactor": ["0b10"],
  "Com. Particle Reactor": ["0b10"],
  "Cld. Antimatter Reactor": ["0b10"],
  "Graviton Reactor": ["0b10"],
  "Asb. Flux Generator": ["Golem", "Spoiler"],
  "Quantum Reactor": ["0b10"],
  "Lgt. Quantum Reactor": ["0b10"],
  "Rnf. Quantum Reactor": ["0b10"],
  "Imp. Quantum Reactor": ["0b10"],
  "Zero-point Reactor": ["0b10"],
  "Vortex Chain Reactor": ["0b10"],
  "Singularity Reactor": ["0b10"],
  "Lgt. Treads": ["0b10"],
  "Imp. Treads": ["0b10"],
  "Spk. Treads": ["Derelict"],
  "Arm. Treads": ["0b10"],
  "Adv. Treads": ["0b10"],
  "Med. Treads": ["0b10"],
  "Imp. Medium Treads": ["0b10"],
  "Spk. Medium Treads": ["Derelict"],
  "Arm. Medium Treads": ["0b10"],
  "Hvy. Treads": ["0b10"],
  "Adv. Medium Treads": ["0b10"],
  "Enh. Armored Medium Treads": ["0b10"],
  "Imp. Heavy Treads": ["0b10"],
  "Hvy. Siege Treads": ["0b10"],
  "Spk. Heavy Treads": ["Derelict"],
  "Biometal Medium Treads": ["0b10"],
  "Arm. Heavy Treads": ["0b10"],
  "Adv. Heavy Treads": ["0b10"],
  "Imp. Heavy Siege Treads": ["0b10"],
  "Centrium Heavy Treads": ["0b10"],
  "Megatreads": ["Derelict", "Spoiler"],
  "Biometal Heavy Treads": ["0b10"],
  "Exp. Biometal Heavy Treads": ["0b10"],
  "Enh. Armored Heavy Treads": ["0b10"],
  "Adv. Heavy Siege Treads": ["0b10"],
  "Hdn. Centrium Heavy Treads": ["0b10"],
  "Exp. Biometal Medium Treads": ["0b10"],
  "Aluminum Leg": ["0b10"],
  "Imp. Aluminum Leg": ["0b10"],
  "Carbon-fiber Leg": ["0b10"],
  "Titanium Leg": ["0b10"],
  "VSS Leg": ["0b10"],
  "Imp. Carbon-fiber Leg": ["0b10"],
  "Imp. Titanium Leg": ["0b10"],
  "Mak. Leg": ["Derelict"],
  "Flexi-carbon Leg": ["0b10"],
  "Arm. Leg": ["0b10"],
  "Imp. VSS Leg": ["0b10"],
  "Zio. Composite Leg I": ["Derelict", "Spoiler", "Zionite"],
  "Enh. Flexi-carbon Leg": ["0b10"],
  "Enh. Armored Leg": ["0b10"],
  "Myomer Leg": ["0b10"],
  "Adv. VSS Leg": ["0b10"],
  "Adv. Myomer Leg": ["0b10"],
  "Exp. Flexi-carbon Leg": ["0b10"],
  "Zio. Composite Leg II": ["Derelict", "Spoiler", "Zionite"],
  "Etherial Tendrils": ["Unobtainable"],
  "Biometal Leg": ["0b10"],
  "Enh. Biometal Leg": ["0b10"],
  "Exp. Myomer Leg": ["0b10"],
  "T.R.O.L.L. Exoskeleton": ["Derelict", "Spoiler", "Unobtainable"],
  "Asb. Alloy Leg": ["Golem", "Spoiler"],
  "Centrium Leg": ["0b10"],
  "Hdn. Centrium Leg": ["0b10"],
  "Exp. Biometal Leg": ["0b10"],
  "Zio. Supercomposite Leg": ["Derelict", "Spoiler", "Zionite"],
  "Potential Leg": ["Exile"],
  "Myomer Exoskeleton": ["Spoiler", "Testing"],
  "Wheel": ["0b10"],
  "Com. Wheel": ["0b10"],
  "Arm. Wheel": ["0b10"],
  "Arm. Huge Wheel": ["0b10"],
  "Centrium Wheel": ["0b10"],
  "Hdn. Centrium Wheel": ["0b10"],
  "Hover Unit": ["0b10"],
  "Backup Propulsion I": ["0b10"],
  "Imp. Hover Unit": ["0b10"],
  "Airjet": ["0b10"],
  "Aerolev Unit": ["0b10"],
  "Backup Propulsion III": ["0b10"],
  "Gravmag System": ["0b10"],
  "Asb. Hover System": ["Unobtainable"],
  "Imp. Airjet": ["0b10"],
  "Cld. Airjet": ["0b10"],
  "Imp. Gravmag System": ["0b10"],
  "Cld. Aerolev Unit": ["0b10"],
  "Cmb. Airjet": ["0b10"],
  "Gravmag Array": ["0b10"],
  "Mak. Hover Unit": ["Derelict"],
  "Zio. Glidesys I": ["Derelict", "Spoiler", "Zionite"],
  "Antigrav System": ["0b10"],
  "Gyrokinetic Inverter": ["0b10"],
  "Linear Gravjet": ["0b10"],
  "Cld. Gravmag System": ["0b10"],
  "Cmb. Gravmag System": ["0b10"],
  "Imp. Antigrav System": ["0b10"],
  "Imp. Gyrokinetic Inverter": ["0b10"],
  "Imp. Linear Gravjet": ["0b10"],
  "Backup Propulsion VII": ["0b10"],
  "Zio. Glidesys II": ["Derelict", "Spoiler", "Zionite"],
  "Cld. Antigrav System": ["0b10"],
  "Cmb. Antigrav System": ["0b10"],
  "Antigrav Array": ["0b10"],
  "Exp. Gyrokinetic Inverter": ["0b10"],
  "Cld. Linear Gravjet": ["0b10"],
  "Cmb. Linear Gravjet": ["0b10"],
  "Flight Unit": ["0b10"],
  "VTOL Module": ["0b10"],
  "Imp. Flight Unit": ["0b10"],
  "Cesium-ion Thruster": ["0b10"],
  "Surge Thruster": ["0b10"],
  "Imp. VTOL Module": ["0b10"],
  "Xenon Bombardment Thruster": ["0b10"],
  "Imp. Cesium-ion Thruster": ["0b10"],
  "Cld. VTOL Module": ["0b10"],
  "Mak. Flight Unit": ["Derelict"],
  "Nuclear Pulse Thruster": ["0b10"],
  "Imp. Surge Thruster": ["0b10"],
  "Mni. Nuclear Pulse Thruster": ["0b10"],
  "Cld. Cesium-ion Thruster": ["0b10"],
  "Biomechanical Wings": ["0b10"],
  "Field Propulsion Drive": ["0b10"],
  "Cld. Nuclear Pulse Thruster": ["0b10"],
  "Exp. Cesium-ion Thruster": ["0b10"],
  "Nuclear Pulse Array": ["0b10"],
  "Impulse Thruster": ["0b10"],
  "Adv. Surge Thruster": ["0b10"],
  "Cld. Field Propulsion Drive": ["0b10"],
  "Field Propulsion Array": ["0b10"],
  "Diametric Drive": ["0b10"],
  "Flying Fortress v7": ["Exile"],
  "T-thruster": ["Exile", "Unobtainable"],
  "Integrated Tracker Drive": ["Spoiler", "Unobtainable"],
  "Q-thruster": ["0b10"],
  "Electron Diverter": ["0b10"],
  "Imp. Diametric Drive": ["0b10"],
  "Cld. Impulse Thruster": ["0b10"],
  "Impulse Thruster Array": ["0b10"],
  "Imp. Q-thruster": ["0b10"],
  "Cld. Q-thruster": ["0b10"],
  "Exp. Q-thruster": ["0b10"],
  "Desublimator": ["Architects", "Redacted"],
  "Fusion Compressor": ["0b10"],
  "Imp. Fusion Compressor": ["0b10"],
  "Power Amplifier": ["0b10"],
  "Adv. Power Amplifier": ["0b10"],
  "Exp. Power Amplifier": ["0b10"],
  "Thermal Converter": ["0b10"],
  "Imp. Thermal Converter": ["0b10"],
  "Exp. Thermal Converter": ["0b10"],
  "Thermal Generator": ["0b10"],
  "Imp. Thermal Generator": ["0b10"],
  "Adv. Thermal Generator": ["0b10"],
  "Exp. Thermal Generator": ["0b10"],
  "Heat Shielding": ["0b10"],
  "Imp. Heat Shielding": ["0b10"],
  "Cryofiber Web": ["0b10"],
  "Imp. Cryofiber Web": ["0b10"],
  "Adv. Cryofiber Web": ["0b10"],
  "Heat Sink": ["0b10"],
  "Imp. Heat Sink": ["0b10"],
  "Adv. Heat Sink": ["0b10"],
  "Exp. Heat Sink": ["0b10"],
  "Cooling System": ["0b10"],
  "Imp. Cooling System": ["0b10"],
  "Adv. Cooling System": ["0b10"],
  "Exp. Cooling System": ["0b10"],
  "Coolant Network": ["0b10"],
  "Asb. Nanovents": ["Golem", "Spoiler"],
  "2N-1CE's Frost Array": ["Spoiler", "Heroes", "Testing"],
  "Disposable Heat Sink": ["0b10"],
  "Coolant Injector": ["0b10"],
  "Imp. Coolant Injector": ["0b10"],
  "Adv. Coolant Injector": ["0b10"],
  "Exp. Coolant Injector": ["0b10"],
  "Sml. Storage Unit": ["0b10"],
  "Med. Storage Unit": ["0b10"],
  "Lrg. Storage Unit": ["0b10"],
  "Hcp. Storage Unit": ["0b10"],
  "Huge Storage Unit": ["0b10"],
  "Cargo Storage Unit": ["0b10"],
  "Humpback": ["Derelict"],
  "Lightpack 2.0": ["Exile"],
  "Sml. Battery": ["0b10"],
  "Med. Battery": ["0b10"],
  "Lrg. Battery": ["0b10"],
  "Hcp. Battery": ["0b10"],
  "Com. Battery": ["0b10"],
  "Energy Well": ["0b10"],
  "Imp. Energy Well": ["0b10"],
  "Adv. Energy Well": ["0b10"],
  "Exp. Energy Well": ["0b10"],
  "Zio. Biocell": ["Derelict", "Spoiler", "Zionite"],
  "Asb. Biocell Array": ["Golem", "Spoiler"],
  "Zio. Biocell Array": ["Derelict", "Spoiler", "Zionite"],
  "Superbattery": ["Exile"],
  "Sml. Matter Pod": ["0b10"],
  "Med. Matter Pod": ["0b10"],
  "Lrg. Matter Pod": ["0b10"],
  "Hcp. Matter Pod": ["0b10"],
  "Com. Matter Pod": ["0b10"],
  "YI-UF0's Bottomless Matter Pit": ["Derelict"],
  "Matter Compressor": ["0b10"],
  "Imp. Matter Compressor": ["0b10"],
  "Adv. Matter Compressor": ["0b10"],
  "Exp. Matter Compressor": ["0b10"],
  "Weight Redist. System": ["0b10"],
  "Adv. Weight Redist. System": ["0b10"],
  "Gravity Neutralizer": ["0b10"],
  "Adv. Gravity Neutralizer": ["0b10"],
  "Quantum Shading Machine": ["0b10"],
  "Adv. Quantum Shading Machine": ["0b10"],
  "Asb. Suspension Frame": ["Golem", "Spoiler"],
  "Asb. Metafiber Network": ["Golem", "Spoiler"],
  "Zio. Metafield Generator": ["Derelict", "Spoiler", "Zionite"],
  "ST Field Compressor": ["Architects", "Redacted"],
  "Structural Scanner": ["0b10"],
  "Trap Scanner": ["0b10"],
  "Imp. Trap Scanner": ["0b10"],
  "Mak. Trap Scanner": ["0b10"],
  "Adv. Trap Scanner": ["0b10"],
  "Triangulator": ["0b10"],
  "Visual Processing Unit": ["0b10"],
  "Adv. Visual Processing Unit": ["0b10"],
  "Enh. Optical Array": ["0b10"],
  "Exp. Optical Array": ["0b10"],
  "Spectral Analyzer": ["0b10"],
  "Sensor Array": ["0b10"],
  "Imp. Sensor Array": ["0b10"],
  "Adv. Sensor Array": ["0b10"],
  "Lrn. Sensor Array": ["0b10"],
  "Mak. Sensor Array": ["Derelict"],
  "Exp. Sensor Array": ["0b10"],
  "Signal Interpreter": ["0b10"],
  "Imp. Signal Interpreter": ["0b10"],
  "Adv. Signal Interpreter": ["0b10"],
  "Exp. Signal Interpreter": ["0b10"],
  "Active Sensor Suite": ["0b10"],
  "Terrain Scanner": ["0b10"],
  "Imp. Terrain Scanner": ["0b10"],
  "Adv. Terrain Scanner": ["0b10"],
  "Mak. Terrain Scanner": ["Derelict"],
  "Lrn. Terrain Scanner": ["0b10"],
  "Exp. Terrain Scanner": ["0b10"],
  "Surveybot 24 Scanner": ["Derelict", "Spoiler"],
  "Seismic Detector": ["0b10"],
  "Terrain Scan Processor": ["0b10"],
  "Imp. Terrain Scan Processor": ["0b10"],
  "Mak. Terrain Scan Processor": ["Derelict"],
  "Adv. Terrain Scan Processor": ["0b10"],
  "Exp. Terrain Scan Processor": ["0b10"],
  "Surveybot 24 Chip": ["Derelict", "Spoiler"],
  "Transport Network Coupler": ["0b10"],
  "Machine Analyzer": ["0b10"],
  "Modified TNC": ["Exile"],
  "0b10 Decoder Chip [Generic]": ["Derelict"],
  "0b10 Decoder Chip [Looter]": ["Derelict"],
  "0b10 Decoder Chip [Scout]": ["Derelict"],
  "0b10 Decoder Chip [Skirmisher]": ["Derelict"],
  "0b10 Alert Chip": ["Exile"],
  "Salvage Targeting Computer": ["0b10"],
  "Imp. Salvage Targeting Computer": ["0b10"],
  "Mak. Salvage Targeting Computer": ["Derelict"],
  "Adv. Salvage Targeting Computer": ["0b10"],
  "Asb. Combat Suite": ["Golem", "Spoiler"],
  "Targeting Computer": ["0b10"],
  "Imp. Targeting Computer": ["0b10"],
  "Adv. Targeting Computer": ["0b10"],
  "Exp. Targeting Computer": ["0b10"],
  "Tactical Coordination Suite": ["Derelict"],
  "Melee Analysis Suite": ["0b10"],
  "Imp. Melee Analysis Suite": ["0b10"],
  "Adv. Melee Analysis Suite": ["0b10"],
  "Exp. Melee Analysis Suite": ["0b10"],
  "Launcher Guidance Computer": ["0b10"],
  "Imp. Launcher Guidance Computer": ["0b10"],
  "Adv. Launcher Guidance Computer": ["0b10"],
  "Target Analyzer": ["0b10"],
  "Imp. Target Analyzer": ["0b10"],
  "Adv. Target Analyzer": ["0b10"],
  "Exp. Target Analyzer": ["0b10"],
  "Core Analyzer": ["0b10"],
  "Imp. Core Analyzer": ["0b10"],
  "Adv. Core Analyzer": ["0b10"],
  "Exp. Core Analyzer": ["0b10"],
  "Armor Integrity Analyzer": ["0b10"],
  "Imp. Armor Integrity Analyzer": ["0b10"],
  "Adv. Armor Integrity Analyzer": ["0b10"],
  "Exp. Armor Integrity Analyzer": ["0b10"],
  "Recoil Stabilizer": ["0b10"],
  "Recoil Nullifier": ["0b10"],
  "Matter Filter": ["0b10"],
  "Prc. Matter Filter": ["0b10"],
  "Energy Filter": ["0b10"],
  "Prc. Energy Filter": ["0b10"],
  "Particle Charger": ["0b10"],
  "Imp. Particle Charger": ["0b10"],
  "Adv. Particle Charger": ["0b10"],
  "Particle Accelerator": ["0b10"],
  "Imp. Particle Accelerator": ["0b10"],
  "Adv. Particle Accelerator": ["0b10"],
  "Kinecellerator": ["0b10"],
  "Imp. Kinecellerator": ["0b10"],
  "Adv. Kinecellerator": ["0b10"],
  "Launcher Loader": ["0b10"],
  "Quantum Capacitor": ["0b10"],
  "Weapon Cycler": ["0b10"],
  "Imp. Weapon Cycler": ["0b10"],
  "Adv. Weapon Cycler": ["0b10"],
  "Exp. Weapon Cycler": ["0b10"],
  "Microactuators": ["0b10"],
  "Nanoactuators": ["0b10"],
  "Femtoactuators": ["0b10"],
  "Actuator Array": ["0b10"],
  "Imp. Actuator Array": ["0b10"],
  "Adv. Actuator Array": ["0b10"],
  "Exp. Actuator Array": ["0b10"],
  "Force Booster": ["0b10"],
  "Imp. Force Booster": ["0b10"],
  "Adv. Force Booster": ["0b10"],
  "Stasis Canceller": ["0b10"],
  "Imp. Stasis Canceller": ["0b10"],
  "Transmission Jammer": ["0b10"],
  "Mak. Transmission Jammer": ["Derelict"],
  "Imp. Transmission Jammer": ["0b10"],
  "Adv. Transmission Jammer": ["0b10"],
  "Exp. Transmission Jammer": ["0b10"],
  "ECM Suite": ["0b10"],
  "Imp. ECM Suite": ["0b10"],
  "Mak. ECM Suite": ["0b10"],
  "Adv. ECM Suite": ["0b10"],
  "Exp. ECM Suite": ["0b10"],
  "Reaction Control System": ["0b10"],
  "Imp. Reaction Control System": ["0b10"],
  "Adv. Reaction Control System": ["0b10"],
  "Exp. Reaction Control System": ["0b10"],
  "Graphene Brace": ["0b10"],
  "Phase Shifter": ["0b10"],
  "Imp. Phase Shifter": ["0b10"],
  "Adv. Phase Shifter": ["0b10"],
  "Exp. Phase Shifter": ["0b10"],
  "Cloaking Device": ["0b10"],
  "Mak. Cloaking Device": ["Derelict"],
  "Imp. Cloaking Device": ["0b10"],
  "Adv. Cloaking Device": ["0b10"],
  "Exp. Cloaking Device": ["0b10"],
  "Cloak of Protection": ["Exile"],
  "5H-AD0's Cloak": ["Derelict", "Spoiler"],
  "Core Shielding": ["0b10"],
  "Imp. Core Shielding": ["0b10"],
  "Exp. Core Shielding": ["0b10"],
  "Power Shielding": ["0b10"],
  "Imp. Power Shielding": ["0b10"],
  "Exp. Power Shielding": ["0b10"],
  "Propulsion Shielding": ["0b10"],
  "Imp. Propulsion Shielding": ["0b10"],
  "Exp. Propulsion Shielding": ["0b10"],
  "Utility Shielding": ["0b10"],
  "Imp. Utility Shielding": ["0b10"],
  "Exp. Utility Shielding": ["0b10"],
  "Weapon Shielding": ["0b10"],
  "Imp. Weapon Shielding": ["0b10"],
  "Exp. Weapon Shielding": ["0b10"],
  "Zio. Weapon Casing": ["Derelict", "Spoiler", "Zionite"],
  "Lgt. Armor Plating": ["0b10"],
  "Med. Armor Plating": ["0b10"],
  "Hvy. Armor Plating": ["0b10"],
  "Zio. Light Carapace": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Heavy Carapace": ["Derelict", "Spoiler", "Zionite"],
  "Hrd. Light Armor Plating": ["0b10"],
  "Hrd. Medium Armor Plating": ["0b10"],
  "Hrd. Heavy Armor Plating": ["0b10"],
  "Imp. Light Armor Plating": ["0b10"],
  "Imp. Medium Armor Plating": ["0b10"],
  "Imp. Heavy Armor Plating": ["0b10"],
  "Lyr. Light Armor Plating": ["0b10"],
  "Mak. Armor Plating": ["Derelict"],
  "Mak. Ablative Armor": ["Derelict"],
  "Lyr. Medium Armor Plating": ["0b10"],
  "Lyr. Heavy Armor Plating": ["0b10"],
  "Centrium Light Armor Plating": ["0b10"],
  "Centrium Medium Armor Plating": ["0b10"],
  "Centrium Heavy Armor Plating": ["0b10"],
  "Centrium Linked Plating": ["Architects", "Redacted"],
  "Reactive Plating": ["0b10"],
  "Med. Reactive Plating": ["0b10"],
  "Mak. Kinetic Plating": ["Derelict"],
  "Hvy. Reactive Plating": ["0b10"],
  "Reflective Plating": ["0b10"],
  "Med. Reflective Plating": ["0b10"],
  "Mak. Thermal Plating": ["Derelict"],
  "Hvy. Reflective Plating": ["0b10"],
  "8R-AWN's Armor/TH": ["Exile", "Spoiler"],
  "8R-AWN's Armor/EX": ["Exile", "Spoiler"],
  "Insulated Plating": ["0b10"],
  "Med. Insulated Plating": ["0b10"],
  "Hvy. Insulated Plating": ["0b10"],
  "Damper Plating": ["0b10"],
  "Zio. Shade Carapace": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Shade Armor": ["Derelict", "Spoiler", "Zionite"],
  "Asb. Alloy Armor": ["Golem", "Spoiler"],
  "Active Cooling Armor": ["0b10"],
  "Powered Armor": ["0b10"],
  "Imp. Powered Armor": ["0b10"],
  "Adv. Powered Armor": ["0b10"],
  "Exp. Powered Armor": ["Lab", "0b10"],
  "1C-UTU's Buckler": ["Derelict", "Heroes", "Spoiler"],
  "Lgt. Regenerative Plating": ["0b10", "Spoiler"],
  "Med. Regenerative Plating": ["0b10", "Lab", "Spoiler"],
  "Hvy. Regenerative Plating": ["0b10", "Lab", "Spoiler"],
  "SHELL Armor": ["Spoiler", "Testing"],
  "Phase Armor": ["Alien", "Quarantine", "Spoiler"],
  "Focal Shield": ["0b10"],
  "Imp. Focal Shield": ["0b10"],
  "Adv. Focal Shield": ["0b10"],
  "Exp. Focal Shield": ["0b10"],
  "Thermal Shield": ["0b10"],
  "Imp. Thermal Shield": ["0b10"],
  "Adv. Thermal Shield": ["0b10"],
  "Exp. Thermal Shield": ["0b10"],
  "Thermal Barrier": ["0b10"],
  "Beam Splitter": ["0b10"],
  "Thermal Defense Suite": ["0b10"],
  "Imp. Thermal Defense Suite": ["0b10"],
  "Adv. Thermal Defense Suite": ["0b10"],
  "Exp. Thermal Defense Suite": ["0b10"],
  "Shock Absorption System": ["0b10"],
  "Imp. Shock Absorption System": ["0b10"],
  "Exp. Shock Absorption System": ["0b10"],
  "EM Shield": ["0b10"],
  "EM Disruption Field": ["0b10"],
  "Adv. EM Disruption Field": ["0b10"],
  "Exp. EM Disruption Field": ["0b10"],
  "ME-RLN's Chromatic Screen": ["Derelict", "Heroes", "Spoiler"],
  "Hardlight Generator": ["0b10"],
  "Imp. Hardlight Generator": ["0b10"],
  "Adv. Hardlight Generator": ["0b10"],
  "Exp. Hardlight Generator": ["Spoiler", "Testing"],
  "Shield Generator": ["0b10"],
  "Imp. Shield Generator": ["0b10"],
  "Adv. Shield Generator": ["0b10"],
  "Exp. Shield Generator": ["0b10"],
  "Force Field": ["0b10"],
  "Imp. Force Field": ["0b10"],
  "Adv. Force Field": ["0b10"],
  "Exp. Force Field": ["0b10"],
  "7V-RTL's Ultimate Field": ["Derelict", "Heroes", "Spoiler"],
  "Vortex Field Projector": ["Derelict", "Spoiler"],
  "Remote Shield": ["0b10"],
  "Imp. Remote Shield": ["0b10"],
  "Adv. Remote Shield": ["0b10"],
  "Remote Force Field": ["0b10"],
  "Imp. Remote Force Field": ["0b10"],
  "Energy Mantle": ["0b10"],
  "Imp. Energy Mantle": ["0b10"],
  "AEGIS Remote Shield": ["Lab", "Spoiler", "Testing"],
  "Phase Redirector": ["Alien", "Quarantine", "Spoiler"],
  "Point Defense System": ["0b10"],
  "Point Defense Array": ["0b10"],
  "Antimissile System": ["0b10"],
  "EX Chip 1": ["Exile"],
  "Hacking Suite": ["0b10"],
  "Mak. Hacking Suite": ["Derelict"],
  "Imp. Hacking Suite": ["0b10"],
  "Adv. Hacking Suite": ["0b10"],
  "Exp. Hacking Suite": ["0b10"],
  "System Mapper": ["Spoiler", "Testing"],
  "Deep Network Scanner": ["Lab", "Spoiler"],
  "Architect God Chip A": ["Architects", "Redacted"],
  "EX Chip 2": ["Exile"],
  "System Shield": ["0b10"],
  "Mak. System Shield": ["Derelict"],
  "Imp. System Shield": ["0b10"],
  "Adv. System Shield": ["0b10"],
  "Exp. System Shield": ["0b10"],
  "Ghost Barrier": ["Spoiler", "Testing"],
  "Quantum Router": ["Lab", "Spoiler"],
  "Architect God Chip D": ["Architects", "Redacted"],
  "Authchip [R/Combat]": ["0b10"],
  "Authchip [R/NC]": ["0b10"],
  "Authchip [Armor]": ["0b10"],
  "Authchip [Device]": ["0b10"],
  "Authchip [Power]": ["0b10"],
  "Authchip [Processor]": ["0b10"],
  "Authchip [Propulsion]": ["0b10"],
  "Authchip [Storage]": ["0b10"],
  "Authchip [Weapon]": ["0b10"],
  "Relay Coupler [NC]": ["0b10"],
  "Relay Coupler [C]": ["0b10"],
  "Relay Coupler [ARC]": ["0b10"],
  "Relay Coupler [Swarmer]": ["0b10"],
  "Relay Coupler [Cutter]": ["0b10"],
  "Relay Coupler [Grunt]": ["0b10"],
  "Relay Coupler [Brawler]": ["0b10"],
  "Relay Coupler [Duelist]": ["0b10"],
  "Relay Coupler [Sentry]": ["0b10"],
  "Relay Coupler [Demolisher]": ["0b10"],
  "Relay Coupler [Specialist]": ["0b10"],
  "Relay Coupler [Hunter]": ["0b10"],
  "Relay Coupler [Heavy]": ["0b10"],
  "Relay Coupler [Behemoth]": ["0b10"],
  "Relay Coupler [Programmer]": ["0b10", "Spoiler", "Zion"],
  "Skeleton Box": ["Exile"],
  "01-MTF's Autohacker": ["Derelict", "Spoiler"],
  "Component Analysis Suite": ["0b10"],
  "Imp. Component Analysis Suite": ["0b10"],
  "Adv. Component Analysis Suite": ["0b10"],
  "Dynamic Insulation System": ["0b10"],
  "Imp. Dynamic Insulation System": ["0b10"],
  "Adv. Dynamic Insulation System": ["0b10"],
  "System Guard": ["0b10"],
  "Imp. System Guard": ["0b10"],
  "Exp. System Guard": ["0b10"],
  "Corruption Screen": ["0b10"],
  "Imp. Corruption Screen": ["0b10"],
  "Adv. Corruption Screen": ["0b10"],
  "Mak. System Restoration Module": ["Derelict"],
  "System Restoration Module": ["0b10"],
  "Imp. System Restoration Module": ["0b10"],
  "Adv. System Restoration Module": ["0b10"],
  "System Purifier": ["0b10"],
  "Exp. System Purifier": ["0b10"],
  "Tractor Beam": ["0b10"],
  "Hpw. Tractor Beam": ["0b10"],
  "Lrn. Tractor Beam": ["0b10"],
  "Mobile Refinery Mk. CCLXVII": ["Derelict", "Spoiler", "Zion"],
  "Trap Extractor": ["0b10"],
  "Imp. Trap Extractor": ["0b10"],
  "Adv. Trap Extractor": ["0b10"],
  "Trap Reconfigurator": ["Exile"],
  "Recalibrator": ["0b10"],
  "Imp. Recalibrator": ["0b10"],
  "Adv. Recalibrator": ["0b10"],
  "Field Recycling Unit": ["0b10"],
  "Imp. Field Recycling Unit": ["0b10"],
  "Adv. Field Recycling Unit": ["0b10"],
  "Exp. Field Recycling Unit": ["0b10"],
  "Drone Bay": ["0b10"],
  "Z-Drone Bay": ["Derelict", "Spoiler", "Zionite"],
  "Mni. Drone Bay": ["0b10"],
  "Mapping Drone Bay": ["Derelict"],
  "Adv. Drone Bay": ["0b10"],
  "Bomb Drone Bay": ["Derelict"],
  "Thief Drone Bay": ["Derelict"],
  "Decoy Drone Bay": ["Derelict"],
  "Splice Drone Bay": ["Derelict"],
  "Combat Drone Bay": ["Derelict", "Spoiler"],
  "Stealth Drone Bay": ["0b10"],
  "Assault Drone Bay": ["Derelict", "Spoiler"],
  "Supersonic Drone Bay": ["Exile"],
  "Sensor Drone Bay": ["Derelict"],
  "Hacking Drone Bay": ["Derelict", "Spoiler", "Zion"],
  "Army-in-a-Box": ["Exile"],
  "Minesniffer Drone Bay": ["Derelict", "Spoiler", "Warlord"],
  "Wardrone Bay": ["Derelict", "Spoiler"],
  "Bomb Factory No. 2": ["Derelict", "Spoiler"],
  "Mobile Assembly Unit": ["Spoiler"],
  "Heart of Steel": ["Derelict", "Spoiler"],
  "GOLEM Unit": ["Golem", "Spoiler"],
  "PSU Rigger": ["Exile"],
  "Phasing AFG": ["Derelict", "Spoiler", "Zion"],
  "AS-neutralizer No. 17b": ["Exile", "Spoiler"],
  "Chronowheel": ["Exile"],
  "Dimensional Node Initializer": ["Alien", "Quarantine", "Spoiler"],
  "Transdimensional Reconstructor": ["Alien", "Lab", "Quarantine", "S7 Hangar", "Spoiler"],
  "Hpw. Transdimensional Reconstructor": ["Alien", "Quarantine", "S7 Hangar", "Spoiler"],
  "Core Expander": ["Alien", "Lab", "S7 LRC Lab", "Spoiler"],
  "Core Regenerator": ["Alien", "Lab", "S7 Guarded", "Redacted"],
  "Integrity Redistributor": ["Alien", "S7 LRC Lab", "S7 Unguarded", "Redacted"],
  "Integrated Dissipator": ["Alien", "Lab", "S7 LRC Lab", "S7 Unguarded", "Spoiler"],
  "Supercharged Integrated Dissipator": ["Alien", "Spoiler"],
  "Integrated Thermoelectric Network": ["Alien", "S7 Guarded", "Spoiler"],
  "Integrated Reactor": ["Alien", "Lab", "S7 Unguarded", "S7 LRC Lab", "Spoiler"],
  "Supercharged Integrated Reactor": ["Alien", "Spoiler"],
  "Core Membrane": ["Alien", "S7 Guarded", "Redacted"],
  "Navigation Efficiency Matrix": ["Alien", "S7 Guarded", "Redacted"],
  "Core Reset Matrix": ["Alien", "Lab", "Quarantine", "S7 Unguarded", "Spoiler"],
  "Subatomic Replicator": ["Alien", "Quarantine", "Spoiler"],
  "Terrabomb": ["Alien", "Quarantine", "S7 Hangar", "Spoiler"],
  "Matter Drive": ["Alien", "Quarantine", "S7 Hangar", "Spoiler"],
  "LRC Armor": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Storage": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Energy Well": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Matter Compressor": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Boosters": ["Alien", "S7 LRC Lab", "Redacted"],
  "LRC Insulator": ["Alien", "S7 LRC Lab", "Redacted"],
  "Integrated Mediator": ["Alien", "Lab", "S7 Unguarded", "Redacted"],
  "Core Physics Calibrator": ["Alien", "S7 Guarded", "Redacted"],
  "Spacefold Activator": ["Alien", "S7 Unguarded", "Redacted"],
  "LC Capacitor": ["Alien", "Lab", "Redacted"],
  "Microwarp Drive": ["Alien", "S7 Unguarded", "Redacted"],
  "EM Pulse Gun": ["0b10"],
  "Hvy. EM Pulse Gun": ["0b10"],
  "EM Shotgun": ["0b10"],
  "Imp. EM Shotgun": ["0b10"],
  "Shock Rifle": ["0b10"],
  "Riot Gun": ["Derelict"],
  "Hvy. EM Shotgun": ["0b10"],
  "Lightning Gun": ["0b10"],
  "Hvy. Riot Gun": ["Derelict"],
  "Arc Projector": ["0b10"],
  "Prc. Shock Rifle": ["0b10"],
  "Hpw. Shock Rifle": ["0b10"],
  "Arc Thrower": ["Derelict"],
  "Imp. Lightning Gun": ["0b10"],
  "Tesla Rifle": ["0b10"],
  "Imp. Arc Projector": ["0b10"],
  "Hvy. Tesla Rifle": ["0b10"],
  "Hyp. EM Gauss Rifle": ["Lab", "Spoiler", "Testing"],
  "Imp. Arc Thrower": ["0b10"],
  "01-MTF's Shockpuncher": ["Derelict", "Spoiler"],
  "Gamma Rifle": ["0b10"],
  "Tachyon Dispersion Ray": ["Lab", "Spoiler", "Testing"],
  "Immobilizer": ["0b10"],
  "Modified EM Gauss Rifle": ["Spoiler"],
  "AWS/EX-DEC": ["Exile"],
  "Enh. Gamma Rifle": ["0b10"],
  "Med. Laser": ["0b10"],
  "Sml. Laser": ["0b10"],
  "Backup Laser I": ["0b10"],
  "Beam Rifle": ["0b10"],
  "Particle Gun": ["0b10"],
  "Spread Laser": ["0b10"],
  "Imp. Medium Laser": ["0b10"],
  "Pulse Rifle": ["0b10"],
  "Field Laser": ["0b10"],
  "Backup Laser III": ["0b10"],
  "Hvy. Particle Gun": ["0b10"],
  "Prc. Beam Rifle": ["0b10"],
  "Adv. Beam Rifle": ["0b10"],
  "Hvy. Laser": ["0b10"],
  "Gatling Laser": ["0b10"],
  "Cld. Pulse Rifle": ["0b10"],
  "Hpw. Field Laser": ["0b10"],
  "Imp. Spread Laser": ["0b10"],
  "Mak. Laser": ["Derelict"],
  "Plasma Rifle": ["0b10"],
  "Thermic Laser": ["0b10"],
  "Force Rifle": ["0b10"],
  "Beamcaster": ["Derelict"],
  "Storm Laser": ["Derelict", "Spoiler", "Zion"],
  "Imp. Heavy Laser": ["0b10"],
  "Zio. Laser-S": ["Derelict", "Spoiler", "Zionite"],
  "Wave Gun": ["0b10"],
  "Variable Charge Gun": ["0b10"],
  "Hvy. Beamcaster": ["Derelict"],
  "Cld. Plasma Rifle": ["0b10"],
  "Enh. Force Rifle": ["0b10"],
  "Hvy. Gatling Laser": ["0b10"],
  "Zio. Phaser-S": ["Derelict", "Spoiler", "Zionite"],
  "Phase Gun": ["0b10"],
  "Dispersion Rifle": ["0b10"],
  "PD Laser": ["0b10"],
  "Backup Laser VII": ["0b10"],
  "Plasma Storm": ["Derelict", "Spoiler", "Warlord"],
  "Adv. Plasma Rifle": ["0b10"],
  "Hvy. Wave Gun": ["0b10"],
  "Adv. Variable Charge Gun": ["0b10"],
  "Cld. Phase Gun": ["0b10"],
  "Lrn. Gatling Laser": ["Architects", "Redacted"],
  "Warp Gun": ["Spoiler", "Testing"],
  "Vortex Rifle": ["Derelict", "Spoiler", "Warlord"],
  "Zio. Laser-M": ["Derelict", "Spoiler", "Zionite"],
  "AWS/Thermal": ["Exile"],
  "Quantum Rifle": ["0b10"],
  "Prc. Phase Gun": ["0b10"],
  "Hvy. Dispersion Rifle": ["0b10"],
  "Vortex Shotgun": ["Derelict", "Spoiler", "Warlord"],
  "Vortex Rail": ["Derelict", "Spoiler", "Warlord"],
  "Zio. Phaser-M": ["Derelict", "Spoiler", "Zionite"],
  "Enh. Quantum Rifle": ["0b10"],
  "Hvy. Quantum Rifle": ["Spoiler", "Testing"],
  "Zio. Laser-H": ["Derelict", "Spoiler", "Zionite"],
  "Zio. Phaser-H": ["Derelict", "Spoiler", "Zionite"],
  "Gatling Beam": ["Architects", "Redacted"],
  "Sigix Sheargun": ["Alien", "S7 Hangar", "Redacted"],
  "Sigix Shearcannon": ["Alien", "S7 Guarded", "S7 Hangar", "Redacted"],
  "Drained L-Cannon": ["Alien", "S7 Hangar", "Redacted"],
  "L-Cannon": ["Alien", "Redacted"],
  "Modified Sigix Sheargun": ["Alien", "Architects", "Redacted"],
  "Lgt. EM Pulse Cannon": ["0b10"],
  "EM Pulse Cannon": ["0b10"],
  "Imp. EM Pulse Cannon": ["0b10"],
  "Proton Cannon": ["0b10"],
  "Lrn. Proton Cannon": ["0b10"],
  "Disruptor Cannon": ["0b10"],
  "Hvy. Proton Cannon": ["0b10"],
  "HERF Cannon": ["0b10"],
  "Hvy. Disruptor Cannon": ["0b10"],
  "Cld. Proton Cannon": ["0b10"],
  "Proton Burst Cannon": ["0b10"],
  "Com. HERF Cannon": ["0b10"],
  "Latent Energy Streamer": ["Exile"],
  "NK-0LA's Tesla Doomcannon": ["Derelict", "Heroes", "Spoiler"],
  "EMDS": ["Spoiler"],
  "Hpw. Disruptor Cannon": ["Spoiler", "Testing"],
  "Beam Cannon": ["0b10"],
  "Particle Cannon": ["0b10"],
  "Adv. Beam Cannon": ["0b10"],
  "Hvy. Particle Cannon": ["0b10"],
  "Ion Cannon": ["0b10"],
  "Hvy. Ion Cannon": ["0b10"],
  "Plasma Cannon": ["0b10"],
  "Cld. Particle Cannon": ["0b10"],
  "Phase Cannon": ["0b10"],
  "Hvy. Plasma Cannon": ["0b10"],
  "Cld. Plasma Cannon": ["0b10"],
  "Com. Ion Cannon": ["0b10"],
  "Ion Burst Cannon": ["0b10"],
  "Adv. Plasma Cannon": ["0b10"],
  "Hvy. Phase Cannon": ["0b10"],
  "Neutron Cannon": ["0b10"],
  "Matter Neutralizer": ["0b10"],
  "Hvy. Neutron Cannon": ["0b10"],
  "Lrn. Phase Cannon": ["0b10"],
  "Cld. Phase Cannon": ["0b10"],
  "Vortex Cannon": ["Derelict", "Spoiler", "Warlord"],
  "Gui. Plasma Cannon": ["Exile"],
  "Nova Cannon": ["0b10"],
  "Imp. Matter Neutralizer": ["0b10"],
  "Vortex Driver": ["Derelict", "Spoiler", "Warlord"],
  "Zio. Alpha Cannon": ["Derelict", "Spoiler", "Zionite"],
  "Asb. Focal Cannon": ["Golem", "Spoiler"],
  "Enh. Nova Cannon": ["0b10"],
  "Firepult": ["Exile"],
  "YOLO Cannon": ["Exile"],
  "Potential Cannon": ["Lab", "Spoiler", "Testing"],
  "Warp Cannon": ["Lab", "Redacted"],
  "Cld. Nova Cannon": ["Spoiler", "Testing"],
  "Null Cannon": ["Spoiler", "Testing"],
  "Imp. Potential Cannon": ["Spoiler", "Testing"],
  "Disintegrator": ["Spoiler", "Testing"],
  "Core Cannon": ["Alien", "Quarantine", "Spoiler"],
  "Zio. Alpha Cannon Mk. II": ["Derelict", "Spoiler", "Zionite"],
  "BFG-9k Vortex Edition": ["Exile", "Spoiler", "Warlord"],
  "Assault Rifle": ["0b10"],
  "Lgt. Assault Rifle": ["0b10"],
  "Hvy. Assault Rifle": ["0b10"],
  "Autogun": ["0b10"],
  "Shotgun": ["0b10"],
  "Battle Rifle": ["Derelict"],
  "Imp. Assault Rifle": ["0b10"],
  "Minigun": ["0b10"],
  "Hpw. Shotgun": ["0b10"],
  "Asb. Shotgun": ["Unobtainable"],
  "Barrage Gun": ["Derelict"],
  "Enh. Autogun": ["0b10"],
  "Gauss Rifle": ["0b10"],
  "Asb. Gauss Rifle": ["Unobtainable"],
  "Flak Gun": ["0b10"],
  "Prc. Assault Rifle": ["0b10"],
  "Hvy. Battle Rifle": ["Derelict"],
  "Mak. Shrapnel Gun": ["Derelict"],
  "Coil Gun": ["0b10"],
  "Hyp. Gauss Rifle": ["0b10"],
  "Hvy. Machine Gun": ["0b10"],
  "Imp. Heavy Machine Gun": ["0b10"],
  "Com. Gauss Rifle": ["0b10", "Spoiler", "Unobtainable"],
  "XL Autogun Subcomponent": ["Exile"],
  "KE Penetrator": ["0b10"],
  "Hyp. Coil Gun": ["0b10"],
  "Enh. Coil Gun": ["0b10"],
  "Com. Coil Gun": ["0b10", "Spoiler", "Unobtainable"],
  "Railgun": ["0b10"],
  "Imp. KE Penetrator": ["0b10"],
  "Linked Autogun": ["0b10"],
  "AWS/Gauss": ["Exile"],
  "Hyp. Railgun": ["0b10"],
  "Adv. KE Penetrator": ["0b10"],
  "Helical Railgun": ["0b10"],
  "Com. Railgun": ["0b10", "Spoiler", "Unobtainable"],
  "XL Autogun Array": ["Exile"],
  "12-ASH's Boomstick": ["Derelict", "Heroes", "Spoiler"],
  "8R-AWN's Boregun": ["Exile", "Spoiler"],
  "Multirail": ["0b10"],
  "Hyp. Multirail": ["Spoiler", "Testing"],
  "5H-AD0's Sniper Rifle": ["Derelict", "Spoiler"],
  "A3's Sniper Rifle": ["Architects", "Redacted"],
  "Lgt. Cannon": ["0b10"],
  "Imp. Light Cannon": ["0b10"],
  "Battle Cannon": ["Derelict"],
  "Assault Cannon": ["0b10"],
  "Hvy. Assault Cannon": ["0b10"],
  "Flak Cannon": ["0b10"],
  "Adv. Assault Cannon": ["0b10"],
  "Gauss Cannon": ["0b10"],
  "Slug Cannon": ["Derelict"],
  "Mni. Assault Cannon": ["0b10"],
  "Magnetic Acceleration Cannon": ["0b10"],
  "Hvy. Flak Cannon": ["0b10"],
  "Bore Cannon": ["Derelict"],
  "Antimatter Cannon": ["0b10"],
  "Mass Driver": ["0b10"],
  "Hvy. Mass Driver": ["0b10"],
  "Enh. Gauss Cannon": ["0b10"],
  "Hyp. Gauss Cannon": ["0b10"],
  "Tri-rail Accelerator": ["0b10"],
  "Hardcell Cannon": ["0b10"],
  "Hvy. Gauss Cannon": ["0b10"],
  "Hyp. Mass Driver": ["0b10"],
  "Hvy. Autocannon": ["0b10"],
  "Lgt. Antimatter Cannon": ["0b10"],
  "Linear Accelerator": ["0b10"],
  "Hvy. Linear Accelerator": ["0b10"],
  "Com. Mass Driver": ["0b10"],
  "Hvy. Hardcell Cannon": ["0b10"],
  "Com. Linear Accelerator": ["0b10"],
  "Hyp. Linear Accelerator": ["Architects", "Redacted"],
  "Hcl. Linear Accelerator": ["0b10", "Spoiler"],
  "Graviton Cannon": ["0b10"],
  "Blast Cannon": ["Derelict", "Redacted", "Warlord"],
  "P1-3CE's Gatling Flakker": ["Derelict", "Heroes", "Spoiler"],
  "AWS/Autocannon": ["Exile"],
  "Perforator": ["Spoiler", "Testing"],
  "Omega Cannon": ["Spoiler", "Testing"],
  "EMP Blaster": ["0b10"],
  "Shock Bomb Launcher": ["0b10"],
  "Adv. EMP Blaster": ["0b10"],
  "Proton Missile Launcher": ["0b10"],
  "Imp. Proton Missile Launcher": ["0b10"],
  "Gui. EMP Blaster": ["0b10"],
  "Hvy. Shock Bomb Launcher": ["0b10"],
  "Tesla Bomb Launcher": ["0b10"],
  "Hvy. Proton Missile Launcher": ["0b10"],
  "Com. Tesla Bomb Launcher": ["0b10"],
  "Gamma Bomb Array": ["0b10"],
  "Enh. Gamma Bomb Array": ["0b10"],
  "Grenade Launcher": ["0b10"],
  "Rocket Launcher": ["0b10"],
  "Mni. Grenade Launcher": ["0b10"],
  "Imp. Grenade Launcher": ["0b10"],
  "Missile Launcher": ["0b10"],
  "Concussive RPG": ["0b10"],
  "YI-UF0's Doublenader": ["Derelict"],
  "Hvy. Rocket Launcher": ["0b10"],
  "Hvy. Missile Launcher": ["0b10"],
  "Gui. Missile Launcher": ["Derelict"],
  "Prc. Grenade Launcher": ["0b10"],
  "Rocket Array": ["0b10"],
  "Lrn. Missile Launcher": ["0b10"],
  "Imp. Concussive RPG": ["0b10"],
  "Prc. Rocket Launcher": ["0b10"],
  "Scatter Rocket Array": ["0b10"],
  "Thermoblaster": ["Derelict", "Warlord"],
  "Smartbomb Launcher": ["0b10"],
  "Mni. Smartbomb Launcher": ["0b10"],
  "Tiamat Missile Launcher": ["0b10"],
  "Micro-nuke Launcher": ["0b10"],
  "Adv. Concussive RPG": ["0b10"],
  "Neutron Missile Launcher": ["0b10"],
  "Fusion Bomb Launcher": ["0b10"],
  "Hellfire Missile Launcher": ["0b10"],
  "Adv. Micro-nuke Launcher": ["0b10"],
  "Tactical Quantum Warhead": ["0b10"],
  "Vortex Catalyst Activator": ["Derelict", "Spoiler", "Warlord"],
  "Chain Missile Launcher": ["Spoiler"],
  "Ragnarok Missile Launcher": ["0b10"],
  "Point Singularity Launcher": ["0b10"],
  "Gui. Micro-nuke Launcher": ["0b10"],
  "99-TNT's Nukerbomber": ["Derelict", "Heroes", "Spoiler"],
  "Z-bomb Delivery System": ["Spoiler", "Testing"],
  "Sigix Terminator": ["Alien", "Quarantine", "Spoiler"],
  "Supercharged Sigix Terminator": ["Alien", "Spoiler"],
  "Containment Facilitator": ["0b10"],
  "Datajack": ["0b10"],
  "Imp. Datajack": ["0b10"],
  "Adv. Datajack": ["0b10"],
  "Dirty Datajack": ["Derelict"],
  "Remote Datajack": ["0b10"],
  "Imp. Remote Datajack": ["0b10"],
  "Adv. Remote Datajack": ["0b10"],
  "Exp. Remote Datajack": ["0b10"],
  "Gui. Remote Datajack": ["Lab", "Spoiler", "Testing"],
  "ME-RLN's Wand": ["Derelict", "Spoiler"],
  "Field Lobotomy Kit": ["Exile"],
  "Mining Laser": ["0b10"],
  "Welding Torch": ["0b10"],
  "Plasma Cutter": ["0b10"],
  "Imp. Plasma Cutter": ["0b10"],
  "Flamer": ["Derelict"],
  "Enh. Flamer": ["Derelict"],
  "Plasma Flamer": ["Derelict"],
  "RU-N14's Throwing Claymores": ["Derelict", "Spoiler", "Zion"],
  "RU-N14's Throwing Claymores v3": ["Derelict", "Spoiler", "Warlord"],
  "Asb. P-torch": ["Unobtainable"],
  "AD-0RF's Magmablaster": ["Derelict", "Heroes", "Spoiler"],
  "Stasis Beam": ["0b10"],
  "Stasis Projector": ["0b10"],
  "Exp. Stasis Projector": ["0b10"],
  "Molecular Deconstructor": ["Derelict", "Spoiler"],
  "Hammer": ["0b10"],
  "Mace": ["0b10"],
  "Flail": ["0b10"],
  "Maul": ["0b10"],
  "Asb. Maul": ["Unobtainable"],
  "Hvy. Hammer": ["0b10"],
  "Hvy. Mace": ["0b10"],
  "Hvy. Flail": ["0b10"],
  "Great Maul": ["0b10"],
  "Powered Hammer": ["0b10"],
  "Mak. Hammer": ["Derelict"],
  "Power Maul": ["0b10"],
  "Asb. P-maul": ["Unobtainable"],
  "Impact Mace": ["0b10"],
  "Shock Maul": ["0b10"],
  "Thunder Hammer": ["0b10"],
  "Compactor": ["0b10", "Unobtainable"],
  "Gravity Flail": ["0b10"],
  "CL-ANK's Mallet": ["Derelict", "Heroes", "Spoiler"],
  "Core Stripper": ["Alien", "Quarantine", "Spoiler"],
  "Mining Claw": ["0b10"],
  "Etherial Claws": ["Unobtainable"],
  "Katana": ["0b10"],
  "Scythe": ["0b10"],
  "Axe": ["0b10"],
  "Blade Saw": ["0b10"],
  "Chainsword": ["0b10"],
  "Ripper": ["Derelict"],
  "Mak. Axe": ["Derelict"],
  "Mak. Sword": ["Derelict"],
  "Great Axe": ["0b10"],
  "Greatsword": ["0b10"],
  "Power Sword": ["0b10"],
  "Asb. P-sword": ["Unobtainable"],
  "Falx": ["0b10"],
  "Carbide Saw": ["0b10"],
  "Segregator": ["0b10"],
  "Tearclaws": ["Derelict"],
  "Phasing Sabre": ["Derelict"],
  "Plasma Sword": ["0b10"],
  "Ionic Axe": ["0b10"],
  "Dual-blade Saw": ["0b10"],
  "Vibroblade": ["0b10"],
  "Molecular Scythe": ["0b10"],
  "Centrium Greatsword": ["0b10"],
  "Master Tearclaws": ["Derelict", "Spoiler"],
  "Longsword +1": ["Exile"],
  "Nanosword": ["0b10"],
  "Particle Cleaver": ["Derelict", "Spoiler"],
  "Centrium Claws": ["Derelict", "Spoiler", "Unobtainable"],
  "1C-UTU's Sword \"Lootmaker\"": ["Derelict", "Heroes", "Spoiler"],
  "1C-UTU's Sword \"Choppy\"": ["Derelict", "Heroes", "Spoiler"],
  "Vortex Shredder": ["Derelict", "Spoiler", "Unobtainable", "Warlord"],
  "Sigix Broadsword": ["Alien", "Quarantine", "Spoiler"],
  "Spear": ["0b10"],
  "Mak. Spear": ["Derelict"],
  "CR-A16's Pointy Stick": ["Derelict", "Spoiler", "Zion"],
  "Hvy. Pick": ["0b10"],
  "Lance": ["0b10"],
  "Kinetic Spear": ["0b10"],
  "Force Lance": ["0b10"],
  "Plasma Lance": ["0b10"],
  "Enh. Force Lance": ["0b10"],
  "Vortex Lance": ["Derelict", "Spoiler"],
  "CR-A16's Behemoth Slayer": ["Derelict", "Spoiler", "Zion"],
  "Blade Trap": ["0b10"],
  "Segregator Trap": ["0b10"],
  "Explosive Trap": ["0b10"],
  "Heavy Explosive Trap": ["0b10"],
  "Tiamat Bomb Trap": ["0b10"],
  "Fusion Bomb Trap": ["0b10"],
  "Hellfire Trap": ["0b10"],
  "Armageddon Trap": ["0b10"],
  "Dirty Bomb Trap": ["Derelict"],
  "EMP Trap": ["0b10"],
  "Proton Bomb Trap": ["0b10"],
  "Tesla Bomb Trap": ["0b10"],
  "Gamma Bomb Trap": ["0b10"],
  "Shock Trap": ["0b10"],
  "EM Surge Trap": ["0b10"],
  "Fire Trap": ["0b10"],
  "Stasis Trap": ["0b10"],
  "Signal Generator": ["Derelict"],
  "Self-destruct Interrupter": ["Derelict"],
  "Deploy-a-Sentry": ["Exile"],
  "GAL Module": ["Derelict"],
  "Portable AFG": ["Spoiler", "Testing"],
  "SGEMP Prototype": ["Spoiler", "Testing"],
  "Terrabomb Derivative": ["Spoiler", "Testing"],
  "Sigix Containment Pod": ["Alien", "Quarantine", "Spoiler"],
  "Sigix Corpse": ["Alien", "Quarantine", "Spoiler"],
  "Sapper Charge": ["Derelict", "Warlord"],
  "Gamma Refractor": ["Redacted"],
  "Meganuke": ["Exile", "Redacted"],
  "Mak. Microthruster": ["Derelict"],
  "Detonator": ["Derelict"],
  "Splice Injector": ["Derelict"],
  "Mni. Tearclaws": ["Derelict"],
  "Swarm Drone Bay": ["Spoiler"],
  "DAS Cannon": ["Exile", "Spoiler"],
  "Asb. Blade": ["Unobtainable"],
  "Asb. F-torch": ["Unobtainable"],
  "Asb. Heavy Rifle": ["Unobtainable"],
  "Asb. Hover Unit": ["Unobtainable"],
  "Asb. Rifle": ["Unobtainable"],
  "Sigix Exoskeleton": ["Redacted", "S7 Hangar"]
};
},{}],"json/bot_categories.json":[function(require,module,exports) {
module.exports = {
  "01-MTF": ["Derelict", "Spoilers"],
  "12-ASH": ["Derelict", "Spoilers"],
  "1C-UTU": ["Derelict", "Spoilers"],
  "5H-AD0": ["Derelict", "Spoilers"],
  "7V-RTL": ["Derelict", "Spoilers"],
  "8R-AWN": ["Exiles", "Derelict", "Spoilers"],
  "99-TNT": ["Derelict", "Spoilers"],
  "A-02 Transporter": ["0b10"],
  "A-15 Conveyor": ["0b10"],
  "A-27 Freighter": ["0b10"],
  "A2": ["Architect", "Redacted"],
  "A3": ["Architect", "Redacted"],
  "A4": ["Architect", "Redacted"],
  "A5": ["Architect", "Redacted"],
  "A6": ["Architect", "Redacted"],
  "A7": ["Architect", "Spoilers"],
  "A8": ["Architect", "Spoilers"],
  "AD-0RF": ["Derelict", "Spoilers"],
  "Alpha 7": ["0b10", "Prototype", "Spoilers"],
  "Advanced Drone": ["0b10"],
  "Architect": ["Architect", "Redacted"],
  "Army Drone": ["Drone", "Exiles"],
  "Assault Drone": ["Derelict", "Spoilers"],
  "Assembled (4)": ["Derelict"],
  "Assembled (7)": ["Derelict"],
  "Assembler": ["Derelict", "Spoilers"],
  "B-36 Bruiser": ["0b10"],
  "B-48 Gladiator": ["0b10"],
  "B-60 Warrior": ["0b10"],
  "B-74 Champion": ["0b10"],
  "B-75 Beast": ["0b10"],
  "B-86 Titan": ["0b10"],
  "B-90 Cyclops": ["0b10"],
  "B-99 Colossus": ["0b10"],
  "Bomb Drone": ["Derelict"],
  "Borebot": ["Derelict", "Spoilers", "Warlord"],
  "Bouncer": ["Derelict", "Spoilers", "Warlord"],
  "Butcher (5)": ["Derelict"],
  "Butcher (7)": ["Derelict"],
  "C-17 Slicer": ["0b10"],
  "C-30 ARC": ["0b10"],
  "C-35 Carver": ["0b10"],
  "C-40 Crusher": ["0b10"],
  "C-55 Analyst": ["0b10"],
  "C-57 Dissector": ["0b10"],
  "C-65 Expert": ["0b10"],
  "Cetus Guard": ["0b10", "Prototype", "Spoilers"],
  "CL-ANK": ["Derelict", "Spoilers"],
  "Combat Drone": ["Derelict", "Spoilers"],
  "Combat Programmer": ["0b10", "Prototype", "Spoilers"],
  "Commander": ["Derelict"],
  "D-53 Grenadier": ["0b10"],
  "D-63 Destroyer": ["0b10"],
  "D-83 Annihilator": ["0b10"],
  "DAS Turret": ["Derelict", "Exiles"],
  "Data Miner": ["Architect", "Spoilers"],
  "Decomposer": ["Derelict"],
  "Decoy Drone": ["Derelict"],
  "Demented": ["Derelict"],
  "Dragon": ["Derelict", "Spoilers", "Warlord"],
  "Drone": ["0b10"],
  "E-15 Imp": ["0b10"],
  "Enhanced Demolisher": ["Architect", "Spoilers"],
  "Enhanced Grunt": ["Architect", "Spoilers"],
  "Enhanced Hunter": ["Architect", "Redacted"],
  "Enhanced Programmer": ["Architect", "Redacted"],
  "Enhanced Q-Series": ["Architect", "Redacted"],
  "Enhanced Q-Series Ex 1": ["Architect", "Redacted"],
  "Enhanced Q-Series Ex 2": ["Architect", "Redacted"],
  "Enhanced Q-Series Ex 3": ["Architect", "Redacted"],
  "Enhanced Sentry": ["Architect", "Redacted"],
  "EX-BIN": ["Derelict", "Exiles"],
  "EX-DEC": ["Derelict", "Exiles"],
  "EX-HEX": ["Derelict", "Exiles"],
  "Executioner": ["0b10", "Prototype", "Spoilers"],
  "Fireman (5)": ["Derelict"],
  "Fireman (7)": ["Derelict"],
  "Fortress": ["0b10", "Prototype", "Redacted"],
  "Furnace": ["Derelict"],
  "G-34 Mercenary": ["0b10"],
  "G-47 Trooper": ["0b10"],
  "G-50 Soldier": ["0b10"],
  "G-67 Veteran": ["0b10"],
  "G-73 Enforcer": ["0b10"],
  "God Mode": ["Derelict", "Spoilers", "Warlord"],
  "God Mode (Fake)": ["Derelict", "Spoilers", "Warlord"],
  "Golem": ["Derelict", "Spoilers"],
  "Golem (Naked)": ["Derelict", "Spoilers"],
  "Guerrilla (5)": ["Derelict"],
  "Guerrilla (7)": ["Derelict"],
  "H-55 Commando": ["0b10"],
  "H-61 Shepherd": ["0b10"],
  "H-66 Slayer": ["0b10"],
  "H-71 Marshal": ["0b10"],
  "H-77 Assassin": ["0b10"],
  "H-81 Overseer": ["0b10"],
  "H-88 Terminator": ["0b10"],
  "Hacking Drone": ["Derelict", "Spoilers"],
  "Hydra": ["Derelict", "Spoilers", "Warlord"],
  "I-25 Savior": ["0b10"],
  "I-36 Angel": ["0b10"],
  "I-47 Archangel": ["0b10"],
  "Imprinter": ["Derelict", "Spoilers", "Zionite"],
  "Investigator": ["0b10", "Prototype", "Spoilers"],
  "K-01 Serf": ["0b10"],
  "Knight": ["Derelict", "Spoilers", "Warlord"],
  "L-31 Rogue": ["0b10"],
  "L-41 Fighter": ["0b10"],
  "L-61 Swordsman": ["0b10"],
  "Lightning": ["0b10", "Prototype", "Spoilers"],
  "LRC-V4": ["0b10", "Prototype", "Redacted"],
  "LRC-V5": ["0b10", "Prototype", "Redacted"],
  "LRC-V6": ["0b10", "Prototype", "Redacted"],
  "M Guard": ["0b10", "Prototype", "Redacted"],
  "M Shell/Atk": ["0b10", "Redacted"],
  "M Shell/Def": ["0b10", "Redacted"],
  "M-13 Machinist": ["0b10"],
  "M-14 Sweeper": ["0b10"],
  "M-22 Extractor": ["0b10"],
  "M-28 Smith": ["0b10"],
  "M-30 Cleanser": ["0b10"],
  "M-36 Artificer": ["0b10"],
  "MAIN.C": ["0b10", "Redacted"],
  "MAIN.C (Shell)": ["0b10", "Redacted"],
  "Mapping Drone": ["Derelict"],
  "Marauder (6)": ["Derelict"],
  "Marauder (8)": ["Derelict"],
  "Martyr (5)": ["Derelict"],
  "Martyr (7)": ["Derelict"],
  "Master Thief": ["Derelict", "Spoilers"],
  "ME-RLN": ["Derelict", "Spoilers"],
  "Minesniffer Drone": ["Derelict", "Spoilers", "Warlord"],
  "Mutant (5)": ["Derelict"],
  "Mutant (6)": ["Derelict"],
  "Mutant (7)": ["Derelict"],
  "Mutant (8)": ["Derelict"],
  "Mini Drone": ["0b10"],
  "N-00 Fly": ["0b10"],
  "N-01 Spotter": ["0b10"],
  "NK-0LA": ["Derelict", "Spoilers"],
  "O-16 Technician": ["0b10"],
  "O-24 Administrator": ["0b10"],
  "O-32 Director": ["0b10"],
  "P-60 Hacker": ["0b10"],
  "P-70 Sage": ["0b10"],
  "P-80 Master": ["0b10"],
  "P1-3CE": ["Derelict", "Spoilers"],
  "Packrat": ["Derelict"],
  "Parasite": ["Derelict"],
  "Perun": ["Derelict", "Spoilers", "Zhirov"],
  "PL-HR7": ["Derelict"],
  "Protovariant D": ["0b10", "Prototype", "Spoilers"],
  "Protovariant G": ["0b10", "Prototype", "Spoilers"],
  "Protovariant H": ["0b10", "Prototype", "Spoilers"],
  "Protovariant L": ["0b10", "Prototype", "Spoilers"],
  "Protovariant P": ["0b10", "Prototype", "Spoilers"],
  "Protovariant X": ["0b10", "Prototype", "Spoilers"],
  "Protovariant Y": ["0b10", "Prototype", "Spoilers"],
  "Q-Series": ["0b10", "Spoilers"],
  "Q-Series Example 1": ["0b10", "Spoilers"],
  "Q-Series Example 2": ["0b10", "Spoilers"],
  "Q-Series Example 3": ["0b10", "Spoilers"],
  "Quarantine Guard": ["0b10", "Prototype", "Spoilers"],
  "R-06 Scavenger": ["0b10"],
  "R-10 Processor": ["0b10"],
  "Revision": ["Derelict", "Spoilers"],
  "Revision 17": ["Derelict", "Spoilers"],
  "Revision 17++": ["Derelict", "Spoilers"],
  "S7 Guard": ["0b10", "Prototype", "Redacted"],
  "S-10 Pest": ["0b10"],
  "S-27 Virus": ["0b10"],
  "S-43 Plague": ["0b10"],
  "Samaritan": ["Derelict"],
  "Sapper": ["Derelict"],
  "Savage (5)": ["Derelict"],
  "Savage (7)": ["Derelict"],
  "Sensor Drone": ["Derelict"],
  "Sigix Warrior": ["Alien", "Redacted"],
  "Splice Drone": ["Derelict"],
  "Stealth Drone": ["0b10"],
  "Striker": ["0b10", "Prototype", "Spoilers"],
  "Superbehemoth": ["0b10", "Prototype", "Spoilers"],
  "Surgeon (4)": ["Derelict"],
  "Surgeon (6)": ["Derelict"],
  "Surveybot 24": ["Derelict", "Spoilers"],
  "Svarog": ["Derelict", "Spoilers", "Zhirov"],
  "Swarm Drone": ["0b10", "Spoilers"],
  "T-07 Excavator": ["0b10"],
  "Target Drone": ["0b10"],
  "Thief": ["Derelict"],
  "Thief Drone": ["Derelict"],
  "Thug (5)": ["Derelict"],
  "Thug (7)": ["Derelict"],
  "Tinkerer": ["Derelict"],
  "Tracker": ["0b10", "Prototype", "Spoilers"],
  "Trailblazer": ["Drone", "Exiles"],
  "Troll": ["Derelict", "Spoilers"],
  "U-05 Engineer": ["0b10"],
  "W-16 Scout": ["0b10"],
  "W-25 Informer": ["0b10"],
  "W-44 Eye": ["0b10"],
  "Warbot": ["Derelict", "Spoilers"],
  "Wardrone": ["Drone", "Spoilers", "Warlord"],
  "Warlord": ["Derelict", "Spoilers", "Warlord"],
  "Warlord (Command)": ["Derelict", "Redacted", "Warlord"],
  "Warlord 4Z-XS3": ["Derelict", "Redacted"],
  "Warlord AM-PH4": ["Derelict", "Redacted"],
  "Warlord D3-CKR": ["Derelict", "Redacted"],
  "Warlord HL-1SK": ["Derelict", "Redacted"],
  "Warlord KY-Z71": ["Derelict", "Redacted"],
  "Warlord MG-163": ["Derelict", "Redacted"],
  "Warlord SH-K8T": ["Derelict", "Redacted"],
  "Warlord Statue": ["Derelict"],
  "Wasp (5)": ["Derelict"],
  "Wasp (7)": ["Derelict"],
  "Wizard (5)": ["Derelict"],
  "Wizard (7)": ["Derelict"],
  "X-57 Shotgunner": ["0b10"],
  "X-62 Marksman": ["0b10"],
  "X-67 Chaingunner": ["0b10"],
  "X-72 Disruptor": ["0b10"],
  "X-77 Beamer": ["0b10"],
  "X-82 Rainmaker": ["0b10"],
  "X-87 Electro": ["0b10"],
  "Y-45 Defender": ["0b10"],
  "Y-54 Guardian": ["0b10"],
  "Y-64 Sentinel": ["0b10"],
  "Y-72 Warden": ["0b10"],
  "YI-UF0": ["Derelict"],
  "Z-Courier": ["Derelict", "Spoilers", "Zionite"],
  "Z-Drone": ["Derelict", "Drone", "Spoilers", "Zionite"],
  "Z-Experimental (8)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Experimental (10)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Heavy (5)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Heavy (7)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Heavy (9)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Imprinter": ["Derelict", "Spoilers", "Zionite"],
  "Z-Light (5)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Light (7)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Light (9)": ["Derelict", "Spoilers", "Zionite"],
  "Z-Technician": ["Derelict", "Spoilers", "Zionite"],
  "Zhirov": ["Derelict", "Spoilers", "Zhirov"],
  "Zionite": ["Derelict", "Spoilers", "Zionite"]
};
},{}],"ts/itemTypes.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Critical = exports.Spectrum = exports.SiegeMode = exports.ItemType = exports.ItemRatingCategory = exports.HeatTransfer = exports.DamageType = void 0;
var DamageType;

(function (DamageType) {
  DamageType["Electromagnetic"] = "Electromagnetic";
  DamageType["Entropic"] = "Entropic";
  DamageType["Explosive"] = "Explosive";
  DamageType["Impact"] = "Impact";
  DamageType["Kinetic"] = "Kinetic";
  DamageType["Phasic"] = "Phasic";
  DamageType["Piercing"] = "Piercing";
  DamageType["Slashing"] = "Slashing";
  DamageType["Special"] = "Special";
  DamageType["Thermal"] = "Thermal";
})(DamageType = exports.DamageType || (exports.DamageType = {}));

var HeatTransfer;

(function (HeatTransfer) {
  HeatTransfer["Minimal"] = "Minimal (5)";
  HeatTransfer["Low"] = "Low (25)";
  HeatTransfer["Medium"] = "Medium (37)";
  HeatTransfer["High"] = "High (50)";
  HeatTransfer["Massive"] = "Massive (80)";
})(HeatTransfer = exports.HeatTransfer || (exports.HeatTransfer = {}));

var ItemRatingCategory;

(function (ItemRatingCategory) {
  ItemRatingCategory["Alien"] = "Alien";
  ItemRatingCategory["Prototype"] = "Prototype";
  ItemRatingCategory["None"] = "";
})(ItemRatingCategory = exports.ItemRatingCategory || (exports.ItemRatingCategory = {}));

var ItemType;

(function (ItemType) {
  ItemType["Artifact"] = "Artifact";
  ItemType["BallisticCannon"] = "Ballistic Cannon";
  ItemType["BallisticGun"] = "Ballistic Gun";
  ItemType["DataCore"] = "Data Core";
  ItemType["Device"] = "Device";
  ItemType["EnergyCannon"] = "Energy Cannon";
  ItemType["EnergyGun"] = "Energy Gun";
  ItemType["Engine"] = "Engine";
  ItemType["FlightUnit"] = "Flight Unit";
  ItemType["Hackware"] = "Hackware";
  ItemType["HoverUnit"] = "Hover Unit";
  ItemType["ImpactWeapon"] = "Impact Weapon";
  ItemType["Item"] = "Item";
  ItemType["Launcher"] = "Launcher";
  ItemType["Leg"] = "Leg";
  ItemType["Matter"] = "Matter";
  ItemType["PiercingWeapon"] = "Piercing Weapon";
  ItemType["PowerCore"] = "Power Core";
  ItemType["Processor"] = "Processor";
  ItemType["Protection"] = "Protection";
  ItemType["Protomatter"] = "Protomatter";
  ItemType["Reactor"] = "Reactor";
  ItemType["Scrap"] = "Scrap";
  ItemType["SlashingWeapon"] = "Slashing Weapon";
  ItemType["SpecialMeleeWeapon"] = "Special Melee Weapon";
  ItemType["SpecialWeapon"] = "Special Weapon";
  ItemType["Storage"] = "Storage";
  ItemType["Trap"] = "Trap";
  ItemType["Treads"] = "Treads";
  ItemType["Wheel"] = "Wheel";
})(ItemType = exports.ItemType || (exports.ItemType = {}));

var SiegeMode;

(function (SiegeMode) {
  SiegeMode["High"] = "High";
  SiegeMode["Standard"] = "Standard";
})(SiegeMode = exports.SiegeMode || (exports.SiegeMode = {}));

var Spectrum;

(function (Spectrum) {
  Spectrum["Wide"] = "Wide (10)";
  Spectrum["Intermediate"] = "Intermediate (30)";
  Spectrum["Narrow"] = "Narrow (50)";
  Spectrum["Fine"] = "Fine (100)";
})(Spectrum = exports.Spectrum || (exports.Spectrum = {}));

var Critical;

(function (Critical) {
  Critical["Blast"] = "Blast";
  Critical["Burn"] = "Burn";
  Critical["Corrupt"] = "Corrupt";
  Critical["Destroy"] = "Destroy";
  Critical["Detonate"] = "Detonate";
  Critical["Meltdown"] = "Meltdown";
  Critical["Impale"] = "Impale";
  Critical["Intensify"] = "Intensify";
  Critical["Phase"] = "Phase";
  Critical["Smash"] = "Smash";
  Critical["Sever"] = "Sever";
  Critical["Sunder"] = "Sunder";
})(Critical = exports.Critical || (exports.Critical = {}));
},{}],"ts/specialItemProperties.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.specialItemProperties = void 0;
exports.specialItemProperties = {
  // Actuator
  Microactuators: {
    active: "Part Active",
    trait: {
      kind: "Actuator",
      amount: 0.2
    }
  },
  Nanoactuators: {
    active: "Part Active",
    trait: {
      kind: "Actuator",
      amount: 0.3
    }
  },
  Femtoactuators: {
    active: "Part Active",
    trait: {
      kind: "Actuator",
      amount: 0.5
    }
  },
  // Airborne Speed doubling
  "ST Field Compressor": {
    active: "Part Active",
    trait: {
      kind: "AirborneSpeedDoubling"
    }
  },
  "Zio. Metafield Generator": {
    active: "Part Active",
    trait: {
      kind: "AirborneSpeedDoubling"
    }
  },
  // Energy filter
  "Energy Filter": {
    active: "Part Active",
    trait: {
      kind: "EnergyFilter",
      percent: 0.3
    }
  },
  "Prc. Energy Filter": {
    active: "Part Active",
    trait: {
      kind: "EnergyFilter",
      percent: 0.5
    }
  },
  // Energy storage
  "Sml. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 100
    }
  },
  "Med. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 150
    }
  },
  "Lrg. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 200
    }
  },
  "Com. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 200
    }
  },
  "Hcp. Battery": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 250
    }
  },
  "Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 350
    }
  },
  "Imp. Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 400
    }
  },
  "Adv. Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 500
    }
  },
  "Exp. Energy Well": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 600
    }
  },
  "Asb. Biocell Array": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 1000
    }
  },
  "Zio. Biocell": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 600
    }
  },
  "Zio. Biocell Array": {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 750
    }
  },
  Superbattery: {
    active: "Always",
    trait: {
      kind: "EnergyStorage",
      storage: 1500
    }
  },
  // Fusion compressor
  "Fusion Compressor": {
    active: "Part Active",
    trait: {
      kind: "FusionCompressor",
      energyPerTurn: 20
    }
  },
  "Imp. Fusion Compressor": {
    active: "Part Active",
    trait: {
      kind: "FusionCompressor",
      energyPerTurn: 30
    }
  },
  // Heat dissipation
  "Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 22
    }
  },
  "Imp. Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 27
    }
  },
  "Adv. Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 31
    }
  },
  "Exp. Cooling System": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 38
    }
  },
  "Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 10
    }
  },
  "Imp. Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 14
    }
  },
  "Adv. Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 19
    }
  },
  "Exp. Heat Sink": {
    active: "Part Active",
    trait: {
      kind: "HeatDissipation",
      dissipation: 26
    }
  },
  // Mass support
  "Weight Redist. System": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 6
    }
  },
  "Adv. Weight Redist. System": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 9
    }
  },
  "Gravity Neutralizer": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 12
    }
  },
  "Adv. Gravity Neutralizer": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 16
    }
  },
  "Quantum Shading Machine": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 20
    }
  },
  "Adv. Quantum Shading Machine": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 25
    }
  },
  "Asb. Suspension Frame": {
    active: "Part Active",
    trait: {
      kind: "MassSupport",
      support: 20
    }
  },
  // Metafiber
  "Asb. Metafiber Network": {
    active: "Part Active",
    trait: {
      kind: "Metafiber"
    }
  },
  // Ranged weapon cycling
  "Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.15
    }
  },
  "Imp. Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.2
    }
  },
  "Adv. Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.25
    }
  },
  "Exp. Weapon Cycler": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.3
    }
  },
  "Launcher Loader": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.5
    }
  },
  "Quantum Capacitor": {
    active: "Part Active",
    trait: {
      kind: "RangedWeaponCycling",
      amount: 0.5
    }
  },
  // Power amplifiers
  "Power Amplifier": {
    active: "Always",
    trait: {
      kind: "PowerAmplifier",
      percent: 0.2
    }
  },
  "Adv. Power Amplifier": {
    active: "Always",
    trait: {
      kind: "PowerAmplifier",
      percent: 0.3
    }
  },
  "Exp. Power Amplifier": {
    active: "Always",
    trait: {
      kind: "PowerAmplifier",
      percent: 0.4
    }
  },
  // Weapon regen
  "Sigix Broadsword": {
    active: "Part Active",
    trait: {
      kind: "WeaponRegen",
      energyPerTurn: 5,
      integrityPerTurn: 2
    }
  }
};
},{}],"ts/common.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.valueOrDefault = exports.randomInt = exports.parseIntOrDefault = exports.nameToId = exports.leetSpeakMatchTransform = exports.isPartMelee = exports.initData = exports.hasActiveSpecialProperty = exports.getNoPrefixName = exports.getValuePerTus = exports.getMovementText = exports.getItem = exports.getBot = exports.gallerySort = exports.flatten = exports.escapeHtml = exports.createItemDataContent = exports.createBotDataContent = exports.canShowPart = exports.assertUnreachable = exports.entityMap = exports.itemData = exports.botData = void 0; // Common code

const itemCategories = __importStar(require("../json/item_categories.json"));

const botCategories = __importStar(require("../json/bot_categories.json"));

const itemTypes_1 = require("./itemTypes");

const specialItemProperties_1 = require("./specialItemProperties"); // Color schemes


var ColorScheme;

(function (ColorScheme) {
  ColorScheme["LowGood"] = "lowGood";
  ColorScheme["HighGood"] = "highGood";
  ColorScheme["Green"] = "green";
  ColorScheme["Red"] = "red";
})(ColorScheme || (ColorScheme = {}));

const colorSchemes = {
  lowGood: {
    low: "range-green",
    midLow: "range-yellow",
    midHigh: "range-orange",
    high: "range-red"
  },
  highGood: {
    low: "range-red",
    midLow: "range-orange",
    midHigh: "range-yellow",
    high: "range-green"
  },
  green: {
    low: "range-green",
    midLow: "range-green",
    midHigh: "range-green",
    high: "range-green"
  },
  red: {
    low: "range-red",
    midLow: "range-red",
    midHigh: "range-red",
    high: "range-red"
  }
}; // Character -> escape character map

exports.entityMap = {
  "&": "&amp;",
  "<": "ᐸ",
  ">": "ᐳ",
  '"': "&quot;",
  "'": "&#39;",
  "/": "&#x2F;",
  "`": "&#x60;",
  "=": "&#x3D;",
  "\n": "<br />"
}; // Compile-time assert that code is unreachable
// eslint-disable-next-line @typescript-eslint/no-unused-vars

function assertUnreachable(_) {
  throw new Error("Invalid");
}

exports.assertUnreachable = assertUnreachable; // Determines if the given part can be shown based on the current spoilers state

function canShowPart(part, spoilersState) {
  if (spoilersState === "None") {
    // No spoilers, check that none of the categories are spoilers/redacted
    if (!part.categories.every(c => c !== "Spoiler" && c !== "Redacted")) {
      return false;
    }
  } else if (spoilersState == "Spoilers") {
    // Spoilers allowed, check only for redacted category
    if (!part.categories.every(c => c != "Redacted")) {
      return false;
    }
  } else {
    // Redacted, no checks
    return true;
  }

  return true;
}

exports.canShowPart = canShowPart; // Ceil the number to the nearest multiple

function ceilToMultiple(num, multiple) {
  return Math.ceil(num / multiple) * multiple;
} // Creates a range line from minVal to maxVal using filled squares with the given color scheme with no unit


function rangeLine(category, valueString, value, defaultValueString, minValue, maxValue, colorScheme) {
  return rangeLineUnit(category, valueString, value, "", defaultValueString, minValue, maxValue, colorScheme);
} // Creates a range line from minVal to maxVal using filled squares with the given color scheme


function rangeLineUnit(category, valueString, value, unitString, defaultValueString, minValue, maxValue, colorScheme) {
  let valueHtml;

  if (valueString === undefined || value === undefined) {
    valueString = defaultValueString;
    value = 0;
    valueHtml = `<span class="dim-text">${defaultValueString}${unitString}</span>`;
  } else {
    valueHtml = valueString + unitString;
  } // Determine bars and spacing


  const maxBars = 22;
  const numSpaces = 23 - 1 - 1 - category.length - valueString.length - unitString.length;
  let valuePercentage;

  if (maxValue - minValue === 0) {
    valuePercentage = 1;
  } else {
    valuePercentage = value / (maxValue - minValue);
  }

  let fullBars = Math.min(Math.floor(maxBars * valuePercentage), 22); // Always round away from 0
  // This allows for things like 1/100 to show 1 bar rather than 0

  if (fullBars === 0 && value != minValue) {
    fullBars = 1;
  }

  if (minValue === maxValue) {
    fullBars = 0;
  }

  const emptyBars = maxBars - fullBars; // Determine color

  let colorClass;

  if (valuePercentage < 0.25) {
    colorClass = colorSchemes[colorScheme].low;
  } else if (valuePercentage < 0.5) {
    colorClass = colorSchemes[colorScheme].midLow;
  } else if (valuePercentage < 0.75) {
    colorClass = colorSchemes[colorScheme].midHigh;
  } else {
    colorClass = colorSchemes[colorScheme].high;
  } // Create bars HTML string


  let barsHtml;

  if (emptyBars > 0) {
    barsHtml = `<span class="${colorClass}">${"▮".repeat(fullBars)}</span><span class="range-dim">${"▯".repeat(emptyBars)}</span>`;
  } else {
    barsHtml = `<span class=${colorClass}>${"▮".repeat(fullBars)}</span>`;
  } // Return full HTML


  return `
    <pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueHtml} ${barsHtml}</pre>
    `;
} // Create a summary line


function summaryLine(text) {
  return `<pre class="popover-summary">${text}</pre>`;
} // Creates a summary line with an optional projectile multiplier


function summaryProjectileLine(item, category) {
  if (item.projectileCount > 1) {
    return `<pre class="popover-summary">${category}${" ".repeat(13)}<span class="projectile-num"> x${item.projectileCount} </span></pre>`;
  } else {
    return summaryLine(category);
  }
} // Create a text line with no value and default style


function textLine(category, text) {
  const numSpaces = 23 - 1 - category.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${text}</pre>`;
} // Create a text line with no value and dim style


function textLineDim(category, text) {
  const numSpaces = 23 - 1 - category.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}<span class="dim-text">${text}</span></pre>`;
} // Create a text line with no value  and a default


function textLineWithDefault(category, textString, defaultString) {
  if (typeof textString != "string") {
    textString = `<span class="dim-text">${defaultString}</span>`;
  }

  const numSpaces = 23 - 1 - category.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${textString}</pre>`;
} // Create a text line with a value and a given HTML string for the text


function textValueHtmlLine(category, valueString, valueClass, textHtml) {
  const numSpaces = 23 - 1 - 1 - category.length - valueString.length;
  let valueHtml;

  if (typeof valueClass === "string" && valueClass.length > 0) {
    valueHtml = `<span class="${valueClass}">${valueString}</span>`;
  } else {
    valueHtml = valueString;
  }

  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueHtml} ${textHtml}</pre>`;
} // Create a value line with no text


function valueLine(category, valueString) {
  const numSpaces = 23 - 1 - category.length - 1 - valueString.length;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString}</pre>`;
} // Create a value line with units, no text, and a default


function valueLineUnitsWithDefault(category, valueString, unitString, defaultString) {
  let valueLength;

  if (valueString === undefined) {
    valueString = `<span class="dim-text">${defaultString}${unitString}</span>`;
    valueLength = defaultString.length + unitString.length;
  } else {
    valueString += unitString;
    valueLength = valueString.length;
  }

  const numSpaces = 23 - 1 - category.length - 1 - valueLength;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString}</pre>`;
} // Create a value line with units, text, and a default


function valueLineUnitsTextWithDefault(category, valueString, unitString, defaultString, text) {
  let valueLength;

  if (valueString === undefined) {
    valueString = `<span class="dim-text">${defaultString}${unitString}</span>`;
    valueLength = defaultString.length + unitString.length;
  } else {
    valueString += unitString;
    valueLength = valueString.length;
  }

  const numSpaces = 23 - 1 - category.length - 1 - valueLength;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString} ${text}</pre>`;
} // Create a value line with no text and a default


function valueLineWithDefault(category, valueString, defaultString) {
  let valueLength;

  if (typeof valueString != "string") {
    valueString = `<span class="dim-text">${defaultString}</span>`;
    valueLength = defaultString.length;
  } else {
    valueLength = valueString.length;
  }

  const numSpaces = 23 - 1 - category.length - 1 - valueLength;
  return `<pre class="popover-line"> ${category}${" ".repeat(numSpaces)}${valueString}</pre>`;
}
/* eslint-disable prettier/prettier */
// Creates a HTML string representing a bot


function createBotDataContent(bot) {
  var _a;

  function createItemHtml(data) {
    let line = `${escapeHtml(data.name)} (${data.coverage}%)`;

    if (data.number > 1) {
      line += " x" + data.number;
    }

    return `${itemLine(line)}`;
  }

  function createItemOptionHtml(data) {
    // Add all options
    let html = "";

    for (let i = 0; i < data.length; i++) {
      const item = data[i];
      let line;

      if (item.name === "None") {
        line = "None";
      } else {
        line = `${item.name} (${item.coverage}%)`;
      }

      if (item.number > 1) {
        line += " x" + item.number;
      }

      html += itemLineOption(line, i);
    }

    return html;
  }

  function getFabricationMatterString(stats) {
    const matter = stats.matter;
    const siphonMatter = Math.floor(parseInt(matter) * .75).toString();
    return `${matter} (With siphon: ${siphonMatter})`;
  }

  function getRatingValue(bot) {
    const ratingString = bot.rating;
    const ratingArray = ratingString.split("-").map(s => s.trim()).map(s => parseInt(s));
    return ratingArray.reduce((sum, val) => sum + val, 0) / ratingArray.length;
  }

  function itemLine(itemString) {
    itemString = itemString.padEnd(46);
    return "" + '<pre class="popover-part">' + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">[</span>' + `${itemString}` + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">]</span>' + '</pre>';
  }

  function itemLineOption(itemString, i) {
    itemString = itemString.padEnd(43);
    return "" + '<pre class="popover-line">' + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">[</span>' + `<span class="popover-option">${String.fromCharCode(97 + i)}) </span>` + `<span>${itemString}</span>` + '<span class="bot-popover-item-bracket bot-popover-item-bracket-invisible">]</span>' + '</pre>';
  }

  const emptyLine = `<pre class="popover-line">
    
</pre>`; // Create overview

  let html = `
        <pre class="popover-title">${escapeHtml(bot.name)}</pre>
        ${emptyLine}
        ${summaryLine("Overview")}
        ${textLine("Class", bot.class)}
        ${textLine("Size", bot.size)}
        ${textLine("Profile", bot.profile)}
        ${rangeLine("Rating", bot.rating, getRatingValue(bot), undefined, 0, 165, ColorScheme.LowGood)}
        ${textLine("Tier", bot.tier)}
        ${textLine("Threat", bot.threat)}
        ${textLine("Value", bot.value.toString())}
        ${textLine("Visual Range", bot.visualRange)}
        ${textLine("Memory", bot.memory)}
        ${textLine("Spot %", bot.spotPercent)}
        ${textLine("Movement", bot.movement)}
        ${rangeLine("Core Integrity", bot.coreIntegrity.toString(), bot.coreIntegrity, undefined, 0, bot.coreIntegrity, ColorScheme.Green)}
        ${rangeLineUnit("Core Exposure", bot.coreExposure.toString(), bot.coreExposure, "%", undefined, 0, 100, ColorScheme.LowGood)}
        ${textLine("Salvage Potential", bot.salvagePotential)}
        ${emptyLine}
        ${summaryLine("Armament")}
        `; // Add armament items and options

  if (bot.armament.length > 0) {
    bot.armamentData.forEach(data => {
      html += createItemHtml(data);
    });

    for (let i = 0; i < bot.armamentOptionData.length; i++) {
      if (i != 0 || bot.armamentData.length > 0) {
        html += emptyLine;
      }

      html += createItemOptionHtml(bot.armamentOptionData[i]);
    }
  } else {
    html += itemLine("None");
  } // Add component items


  html += `
    ${emptyLine}
    ${summaryLine("Components")}
    `;

  if (bot.components.length > 0) {
    bot.componentData.forEach(data => {
      html += createItemHtml(data);
    });

    for (let i = 0; i < bot.componentOptionData.length; i++) {
      if (i != 0 || bot.componentData.length > 0) {
        html += `${emptyLine}`;
      }

      html += createItemOptionHtml(bot.componentOptionData[i]);
    }
  } else {
    html += itemLine("N/A");
  } // Add Resistances/immunities


  const resistances = Object.keys(valueOrDefault(bot.resistances, {}));
  const immunities = bot.immunities;

  if (resistances.length > 0 || immunities.length > 0) {
    html += `
        ${emptyLine}
        ${summaryLine("Resistances")}
        `;
    resistances.forEach(damageType => {
      const resistValue = bot.resistances[damageType];

      if (resistValue === undefined) {
        return;
      }

      if (resistValue > 0) {
        html += rangeLine(damageType, resistValue.toString() + "%", resistValue, undefined, 0, 100, ColorScheme.Green);
      } else {
        html += rangeLine(damageType, resistValue.toString() + "%", resistValue, undefined, 0, -100, ColorScheme.Red);
      }
    });
    immunities.forEach(immunity => {
      html += textLineDim(immunity, "IMMUNE");
    });
  } // Add traits


  const traits = bot.traits;

  if (traits.length > 0) {
    html += `
        ${emptyLine}
        ${summaryLine("Traits")}
        `;
    traits.forEach(trait => {
      html += `<span class="popover-description">${trait}</span>\n`;
    });
  } // Add fabrication stats if present


  if (bot.fabrication != null) {
    const number = bot.fabrication.number;
    html += `${emptyLine}`;

    if (number === "1") {
      html += summaryLine("Fabrication");
    } else {
      html += summaryLine(`Fabrication x${number}`);
    }

    html += `
        ${textLine("Time", bot.fabrication.time)}
        ${((_a = bot.fabrication) === null || _a === void 0 ? void 0 : _a.matter) !== undefined ? textLine("Matter", getFabricationMatterString(bot.fabrication)) : ""}
        ${textLine("Components", "None")}
        `;
  } // Add description


  const description = escapeHtml(valueOrDefault(bot.description, ""));

  if (description.length > 0) {
    html += `
        ${emptyLine}
        ${summaryLine("Description")}
        <span class="popover-description">${description}</span>
        `;
  }

  return html;
}

exports.createBotDataContent = createBotDataContent; // Creates an HTML string representing an item

function createItemDataContent(baseItem) {
  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19;

  function getDamageValue(item) {
    const damageString = item.damage;
    const damageArray = damageString.split("-").map(s => s.trim()).map(s => parseInt(s));
    return damageArray.reduce((sum, val) => sum + val, 0) / damageArray.length;
  }

  function getDelayString(item) {
    if (item.delay === undefined) {
      return undefined;
    } else {
      if (item.delay > 0) {
        return "+" + item.delay;
      }

      return item.delay.toString();
    }
  }

  function getExplosionValue(item) {
    const damageString = item.explosionDamage;
    const damageArray = damageString.split("-").map(s => s.trim()).map(s => parseInt(s));
    return damageArray.reduce((sum, val) => sum + val, 0) / damageArray.length;
  }

  function getFabricationMatterString(stats) {
    const matter = stats.matter;
    const siphonMatter = Math.floor(parseInt(matter) * .75).toString();
    return `${matter} (With siphon: ${siphonMatter})`;
  }

  function getPenetrationTextHtml(item) {
    const penetrationString = item.penetration;

    if (penetrationString === undefined) {
      return "";
    }

    const penetrationArray = penetrationString.split("/").map(s => s.trim());
    return penetrationArray.join(" / ");
  }

  function getPenetrationValueClass(item) {
    if (item.penetration !== undefined) {
      return "";
    }

    return "dim-text";
  }

  function getPenetrationValue(item) {
    const penetrationString = item.penetration;

    if (penetrationString === undefined) {
      return "x0";
    }

    if (penetrationString === "Unlimited") {
      return "x*";
    }

    const penetrationArray = penetrationString.split("/").map(s => s.trim());
    return "x" + penetrationArray.length;
  }

  function getRatingHtml(item) {
    switch (item.category) {
      case itemTypes_1.ItemRatingCategory.Alien:
        return '<span class="rating-alien"> Alien </span>';

      case itemTypes_1.ItemRatingCategory.Prototype:
        return '<span class="rating-prototype"> Prototype </span>';

      case itemTypes_1.ItemRatingCategory.None:
        return '<span class="dim-text">Standard</span>';
    }
  }

  function getSchematicString(item) {
    if (item.hackable) {
      return "Hackable";
    } else if (item.fabrication != null) {
      return "Not Hackable";
    }

    return undefined;
  }

  function getSlotString(item) {
    let slotType = item.slot;

    if (slotType == "N/A") {
      // Take care of item special cases
      if (item.type == itemTypes_1.ItemType.Item || item.type == itemTypes_1.ItemType.Trap) {
        slotType = "Inventory";
      } else {
        return `<span class="dim-text">N/A</span>`;
      }
    }

    if (item.size > 1) {
      return `${slotType} x${item.size}`;
    }

    return slotType;
  }

  const emptyLine = `<pre class="popover-line">
    
</pre>`; // Create overview

  let html = `
    <pre class="popover-title">${escapeHtml(baseItem.name)}</pre>
    ${emptyLine}
    ${summaryLine("Overview")}
    ${textLine("Type", baseItem.type)}
    ${textLine("Slot", getSlotString(baseItem))}
    ${rangeLine("Mass", (_a = baseItem.mass) === null || _a === void 0 ? void 0 : _a.toString(), baseItem.mass, "N/A", 0, 15, ColorScheme.LowGood)}
    ${textValueHtmlLine("Rating", baseItem.ratingString.replace("**", "").replace("*", ""), "", getRatingHtml(baseItem))}
    ${rangeLine("Integrity", (_b = baseItem.integrity) === null || _b === void 0 ? void 0 : _b.toString(), 1, undefined, 0, 1, ColorScheme.Green)}
    ${valueLine("Coverage", (_d = (_c = baseItem.coverage) === null || _c === void 0 ? void 0 : _c.toString()) !== null && _d !== void 0 ? _d : "0")}
    ${textLineWithDefault("Schematic", getSchematicString(baseItem), "N/A")}
    `;

  switch (baseItem.slot) {
    case "Power":
      {
        const item = baseItem; // Add power-unique categories

        html += `
                ${emptyLine}
                ${summaryLine("Active Upkeep")}
                ${rangeLine("Energy", undefined, 0, "-0", 0, 0, ColorScheme.LowGood)}
                ${rangeLine("Matter", item.matterUpkeep === undefined ? undefined : "-" + item.matterUpkeep, item.matterUpkeep, "-0", 0, 25, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatGeneration, item.heatGeneration, "+0", 0, 20, ColorScheme.LowGood)}
                ${emptyLine}
                ${summaryLine("Power")}
                ${rangeLine("Supply", item.energyGeneration === undefined || item.energyGeneration === 0 ? undefined : "+" + item.energyGeneration, item.energyGeneration, "0", 0, 30, ColorScheme.Green)}
                ${rangeLine("Storage", (_e = item.energyStorage) === null || _e === void 0 ? void 0 : _e.toString(), item.energyStorage, "0", 0, 300, ColorScheme.Green)}
                ${rangeLine("Stability", item.powerStability + "%", item.powerStability, "N/A", 0, 100, ColorScheme.HighGood)}
                `;
        break;
      }

    case "Propulsion":
      {
        const item = baseItem; // Add propulsion-unique categories

        html += `
                ${emptyLine}
                ${summaryLine("Active Upkeep")}
                ${rangeLine("Energy", "-" + item.energyUpkeep, item.energyUpkeep, "-0", 0, 20, ColorScheme.LowGood)}
                ${rangeLine("Matter", undefined, 0, "-0", 0, 0, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatGeneration, item.heatGeneration, "+0", 0, 20, ColorScheme.LowGood)}
                ${emptyLine}
                ${summaryLine("Propulsion")}
                ${rangeLine("Time/Move", item.timePerMove.toString(), item.timePerMove, undefined, 0, 150, ColorScheme.LowGood)}
                ${item.modPerExtra == undefined ? valueLine("Drag", (_g = (_f = item.drag) === null || _f === void 0 ? void 0 : _f.toString()) !== null && _g !== void 0 ? _g : "0") : valueLine(" Mod/Extra", item.modPerExtra.toString())}
                ${rangeLine("Energy", "-" + item.energyPerMove, item.energyPerMove, "-0", 0, 10, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatPerMove, item.heatPerMove, "+0", 0, 10, ColorScheme.LowGood)}
                ${rangeLine("Support", (_h = item.support) === null || _h === void 0 ? void 0 : _h.toString(), item.support, undefined, 0, 20, ColorScheme.HighGood)}
                ${rangeLine(" Penalty", (_j = item.penalty) === null || _j === void 0 ? void 0 : _j.toString(), item.penalty, "0", 0, 60, ColorScheme.LowGood)}
                ${item.type === itemTypes_1.ItemType.Treads ? textLineWithDefault("Siege", item.siege, "N/A") : rangeLine("Burnout", item.burnout, parseInt((_k = item.burnout) !== null && _k !== void 0 ? _k : ""), "N/A", 0, 100, ColorScheme.LowGood)}
                `;
        break;
      }

    case "Utility":
      {
        const item = baseItem; // Add utility-unique categories

        html += `
                ${emptyLine}
                ${summaryLine("Active Upkeep")}
                ${rangeLine("Energy", "-" + item.energyUpkeep, item.energyUpkeep, "-0", 0, 20, ColorScheme.LowGood)}
                ${rangeLine("Matter", undefined, 0, "-0", 0, 0, ColorScheme.LowGood)}
                ${rangeLine("Heat", "+" + item.heatGeneration, item.heatGeneration, "+0", 0, 20, ColorScheme.LowGood)}
                `;
        break;
      }

    case "Weapon":
      {
        const item = baseItem; // Add weapon-unique categories

        switch (item.type) {
          case itemTypes_1.ItemType.BallisticCannon:
          case itemTypes_1.ItemType.BallisticGun:
          case itemTypes_1.ItemType.EnergyCannon:
          case itemTypes_1.ItemType.EnergyGun:
            html += `
                        ${emptyLine}
                        ${summaryLine("Shot")}
                        ${rangeLine("Range", item.range.toString(), item.range, undefined, 0, 20, ColorScheme.HighGood)}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineWithDefault("Recoil", (_l = item.recoil) === null || _l === void 0 ? void 0 : _l.toString(), "0")}
                        ${valueLineUnitsWithDefault("Targeting", (_m = item.targeting) === null || _m === void 0 ? void 0 : _m.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${rangeLine("Stability", (_o = item.overloadStability) === null || _o === void 0 ? void 0 : _o.toString(), item.overloadStability, "N/A", 0, 100, ColorScheme.HighGood)}
                        ${item.waypoints === undefined ? valueLineWithDefault("Arc", (_p = item.arc) === null || _p === void 0 ? void 0 : _p.toString(), "N/A") : valueLine("Waypoints", item.waypoints)}
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Projectile")}
                        ${rangeLine("Damage", item.damage, getDamageValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${textLine("Type", item.damageType)}
                        ${valueLineUnitsTextWithDefault("Critical", (_q = item.critical) === null || _q === void 0 ? void 0 : _q.toString(), "%", "0", (_s = (_r = item.criticalType) === null || _r === void 0 ? void 0 : _r.toString()) !== null && _s !== void 0 ? _s : "")}
                        ${textValueHtmlLine("Penetration", getPenetrationValue(item), getPenetrationValueClass(item), getPenetrationTextHtml(item))}
                        ${item.heatTransfer === undefined ? textLineWithDefault("Spectrum", item.spectrum, "N/A") : textLine("Heat Transfer", item.heatTransfer)}
                        ${rangeLineUnit("Disruption", (_t = item.disruption) === null || _t === void 0 ? void 0 : _t.toString(), item.disruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", (_u = item.salvage) === null || _u === void 0 ? void 0 : _u.toString(), "0")}
                        `;
            break;

          case itemTypes_1.ItemType.Launcher:
            html += `
                        ${emptyLine}
                        ${summaryLine("Shot")}
                        ${rangeLine("Range", item.range.toString(), item.range, undefined, 0, 20, ColorScheme.HighGood)}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineWithDefault("Recoil", (_v = item.recoil) === null || _v === void 0 ? void 0 : _v.toString(), "0")}
                        ${valueLineUnitsWithDefault("Targeting", (_w = item.targeting) === null || _w === void 0 ? void 0 : _w.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${rangeLine("Stability", (_x = item.overloadStability) === null || _x === void 0 ? void 0 : _x.toString(), item.overloadStability, "N/A", 0, 100, ColorScheme.HighGood)}
                        ${item.waypoints === undefined ? valueLineWithDefault("Arc", (_y = item.arc) === null || _y === void 0 ? void 0 : _y.toString(), "N/A") : valueLine("Waypoints", item.waypoints)}
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Explosion")}
                        ${rangeLine("Radius", (_z = item.explosionRadius) === null || _z === void 0 ? void 0 : _z.toString(), item.explosionRadius, undefined, 0, 8, ColorScheme.Green)}
                        ${rangeLine("Damage", item.explosionDamage, getExplosionValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${valueLineWithDefault(" Falloff", item.falloff === undefined ? undefined : "-" + item.falloff, "0")}
                        ${textLine("Type", item.explosionType)}
                        ${item.explosionHeatTransfer === undefined ? textLineWithDefault("Spectrum", item.explosionSpectrum, "N/A") : textLine("Heat Transfer", item.explosionHeatTransfer)}
                        ${rangeLineUnit("Disruption", (_0 = item.explosionDisruption) === null || _0 === void 0 ? void 0 : _0.toString(), item.explosionDisruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", item.explosionSalvage, "0")}
                        `;
            break;

          case itemTypes_1.ItemType.SpecialMeleeWeapon:
            html += `
                        ${emptyLine}
                        ${summaryLine("Attack")}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineUnitsWithDefault("Targeting", (_1 = item.targeting) === null || _1 === void 0 ? void 0 : _1.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        `;
            break;

          case itemTypes_1.ItemType.SpecialWeapon:
            html += `
                        ${emptyLine}
                        ${summaryLine("Shot")}
                        ${rangeLine("Range", item.range.toString(), item.range, undefined, 0, 20, ColorScheme.HighGood)}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineWithDefault("Recoil", (_2 = item.recoil) === null || _2 === void 0 ? void 0 : _2.toString(), "0")}
                        ${valueLineUnitsWithDefault("Targeting", (_3 = item.targeting) === null || _3 === void 0 ? void 0 : _3.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${rangeLine("Stability", (_4 = item.overloadStability) === null || _4 === void 0 ? void 0 : _4.toString(), item.overloadStability, "N/A", 0, 100, ColorScheme.HighGood)}
                        ${item.waypoints === undefined ? valueLineWithDefault("Arc", (_5 = item.arc) === null || _5 === void 0 ? void 0 : _5.toString(), "N/A") : valueLine("Waypoints", item.waypoints)}
                        `;

            if (item.explosionDamage !== undefined) {
              html += `
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Explosion")}
                        ${rangeLine("Radius", (_6 = item.explosionRadius) === null || _6 === void 0 ? void 0 : _6.toString(), item.explosionRadius, undefined, 0, 8, ColorScheme.Green)}
                        ${rangeLine("Damage", item.explosionDamage, getExplosionValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${valueLineWithDefault(" Falloff", item.falloff === undefined ? undefined : "-" + item.falloff, "0")}
                        ${textLine("Type", item.explosionType)}
                        ${textLineWithDefault("Spectrum", item.explosionSpectrum, "N/A")}
                        ${rangeLineUnit("Disruption", (_7 = item.explosionDisruption) === null || _7 === void 0 ? void 0 : _7.toString(), item.explosionDisruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", item.explosionSalvage, "0")}
                        `;
            } else if (item.damage !== undefined) {
              // Only some special weapons have a damage section
              html += `
                        ${emptyLine}
                        ${summaryProjectileLine(item, "Projectile")}
                        ${rangeLine("Damage", item.damage, getDamageValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${textLine("Type", item.damageType)}
                        ${valueLineUnitsTextWithDefault("Critical", (_8 = item.critical) === null || _8 === void 0 ? void 0 : _8.toString(), "%", "0", (_10 = (_9 = item.criticalType) === null || _9 === void 0 ? void 0 : _9.toString()) !== null && _10 !== void 0 ? _10 : "")}

                        ${textValueHtmlLine("Penetration", getPenetrationValue(item), getPenetrationValueClass(item), getPenetrationTextHtml(item))}
                        ${item.heatTransfer === undefined ? textLineWithDefault("Spectrum", item.spectrum, "N/A") : textLine("Heat Transfer", item.heatTransfer)}
                        ${rangeLineUnit("Disruption", (_11 = item.disruption) === null || _11 === void 0 ? void 0 : _11.toString(), item.disruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", (_12 = item.salvage) === null || _12 === void 0 ? void 0 : _12.toString(), "0")}
                        `;
            }

            break;

          case itemTypes_1.ItemType.ImpactWeapon:
          case itemTypes_1.ItemType.SlashingWeapon:
          case itemTypes_1.ItemType.PiercingWeapon:
            html += `
                        ${emptyLine}
                        ${summaryLine("Attack")}
                        ${rangeLine("Energy", "-" + item.shotEnergy, item.shotEnergy, "-0", 0, 50, ColorScheme.LowGood)}
                        ${rangeLine("Matter", "-" + item.shotMatter, item.shotMatter, "-0", 0, 25, ColorScheme.LowGood)}
                        ${rangeLine("Heat", "+" + item.shotHeat, item.shotHeat, "+0", 0, 100, ColorScheme.LowGood)}
                        ${valueLineUnitsWithDefault("Targeting", (_13 = item.targeting) === null || _13 === void 0 ? void 0 : _13.toString(), "%", "0")}
                        ${valueLineWithDefault("Delay", getDelayString(item), "0")}
                        ${emptyLine}
                        ${summaryLine("Hit")}
                        ${rangeLine("Damage", item.damage, getDamageValue(item), undefined, 0, 100, ColorScheme.Green)}
                        ${textLine("Type", item.damageType)}
                        ${valueLineUnitsTextWithDefault("Critical", (_14 = item.critical) === null || _14 === void 0 ? void 0 : _14.toString(), "%", "0", (_16 = (_15 = item.criticalType) === null || _15 === void 0 ? void 0 : _15.toString()) !== null && _16 !== void 0 ? _16 : "")}
                        ${rangeLineUnit("Disruption", (_17 = item.disruption) === null || _17 === void 0 ? void 0 : _17.toString(), item.disruption, "%", "0", 0, 50, ColorScheme.Green)}
                        ${valueLineWithDefault("Salvage", (_18 = item.salvage) === null || _18 === void 0 ? void 0 : _18.toString(), "0")}
                        `;
            break;

          default:
            throw "Unhandled weapon type";
        }
      }
  } // Add effect/description if present


  if (baseItem.effect !== undefined || baseItem.description !== undefined) {
    html += `
        ${emptyLine}
        ${summaryLine("Effect")}
        `;

    if (baseItem.effect !== undefined) {
      html += `<span class="popover-description">${escapeHtml(baseItem.effect)}</span>`;

      if (baseItem.description !== undefined) {
        html += `${emptyLine}`;
      }
    }

    if (baseItem.description !== undefined) {
      html += `<span class="popover-description">${escapeHtml(baseItem.description)}</span>`;
    }
  } // Add fabrication stats if present


  if (baseItem.fabrication != null) {
    const number = baseItem.fabrication.number;
    html += `${emptyLine}`;

    if (number === "1") {
      html += summaryLine("Fabrication");
    } else {
      html += summaryLine(`Fabrication x${number}`);
    }

    html += `
        ${textLine("Time", baseItem.fabrication.time)}
        ${((_19 = baseItem.fabrication) === null || _19 === void 0 ? void 0 : _19.matter) !== undefined ? textLine("Matter", getFabricationMatterString(baseItem.fabrication)) : ""}
        ${textLine("Components", "None")}
        `;
  }

  return html;
}

exports.createItemDataContent = createItemDataContent;
/* eslint-enable prettier/prettier */
// Escapes the given string for HTML

function escapeHtml(string) {
  return String(string).replace(/[&<>"'`=\/\n]/g, function (s) {
    return exports.entityMap[s];
  });
}

exports.escapeHtml = escapeHtml; // Flatten an array of arrays into a single array

function flatten(arrays) {
  const array = [];
  return array.concat(...arrays);
}

exports.flatten = flatten; // Do a lexicographical sort based on the no-prefix item name

function gallerySort(a, b) {
  const noPrefixA = getNoPrefixName(a);
  const noPrefixB = getNoPrefixName(b);
  let res = noPrefixA < noPrefixB ? -1 : noPrefixA > noPrefixB ? 1 : 0;

  if (res === 0) {
    // If no-prefix names match then use index in gallery export
    // There may be some formula to determine the real order or
    // it may be a hand-crafted list, I couldn't tell either way.
    // The export index will always be ordered for different prefix
    // versions of the same parts so this is the best way to sort
    // them how the in-game gallery does.
    res = getItem(a).index - getItem(b).index;
  }

  return res;
}

exports.gallerySort = gallerySort; // Tries to get an item by the name

function getBot(botName) {
  if (botName in exports.botData) {
    return exports.botData[botName];
  }

  console.trace();
  throw `${botName} not a valid bot`;
}

exports.getBot = getBot; // Tries to get an item by the name

function getItem(itemName) {
  if (itemName in exports.itemData) {
    return exports.itemData[itemName];
  }

  console.trace();
  throw `${itemName} not a valid item`;
}

exports.getItem = getItem; // Gets the movement name given a propulsion type

function getMovementText(propulsionType) {
  switch (propulsionType) {
    case itemTypes_1.ItemType.FlightUnit:
      return "Flying";

    case itemTypes_1.ItemType.HoverUnit:
      return "Hovering";

    case itemTypes_1.ItemType.Leg:
      return "Walking";

    case itemTypes_1.ItemType.Treads:
      return "Treading";

    case itemTypes_1.ItemType.Wheel:
      return "Rolling";

    default:
      return "Core";
  }
}

exports.getMovementText = getMovementText; // Gets a per-TU value scaled to the given number of TUs

function getValuePerTus(baseValue, numTus) {
  return baseValue * numTus / 100;
}

exports.getValuePerTus = getValuePerTus; // Removes the prefix from an item name

const noPrefixRegex = /\w{3}\. (.*)/;

function getNoPrefixName(name) {
  const newName = name.replace(noPrefixRegex, "$1");
  return newName;
}

exports.getNoPrefixName = getNoPrefixName; // Checks if a part has an active special property of the given type

function hasActiveSpecialProperty(part, partActive, propertyType) {
  if (part.specialProperty === undefined) {
    return false;
  }

  if (part.specialProperty.trait.kind !== propertyType) {
    return false;
  }

  if (part.specialProperty.active === "Part Active" && !partActive) {
    return false;
  }

  return true;
}

exports.hasActiveSpecialProperty = hasActiveSpecialProperty; // Initialize all item and bot data

function initData(items, bots) {
  // Load external files
  exports.botData = {};
  exports.itemData = {}; // Create items

  Object.keys(items).forEach((itemName, index) => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;

    if (itemName === "default") {
      // Not sure why this "default" pops up but it messes things up
      // Maybe an artifact of being imported as a JSON file
      return;
    }

    const item = items[itemName];
    let newItem;
    let category = itemTypes_1.ItemRatingCategory[(_a = item.Category) !== null && _a !== void 0 ? _a : ""];

    if (category === undefined) {
      category = itemTypes_1.ItemRatingCategory.None;
    }

    let rating = (_b = parseIntOrUndefined(item.Rating)) !== null && _b !== void 0 ? _b : 1;
    if (category == itemTypes_1.ItemRatingCategory.Alien) rating += 0.75;else if (category == itemTypes_1.ItemRatingCategory.Prototype) rating += 0.5;
    const ratingString = item.Rating;
    const fabrication = item["Fabrication Number"] === undefined ? undefined : {
      matter: item["Fabrication Matter"],
      number: item["Fabrication Number"],
      time: item["Fabrication Time"]
    };
    let categories;

    if (!(itemName in itemCategories)) {
      console.log(`Need to add categories for ${itemName}`);
      categories = [];
    } else {
      categories = itemCategories[itemName];
    }

    const coverage = (_c = parseIntOrUndefined(item.Coverage)) !== null && _c !== void 0 ? _c : 0;
    const hackable = (_d = !!parseIntOrUndefined(item["Hackable Schematic"])) !== null && _d !== void 0 ? _d : 0;
    const integrity = (_e = parseIntOrUndefined(item.Integrity)) !== null && _e !== void 0 ? _e : 0;
    const mass = parseIntOrUndefined(item.Mass);
    const noPrefixName = getNoPrefixName(itemName);
    const size = (_f = parseIntOrUndefined(item.Size)) !== null && _f !== void 0 ? _f : 1;
    const specialProperty = specialItemProperties_1.specialItemProperties[itemName];

    switch (item["Slot"]) {
      case "N/A":
        const otherItem = {
          slot: "N/A",
          category: category,
          coverage: undefined,
          hackable: hackable,
          integrity: integrity,
          mass: undefined,
          name: item.Name,
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          description: item.Description,
          categories: categories,
          life: item.Life,
          index: index,
          specialProperty: specialProperty
        };
        newItem = otherItem;
        break;

      case "Power":
        const powerItem = {
          slot: "Power",
          category: category,
          coverage: coverage,
          energyGeneration: parseIntOrDefault(item["Energy Generation"], 0),
          energyStorage: parseIntOrUndefined(item["Energy Storage"]),
          hackable: hackable,
          heatGeneration: parseIntOrUndefined(item["Heat Generation"]),
          matterUpkeep: parseIntOrUndefined(item["Matter Upkeep"]),
          integrity: integrity,
          mass: mass,
          name: item.Name,
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          description: item.Description,
          categories: categories,
          effect: item.Effect,
          fabrication: fabrication,
          powerStability: item["Power Stability"] == null ? undefined : parseIntOrUndefined(item["Power Stability"].slice(0, -1)),
          explosionRadius: parseIntOrDefault(item["Explosion Radius"], 0),
          explosionDamage: item["Explosion Damage"],
          explosionDamageMax: parseIntOrDefault(item["Explosion Damage Max"], 0),
          explosionDamageMin: parseIntOrDefault(item["Explosion Damage Min"], 0),
          explosionDisruption: parseIntOrDefault(item["Explosion Disruption"], 0),
          explosionHeatTransfer: item["Explosion Heat Transfer"],
          explosionSalvage: item["Explosion Salvage"],
          explosionSpectrum: item["Explosion Spectrum"],
          explosionType: item["Explosion Type"],
          index: index,
          specialProperty: specialProperty
        };
        newItem = powerItem;
        break;

      case "Propulsion":
        const propItem = {
          slot: "Propulsion",
          category: category,
          coverage: coverage,
          energyPerMove: parseFloatOrUndefined(item["Energy/Move"]),
          hackable: hackable,
          integrity: integrity,
          name: item.Name,
          mass: mass,
          noPrefixName: noPrefixName,
          penalty: parseInt(item.Penalty),
          rating: rating,
          ratingString: ratingString,
          size: size,
          support: parseInt(item.Support),
          timePerMove: parseInt(item["Time/Move"]),
          type: item.Type,
          fabrication: fabrication,
          burnout: item.Burnout,
          description: item.Description,
          categories: categories,
          effect: item.Effect,
          drag: parseIntOrUndefined(item.Drag),
          energyUpkeep: parseFloatOrUndefined(item["Energy Upkeep"]),
          heatGeneration: parseIntOrUndefined(item["Heat Generation"]),
          heatPerMove: parseIntOrUndefined(item["Heat/Move"]),
          matterUpkeep: parseIntOrUndefined(item["Matter Upkeep"]),
          modPerExtra: parseIntOrUndefined(item["Mod/Extra"]),
          siege: item.Siege,
          index: index,
          specialProperty: specialProperty
        };
        newItem = propItem;
        break;

      case "Utility":
        const utilItem = {
          slot: "Utility",
          category: category,
          coverage: coverage,
          hackable: hackable,
          integrity: integrity,
          name: item.Name,
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          fabrication: fabrication,
          description: item.Description,
          effect: item.Effect,
          categories: categories,
          energyUpkeep: parseIntOrUndefined(item["Energy Upkeep"]),
          heatGeneration: parseIntOrUndefined(item["Heat Generation"]),
          matterUpkeep: parseIntOrUndefined(item["Matter Upkeep"]),
          mass: (_g = parseIntOrUndefined(item.Mass)) !== null && _g !== void 0 ? _g : 0,
          specialTrait: item["Special Trait"],
          index: index,
          specialProperty: specialProperty
        };
        newItem = utilItem;
        break;

      case "Weapon":
        let critical;
        let criticalType;

        if (item.Critical !== undefined) {
          if (item.Critical.includes("%")) {
            // B11-type critical
            const result = /(\d*)% (\w*)/.exec(item.Critical);

            if (result === null) {
              critical = undefined;
              criticalType = undefined;
            } else {
              critical = parseInt(result[1]);
              criticalType = result[2];
            }
          } else {
            // Pre-B11-type critical
            critical = parseIntOrUndefined(item.Critical);
            criticalType = itemTypes_1.Critical.Destroy;
          }
        }

        const weaponItem = {
          slot: "Weapon",
          category: category,
          coverage: coverage,
          hackable: hackable,
          integrity: integrity,
          name: item.Name,
          noPrefixName: noPrefixName,
          rating: rating,
          ratingString: ratingString,
          size: size,
          type: item.Type,
          fabrication: fabrication,
          description: item.Description,
          effect: item.Effect,
          categories: categories,
          mass: (_h = parseIntOrUndefined(item.Mass)) !== null && _h !== void 0 ? _h : 0,
          specialTrait: item["Special Trait"],
          critical: critical,
          criticalType: criticalType,
          criticalString: item.Critical,
          delay: parseIntOrUndefined(item.Delay),
          explosionHeatTransfer: item["Explosion Heat Transfer"],
          explosionType: item["Explosion Type"],
          penetration: item.Penetration,
          projectileCount: (_j = parseIntOrUndefined(item["Projectile Count"])) !== null && _j !== void 0 ? _j : 1,
          range: parseInt(item.Range),
          shotEnergy: parseIntOrUndefined(item["Shot Energy"]),
          shotHeat: parseIntOrUndefined(item["Shot Heat"]),
          targeting: parseIntOrUndefined(item.Targeting),
          damage: item["Damage"] === undefined ? item["Damage Min"] !== undefined ? `${item["Damage Min"]}-${item["Damage Max"]}` : undefined : item["Damage"],
          damageMin: parseIntOrUndefined(item["Damage Min"]),
          damageMax: parseIntOrUndefined(item["Damage Max"]),
          damageType: item["Damage Type"],
          disruption: parseIntOrUndefined(item.Disruption),
          explosionDamage: item["Explosion Damage"] === undefined ? item["Explosion Damage Max"] !== undefined ? `${item["Explosion Damage Min"]}-${item["Explosion Damage Max"]}` : undefined : item["Explosion Damage"],
          explosionDisruption: parseIntOrUndefined(item["Explosion Disruption"]),
          explosionRadius: parseIntOrUndefined(item["Explosion Radius"]),
          explosionSalvage: item["Explosion Salvage"],
          explosionSpectrum: item["Explosion Spectrum"],
          falloff: item.Falloff,
          heatTransfer: item["Heat Transfer"],
          life: item.Life,
          overloadStability: item["Overload Stability"] == null ? undefined : parseIntOrUndefined(item["Overload Stability"].slice(0, -1)),
          recoil: parseIntOrUndefined(item.Recoil),
          salvage: parseIntOrUndefined(item.Salvage),
          shotMatter: parseIntOrUndefined(item["Shot Matter"]),
          spectrum: item.Spectrum,
          waypoints: item.Waypoints,
          arc: parseIntOrUndefined(item.Arc),
          index: index,
          specialProperty: specialProperty
        };
        newItem = weaponItem;
        break;
    }

    exports.itemData[itemName] = newItem;
  });

  if (bots !== undefined) {
    // Create bots
    Object.keys(bots).forEach(botName => {
      var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t;

      if (botName === "default") {
        // Not sure why this "default" pops up but it messes things up
        // Maybe an artifact of being imported as a JSON file
        return;
      }

      function sumItemCoverage(sum, data) {
        if (typeof data === "string") {
          // Item name, just parse coverage
          return getItem(data).coverage + sum;
        } else {
          // Option, return largest sum of items
          let largest = 0;
          data.forEach(optionData => {
            var _a;

            if (optionData.name === "None") {
              return;
            }

            const number = (_a = optionData.number) !== null && _a !== void 0 ? _a : 1;
            const item = getItem(optionData.name);
            const optionCoverage = item.coverage * number;
            largest = Math.max(largest, optionCoverage);
          });
          return largest + sum;
        }
      }

      const bot = bots[botName];
      const itemCoverage = ((_b = (_a = bot.Armament) === null || _a === void 0 ? void 0 : _a.reduce(sumItemCoverage, 0)) !== null && _b !== void 0 ? _b : 0) + ((_d = (_c = bot.Components) === null || _c === void 0 ? void 0 : _c.reduce(sumItemCoverage, 0)) !== null && _d !== void 0 ? _d : 0);
      let roughCoreCoverage = 100.0 / (100.0 - parseInt(bot["Core Exposure %"])) * itemCoverage - itemCoverage;

      if (isNaN(roughCoreCoverage)) {
        roughCoreCoverage = 1;
      }

      const estimatedCoreCoverage = ceilToMultiple(roughCoreCoverage, 10);
      const totalCoverage = estimatedCoreCoverage + itemCoverage;

      function addPartData(data, partData, partOptionData) {
        if (typeof data === "string") {
          const itemName = data; // Item name, add to part data

          const result = partData.find(p => p.name === data);

          if (result === undefined) {
            const item = getItem(itemName);
            partData.push({
              name: itemName,
              number: 1,
              coverage: Math.floor(100.0 * item.coverage / totalCoverage),
              integrity: item.integrity
            });
          } else {
            result.number += 1;
          }
        } else {
          // Option, add all options
          const options = [];
          data.forEach(optionData => {
            var _a;

            const itemName = optionData.name;
            let coverage = 0;
            const item = getItem(itemName);

            if (itemName !== "None") {
              coverage = Math.floor(100.0 * item.coverage / totalCoverage);
            }

            options.push({
              name: itemName,
              number: (_a = optionData.number) !== null && _a !== void 0 ? _a : 1,
              coverage: coverage,
              integrity: item.integrity
            });
          });
          partOptionData.push(options);
        }
      } // Add armament and component data


      const armamentData = [];
      const armamentOptionData = [];
      (_e = bot.Armament) === null || _e === void 0 ? void 0 : _e.forEach(data => addPartData(data, armamentData, armamentOptionData));
      const componentData = [];
      const componentOptionData = [];
      (_f = bot.Components) === null || _f === void 0 ? void 0 : _f.forEach(data => addPartData(data, componentData, componentOptionData));
      let categories;

      if (!(botName in botCategories)) {
        console.log(`Need to add categories for ${botName}`);
        categories = [];
      } else {
        categories = botCategories[botName];
      }

      const fabrication = bot["Fabrication Count"] === undefined ? undefined : {
        matter: bot["Fabrication Matter"],
        number: bot["Fabrication Count"],
        time: bot["Fabrication Time"]
      };
      exports.botData[botName] = {
        armament: (_g = bot.Armament) !== null && _g !== void 0 ? _g : [],
        armamentData: armamentData,
        armamentOptionData: armamentOptionData,
        armamentString: (_h = bot["Armament String"]) !== null && _h !== void 0 ? _h : "",
        categories: categories,
        class: bot.Class,
        componentData: componentData,
        componentOptionData: componentOptionData,
        components: (_j = bot.Components) !== null && _j !== void 0 ? _j : [],
        componentsString: (_k = bot["Components String"]) !== null && _k !== void 0 ? _k : "",
        coreCoverage: roughCoreCoverage,
        coreExposure: parseInt(bot["Core Exposure %"]),
        coreIntegrity: parseInt(bot["Core Integrity"]),
        description: (_l = bot.Analysis) !== null && _l !== void 0 ? _l : "",
        fabrication: fabrication,
        immunities: (_m = bot.Immunities) !== null && _m !== void 0 ? _m : [],
        immunitiesString: (_p = (_o = bot.Immunities) === null || _o === void 0 ? void 0 : _o.join(", ")) !== null && _p !== void 0 ? _p : "",
        memory: bot.Memory,
        movement: `${bot.Movement} (${bot.Speed})`,
        name: botName,
        profile: bot.Profile,
        rating: bot.Rating,
        resistances: bot.Resistances,
        salvagePotential: bot["Salvage Potential"],
        spotPercent: (_q = bot["Spot %"]) !== null && _q !== void 0 ? _q : "100",
        size: bot["Size Class"],
        threat: bot.Threat,
        totalCoverage: totalCoverage,
        tier: bot.Tier,
        traits: (_r = bot.Traits) !== null && _r !== void 0 ? _r : [],
        traitsString: (_t = (_s = bot.Traits) === null || _s === void 0 ? void 0 : _s.join(", ")) !== null && _t !== void 0 ? _t : "",
        value: parseIntOrDefault(bot.Value, 0),
        visualRange: bot["Sight Range"]
      };
    });
  }
}

exports.initData = initData; // Determines if the given item type is melee

function isPartMelee(part) {
  if (part.type === itemTypes_1.ItemType.ImpactWeapon || part.type === itemTypes_1.ItemType.PiercingWeapon || part.type === itemTypes_1.ItemType.SlashingWeapon || part.type === itemTypes_1.ItemType.SpecialMeleeWeapon) {
    return true;
  }

  return false;
}

exports.isPartMelee = isPartMelee; // Converts leetspeak numbers in a string to characters

function leetSpeakMatchTransform(name) {
  return name.replace(/0/, "o").replace(/1/, "i").replace(/3/, "e").replace(/4/, "a").replace(/7/, "t").replace(/5/, "s").replace(/8/, "b");
}

exports.leetSpeakMatchTransform = leetSpeakMatchTransform; // Converts an item or bot's name to an HTML id

const nameToIdRegex = /[ /.'"\]\[]]*/g;

function nameToId(name) {
  const id = `item${name.replace(nameToIdRegex, "")}`;
  return id;
}

exports.nameToId = nameToId; // Parses the string into a number or null if invalid

function parseFloatOrUndefined(value) {
  const int = parseFloat(value !== null && value !== void 0 ? value : "");

  if (isNaN(int)) {
    return undefined;
  }

  return int;
} // Attempts to parse an int from the string, otherwise uses the default value


function parseIntOrDefault(string, defaultVal) {
  const value = parseInt(string);

  if (isNaN(value)) {
    return defaultVal;
  }

  return value;
}

exports.parseIntOrDefault = parseIntOrDefault; // Parses the string into a number or null if invalid

function parseIntOrUndefined(value) {
  const int = parseInt(value !== null && value !== void 0 ? value : "");

  if (isNaN(int)) {
    return undefined;
  }

  return int;
} // Gets a random integer between the min and max values (inclusive)


function randomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

exports.randomInt = randomInt; // Returns the value if it's not undefined, otherwise return defaultVal

function valueOrDefault(val, defaultVal) {
  if (val === undefined) {
    return defaultVal;
  }

  return val;
}

exports.valueOrDefault = valueOrDefault;
},{"../json/item_categories.json":"json/item_categories.json","../json/bot_categories.json":"json/bot_categories.json","./itemTypes":"ts/itemTypes.ts","./specialItemProperties":"ts/specialItemProperties.ts"}],"ts/commonTypes.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.pageTypes = void 0;
exports.pageTypes = ["About", "Bots", "Build", "Hacks", "Parts", "Simulator"];
},{}],"../node_modules/process/browser.js":[function(require,module,exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};
},{}],"../node_modules/jquery/dist/jquery.js":[function(require,module,exports) {
var global = arguments[3];
var process = require("process");
var define;
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

},{"process":"../node_modules/process/browser.js"}],"../node_modules/popper.js/dist/esm/popper.js":[function(require,module,exports) {
var global = arguments[3];
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];

  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }

  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }

    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;
/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/

var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;
/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */

function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}
/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */


function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  } // NOTE: 1 DOM access here


  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}
/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */


function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }

  return element.parentNode || element.host;
}
/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */


function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;

    case '#document':
      return element.body;
  } // Firefox want us to check `-x` and `-y` variations as well


  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}
/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */


function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);
/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */

function isIE(version) {
  if (version === 11) {
    return isIE11;
  }

  if (version === 10) {
    return isIE10;
  }

  return isIE11 || isIE10;
}
/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */


function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null; // NOTE: 1 DOM access here

  var offsetParent = element.offsetParent || null; // Skip hidden elements which don't have an offsetParent

  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  } // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...


  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }

  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}
/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */


function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}
/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */


function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  } // Here we make sure to give as "start" the element that comes first in the DOM


  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1; // Get common ancestor container

  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer; // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  } // one of the nodes is inside shadowDOM, find which one


  var element1root = getRoot(element1);

  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}
/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */


function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';
  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}
/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */


function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}
/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */


function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';
  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);
  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var defineProperty = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */


function getClientRect(offsets) {
  return _extends({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}
/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */


function getBoundingClientRect(element) {
  var rect = {}; // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11

  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  }; // subtract scrollbar size from sizes

  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;
  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height; // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons

  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');
    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);
  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth); // In cases where the parent is fixed, we must ignore negative scroll in offset calc

  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }

  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0; // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.

  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);
    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft; // Attach marginTop and marginLeft because in some circumstances we may need them

    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);
  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;
  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };
  return getClientRect(offset);
}
/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */


function isFixed(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }

  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }

  var parentNode = getParentNode(element);

  if (!parentNode) {
    return false;
  }

  return isFixed(parentNode);
}
/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */


function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }

  var el = element.parentElement;

  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }

  return el || document.documentElement;
}
/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */


function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false; // NOTE: 1 DOM access here

  var boundaries = {
    top: 0,
    left: 0
  };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference)); // Handle viewport case

  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;

    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));

      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition); // In case of HTML, we need a different computation

    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  } // Add paddings


  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;
  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;
  return width * height;
}
/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);
  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };
  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });
  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });
  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;
  var variation = placement.split('-')[1];
  return computedPlacement + (variation ? '-' + variation : '');
}
/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */


function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}
/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */


function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}
/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */


function getOppositePlacement(placement) {
  var hash = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
  };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}
/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */


function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0]; // Get popper node sizes

  var popperRect = getOuterSizes(popper); // Add position, width and height to our offsets object

  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  }; // depending by the popper placement we have to compute its offsets slightly differently

  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';
  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;

  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}
/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  } // use `filter` to obtain the same behavior of `find`


  return arr.filter(check)[0];
}
/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */


function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  } // use `find` + `indexOf` if `findIndex` isn't supported


  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}
/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */


function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));
  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }

    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation

    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);
      data = fn(data, modifier);
    }
  });
  return data;
}
/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */


function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  }; // compute reference element offsets

  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding); // store the computed placement inside `originalPlacement`

  data.originalPlacement = data.placement;
  data.positionFixed = this.options.positionFixed; // compute the popper offsets

  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);
  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute'; // run the modifiers

  data = runModifiers(this.modifiers, data); // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback

  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}
/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */


function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}
/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */


function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;

    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }

  return null;
}
/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */


function destroy() {
  this.state.isDestroyed = true; // touch DOM only if `applyStyle` modifier is enabled

  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners(); // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it

  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }

  return this;
}
/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */


function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, {
    passive: true
  });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }

  scrollParents.push(target);
}
/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, {
    passive: true
  }); // Scroll event listener on scroll parents

  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;
  return state;
}
/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */


function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}
/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */


function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound); // Remove scroll event listener on scroll parents

  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  }); // Reset state

  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}
/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */


function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}
/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */


function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}
/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = ''; // add unit if the value is numeric and is one of the following

    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }

    element.style[prop] = styles[prop] + unit;
  });
}
/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */


function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];

    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */


function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles); // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element

  setAttributes(data.instance.popper, data.attributes); // if arrowElement is defined and arrowStyles has some properties

  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}
/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */


function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed); // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value

  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);
  popper.setAttribute('x-placement', placement); // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations

  setStyles(popper, {
    position: options.positionFixed ? 'fixed' : 'absolute'
  });
  return options;
}
/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */


function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);
  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;
  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;
  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper; // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;

  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }

  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;
  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent); // Styles

  var styles = {
    position: popper.position
  };
  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);
  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right'; // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed

  var prefixedProperty = getSupportedPropertyName('transform'); // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.

  var left = void 0,
      top = void 0;

  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }

  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }

  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  } // Attributes


  var attributes = {
    'x-placement': data.placement
  }; // Update `data` attributes, styles and arrowStyles

  data.attributes = _extends({}, attributes, data.attributes);
  data.styles = _extends({}, styles, data.styles);
  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);
  return data;
}
/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */


function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });
  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';

    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }

  return isRequired;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function arrow(data, options) {
  var _data$offsets$arrow; // arrow depends on keepTogether in order to work


  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element; // if arrowElement is a string, suppose it's a CSS selector

  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement); // if arrowElement is not found, don't run the modifier

    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isVertical = ['left', 'right'].indexOf(placement) !== -1;
  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len]; //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //
  // top/left side

  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  } // bottom/right side


  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }

  data.offsets.popper = getClientRect(data.offsets.popper); // compute center of the popper

  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2; // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available

  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide; // prevent arrowElement from being placed not contiguously to its popper

  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);
  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);
  return data;
}
/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */


function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }

  return variation;
}
/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */


var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start']; // Get rid of `auto` `auto-start` and `auto-end`

var validPlacements = placements.slice(3);
/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */

function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */

function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);
  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';
  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;

    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;

    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;

    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);
    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference; // using floor because the reference offsets may contain decimals we are not going to consider here

    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);
    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);
    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom; // flip the variation if required

    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1; // flips variation if reference element overflows boundaries

    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom); // flips variation if popper content overflows boundaries

    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);
    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : ''); // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future

      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));
      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }

  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}
/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */


function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2]; // If it's not a number it's an operator, I guess

  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;

    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;

      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;

    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }

    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}
/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */


function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0]; // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one

  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1; // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)

  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  }); // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space

  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  } // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.


  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments]; // Convert the values with units to absolute pixels to allow our computations

  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, []) // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  }); // Loop trough the offsets arrays and execute the operations

  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */


function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var basePlacement = placement.split('-')[0];
  var offsets = void 0;

  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper); // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken

  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  } // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself


  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification

  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];
  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';
  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed); // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed

  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;
  options.boundaries = boundaries;
  var order = options.priority;
  var popper = data.offsets.popper;
  var check = {
    primary: function primary(placement) {
      var value = popper[placement];

      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }

      return defineProperty({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];

      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }

      return defineProperty({}, mainSide, value);
    }
  };
  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends({}, popper, check[side](placement));
  });
  data.offsets.popper = popper;
  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1]; // if shift shiftvariation is specified, run the modifier

  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;
    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';
    var shiftOffsets = {
      start: defineProperty({}, side, reference[side]),
      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])
    };
    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}
/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */


function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;
  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;
  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);
  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);
  return data;
}
/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */


var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: offset,

    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: preventOverflow,

    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],

    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: arrow,

    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: flip,

    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',

    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,

    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',

    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,

    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,

    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,

    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: computeStyle,

    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,

    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',

    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,

    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,

    /** @prop {ModifierFn} */
    fn: applyStyle,

    /** @prop {Function} */
    onLoad: applyStyleOnLoad,

    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};
/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */

var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};
/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */
// Utils
// Methods

var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    }; // make update() debounced, so that it only runs at most once-per-tick


    this.update = debounce(this.update.bind(this)); // with {} we create a new object with the options inside it

    this.options = _extends({}, Popper.Defaults, options); // init state

    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    }; // get reference and popper elements (allow jQuery wrappers)

    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper; // Deep merge modifiers options

    this.options.modifiers = {};
    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    }); // Refactoring modifiers' list (Object => Array)

    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends({
        name: name
      }, _this.options.modifiers[name]);
    }) // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    }); // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!

    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    }); // fire the first update to position the popper in the right place

    this.update();
    var eventsEnabled = this.options.eventsEnabled;

    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  } // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }
    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */

    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();
/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;
var _default = Popper;
exports.default = _default;
},{}],"../node_modules/bootstrap/dist/js/bootstrap.js":[function(require,module,exports) {
var define;
var global = arguments[3];
/*!
  * Bootstrap v4.5.3 (https://getbootstrap.com/)
  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('jquery'), require('popper.js')) :
  typeof define === 'function' && define.amd ? define(['exports', 'jquery', 'popper.js'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.bootstrap = {}, global.jQuery, global.Popper));
}(this, (function (exports, $, Popper) { 'use strict';

  function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

  var $__default = /*#__PURE__*/_interopDefaultLegacy($);
  var Popper__default = /*#__PURE__*/_interopDefaultLegacy(Popper);

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.5.3): util.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */

  var TRANSITION_END = 'transitionend';
  var MAX_UID = 1000000;
  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

  function toType(obj) {
    if (obj === null || typeof obj === 'undefined') {
      return "" + obj;
    }

    return {}.toString.call(obj).match(/\s([a-z]+)/i)[1].toLowerCase();
  }

  function getSpecialTransitionEndEvent() {
    return {
      bindType: TRANSITION_END,
      delegateType: TRANSITION_END,
      handle: function handle(event) {
        if ($__default['default'](event.target).is(this)) {
          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
        }

        return undefined;
      }
    };
  }

  function transitionEndEmulator(duration) {
    var _this = this;

    var called = false;
    $__default['default'](this).one(Util.TRANSITION_END, function () {
      called = true;
    });
    setTimeout(function () {
      if (!called) {
        Util.triggerTransitionEnd(_this);
      }
    }, duration);
    return this;
  }

  function setTransitionEndSupport() {
    $__default['default'].fn.emulateTransitionEnd = transitionEndEmulator;
    $__default['default'].event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
  }
  /**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */


  var Util = {
    TRANSITION_END: 'bsTransitionEnd',
    getUID: function getUID(prefix) {
      do {
        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
      } while (document.getElementById(prefix));

      return prefix;
    },
    getSelectorFromElement: function getSelectorFromElement(element) {
      var selector = element.getAttribute('data-target');

      if (!selector || selector === '#') {
        var hrefAttr = element.getAttribute('href');
        selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';
      }

      try {
        return document.querySelector(selector) ? selector : null;
      } catch (_) {
        return null;
      }
    },
    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {
      if (!element) {
        return 0;
      } // Get transition-duration of the element


      var transitionDuration = $__default['default'](element).css('transition-duration');
      var transitionDelay = $__default['default'](element).css('transition-delay');
      var floatTransitionDuration = parseFloat(transitionDuration);
      var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found

      if (!floatTransitionDuration && !floatTransitionDelay) {
        return 0;
      } // If multiple durations are defined, take the first


      transitionDuration = transitionDuration.split(',')[0];
      transitionDelay = transitionDelay.split(',')[0];
      return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
    },
    reflow: function reflow(element) {
      return element.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(element) {
      $__default['default'](element).trigger(TRANSITION_END);
    },
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(TRANSITION_END);
    },
    isElement: function isElement(obj) {
      return (obj[0] || obj).nodeType;
    },
    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
      for (var property in configTypes) {
        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
          var expectedTypes = configTypes[property];
          var value = config[property];
          var valueType = value && Util.isElement(value) ? 'element' : toType(value);

          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));
          }
        }
      }
    },
    findShadowRoot: function findShadowRoot(element) {
      if (!document.documentElement.attachShadow) {
        return null;
      } // Can find the shadow root otherwise it'll return the document


      if (typeof element.getRootNode === 'function') {
        var root = element.getRootNode();
        return root instanceof ShadowRoot ? root : null;
      }

      if (element instanceof ShadowRoot) {
        return element;
      } // when we don't find a shadow root


      if (!element.parentNode) {
        return null;
      }

      return Util.findShadowRoot(element.parentNode);
    },
    jQueryDetection: function jQueryDetection() {
      if (typeof $__default['default'] === 'undefined') {
        throw new TypeError('Bootstrap\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\'s JavaScript.');
      }

      var version = $__default['default'].fn.jquery.split(' ')[0].split('.');
      var minMajor = 1;
      var ltMajor = 2;
      var minMinor = 9;
      var minPatch = 1;
      var maxMajor = 4;

      if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {
        throw new Error('Bootstrap\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');
      }
    }
  };
  Util.jQueryDetection();
  setTransitionEndSupport();

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME = 'alert';
  var VERSION = '4.5.3';
  var DATA_KEY = 'bs.alert';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $__default['default'].fn[NAME];
  var SELECTOR_DISMISS = '[data-dismiss="alert"]';
  var EVENT_CLOSE = "close" + EVENT_KEY;
  var EVENT_CLOSED = "closed" + EVENT_KEY;
  var EVENT_CLICK_DATA_API = "click" + EVENT_KEY + DATA_API_KEY;
  var CLASS_NAME_ALERT = 'alert';
  var CLASS_NAME_FADE = 'fade';
  var CLASS_NAME_SHOW = 'show';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Alert = /*#__PURE__*/function () {
    function Alert(element) {
      this._element = element;
    } // Getters


    var _proto = Alert.prototype;

    // Public
    _proto.close = function close(element) {
      var rootElement = this._element;

      if (element) {
        rootElement = this._getRootElement(element);
      }

      var customEvent = this._triggerCloseEvent(rootElement);

      if (customEvent.isDefaultPrevented()) {
        return;
      }

      this._removeElement(rootElement);
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY);
      this._element = null;
    } // Private
    ;

    _proto._getRootElement = function _getRootElement(element) {
      var selector = Util.getSelectorFromElement(element);
      var parent = false;

      if (selector) {
        parent = document.querySelector(selector);
      }

      if (!parent) {
        parent = $__default['default'](element).closest("." + CLASS_NAME_ALERT)[0];
      }

      return parent;
    };

    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {
      var closeEvent = $__default['default'].Event(EVENT_CLOSE);
      $__default['default'](element).trigger(closeEvent);
      return closeEvent;
    };

    _proto._removeElement = function _removeElement(element) {
      var _this = this;

      $__default['default'](element).removeClass(CLASS_NAME_SHOW);

      if (!$__default['default'](element).hasClass(CLASS_NAME_FADE)) {
        this._destroyElement(element);

        return;
      }

      var transitionDuration = Util.getTransitionDurationFromElement(element);
      $__default['default'](element).one(Util.TRANSITION_END, function (event) {
        return _this._destroyElement(element, event);
      }).emulateTransitionEnd(transitionDuration);
    };

    _proto._destroyElement = function _destroyElement(element) {
      $__default['default'](element).detach().trigger(EVENT_CLOSED).remove();
    } // Static
    ;

    Alert._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY);

        if (!data) {
          data = new Alert(this);
          $element.data(DATA_KEY, data);
        }

        if (config === 'close') {
          data[config](this);
        }
      });
    };

    Alert._handleDismiss = function _handleDismiss(alertInstance) {
      return function (event) {
        if (event) {
          event.preventDefault();
        }

        alertInstance.close(this);
      };
    };

    _createClass(Alert, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }]);

    return Alert;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API, SELECTOR_DISMISS, Alert._handleDismiss(new Alert()));
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME] = Alert._jQueryInterface;
  $__default['default'].fn[NAME].Constructor = Alert;

  $__default['default'].fn[NAME].noConflict = function () {
    $__default['default'].fn[NAME] = JQUERY_NO_CONFLICT;
    return Alert._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$1 = 'button';
  var VERSION$1 = '4.5.3';
  var DATA_KEY$1 = 'bs.button';
  var EVENT_KEY$1 = "." + DATA_KEY$1;
  var DATA_API_KEY$1 = '.data-api';
  var JQUERY_NO_CONFLICT$1 = $__default['default'].fn[NAME$1];
  var CLASS_NAME_ACTIVE = 'active';
  var CLASS_NAME_BUTTON = 'btn';
  var CLASS_NAME_FOCUS = 'focus';
  var SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^="button"]';
  var SELECTOR_DATA_TOGGLES = '[data-toggle="buttons"]';
  var SELECTOR_DATA_TOGGLE = '[data-toggle="button"]';
  var SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle="buttons"] .btn';
  var SELECTOR_INPUT = 'input:not([type="hidden"])';
  var SELECTOR_ACTIVE = '.active';
  var SELECTOR_BUTTON = '.btn';
  var EVENT_CLICK_DATA_API$1 = "click" + EVENT_KEY$1 + DATA_API_KEY$1;
  var EVENT_FOCUS_BLUR_DATA_API = "focus" + EVENT_KEY$1 + DATA_API_KEY$1 + " " + ("blur" + EVENT_KEY$1 + DATA_API_KEY$1);
  var EVENT_LOAD_DATA_API = "load" + EVENT_KEY$1 + DATA_API_KEY$1;
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Button = /*#__PURE__*/function () {
    function Button(element) {
      this._element = element;
      this.shouldAvoidTriggerChange = false;
    } // Getters


    var _proto = Button.prototype;

    // Public
    _proto.toggle = function toggle() {
      var triggerChangeEvent = true;
      var addAriaPressed = true;
      var rootElement = $__default['default'](this._element).closest(SELECTOR_DATA_TOGGLES)[0];

      if (rootElement) {
        var input = this._element.querySelector(SELECTOR_INPUT);

        if (input) {
          if (input.type === 'radio') {
            if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {
              triggerChangeEvent = false;
            } else {
              var activeElement = rootElement.querySelector(SELECTOR_ACTIVE);

              if (activeElement) {
                $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE);
              }
            }
          }

          if (triggerChangeEvent) {
            // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input
            if (input.type === 'checkbox' || input.type === 'radio') {
              input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE);
            }

            if (!this.shouldAvoidTriggerChange) {
              $__default['default'](input).trigger('change');
            }
          }

          input.focus();
          addAriaPressed = false;
        }
      }

      if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {
        if (addAriaPressed) {
          this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE));
        }

        if (triggerChangeEvent) {
          $__default['default'](this._element).toggleClass(CLASS_NAME_ACTIVE);
        }
      }
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$1);
      this._element = null;
    } // Static
    ;

    Button._jQueryInterface = function _jQueryInterface(config, avoidTriggerChange) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$1);

        if (!data) {
          data = new Button(this);
          $element.data(DATA_KEY$1, data);
        }

        data.shouldAvoidTriggerChange = avoidTriggerChange;

        if (config === 'toggle') {
          data[config]();
        }
      });
    };

    _createClass(Button, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$1;
      }
    }]);

    return Button;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE_CARROT, function (event) {
    var button = event.target;
    var initialButton = button;

    if (!$__default['default'](button).hasClass(CLASS_NAME_BUTTON)) {
      button = $__default['default'](button).closest(SELECTOR_BUTTON)[0];
    }

    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {
      event.preventDefault(); // work around Firefox bug #1540995
    } else {
      var inputBtn = button.querySelector(SELECTOR_INPUT);

      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {
        event.preventDefault(); // work around Firefox bug #1540995

        return;
      }

      if (initialButton.tagName === 'INPUT' || button.tagName !== 'LABEL') {
        Button._jQueryInterface.call($__default['default'](button), 'toggle', initialButton.tagName === 'INPUT');
      }
    }
  }).on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {
    var button = $__default['default'](event.target).closest(SELECTOR_BUTTON)[0];
    $__default['default'](button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type));
  });
  $__default['default'](window).on(EVENT_LOAD_DATA_API, function () {
    // ensure correct active class is set to match the controls' actual values/states
    // find all checkboxes/readio buttons inside data-toggle groups
    var buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));

    for (var i = 0, len = buttons.length; i < len; i++) {
      var button = buttons[i];
      var input = button.querySelector(SELECTOR_INPUT);

      if (input.checked || input.hasAttribute('checked')) {
        button.classList.add(CLASS_NAME_ACTIVE);
      } else {
        button.classList.remove(CLASS_NAME_ACTIVE);
      }
    } // find all button toggles


    buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));

    for (var _i = 0, _len = buttons.length; _i < _len; _i++) {
      var _button = buttons[_i];

      if (_button.getAttribute('aria-pressed') === 'true') {
        _button.classList.add(CLASS_NAME_ACTIVE);
      } else {
        _button.classList.remove(CLASS_NAME_ACTIVE);
      }
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$1] = Button._jQueryInterface;
  $__default['default'].fn[NAME$1].Constructor = Button;

  $__default['default'].fn[NAME$1].noConflict = function () {
    $__default['default'].fn[NAME$1] = JQUERY_NO_CONFLICT$1;
    return Button._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$2 = 'carousel';
  var VERSION$2 = '4.5.3';
  var DATA_KEY$2 = 'bs.carousel';
  var EVENT_KEY$2 = "." + DATA_KEY$2;
  var DATA_API_KEY$2 = '.data-api';
  var JQUERY_NO_CONFLICT$2 = $__default['default'].fn[NAME$2];
  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key

  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key

  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch

  var SWIPE_THRESHOLD = 40;
  var Default = {
    interval: 5000,
    keyboard: true,
    slide: false,
    pause: 'hover',
    wrap: true,
    touch: true
  };
  var DefaultType = {
    interval: '(number|boolean)',
    keyboard: 'boolean',
    slide: '(boolean|string)',
    pause: '(string|boolean)',
    wrap: 'boolean',
    touch: 'boolean'
  };
  var DIRECTION_NEXT = 'next';
  var DIRECTION_PREV = 'prev';
  var DIRECTION_LEFT = 'left';
  var DIRECTION_RIGHT = 'right';
  var EVENT_SLIDE = "slide" + EVENT_KEY$2;
  var EVENT_SLID = "slid" + EVENT_KEY$2;
  var EVENT_KEYDOWN = "keydown" + EVENT_KEY$2;
  var EVENT_MOUSEENTER = "mouseenter" + EVENT_KEY$2;
  var EVENT_MOUSELEAVE = "mouseleave" + EVENT_KEY$2;
  var EVENT_TOUCHSTART = "touchstart" + EVENT_KEY$2;
  var EVENT_TOUCHMOVE = "touchmove" + EVENT_KEY$2;
  var EVENT_TOUCHEND = "touchend" + EVENT_KEY$2;
  var EVENT_POINTERDOWN = "pointerdown" + EVENT_KEY$2;
  var EVENT_POINTERUP = "pointerup" + EVENT_KEY$2;
  var EVENT_DRAG_START = "dragstart" + EVENT_KEY$2;
  var EVENT_LOAD_DATA_API$1 = "load" + EVENT_KEY$2 + DATA_API_KEY$2;
  var EVENT_CLICK_DATA_API$2 = "click" + EVENT_KEY$2 + DATA_API_KEY$2;
  var CLASS_NAME_CAROUSEL = 'carousel';
  var CLASS_NAME_ACTIVE$1 = 'active';
  var CLASS_NAME_SLIDE = 'slide';
  var CLASS_NAME_RIGHT = 'carousel-item-right';
  var CLASS_NAME_LEFT = 'carousel-item-left';
  var CLASS_NAME_NEXT = 'carousel-item-next';
  var CLASS_NAME_PREV = 'carousel-item-prev';
  var CLASS_NAME_POINTER_EVENT = 'pointer-event';
  var SELECTOR_ACTIVE$1 = '.active';
  var SELECTOR_ACTIVE_ITEM = '.active.carousel-item';
  var SELECTOR_ITEM = '.carousel-item';
  var SELECTOR_ITEM_IMG = '.carousel-item img';
  var SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';
  var SELECTOR_INDICATORS = '.carousel-indicators';
  var SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';
  var SELECTOR_DATA_RIDE = '[data-ride="carousel"]';
  var PointerType = {
    TOUCH: 'touch',
    PEN: 'pen'
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Carousel = /*#__PURE__*/function () {
    function Carousel(element, config) {
      this._items = null;
      this._interval = null;
      this._activeElement = null;
      this._isPaused = false;
      this._isSliding = false;
      this.touchTimeout = null;
      this.touchStartX = 0;
      this.touchDeltaX = 0;
      this._config = this._getConfig(config);
      this._element = element;
      this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS);
      this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;
      this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);

      this._addEventListeners();
    } // Getters


    var _proto = Carousel.prototype;

    // Public
    _proto.next = function next() {
      if (!this._isSliding) {
        this._slide(DIRECTION_NEXT);
      }
    };

    _proto.nextWhenVisible = function nextWhenVisible() {
      var $element = $__default['default'](this._element); // Don't call next when the page isn't visible
      // or the carousel or its parent isn't visible

      if (!document.hidden && $element.is(':visible') && $element.css('visibility') !== 'hidden') {
        this.next();
      }
    };

    _proto.prev = function prev() {
      if (!this._isSliding) {
        this._slide(DIRECTION_PREV);
      }
    };

    _proto.pause = function pause(event) {
      if (!event) {
        this._isPaused = true;
      }

      if (this._element.querySelector(SELECTOR_NEXT_PREV)) {
        Util.triggerTransitionEnd(this._element);
        this.cycle(true);
      }

      clearInterval(this._interval);
      this._interval = null;
    };

    _proto.cycle = function cycle(event) {
      if (!event) {
        this._isPaused = false;
      }

      if (this._interval) {
        clearInterval(this._interval);
        this._interval = null;
      }

      if (this._config.interval && !this._isPaused) {
        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);
      }
    };

    _proto.to = function to(index) {
      var _this = this;

      this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);

      var activeIndex = this._getItemIndex(this._activeElement);

      if (index > this._items.length - 1 || index < 0) {
        return;
      }

      if (this._isSliding) {
        $__default['default'](this._element).one(EVENT_SLID, function () {
          return _this.to(index);
        });
        return;
      }

      if (activeIndex === index) {
        this.pause();
        this.cycle();
        return;
      }

      var direction = index > activeIndex ? DIRECTION_NEXT : DIRECTION_PREV;

      this._slide(direction, this._items[index]);
    };

    _proto.dispose = function dispose() {
      $__default['default'](this._element).off(EVENT_KEY$2);
      $__default['default'].removeData(this._element, DATA_KEY$2);
      this._items = null;
      this._config = null;
      this._element = null;
      this._interval = null;
      this._isPaused = null;
      this._isSliding = null;
      this._activeElement = null;
      this._indicatorsElement = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default, config);
      Util.typeCheckConfig(NAME$2, config, DefaultType);
      return config;
    };

    _proto._handleSwipe = function _handleSwipe() {
      var absDeltax = Math.abs(this.touchDeltaX);

      if (absDeltax <= SWIPE_THRESHOLD) {
        return;
      }

      var direction = absDeltax / this.touchDeltaX;
      this.touchDeltaX = 0; // swipe left

      if (direction > 0) {
        this.prev();
      } // swipe right


      if (direction < 0) {
        this.next();
      }
    };

    _proto._addEventListeners = function _addEventListeners() {
      var _this2 = this;

      if (this._config.keyboard) {
        $__default['default'](this._element).on(EVENT_KEYDOWN, function (event) {
          return _this2._keydown(event);
        });
      }

      if (this._config.pause === 'hover') {
        $__default['default'](this._element).on(EVENT_MOUSEENTER, function (event) {
          return _this2.pause(event);
        }).on(EVENT_MOUSELEAVE, function (event) {
          return _this2.cycle(event);
        });
      }

      if (this._config.touch) {
        this._addTouchEventListeners();
      }
    };

    _proto._addTouchEventListeners = function _addTouchEventListeners() {
      var _this3 = this;

      if (!this._touchSupported) {
        return;
      }

      var start = function start(event) {
        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {
          _this3.touchStartX = event.originalEvent.clientX;
        } else if (!_this3._pointerEvent) {
          _this3.touchStartX = event.originalEvent.touches[0].clientX;
        }
      };

      var move = function move(event) {
        // ensure swiping with one touch and not pinching
        if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {
          _this3.touchDeltaX = 0;
        } else {
          _this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX;
        }
      };

      var end = function end(event) {
        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {
          _this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX;
        }

        _this3._handleSwipe();

        if (_this3._config.pause === 'hover') {
          // If it's a touch-enabled device, mouseenter/leave are fired as
          // part of the mouse compatibility events on first tap - the carousel
          // would stop cycling until user tapped out of it;
          // here, we listen for touchend, explicitly pause the carousel
          // (as if it's the second time we tap on it, mouseenter compat event
          // is NOT fired) and after a timeout (to allow for mouse compatibility
          // events to fire) we explicitly restart cycling
          _this3.pause();

          if (_this3.touchTimeout) {
            clearTimeout(_this3.touchTimeout);
          }

          _this3.touchTimeout = setTimeout(function (event) {
            return _this3.cycle(event);
          }, TOUCHEVENT_COMPAT_WAIT + _this3._config.interval);
        }
      };

      $__default['default'](this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START, function (e) {
        return e.preventDefault();
      });

      if (this._pointerEvent) {
        $__default['default'](this._element).on(EVENT_POINTERDOWN, function (event) {
          return start(event);
        });
        $__default['default'](this._element).on(EVENT_POINTERUP, function (event) {
          return end(event);
        });

        this._element.classList.add(CLASS_NAME_POINTER_EVENT);
      } else {
        $__default['default'](this._element).on(EVENT_TOUCHSTART, function (event) {
          return start(event);
        });
        $__default['default'](this._element).on(EVENT_TOUCHMOVE, function (event) {
          return move(event);
        });
        $__default['default'](this._element).on(EVENT_TOUCHEND, function (event) {
          return end(event);
        });
      }
    };

    _proto._keydown = function _keydown(event) {
      if (/input|textarea/i.test(event.target.tagName)) {
        return;
      }

      switch (event.which) {
        case ARROW_LEFT_KEYCODE:
          event.preventDefault();
          this.prev();
          break;

        case ARROW_RIGHT_KEYCODE:
          event.preventDefault();
          this.next();
          break;
      }
    };

    _proto._getItemIndex = function _getItemIndex(element) {
      this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) : [];
      return this._items.indexOf(element);
    };

    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {
      var isNextDirection = direction === DIRECTION_NEXT;
      var isPrevDirection = direction === DIRECTION_PREV;

      var activeIndex = this._getItemIndex(activeElement);

      var lastItemIndex = this._items.length - 1;
      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;

      if (isGoingToWrap && !this._config.wrap) {
        return activeElement;
      }

      var delta = direction === DIRECTION_PREV ? -1 : 1;
      var itemIndex = (activeIndex + delta) % this._items.length;
      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];
    };

    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {
      var targetIndex = this._getItemIndex(relatedTarget);

      var fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));

      var slideEvent = $__default['default'].Event(EVENT_SLIDE, {
        relatedTarget: relatedTarget,
        direction: eventDirectionName,
        from: fromIndex,
        to: targetIndex
      });
      $__default['default'](this._element).trigger(slideEvent);
      return slideEvent;
    };

    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {
      if (this._indicatorsElement) {
        var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE$1));
        $__default['default'](indicators).removeClass(CLASS_NAME_ACTIVE$1);

        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];

        if (nextIndicator) {
          $__default['default'](nextIndicator).addClass(CLASS_NAME_ACTIVE$1);
        }
      }
    };

    _proto._slide = function _slide(direction, element) {
      var _this4 = this;

      var activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);

      var activeElementIndex = this._getItemIndex(activeElement);

      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);

      var nextElementIndex = this._getItemIndex(nextElement);

      var isCycling = Boolean(this._interval);
      var directionalClassName;
      var orderClassName;
      var eventDirectionName;

      if (direction === DIRECTION_NEXT) {
        directionalClassName = CLASS_NAME_LEFT;
        orderClassName = CLASS_NAME_NEXT;
        eventDirectionName = DIRECTION_LEFT;
      } else {
        directionalClassName = CLASS_NAME_RIGHT;
        orderClassName = CLASS_NAME_PREV;
        eventDirectionName = DIRECTION_RIGHT;
      }

      if (nextElement && $__default['default'](nextElement).hasClass(CLASS_NAME_ACTIVE$1)) {
        this._isSliding = false;
        return;
      }

      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);

      if (slideEvent.isDefaultPrevented()) {
        return;
      }

      if (!activeElement || !nextElement) {
        // Some weirdness is happening, so we bail
        return;
      }

      this._isSliding = true;

      if (isCycling) {
        this.pause();
      }

      this._setActiveIndicatorElement(nextElement);

      var slidEvent = $__default['default'].Event(EVENT_SLID, {
        relatedTarget: nextElement,
        direction: eventDirectionName,
        from: activeElementIndex,
        to: nextElementIndex
      });

      if ($__default['default'](this._element).hasClass(CLASS_NAME_SLIDE)) {
        $__default['default'](nextElement).addClass(orderClassName);
        Util.reflow(nextElement);
        $__default['default'](activeElement).addClass(directionalClassName);
        $__default['default'](nextElement).addClass(directionalClassName);
        var nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);

        if (nextElementInterval) {
          this._config.defaultInterval = this._config.defaultInterval || this._config.interval;
          this._config.interval = nextElementInterval;
        } else {
          this._config.interval = this._config.defaultInterval || this._config.interval;
        }

        var transitionDuration = Util.getTransitionDurationFromElement(activeElement);
        $__default['default'](activeElement).one(Util.TRANSITION_END, function () {
          $__default['default'](nextElement).removeClass(directionalClassName + " " + orderClassName).addClass(CLASS_NAME_ACTIVE$1);
          $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE$1 + " " + orderClassName + " " + directionalClassName);
          _this4._isSliding = false;
          setTimeout(function () {
            return $__default['default'](_this4._element).trigger(slidEvent);
          }, 0);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        $__default['default'](activeElement).removeClass(CLASS_NAME_ACTIVE$1);
        $__default['default'](nextElement).addClass(CLASS_NAME_ACTIVE$1);
        this._isSliding = false;
        $__default['default'](this._element).trigger(slidEvent);
      }

      if (isCycling) {
        this.cycle();
      }
    } // Static
    ;

    Carousel._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$2);

        var _config = _extends({}, Default, $__default['default'](this).data());

        if (typeof config === 'object') {
          _config = _extends({}, _config, config);
        }

        var action = typeof config === 'string' ? config : _config.slide;

        if (!data) {
          data = new Carousel(this, _config);
          $__default['default'](this).data(DATA_KEY$2, data);
        }

        if (typeof config === 'number') {
          data.to(config);
        } else if (typeof action === 'string') {
          if (typeof data[action] === 'undefined') {
            throw new TypeError("No method named \"" + action + "\"");
          }

          data[action]();
        } else if (_config.interval && _config.ride) {
          data.pause();
          data.cycle();
        }
      });
    };

    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {
      var selector = Util.getSelectorFromElement(this);

      if (!selector) {
        return;
      }

      var target = $__default['default'](selector)[0];

      if (!target || !$__default['default'](target).hasClass(CLASS_NAME_CAROUSEL)) {
        return;
      }

      var config = _extends({}, $__default['default'](target).data(), $__default['default'](this).data());

      var slideIndex = this.getAttribute('data-slide-to');

      if (slideIndex) {
        config.interval = false;
      }

      Carousel._jQueryInterface.call($__default['default'](target), config);

      if (slideIndex) {
        $__default['default'](target).data(DATA_KEY$2).to(slideIndex);
      }

      event.preventDefault();
    };

    _createClass(Carousel, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$2;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Carousel;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$2, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler);
  $__default['default'](window).on(EVENT_LOAD_DATA_API$1, function () {
    var carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));

    for (var i = 0, len = carousels.length; i < len; i++) {
      var $carousel = $__default['default'](carousels[i]);

      Carousel._jQueryInterface.call($carousel, $carousel.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$2] = Carousel._jQueryInterface;
  $__default['default'].fn[NAME$2].Constructor = Carousel;

  $__default['default'].fn[NAME$2].noConflict = function () {
    $__default['default'].fn[NAME$2] = JQUERY_NO_CONFLICT$2;
    return Carousel._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$3 = 'collapse';
  var VERSION$3 = '4.5.3';
  var DATA_KEY$3 = 'bs.collapse';
  var EVENT_KEY$3 = "." + DATA_KEY$3;
  var DATA_API_KEY$3 = '.data-api';
  var JQUERY_NO_CONFLICT$3 = $__default['default'].fn[NAME$3];
  var Default$1 = {
    toggle: true,
    parent: ''
  };
  var DefaultType$1 = {
    toggle: 'boolean',
    parent: '(string|element)'
  };
  var EVENT_SHOW = "show" + EVENT_KEY$3;
  var EVENT_SHOWN = "shown" + EVENT_KEY$3;
  var EVENT_HIDE = "hide" + EVENT_KEY$3;
  var EVENT_HIDDEN = "hidden" + EVENT_KEY$3;
  var EVENT_CLICK_DATA_API$3 = "click" + EVENT_KEY$3 + DATA_API_KEY$3;
  var CLASS_NAME_SHOW$1 = 'show';
  var CLASS_NAME_COLLAPSE = 'collapse';
  var CLASS_NAME_COLLAPSING = 'collapsing';
  var CLASS_NAME_COLLAPSED = 'collapsed';
  var DIMENSION_WIDTH = 'width';
  var DIMENSION_HEIGHT = 'height';
  var SELECTOR_ACTIVES = '.show, .collapsing';
  var SELECTOR_DATA_TOGGLE$1 = '[data-toggle="collapse"]';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Collapse = /*#__PURE__*/function () {
    function Collapse(element, config) {
      this._isTransitioning = false;
      this._element = element;
      this._config = this._getConfig(config);
      this._triggerArray = [].slice.call(document.querySelectorAll("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));
      var toggleList = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$1));

      for (var i = 0, len = toggleList.length; i < len; i++) {
        var elem = toggleList[i];
        var selector = Util.getSelectorFromElement(elem);
        var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {
          return foundElem === element;
        });

        if (selector !== null && filterElement.length > 0) {
          this._selector = selector;

          this._triggerArray.push(elem);
        }
      }

      this._parent = this._config.parent ? this._getParent() : null;

      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray);
      }

      if (this._config.toggle) {
        this.toggle();
      }
    } // Getters


    var _proto = Collapse.prototype;

    // Public
    _proto.toggle = function toggle() {
      if ($__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)) {
        this.hide();
      } else {
        this.show();
      }
    };

    _proto.show = function show() {
      var _this = this;

      if (this._isTransitioning || $__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)) {
        return;
      }

      var actives;
      var activesData;

      if (this._parent) {
        actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function (elem) {
          if (typeof _this._config.parent === 'string') {
            return elem.getAttribute('data-parent') === _this._config.parent;
          }

          return elem.classList.contains(CLASS_NAME_COLLAPSE);
        });

        if (actives.length === 0) {
          actives = null;
        }
      }

      if (actives) {
        activesData = $__default['default'](actives).not(this._selector).data(DATA_KEY$3);

        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = $__default['default'].Event(EVENT_SHOW);
      $__default['default'](this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      if (actives) {
        Collapse._jQueryInterface.call($__default['default'](actives).not(this._selector), 'hide');

        if (!activesData) {
          $__default['default'](actives).data(DATA_KEY$3, null);
        }
      }

      var dimension = this._getDimension();

      $__default['default'](this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);
      this._element.style[dimension] = 0;

      if (this._triggerArray.length) {
        $__default['default'](this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', true);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        $__default['default'](_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE + " " + CLASS_NAME_SHOW$1);
        _this._element.style[dimension] = '';

        _this.setTransitioning(false);

        $__default['default'](_this._element).trigger(EVENT_SHOWN);
      };

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = "scroll" + capitalizedDimension;
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      this._element.style[dimension] = this._element[scrollSize] + "px";
    };

    _proto.hide = function hide() {
      var _this2 = this;

      if (this._isTransitioning || !$__default['default'](this._element).hasClass(CLASS_NAME_SHOW$1)) {
        return;
      }

      var startEvent = $__default['default'].Event(EVENT_HIDE);
      $__default['default'](this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      var dimension = this._getDimension();

      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";
      Util.reflow(this._element);
      $__default['default'](this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(CLASS_NAME_COLLAPSE + " " + CLASS_NAME_SHOW$1);
      var triggerArrayLength = this._triggerArray.length;

      if (triggerArrayLength > 0) {
        for (var i = 0; i < triggerArrayLength; i++) {
          var trigger = this._triggerArray[i];
          var selector = Util.getSelectorFromElement(trigger);

          if (selector !== null) {
            var $elem = $__default['default']([].slice.call(document.querySelectorAll(selector)));

            if (!$elem.hasClass(CLASS_NAME_SHOW$1)) {
              $__default['default'](trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', false);
            }
          }
        }
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this2.setTransitioning(false);

        $__default['default'](_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);
      };

      this._element.style[dimension] = '';
      var transitionDuration = Util.getTransitionDurationFromElement(this._element);
      $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
    };

    _proto.setTransitioning = function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$3);
      this._config = null;
      this._parent = null;
      this._element = null;
      this._triggerArray = null;
      this._isTransitioning = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$1, config);
      config.toggle = Boolean(config.toggle); // Coerce string values

      Util.typeCheckConfig(NAME$3, config, DefaultType$1);
      return config;
    };

    _proto._getDimension = function _getDimension() {
      var hasWidth = $__default['default'](this._element).hasClass(DIMENSION_WIDTH);
      return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT;
    };

    _proto._getParent = function _getParent() {
      var _this3 = this;

      var parent;

      if (Util.isElement(this._config.parent)) {
        parent = this._config.parent; // It's a jQuery object

        if (typeof this._config.parent.jquery !== 'undefined') {
          parent = this._config.parent[0];
        }
      } else {
        parent = document.querySelector(this._config.parent);
      }

      var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";
      var children = [].slice.call(parent.querySelectorAll(selector));
      $__default['default'](children).each(function (i, element) {
        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
      });
      return parent;
    };

    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {
      var isOpen = $__default['default'](element).hasClass(CLASS_NAME_SHOW$1);

      if (triggerArray.length) {
        $__default['default'](triggerArray).toggleClass(CLASS_NAME_COLLAPSED, !isOpen).attr('aria-expanded', isOpen);
      }
    } // Static
    ;

    Collapse._getTargetFromElement = function _getTargetFromElement(element) {
      var selector = Util.getSelectorFromElement(element);
      return selector ? document.querySelector(selector) : null;
    };

    Collapse._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$3);

        var _config = _extends({}, Default$1, $element.data(), typeof config === 'object' && config ? config : {});

        if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {
          _config.toggle = false;
        }

        if (!data) {
          data = new Collapse(this, _config);
          $element.data(DATA_KEY$3, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Collapse, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$3;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$1;
      }
    }]);

    return Collapse;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$1, function (event) {
    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
    if (event.currentTarget.tagName === 'A') {
      event.preventDefault();
    }

    var $trigger = $__default['default'](this);
    var selector = Util.getSelectorFromElement(this);
    var selectors = [].slice.call(document.querySelectorAll(selector));
    $__default['default'](selectors).each(function () {
      var $target = $__default['default'](this);
      var data = $target.data(DATA_KEY$3);
      var config = data ? 'toggle' : $trigger.data();

      Collapse._jQueryInterface.call($target, config);
    });
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$3] = Collapse._jQueryInterface;
  $__default['default'].fn[NAME$3].Constructor = Collapse;

  $__default['default'].fn[NAME$3].noConflict = function () {
    $__default['default'].fn[NAME$3] = JQUERY_NO_CONFLICT$3;
    return Collapse._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$4 = 'dropdown';
  var VERSION$4 = '4.5.3';
  var DATA_KEY$4 = 'bs.dropdown';
  var EVENT_KEY$4 = "." + DATA_KEY$4;
  var DATA_API_KEY$4 = '.data-api';
  var JQUERY_NO_CONFLICT$4 = $__default['default'].fn[NAME$4];
  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key

  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key

  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key

  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key

  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key

  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)

  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + "|" + ARROW_DOWN_KEYCODE + "|" + ESCAPE_KEYCODE);
  var EVENT_HIDE$1 = "hide" + EVENT_KEY$4;
  var EVENT_HIDDEN$1 = "hidden" + EVENT_KEY$4;
  var EVENT_SHOW$1 = "show" + EVENT_KEY$4;
  var EVENT_SHOWN$1 = "shown" + EVENT_KEY$4;
  var EVENT_CLICK = "click" + EVENT_KEY$4;
  var EVENT_CLICK_DATA_API$4 = "click" + EVENT_KEY$4 + DATA_API_KEY$4;
  var EVENT_KEYDOWN_DATA_API = "keydown" + EVENT_KEY$4 + DATA_API_KEY$4;
  var EVENT_KEYUP_DATA_API = "keyup" + EVENT_KEY$4 + DATA_API_KEY$4;
  var CLASS_NAME_DISABLED = 'disabled';
  var CLASS_NAME_SHOW$2 = 'show';
  var CLASS_NAME_DROPUP = 'dropup';
  var CLASS_NAME_DROPRIGHT = 'dropright';
  var CLASS_NAME_DROPLEFT = 'dropleft';
  var CLASS_NAME_MENURIGHT = 'dropdown-menu-right';
  var CLASS_NAME_POSITION_STATIC = 'position-static';
  var SELECTOR_DATA_TOGGLE$2 = '[data-toggle="dropdown"]';
  var SELECTOR_FORM_CHILD = '.dropdown form';
  var SELECTOR_MENU = '.dropdown-menu';
  var SELECTOR_NAVBAR_NAV = '.navbar-nav';
  var SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';
  var PLACEMENT_TOP = 'top-start';
  var PLACEMENT_TOPEND = 'top-end';
  var PLACEMENT_BOTTOM = 'bottom-start';
  var PLACEMENT_BOTTOMEND = 'bottom-end';
  var PLACEMENT_RIGHT = 'right-start';
  var PLACEMENT_LEFT = 'left-start';
  var Default$2 = {
    offset: 0,
    flip: true,
    boundary: 'scrollParent',
    reference: 'toggle',
    display: 'dynamic',
    popperConfig: null
  };
  var DefaultType$2 = {
    offset: '(number|string|function)',
    flip: 'boolean',
    boundary: '(string|element)',
    reference: '(string|element)',
    display: 'string',
    popperConfig: '(null|object)'
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Dropdown = /*#__PURE__*/function () {
    function Dropdown(element, config) {
      this._element = element;
      this._popper = null;
      this._config = this._getConfig(config);
      this._menu = this._getMenuElement();
      this._inNavbar = this._detectNavbar();

      this._addEventListeners();
    } // Getters


    var _proto = Dropdown.prototype;

    // Public
    _proto.toggle = function toggle() {
      if (this._element.disabled || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED)) {
        return;
      }

      var isActive = $__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2);

      Dropdown._clearMenus();

      if (isActive) {
        return;
      }

      this.show(true);
    };

    _proto.show = function show(usePopper) {
      if (usePopper === void 0) {
        usePopper = false;
      }

      if (this._element.disabled || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED) || $__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2)) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var showEvent = $__default['default'].Event(EVENT_SHOW$1, relatedTarget);

      var parent = Dropdown._getParentFromElement(this._element);

      $__default['default'](parent).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      } // Disable totally Popper.js for Dropdown in Navbar


      if (!this._inNavbar && usePopper) {
        /**
         * Check for Popper dependency
         * Popper - https://popper.js.org
         */
        if (typeof Popper__default['default'] === 'undefined') {
          throw new TypeError('Bootstrap\'s dropdowns require Popper.js (https://popper.js.org/)');
        }

        var referenceElement = this._element;

        if (this._config.reference === 'parent') {
          referenceElement = parent;
        } else if (Util.isElement(this._config.reference)) {
          referenceElement = this._config.reference; // Check if it's jQuery element

          if (typeof this._config.reference.jquery !== 'undefined') {
            referenceElement = this._config.reference[0];
          }
        } // If boundary is not `scrollParent`, then set position to `static`
        // to allow the menu to "escape" the scroll parent's boundaries
        // https://github.com/twbs/bootstrap/issues/24251


        if (this._config.boundary !== 'scrollParent') {
          $__default['default'](parent).addClass(CLASS_NAME_POSITION_STATIC);
        }

        this._popper = new Popper__default['default'](referenceElement, this._menu, this._getPopperConfig());
      } // If this is a touch-enabled device we add extra
      // empty mouseover listeners to the body's immediate children;
      // only needed because of broken event delegation on iOS
      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html


      if ('ontouchstart' in document.documentElement && $__default['default'](parent).closest(SELECTOR_NAVBAR_NAV).length === 0) {
        $__default['default'](document.body).children().on('mouseover', null, $__default['default'].noop);
      }

      this._element.focus();

      this._element.setAttribute('aria-expanded', true);

      $__default['default'](this._menu).toggleClass(CLASS_NAME_SHOW$2);
      $__default['default'](parent).toggleClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_SHOWN$1, relatedTarget));
    };

    _proto.hide = function hide() {
      if (this._element.disabled || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED) || !$__default['default'](this._menu).hasClass(CLASS_NAME_SHOW$2)) {
        return;
      }

      var relatedTarget = {
        relatedTarget: this._element
      };
      var hideEvent = $__default['default'].Event(EVENT_HIDE$1, relatedTarget);

      var parent = Dropdown._getParentFromElement(this._element);

      $__default['default'](parent).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      if (this._popper) {
        this._popper.destroy();
      }

      $__default['default'](this._menu).toggleClass(CLASS_NAME_SHOW$2);
      $__default['default'](parent).toggleClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_HIDDEN$1, relatedTarget));
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$4);
      $__default['default'](this._element).off(EVENT_KEY$4);
      this._element = null;
      this._menu = null;

      if (this._popper !== null) {
        this._popper.destroy();

        this._popper = null;
      }
    };

    _proto.update = function update() {
      this._inNavbar = this._detectNavbar();

      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Private
    ;

    _proto._addEventListeners = function _addEventListeners() {
      var _this = this;

      $__default['default'](this._element).on(EVENT_CLICK, function (event) {
        event.preventDefault();
        event.stopPropagation();

        _this.toggle();
      });
    };

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, this.constructor.Default, $__default['default'](this._element).data(), config);
      Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType);
      return config;
    };

    _proto._getMenuElement = function _getMenuElement() {
      if (!this._menu) {
        var parent = Dropdown._getParentFromElement(this._element);

        if (parent) {
          this._menu = parent.querySelector(SELECTOR_MENU);
        }
      }

      return this._menu;
    };

    _proto._getPlacement = function _getPlacement() {
      var $parentDropdown = $__default['default'](this._element.parentNode);
      var placement = PLACEMENT_BOTTOM; // Handle dropup

      if ($parentDropdown.hasClass(CLASS_NAME_DROPUP)) {
        placement = $__default['default'](this._menu).hasClass(CLASS_NAME_MENURIGHT) ? PLACEMENT_TOPEND : PLACEMENT_TOP;
      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPRIGHT)) {
        placement = PLACEMENT_RIGHT;
      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPLEFT)) {
        placement = PLACEMENT_LEFT;
      } else if ($__default['default'](this._menu).hasClass(CLASS_NAME_MENURIGHT)) {
        placement = PLACEMENT_BOTTOMEND;
      }

      return placement;
    };

    _proto._detectNavbar = function _detectNavbar() {
      return $__default['default'](this._element).closest('.navbar').length > 0;
    };

    _proto._getOffset = function _getOffset() {
      var _this2 = this;

      var offset = {};

      if (typeof this._config.offset === 'function') {
        offset.fn = function (data) {
          data.offsets = _extends({}, data.offsets, _this2._config.offset(data.offsets, _this2._element) || {});
          return data;
        };
      } else {
        offset.offset = this._config.offset;
      }

      return offset;
    };

    _proto._getPopperConfig = function _getPopperConfig() {
      var popperConfig = {
        placement: this._getPlacement(),
        modifiers: {
          offset: this._getOffset(),
          flip: {
            enabled: this._config.flip
          },
          preventOverflow: {
            boundariesElement: this._config.boundary
          }
        }
      }; // Disable Popper.js if we have a static display

      if (this._config.display === 'static') {
        popperConfig.modifiers.applyStyle = {
          enabled: false
        };
      }

      return _extends({}, popperConfig, this._config.popperConfig);
    } // Static
    ;

    Dropdown._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$4);

        var _config = typeof config === 'object' ? config : null;

        if (!data) {
          data = new Dropdown(this, _config);
          $__default['default'](this).data(DATA_KEY$4, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    Dropdown._clearMenus = function _clearMenus(event) {
      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {
        return;
      }

      var toggles = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$2));

      for (var i = 0, len = toggles.length; i < len; i++) {
        var parent = Dropdown._getParentFromElement(toggles[i]);

        var context = $__default['default'](toggles[i]).data(DATA_KEY$4);
        var relatedTarget = {
          relatedTarget: toggles[i]
        };

        if (event && event.type === 'click') {
          relatedTarget.clickEvent = event;
        }

        if (!context) {
          continue;
        }

        var dropdownMenu = context._menu;

        if (!$__default['default'](parent).hasClass(CLASS_NAME_SHOW$2)) {
          continue;
        }

        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $__default['default'].contains(parent, event.target)) {
          continue;
        }

        var hideEvent = $__default['default'].Event(EVENT_HIDE$1, relatedTarget);
        $__default['default'](parent).trigger(hideEvent);

        if (hideEvent.isDefaultPrevented()) {
          continue;
        } // If this is a touch-enabled device we remove the extra
        // empty mouseover listeners we added for iOS support


        if ('ontouchstart' in document.documentElement) {
          $__default['default'](document.body).children().off('mouseover', null, $__default['default'].noop);
        }

        toggles[i].setAttribute('aria-expanded', 'false');

        if (context._popper) {
          context._popper.destroy();
        }

        $__default['default'](dropdownMenu).removeClass(CLASS_NAME_SHOW$2);
        $__default['default'](parent).removeClass(CLASS_NAME_SHOW$2).trigger($__default['default'].Event(EVENT_HIDDEN$1, relatedTarget));
      }
    };

    Dropdown._getParentFromElement = function _getParentFromElement(element) {
      var parent;
      var selector = Util.getSelectorFromElement(element);

      if (selector) {
        parent = document.querySelector(selector);
      }

      return parent || element.parentNode;
    } // eslint-disable-next-line complexity
    ;

    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {
      // If not input/textarea:
      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command
      // If input/textarea:
      //  - If space key => not a dropdown command
      //  - If key is other than escape
      //    - If key is not up or down => not a dropdown command
      //    - If trigger inside the menu => not a dropdown command
      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $__default['default'](event.target).closest(SELECTOR_MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {
        return;
      }

      if (this.disabled || $__default['default'](this).hasClass(CLASS_NAME_DISABLED)) {
        return;
      }

      var parent = Dropdown._getParentFromElement(this);

      var isActive = $__default['default'](parent).hasClass(CLASS_NAME_SHOW$2);

      if (!isActive && event.which === ESCAPE_KEYCODE) {
        return;
      }

      event.preventDefault();
      event.stopPropagation();

      if (!isActive || event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE) {
        if (event.which === ESCAPE_KEYCODE) {
          $__default['default'](parent.querySelector(SELECTOR_DATA_TOGGLE$2)).trigger('focus');
        }

        $__default['default'](this).trigger('click');
        return;
      }

      var items = [].slice.call(parent.querySelectorAll(SELECTOR_VISIBLE_ITEMS)).filter(function (item) {
        return $__default['default'](item).is(':visible');
      });

      if (items.length === 0) {
        return;
      }

      var index = items.indexOf(event.target);

      if (event.which === ARROW_UP_KEYCODE && index > 0) {
        // Up
        index--;
      }

      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {
        // Down
        index++;
      }

      if (index < 0) {
        index = 0;
      }

      items[index].focus();
    };

    _createClass(Dropdown, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$4;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$2;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$2;
      }
    }]);

    return Dropdown;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$2, Dropdown._dataApiKeydownHandler).on(EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown._dataApiKeydownHandler).on(EVENT_CLICK_DATA_API$4 + " " + EVENT_KEYUP_DATA_API, Dropdown._clearMenus).on(EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$2, function (event) {
    event.preventDefault();
    event.stopPropagation();

    Dropdown._jQueryInterface.call($__default['default'](this), 'toggle');
  }).on(EVENT_CLICK_DATA_API$4, SELECTOR_FORM_CHILD, function (e) {
    e.stopPropagation();
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$4] = Dropdown._jQueryInterface;
  $__default['default'].fn[NAME$4].Constructor = Dropdown;

  $__default['default'].fn[NAME$4].noConflict = function () {
    $__default['default'].fn[NAME$4] = JQUERY_NO_CONFLICT$4;
    return Dropdown._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$5 = 'modal';
  var VERSION$5 = '4.5.3';
  var DATA_KEY$5 = 'bs.modal';
  var EVENT_KEY$5 = "." + DATA_KEY$5;
  var DATA_API_KEY$5 = '.data-api';
  var JQUERY_NO_CONFLICT$5 = $__default['default'].fn[NAME$5];
  var ESCAPE_KEYCODE$1 = 27; // KeyboardEvent.which value for Escape (Esc) key

  var Default$3 = {
    backdrop: true,
    keyboard: true,
    focus: true,
    show: true
  };
  var DefaultType$3 = {
    backdrop: '(boolean|string)',
    keyboard: 'boolean',
    focus: 'boolean',
    show: 'boolean'
  };
  var EVENT_HIDE$2 = "hide" + EVENT_KEY$5;
  var EVENT_HIDE_PREVENTED = "hidePrevented" + EVENT_KEY$5;
  var EVENT_HIDDEN$2 = "hidden" + EVENT_KEY$5;
  var EVENT_SHOW$2 = "show" + EVENT_KEY$5;
  var EVENT_SHOWN$2 = "shown" + EVENT_KEY$5;
  var EVENT_FOCUSIN = "focusin" + EVENT_KEY$5;
  var EVENT_RESIZE = "resize" + EVENT_KEY$5;
  var EVENT_CLICK_DISMISS = "click.dismiss" + EVENT_KEY$5;
  var EVENT_KEYDOWN_DISMISS = "keydown.dismiss" + EVENT_KEY$5;
  var EVENT_MOUSEUP_DISMISS = "mouseup.dismiss" + EVENT_KEY$5;
  var EVENT_MOUSEDOWN_DISMISS = "mousedown.dismiss" + EVENT_KEY$5;
  var EVENT_CLICK_DATA_API$5 = "click" + EVENT_KEY$5 + DATA_API_KEY$5;
  var CLASS_NAME_SCROLLABLE = 'modal-dialog-scrollable';
  var CLASS_NAME_SCROLLBAR_MEASURER = 'modal-scrollbar-measure';
  var CLASS_NAME_BACKDROP = 'modal-backdrop';
  var CLASS_NAME_OPEN = 'modal-open';
  var CLASS_NAME_FADE$1 = 'fade';
  var CLASS_NAME_SHOW$3 = 'show';
  var CLASS_NAME_STATIC = 'modal-static';
  var SELECTOR_DIALOG = '.modal-dialog';
  var SELECTOR_MODAL_BODY = '.modal-body';
  var SELECTOR_DATA_TOGGLE$3 = '[data-toggle="modal"]';
  var SELECTOR_DATA_DISMISS = '[data-dismiss="modal"]';
  var SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';
  var SELECTOR_STICKY_CONTENT = '.sticky-top';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Modal = /*#__PURE__*/function () {
    function Modal(element, config) {
      this._config = this._getConfig(config);
      this._element = element;
      this._dialog = element.querySelector(SELECTOR_DIALOG);
      this._backdrop = null;
      this._isShown = false;
      this._isBodyOverflowing = false;
      this._ignoreBackdropClick = false;
      this._isTransitioning = false;
      this._scrollbarWidth = 0;
    } // Getters


    var _proto = Modal.prototype;

    // Public
    _proto.toggle = function toggle(relatedTarget) {
      return this._isShown ? this.hide() : this.show(relatedTarget);
    };

    _proto.show = function show(relatedTarget) {
      var _this = this;

      if (this._isShown || this._isTransitioning) {
        return;
      }

      if ($__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)) {
        this._isTransitioning = true;
      }

      var showEvent = $__default['default'].Event(EVENT_SHOW$2, {
        relatedTarget: relatedTarget
      });
      $__default['default'](this._element).trigger(showEvent);

      if (this._isShown || showEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = true;

      this._checkScrollbar();

      this._setScrollbar();

      this._adjustDialog();

      this._setEscapeEvent();

      this._setResizeEvent();

      $__default['default'](this._element).on(EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, function (event) {
        return _this.hide(event);
      });
      $__default['default'](this._dialog).on(EVENT_MOUSEDOWN_DISMISS, function () {
        $__default['default'](_this._element).one(EVENT_MOUSEUP_DISMISS, function (event) {
          if ($__default['default'](event.target).is(_this._element)) {
            _this._ignoreBackdropClick = true;
          }
        });
      });

      this._showBackdrop(function () {
        return _this._showElement(relatedTarget);
      });
    };

    _proto.hide = function hide(event) {
      var _this2 = this;

      if (event) {
        event.preventDefault();
      }

      if (!this._isShown || this._isTransitioning) {
        return;
      }

      var hideEvent = $__default['default'].Event(EVENT_HIDE$2);
      $__default['default'](this._element).trigger(hideEvent);

      if (!this._isShown || hideEvent.isDefaultPrevented()) {
        return;
      }

      this._isShown = false;
      var transition = $__default['default'](this._element).hasClass(CLASS_NAME_FADE$1);

      if (transition) {
        this._isTransitioning = true;
      }

      this._setEscapeEvent();

      this._setResizeEvent();

      $__default['default'](document).off(EVENT_FOCUSIN);
      $__default['default'](this._element).removeClass(CLASS_NAME_SHOW$3);
      $__default['default'](this._element).off(EVENT_CLICK_DISMISS);
      $__default['default'](this._dialog).off(EVENT_MOUSEDOWN_DISMISS);

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $__default['default'](this._element).one(Util.TRANSITION_END, function (event) {
          return _this2._hideModal(event);
        }).emulateTransitionEnd(transitionDuration);
      } else {
        this._hideModal();
      }
    };

    _proto.dispose = function dispose() {
      [window, this._element, this._dialog].forEach(function (htmlElement) {
        return $__default['default'](htmlElement).off(EVENT_KEY$5);
      });
      /**
       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`
       * Do not move `document` in `htmlElements` array
       * It will remove `EVENT_CLICK_DATA_API` event that should remain
       */

      $__default['default'](document).off(EVENT_FOCUSIN);
      $__default['default'].removeData(this._element, DATA_KEY$5);
      this._config = null;
      this._element = null;
      this._dialog = null;
      this._backdrop = null;
      this._isShown = null;
      this._isBodyOverflowing = null;
      this._ignoreBackdropClick = null;
      this._isTransitioning = null;
      this._scrollbarWidth = null;
    };

    _proto.handleUpdate = function handleUpdate() {
      this._adjustDialog();
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$3, config);
      Util.typeCheckConfig(NAME$5, config, DefaultType$3);
      return config;
    };

    _proto._triggerBackdropTransition = function _triggerBackdropTransition() {
      var _this3 = this;

      if (this._config.backdrop === 'static') {
        var hideEventPrevented = $__default['default'].Event(EVENT_HIDE_PREVENTED);
        $__default['default'](this._element).trigger(hideEventPrevented);

        if (hideEventPrevented.isDefaultPrevented()) {
          return;
        }

        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

        if (!isModalOverflowing) {
          this._element.style.overflowY = 'hidden';
        }

        this._element.classList.add(CLASS_NAME_STATIC);

        var modalTransitionDuration = Util.getTransitionDurationFromElement(this._dialog);
        $__default['default'](this._element).off(Util.TRANSITION_END);
        $__default['default'](this._element).one(Util.TRANSITION_END, function () {
          _this3._element.classList.remove(CLASS_NAME_STATIC);

          if (!isModalOverflowing) {
            $__default['default'](_this3._element).one(Util.TRANSITION_END, function () {
              _this3._element.style.overflowY = '';
            }).emulateTransitionEnd(_this3._element, modalTransitionDuration);
          }
        }).emulateTransitionEnd(modalTransitionDuration);

        this._element.focus();
      } else {
        this.hide();
      }
    };

    _proto._showElement = function _showElement(relatedTarget) {
      var _this4 = this;

      var transition = $__default['default'](this._element).hasClass(CLASS_NAME_FADE$1);
      var modalBody = this._dialog ? this._dialog.querySelector(SELECTOR_MODAL_BODY) : null;

      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {
        // Don't move modal's DOM position
        document.body.appendChild(this._element);
      }

      this._element.style.display = 'block';

      this._element.removeAttribute('aria-hidden');

      this._element.setAttribute('aria-modal', true);

      this._element.setAttribute('role', 'dialog');

      if ($__default['default'](this._dialog).hasClass(CLASS_NAME_SCROLLABLE) && modalBody) {
        modalBody.scrollTop = 0;
      } else {
        this._element.scrollTop = 0;
      }

      if (transition) {
        Util.reflow(this._element);
      }

      $__default['default'](this._element).addClass(CLASS_NAME_SHOW$3);

      if (this._config.focus) {
        this._enforceFocus();
      }

      var shownEvent = $__default['default'].Event(EVENT_SHOWN$2, {
        relatedTarget: relatedTarget
      });

      var transitionComplete = function transitionComplete() {
        if (_this4._config.focus) {
          _this4._element.focus();
        }

        _this4._isTransitioning = false;
        $__default['default'](_this4._element).trigger(shownEvent);
      };

      if (transition) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);
        $__default['default'](this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);
      } else {
        transitionComplete();
      }
    };

    _proto._enforceFocus = function _enforceFocus() {
      var _this5 = this;

      $__default['default'](document).off(EVENT_FOCUSIN) // Guard against infinite focus loop
      .on(EVENT_FOCUSIN, function (event) {
        if (document !== event.target && _this5._element !== event.target && $__default['default'](_this5._element).has(event.target).length === 0) {
          _this5._element.focus();
        }
      });
    };

    _proto._setEscapeEvent = function _setEscapeEvent() {
      var _this6 = this;

      if (this._isShown) {
        $__default['default'](this._element).on(EVENT_KEYDOWN_DISMISS, function (event) {
          if (_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {
            event.preventDefault();

            _this6.hide();
          } else if (!_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {
            _this6._triggerBackdropTransition();
          }
        });
      } else if (!this._isShown) {
        $__default['default'](this._element).off(EVENT_KEYDOWN_DISMISS);
      }
    };

    _proto._setResizeEvent = function _setResizeEvent() {
      var _this7 = this;

      if (this._isShown) {
        $__default['default'](window).on(EVENT_RESIZE, function (event) {
          return _this7.handleUpdate(event);
        });
      } else {
        $__default['default'](window).off(EVENT_RESIZE);
      }
    };

    _proto._hideModal = function _hideModal() {
      var _this8 = this;

      this._element.style.display = 'none';

      this._element.setAttribute('aria-hidden', true);

      this._element.removeAttribute('aria-modal');

      this._element.removeAttribute('role');

      this._isTransitioning = false;

      this._showBackdrop(function () {
        $__default['default'](document.body).removeClass(CLASS_NAME_OPEN);

        _this8._resetAdjustments();

        _this8._resetScrollbar();

        $__default['default'](_this8._element).trigger(EVENT_HIDDEN$2);
      });
    };

    _proto._removeBackdrop = function _removeBackdrop() {
      if (this._backdrop) {
        $__default['default'](this._backdrop).remove();
        this._backdrop = null;
      }
    };

    _proto._showBackdrop = function _showBackdrop(callback) {
      var _this9 = this;

      var animate = $__default['default'](this._element).hasClass(CLASS_NAME_FADE$1) ? CLASS_NAME_FADE$1 : '';

      if (this._isShown && this._config.backdrop) {
        this._backdrop = document.createElement('div');
        this._backdrop.className = CLASS_NAME_BACKDROP;

        if (animate) {
          this._backdrop.classList.add(animate);
        }

        $__default['default'](this._backdrop).appendTo(document.body);
        $__default['default'](this._element).on(EVENT_CLICK_DISMISS, function (event) {
          if (_this9._ignoreBackdropClick) {
            _this9._ignoreBackdropClick = false;
            return;
          }

          if (event.target !== event.currentTarget) {
            return;
          }

          _this9._triggerBackdropTransition();
        });

        if (animate) {
          Util.reflow(this._backdrop);
        }

        $__default['default'](this._backdrop).addClass(CLASS_NAME_SHOW$3);

        if (!callback) {
          return;
        }

        if (!animate) {
          callback();
          return;
        }

        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);
        $__default['default'](this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);
      } else if (!this._isShown && this._backdrop) {
        $__default['default'](this._backdrop).removeClass(CLASS_NAME_SHOW$3);

        var callbackRemove = function callbackRemove() {
          _this9._removeBackdrop();

          if (callback) {
            callback();
          }
        };

        if ($__default['default'](this._element).hasClass(CLASS_NAME_FADE$1)) {
          var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);

          $__default['default'](this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);
        } else {
          callbackRemove();
        }
      } else if (callback) {
        callback();
      }
    } // ----------------------------------------------------------------------
    // the following methods are used to handle overflowing modals
    // todo (fat): these should probably be refactored out of modal.js
    // ----------------------------------------------------------------------
    ;

    _proto._adjustDialog = function _adjustDialog() {
      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;

      if (!this._isBodyOverflowing && isModalOverflowing) {
        this._element.style.paddingLeft = this._scrollbarWidth + "px";
      }

      if (this._isBodyOverflowing && !isModalOverflowing) {
        this._element.style.paddingRight = this._scrollbarWidth + "px";
      }
    };

    _proto._resetAdjustments = function _resetAdjustments() {
      this._element.style.paddingLeft = '';
      this._element.style.paddingRight = '';
    };

    _proto._checkScrollbar = function _checkScrollbar() {
      var rect = document.body.getBoundingClientRect();
      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;
      this._scrollbarWidth = this._getScrollbarWidth();
    };

    _proto._setScrollbar = function _setScrollbar() {
      var _this10 = this;

      if (this._isBodyOverflowing) {
        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set
        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set
        var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));
        var stickyContent = [].slice.call(document.querySelectorAll(SELECTOR_STICKY_CONTENT)); // Adjust fixed content padding

        $__default['default'](fixedContent).each(function (index, element) {
          var actualPadding = element.style.paddingRight;
          var calculatedPadding = $__default['default'](element).css('padding-right');
          $__default['default'](element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this10._scrollbarWidth + "px");
        }); // Adjust sticky content margin

        $__default['default'](stickyContent).each(function (index, element) {
          var actualMargin = element.style.marginRight;
          var calculatedMargin = $__default['default'](element).css('margin-right');
          $__default['default'](element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this10._scrollbarWidth + "px");
        }); // Adjust body padding

        var actualPadding = document.body.style.paddingRight;
        var calculatedPadding = $__default['default'](document.body).css('padding-right');
        $__default['default'](document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + "px");
      }

      $__default['default'](document.body).addClass(CLASS_NAME_OPEN);
    };

    _proto._resetScrollbar = function _resetScrollbar() {
      // Restore fixed content padding
      var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));
      $__default['default'](fixedContent).each(function (index, element) {
        var padding = $__default['default'](element).data('padding-right');
        $__default['default'](element).removeData('padding-right');
        element.style.paddingRight = padding ? padding : '';
      }); // Restore sticky content

      var elements = [].slice.call(document.querySelectorAll("" + SELECTOR_STICKY_CONTENT));
      $__default['default'](elements).each(function (index, element) {
        var margin = $__default['default'](element).data('margin-right');

        if (typeof margin !== 'undefined') {
          $__default['default'](element).css('margin-right', margin).removeData('margin-right');
        }
      }); // Restore body padding

      var padding = $__default['default'](document.body).data('padding-right');
      $__default['default'](document.body).removeData('padding-right');
      document.body.style.paddingRight = padding ? padding : '';
    };

    _proto._getScrollbarWidth = function _getScrollbarWidth() {
      // thx d.walsh
      var scrollDiv = document.createElement('div');
      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;
      document.body.appendChild(scrollDiv);
      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;
      document.body.removeChild(scrollDiv);
      return scrollbarWidth;
    } // Static
    ;

    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$5);

        var _config = _extends({}, Default$3, $__default['default'](this).data(), typeof config === 'object' && config ? config : {});

        if (!data) {
          data = new Modal(this, _config);
          $__default['default'](this).data(DATA_KEY$5, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](relatedTarget);
        } else if (_config.show) {
          data.show(relatedTarget);
        }
      });
    };

    _createClass(Modal, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$5;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$3;
      }
    }]);

    return Modal;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$5, SELECTOR_DATA_TOGGLE$3, function (event) {
    var _this11 = this;

    var target;
    var selector = Util.getSelectorFromElement(this);

    if (selector) {
      target = document.querySelector(selector);
    }

    var config = $__default['default'](target).data(DATA_KEY$5) ? 'toggle' : _extends({}, $__default['default'](target).data(), $__default['default'](this).data());

    if (this.tagName === 'A' || this.tagName === 'AREA') {
      event.preventDefault();
    }

    var $target = $__default['default'](target).one(EVENT_SHOW$2, function (showEvent) {
      if (showEvent.isDefaultPrevented()) {
        // Only register focus restorer if modal will actually get shown
        return;
      }

      $target.one(EVENT_HIDDEN$2, function () {
        if ($__default['default'](_this11).is(':visible')) {
          _this11.focus();
        }
      });
    });

    Modal._jQueryInterface.call($__default['default'](target), config, this);
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$5] = Modal._jQueryInterface;
  $__default['default'].fn[NAME$5].Constructor = Modal;

  $__default['default'].fn[NAME$5].noConflict = function () {
    $__default['default'].fn[NAME$5] = JQUERY_NO_CONFLICT$5;
    return Modal._jQueryInterface;
  };

  /**
   * --------------------------------------------------------------------------
   * Bootstrap (v4.5.3): tools/sanitizer.js
   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
   * --------------------------------------------------------------------------
   */
  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];
  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
  var DefaultWhitelist = {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    div: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  };
  /**
   * A pattern that recognizes a commonly useful subset of URLs that are safe.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;
  /**
   * A pattern that matches safe data URLs. Only matches image, video and audio types.
   *
   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
   */

  var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i;

  function allowedAttribute(attr, allowedAttributeList) {
    var attrName = attr.nodeName.toLowerCase();

    if (allowedAttributeList.indexOf(attrName) !== -1) {
      if (uriAttrs.indexOf(attrName) !== -1) {
        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
      }

      return true;
    }

    var regExp = allowedAttributeList.filter(function (attrRegex) {
      return attrRegex instanceof RegExp;
    }); // Check if a regular expression validates the attribute.

    for (var i = 0, len = regExp.length; i < len; i++) {
      if (attrName.match(regExp[i])) {
        return true;
      }
    }

    return false;
  }

  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {
    if (unsafeHtml.length === 0) {
      return unsafeHtml;
    }

    if (sanitizeFn && typeof sanitizeFn === 'function') {
      return sanitizeFn(unsafeHtml);
    }

    var domParser = new window.DOMParser();
    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');
    var whitelistKeys = Object.keys(whiteList);
    var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));

    var _loop = function _loop(i, len) {
      var el = elements[i];
      var elName = el.nodeName.toLowerCase();

      if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {
        el.parentNode.removeChild(el);
        return "continue";
      }

      var attributeList = [].slice.call(el.attributes);
      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);
      attributeList.forEach(function (attr) {
        if (!allowedAttribute(attr, whitelistedAttributes)) {
          el.removeAttribute(attr.nodeName);
        }
      });
    };

    for (var i = 0, len = elements.length; i < len; i++) {
      var _ret = _loop(i);

      if (_ret === "continue") continue;
    }

    return createdDocument.body.innerHTML;
  }

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$6 = 'tooltip';
  var VERSION$6 = '4.5.3';
  var DATA_KEY$6 = 'bs.tooltip';
  var EVENT_KEY$6 = "." + DATA_KEY$6;
  var JQUERY_NO_CONFLICT$6 = $__default['default'].fn[NAME$6];
  var CLASS_PREFIX = 'bs-tooltip';
  var BSCLS_PREFIX_REGEX = new RegExp("(^|\\s)" + CLASS_PREFIX + "\\S+", 'g');
  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];
  var DefaultType$4 = {
    animation: 'boolean',
    template: 'string',
    title: '(string|element|function)',
    trigger: 'string',
    delay: '(number|object)',
    html: 'boolean',
    selector: '(string|boolean)',
    placement: '(string|function)',
    offset: '(number|string|function)',
    container: '(string|element|boolean)',
    fallbackPlacement: '(string|array)',
    boundary: '(string|element)',
    sanitize: 'boolean',
    sanitizeFn: '(null|function)',
    whiteList: 'object',
    popperConfig: '(null|object)'
  };
  var AttachmentMap = {
    AUTO: 'auto',
    TOP: 'top',
    RIGHT: 'right',
    BOTTOM: 'bottom',
    LEFT: 'left'
  };
  var Default$4 = {
    animation: true,
    template: '<div class="tooltip" role="tooltip">' + '<div class="arrow"></div>' + '<div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    selector: false,
    placement: 'top',
    offset: 0,
    container: false,
    fallbackPlacement: 'flip',
    boundary: 'scrollParent',
    sanitize: true,
    sanitizeFn: null,
    whiteList: DefaultWhitelist,
    popperConfig: null
  };
  var HOVER_STATE_SHOW = 'show';
  var HOVER_STATE_OUT = 'out';
  var Event = {
    HIDE: "hide" + EVENT_KEY$6,
    HIDDEN: "hidden" + EVENT_KEY$6,
    SHOW: "show" + EVENT_KEY$6,
    SHOWN: "shown" + EVENT_KEY$6,
    INSERTED: "inserted" + EVENT_KEY$6,
    CLICK: "click" + EVENT_KEY$6,
    FOCUSIN: "focusin" + EVENT_KEY$6,
    FOCUSOUT: "focusout" + EVENT_KEY$6,
    MOUSEENTER: "mouseenter" + EVENT_KEY$6,
    MOUSELEAVE: "mouseleave" + EVENT_KEY$6
  };
  var CLASS_NAME_FADE$2 = 'fade';
  var CLASS_NAME_SHOW$4 = 'show';
  var SELECTOR_TOOLTIP_INNER = '.tooltip-inner';
  var SELECTOR_ARROW = '.arrow';
  var TRIGGER_HOVER = 'hover';
  var TRIGGER_FOCUS = 'focus';
  var TRIGGER_CLICK = 'click';
  var TRIGGER_MANUAL = 'manual';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tooltip = /*#__PURE__*/function () {
    function Tooltip(element, config) {
      if (typeof Popper__default['default'] === 'undefined') {
        throw new TypeError('Bootstrap\'s tooltips require Popper.js (https://popper.js.org/)');
      } // private


      this._isEnabled = true;
      this._timeout = 0;
      this._hoverState = '';
      this._activeTrigger = {};
      this._popper = null; // Protected

      this.element = element;
      this.config = this._getConfig(config);
      this.tip = null;

      this._setListeners();
    } // Getters


    var _proto = Tooltip.prototype;

    // Public
    _proto.enable = function enable() {
      this._isEnabled = true;
    };

    _proto.disable = function disable() {
      this._isEnabled = false;
    };

    _proto.toggleEnabled = function toggleEnabled() {
      this._isEnabled = !this._isEnabled;
    };

    _proto.toggle = function toggle(event) {
      if (!this._isEnabled) {
        return;
      }

      if (event) {
        var dataKey = this.constructor.DATA_KEY;
        var context = $__default['default'](event.currentTarget).data(dataKey);

        if (!context) {
          context = new this.constructor(event.currentTarget, this._getDelegateConfig());
          $__default['default'](event.currentTarget).data(dataKey, context);
        }

        context._activeTrigger.click = !context._activeTrigger.click;

        if (context._isWithActiveTrigger()) {
          context._enter(null, context);
        } else {
          context._leave(null, context);
        }
      } else {
        if ($__default['default'](this.getTipElement()).hasClass(CLASS_NAME_SHOW$4)) {
          this._leave(null, this);

          return;
        }

        this._enter(null, this);
      }
    };

    _proto.dispose = function dispose() {
      clearTimeout(this._timeout);
      $__default['default'].removeData(this.element, this.constructor.DATA_KEY);
      $__default['default'](this.element).off(this.constructor.EVENT_KEY);
      $__default['default'](this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler);

      if (this.tip) {
        $__default['default'](this.tip).remove();
      }

      this._isEnabled = null;
      this._timeout = null;
      this._hoverState = null;
      this._activeTrigger = null;

      if (this._popper) {
        this._popper.destroy();
      }

      this._popper = null;
      this.element = null;
      this.config = null;
      this.tip = null;
    };

    _proto.show = function show() {
      var _this = this;

      if ($__default['default'](this.element).css('display') === 'none') {
        throw new Error('Please use show on visible elements');
      }

      var showEvent = $__default['default'].Event(this.constructor.Event.SHOW);

      if (this.isWithContent() && this._isEnabled) {
        $__default['default'](this.element).trigger(showEvent);
        var shadowRoot = Util.findShadowRoot(this.element);
        var isInTheDom = $__default['default'].contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);

        if (showEvent.isDefaultPrevented() || !isInTheDom) {
          return;
        }

        var tip = this.getTipElement();
        var tipId = Util.getUID(this.constructor.NAME);
        tip.setAttribute('id', tipId);
        this.element.setAttribute('aria-describedby', tipId);
        this.setContent();

        if (this.config.animation) {
          $__default['default'](tip).addClass(CLASS_NAME_FADE$2);
        }

        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;

        var attachment = this._getAttachment(placement);

        this.addAttachmentClass(attachment);

        var container = this._getContainer();

        $__default['default'](tip).data(this.constructor.DATA_KEY, this);

        if (!$__default['default'].contains(this.element.ownerDocument.documentElement, this.tip)) {
          $__default['default'](tip).appendTo(container);
        }

        $__default['default'](this.element).trigger(this.constructor.Event.INSERTED);
        this._popper = new Popper__default['default'](this.element, tip, this._getPopperConfig(attachment));
        $__default['default'](tip).addClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we add extra
        // empty mouseover listeners to the body's immediate children;
        // only needed because of broken event delegation on iOS
        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html

        if ('ontouchstart' in document.documentElement) {
          $__default['default'](document.body).children().on('mouseover', null, $__default['default'].noop);
        }

        var complete = function complete() {
          if (_this.config.animation) {
            _this._fixTransition();
          }

          var prevHoverState = _this._hoverState;
          _this._hoverState = null;
          $__default['default'](_this.element).trigger(_this.constructor.Event.SHOWN);

          if (prevHoverState === HOVER_STATE_OUT) {
            _this._leave(null, _this);
          }
        };

        if ($__default['default'](this.tip).hasClass(CLASS_NAME_FADE$2)) {
          var transitionDuration = Util.getTransitionDurationFromElement(this.tip);
          $__default['default'](this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
        } else {
          complete();
        }
      }
    };

    _proto.hide = function hide(callback) {
      var _this2 = this;

      var tip = this.getTipElement();
      var hideEvent = $__default['default'].Event(this.constructor.Event.HIDE);

      var complete = function complete() {
        if (_this2._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {
          tip.parentNode.removeChild(tip);
        }

        _this2._cleanTipClass();

        _this2.element.removeAttribute('aria-describedby');

        $__default['default'](_this2.element).trigger(_this2.constructor.Event.HIDDEN);

        if (_this2._popper !== null) {
          _this2._popper.destroy();
        }

        if (callback) {
          callback();
        }
      };

      $__default['default'](this.element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      $__default['default'](tip).removeClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we remove the extra
      // empty mouseover listeners we added for iOS support

      if ('ontouchstart' in document.documentElement) {
        $__default['default'](document.body).children().off('mouseover', null, $__default['default'].noop);
      }

      this._activeTrigger[TRIGGER_CLICK] = false;
      this._activeTrigger[TRIGGER_FOCUS] = false;
      this._activeTrigger[TRIGGER_HOVER] = false;

      if ($__default['default'](this.tip).hasClass(CLASS_NAME_FADE$2)) {
        var transitionDuration = Util.getTransitionDurationFromElement(tip);
        $__default['default'](tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }

      this._hoverState = '';
    };

    _proto.update = function update() {
      if (this._popper !== null) {
        this._popper.scheduleUpdate();
      }
    } // Protected
    ;

    _proto.isWithContent = function isWithContent() {
      return Boolean(this.getTitle());
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $__default['default'](this.getTipElement()).addClass(CLASS_PREFIX + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $__default['default'](this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var tip = this.getTipElement();
      this.setElementContent($__default['default'](tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)), this.getTitle());
      $__default['default'](tip).removeClass(CLASS_NAME_FADE$2 + " " + CLASS_NAME_SHOW$4);
    };

    _proto.setElementContent = function setElementContent($element, content) {
      if (typeof content === 'object' && (content.nodeType || content.jquery)) {
        // Content is a DOM node or a jQuery
        if (this.config.html) {
          if (!$__default['default'](content).parent().is($element)) {
            $element.empty().append(content);
          }
        } else {
          $element.text($__default['default'](content).text());
        }

        return;
      }

      if (this.config.html) {
        if (this.config.sanitize) {
          content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);
        }

        $element.html(content);
      } else {
        $element.text(content);
      }
    };

    _proto.getTitle = function getTitle() {
      var title = this.element.getAttribute('data-original-title');

      if (!title) {
        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;
      }

      return title;
    } // Private
    ;

    _proto._getPopperConfig = function _getPopperConfig(attachment) {
      var _this3 = this;

      var defaultBsConfig = {
        placement: attachment,
        modifiers: {
          offset: this._getOffset(),
          flip: {
            behavior: this.config.fallbackPlacement
          },
          arrow: {
            element: SELECTOR_ARROW
          },
          preventOverflow: {
            boundariesElement: this.config.boundary
          }
        },
        onCreate: function onCreate(data) {
          if (data.originalPlacement !== data.placement) {
            _this3._handlePopperPlacementChange(data);
          }
        },
        onUpdate: function onUpdate(data) {
          return _this3._handlePopperPlacementChange(data);
        }
      };
      return _extends({}, defaultBsConfig, this.config.popperConfig);
    };

    _proto._getOffset = function _getOffset() {
      var _this4 = this;

      var offset = {};

      if (typeof this.config.offset === 'function') {
        offset.fn = function (data) {
          data.offsets = _extends({}, data.offsets, _this4.config.offset(data.offsets, _this4.element) || {});
          return data;
        };
      } else {
        offset.offset = this.config.offset;
      }

      return offset;
    };

    _proto._getContainer = function _getContainer() {
      if (this.config.container === false) {
        return document.body;
      }

      if (Util.isElement(this.config.container)) {
        return $__default['default'](this.config.container);
      }

      return $__default['default'](document).find(this.config.container);
    };

    _proto._getAttachment = function _getAttachment(placement) {
      return AttachmentMap[placement.toUpperCase()];
    };

    _proto._setListeners = function _setListeners() {
      var _this5 = this;

      var triggers = this.config.trigger.split(' ');
      triggers.forEach(function (trigger) {
        if (trigger === 'click') {
          $__default['default'](_this5.element).on(_this5.constructor.Event.CLICK, _this5.config.selector, function (event) {
            return _this5.toggle(event);
          });
        } else if (trigger !== TRIGGER_MANUAL) {
          var eventIn = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSEENTER : _this5.constructor.Event.FOCUSIN;
          var eventOut = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSELEAVE : _this5.constructor.Event.FOCUSOUT;
          $__default['default'](_this5.element).on(eventIn, _this5.config.selector, function (event) {
            return _this5._enter(event);
          }).on(eventOut, _this5.config.selector, function (event) {
            return _this5._leave(event);
          });
        }
      });

      this._hideModalHandler = function () {
        if (_this5.element) {
          _this5.hide();
        }
      };

      $__default['default'](this.element).closest('.modal').on('hide.bs.modal', this._hideModalHandler);

      if (this.config.selector) {
        this.config = _extends({}, this.config, {
          trigger: 'manual',
          selector: ''
        });
      } else {
        this._fixTitle();
      }
    };

    _proto._fixTitle = function _fixTitle() {
      var titleType = typeof this.element.getAttribute('data-original-title');

      if (this.element.getAttribute('title') || titleType !== 'string') {
        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');
        this.element.setAttribute('title', '');
      }
    };

    _proto._enter = function _enter(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $__default['default'](event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $__default['default'](event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;
      }

      if ($__default['default'](context.getTipElement()).hasClass(CLASS_NAME_SHOW$4) || context._hoverState === HOVER_STATE_SHOW) {
        context._hoverState = HOVER_STATE_SHOW;
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_SHOW;

      if (!context.config.delay || !context.config.delay.show) {
        context.show();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_SHOW) {
          context.show();
        }
      }, context.config.delay.show);
    };

    _proto._leave = function _leave(event, context) {
      var dataKey = this.constructor.DATA_KEY;
      context = context || $__default['default'](event.currentTarget).data(dataKey);

      if (!context) {
        context = new this.constructor(event.currentTarget, this._getDelegateConfig());
        $__default['default'](event.currentTarget).data(dataKey, context);
      }

      if (event) {
        context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = false;
      }

      if (context._isWithActiveTrigger()) {
        return;
      }

      clearTimeout(context._timeout);
      context._hoverState = HOVER_STATE_OUT;

      if (!context.config.delay || !context.config.delay.hide) {
        context.hide();
        return;
      }

      context._timeout = setTimeout(function () {
        if (context._hoverState === HOVER_STATE_OUT) {
          context.hide();
        }
      }, context.config.delay.hide);
    };

    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {
      for (var trigger in this._activeTrigger) {
        if (this._activeTrigger[trigger]) {
          return true;
        }
      }

      return false;
    };

    _proto._getConfig = function _getConfig(config) {
      var dataAttributes = $__default['default'](this.element).data();
      Object.keys(dataAttributes).forEach(function (dataAttr) {
        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {
          delete dataAttributes[dataAttr];
        }
      });
      config = _extends({}, this.constructor.Default, dataAttributes, typeof config === 'object' && config ? config : {});

      if (typeof config.delay === 'number') {
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      }

      if (typeof config.title === 'number') {
        config.title = config.title.toString();
      }

      if (typeof config.content === 'number') {
        config.content = config.content.toString();
      }

      Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType);

      if (config.sanitize) {
        config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);
      }

      return config;
    };

    _proto._getDelegateConfig = function _getDelegateConfig() {
      var config = {};

      if (this.config) {
        for (var key in this.config) {
          if (this.constructor.Default[key] !== this.config[key]) {
            config[key] = this.config[key];
          }
        }
      }

      return config;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $__default['default'](this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);

      if (tabClass !== null && tabClass.length) {
        $tip.removeClass(tabClass.join(''));
      }
    };

    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {
      this.tip = popperData.instance.popper;

      this._cleanTipClass();

      this.addAttachmentClass(this._getAttachment(popperData.placement));
    };

    _proto._fixTransition = function _fixTransition() {
      var tip = this.getTipElement();
      var initConfigAnimation = this.config.animation;

      if (tip.getAttribute('x-placement') !== null) {
        return;
      }

      $__default['default'](tip).removeClass(CLASS_NAME_FADE$2);
      this.config.animation = false;
      this.hide();
      this.show();
      this.config.animation = initConfigAnimation;
    } // Static
    ;

    Tooltip._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$6);

        var _config = typeof config === 'object' && config;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Tooltip(this, _config);
          $element.data(DATA_KEY$6, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tooltip, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$6;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$4;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME$6;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY$6;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY$6;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$4;
      }
    }]);

    return Tooltip;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $__default['default'].fn[NAME$6] = Tooltip._jQueryInterface;
  $__default['default'].fn[NAME$6].Constructor = Tooltip;

  $__default['default'].fn[NAME$6].noConflict = function () {
    $__default['default'].fn[NAME$6] = JQUERY_NO_CONFLICT$6;
    return Tooltip._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$7 = 'popover';
  var VERSION$7 = '4.5.3';
  var DATA_KEY$7 = 'bs.popover';
  var EVENT_KEY$7 = "." + DATA_KEY$7;
  var JQUERY_NO_CONFLICT$7 = $__default['default'].fn[NAME$7];
  var CLASS_PREFIX$1 = 'bs-popover';
  var BSCLS_PREFIX_REGEX$1 = new RegExp("(^|\\s)" + CLASS_PREFIX$1 + "\\S+", 'g');

  var Default$5 = _extends({}, Tooltip.Default, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip">' + '<div class="arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div></div>'
  });

  var DefaultType$5 = _extends({}, Tooltip.DefaultType, {
    content: '(string|element|function)'
  });

  var CLASS_NAME_FADE$3 = 'fade';
  var CLASS_NAME_SHOW$5 = 'show';
  var SELECTOR_TITLE = '.popover-header';
  var SELECTOR_CONTENT = '.popover-body';
  var Event$1 = {
    HIDE: "hide" + EVENT_KEY$7,
    HIDDEN: "hidden" + EVENT_KEY$7,
    SHOW: "show" + EVENT_KEY$7,
    SHOWN: "shown" + EVENT_KEY$7,
    INSERTED: "inserted" + EVENT_KEY$7,
    CLICK: "click" + EVENT_KEY$7,
    FOCUSIN: "focusin" + EVENT_KEY$7,
    FOCUSOUT: "focusout" + EVENT_KEY$7,
    MOUSEENTER: "mouseenter" + EVENT_KEY$7,
    MOUSELEAVE: "mouseleave" + EVENT_KEY$7
  };
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Popover = /*#__PURE__*/function (_Tooltip) {
    _inheritsLoose(Popover, _Tooltip);

    function Popover() {
      return _Tooltip.apply(this, arguments) || this;
    }

    var _proto = Popover.prototype;

    // Overrides
    _proto.isWithContent = function isWithContent() {
      return this.getTitle() || this._getContent();
    };

    _proto.addAttachmentClass = function addAttachmentClass(attachment) {
      $__default['default'](this.getTipElement()).addClass(CLASS_PREFIX$1 + "-" + attachment);
    };

    _proto.getTipElement = function getTipElement() {
      this.tip = this.tip || $__default['default'](this.config.template)[0];
      return this.tip;
    };

    _proto.setContent = function setContent() {
      var $tip = $__default['default'](this.getTipElement()); // We use append for html objects to maintain js events

      this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle());

      var content = this._getContent();

      if (typeof content === 'function') {
        content = content.call(this.element);
      }

      this.setElementContent($tip.find(SELECTOR_CONTENT), content);
      $tip.removeClass(CLASS_NAME_FADE$3 + " " + CLASS_NAME_SHOW$5);
    } // Private
    ;

    _proto._getContent = function _getContent() {
      return this.element.getAttribute('data-content') || this.config.content;
    };

    _proto._cleanTipClass = function _cleanTipClass() {
      var $tip = $__default['default'](this.getTipElement());
      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX$1);

      if (tabClass !== null && tabClass.length > 0) {
        $tip.removeClass(tabClass.join(''));
      }
    } // Static
    ;

    Popover._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$7);

        var _config = typeof config === 'object' ? config : null;

        if (!data && /dispose|hide/.test(config)) {
          return;
        }

        if (!data) {
          data = new Popover(this, _config);
          $__default['default'](this).data(DATA_KEY$7, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Popover, null, [{
      key: "VERSION",
      // Getters
      get: function get() {
        return VERSION$7;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$5;
      }
    }, {
      key: "NAME",
      get: function get() {
        return NAME$7;
      }
    }, {
      key: "DATA_KEY",
      get: function get() {
        return DATA_KEY$7;
      }
    }, {
      key: "Event",
      get: function get() {
        return Event$1;
      }
    }, {
      key: "EVENT_KEY",
      get: function get() {
        return EVENT_KEY$7;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$5;
      }
    }]);

    return Popover;
  }(Tooltip);
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $__default['default'].fn[NAME$7] = Popover._jQueryInterface;
  $__default['default'].fn[NAME$7].Constructor = Popover;

  $__default['default'].fn[NAME$7].noConflict = function () {
    $__default['default'].fn[NAME$7] = JQUERY_NO_CONFLICT$7;
    return Popover._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$8 = 'scrollspy';
  var VERSION$8 = '4.5.3';
  var DATA_KEY$8 = 'bs.scrollspy';
  var EVENT_KEY$8 = "." + DATA_KEY$8;
  var DATA_API_KEY$6 = '.data-api';
  var JQUERY_NO_CONFLICT$8 = $__default['default'].fn[NAME$8];
  var Default$6 = {
    offset: 10,
    method: 'auto',
    target: ''
  };
  var DefaultType$6 = {
    offset: 'number',
    method: 'string',
    target: '(string|element)'
  };
  var EVENT_ACTIVATE = "activate" + EVENT_KEY$8;
  var EVENT_SCROLL = "scroll" + EVENT_KEY$8;
  var EVENT_LOAD_DATA_API$2 = "load" + EVENT_KEY$8 + DATA_API_KEY$6;
  var CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';
  var CLASS_NAME_ACTIVE$2 = 'active';
  var SELECTOR_DATA_SPY = '[data-spy="scroll"]';
  var SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';
  var SELECTOR_NAV_LINKS = '.nav-link';
  var SELECTOR_NAV_ITEMS = '.nav-item';
  var SELECTOR_LIST_ITEMS = '.list-group-item';
  var SELECTOR_DROPDOWN = '.dropdown';
  var SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';
  var SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';
  var METHOD_OFFSET = 'offset';
  var METHOD_POSITION = 'position';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var ScrollSpy = /*#__PURE__*/function () {
    function ScrollSpy(element, config) {
      var _this = this;

      this._element = element;
      this._scrollElement = element.tagName === 'BODY' ? window : element;
      this._config = this._getConfig(config);
      this._selector = this._config.target + " " + SELECTOR_NAV_LINKS + "," + (this._config.target + " " + SELECTOR_LIST_ITEMS + ",") + (this._config.target + " " + SELECTOR_DROPDOWN_ITEMS);
      this._offsets = [];
      this._targets = [];
      this._activeTarget = null;
      this._scrollHeight = 0;
      $__default['default'](this._scrollElement).on(EVENT_SCROLL, function (event) {
        return _this._process(event);
      });
      this.refresh();

      this._process();
    } // Getters


    var _proto = ScrollSpy.prototype;

    // Public
    _proto.refresh = function refresh() {
      var _this2 = this;

      var autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;
      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;
      var offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;
      this._offsets = [];
      this._targets = [];
      this._scrollHeight = this._getScrollHeight();
      var targets = [].slice.call(document.querySelectorAll(this._selector));
      targets.map(function (element) {
        var target;
        var targetSelector = Util.getSelectorFromElement(element);

        if (targetSelector) {
          target = document.querySelector(targetSelector);
        }

        if (target) {
          var targetBCR = target.getBoundingClientRect();

          if (targetBCR.width || targetBCR.height) {
            // TODO (fat): remove sketch reliance on jQuery position/offset
            return [$__default['default'](target)[offsetMethod]().top + offsetBase, targetSelector];
          }
        }

        return null;
      }).filter(function (item) {
        return item;
      }).sort(function (a, b) {
        return a[0] - b[0];
      }).forEach(function (item) {
        _this2._offsets.push(item[0]);

        _this2._targets.push(item[1]);
      });
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$8);
      $__default['default'](this._scrollElement).off(EVENT_KEY$8);
      this._element = null;
      this._scrollElement = null;
      this._config = null;
      this._selector = null;
      this._offsets = null;
      this._targets = null;
      this._activeTarget = null;
      this._scrollHeight = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$6, typeof config === 'object' && config ? config : {});

      if (typeof config.target !== 'string' && Util.isElement(config.target)) {
        var id = $__default['default'](config.target).attr('id');

        if (!id) {
          id = Util.getUID(NAME$8);
          $__default['default'](config.target).attr('id', id);
        }

        config.target = "#" + id;
      }

      Util.typeCheckConfig(NAME$8, config, DefaultType$6);
      return config;
    };

    _proto._getScrollTop = function _getScrollTop() {
      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
    };

    _proto._getScrollHeight = function _getScrollHeight() {
      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
    };

    _proto._getOffsetHeight = function _getOffsetHeight() {
      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
    };

    _proto._process = function _process() {
      var scrollTop = this._getScrollTop() + this._config.offset;

      var scrollHeight = this._getScrollHeight();

      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();

      if (this._scrollHeight !== scrollHeight) {
        this.refresh();
      }

      if (scrollTop >= maxScroll) {
        var target = this._targets[this._targets.length - 1];

        if (this._activeTarget !== target) {
          this._activate(target);
        }

        return;
      }

      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {
        this._activeTarget = null;

        this._clear();

        return;
      }

      for (var i = this._offsets.length; i--;) {
        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);

        if (isActiveTarget) {
          this._activate(this._targets[i]);
        }
      }
    };

    _proto._activate = function _activate(target) {
      this._activeTarget = target;

      this._clear();

      var queries = this._selector.split(',').map(function (selector) {
        return selector + "[data-target=\"" + target + "\"]," + selector + "[href=\"" + target + "\"]";
      });

      var $link = $__default['default']([].slice.call(document.querySelectorAll(queries.join(','))));

      if ($link.hasClass(CLASS_NAME_DROPDOWN_ITEM)) {
        $link.closest(SELECTOR_DROPDOWN).find(SELECTOR_DROPDOWN_TOGGLE).addClass(CLASS_NAME_ACTIVE$2);
        $link.addClass(CLASS_NAME_ACTIVE$2);
      } else {
        // Set triggered link as active
        $link.addClass(CLASS_NAME_ACTIVE$2); // Set triggered links parents as active
        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor

        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_LINKS + ", " + SELECTOR_LIST_ITEMS).addClass(CLASS_NAME_ACTIVE$2); // Handle special case when .nav-link is inside .nav-item

        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_ITEMS).children(SELECTOR_NAV_LINKS).addClass(CLASS_NAME_ACTIVE$2);
      }

      $__default['default'](this._scrollElement).trigger(EVENT_ACTIVATE, {
        relatedTarget: target
      });
    };

    _proto._clear = function _clear() {
      [].slice.call(document.querySelectorAll(this._selector)).filter(function (node) {
        return node.classList.contains(CLASS_NAME_ACTIVE$2);
      }).forEach(function (node) {
        return node.classList.remove(CLASS_NAME_ACTIVE$2);
      });
    } // Static
    ;

    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var data = $__default['default'](this).data(DATA_KEY$8);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new ScrollSpy(this, _config);
          $__default['default'](this).data(DATA_KEY$8, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(ScrollSpy, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$8;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$6;
      }
    }]);

    return ScrollSpy;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](window).on(EVENT_LOAD_DATA_API$2, function () {
    var scrollSpys = [].slice.call(document.querySelectorAll(SELECTOR_DATA_SPY));
    var scrollSpysLength = scrollSpys.length;

    for (var i = scrollSpysLength; i--;) {
      var $spy = $__default['default'](scrollSpys[i]);

      ScrollSpy._jQueryInterface.call($spy, $spy.data());
    }
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$8] = ScrollSpy._jQueryInterface;
  $__default['default'].fn[NAME$8].Constructor = ScrollSpy;

  $__default['default'].fn[NAME$8].noConflict = function () {
    $__default['default'].fn[NAME$8] = JQUERY_NO_CONFLICT$8;
    return ScrollSpy._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$9 = 'tab';
  var VERSION$9 = '4.5.3';
  var DATA_KEY$9 = 'bs.tab';
  var EVENT_KEY$9 = "." + DATA_KEY$9;
  var DATA_API_KEY$7 = '.data-api';
  var JQUERY_NO_CONFLICT$9 = $__default['default'].fn[NAME$9];
  var EVENT_HIDE$3 = "hide" + EVENT_KEY$9;
  var EVENT_HIDDEN$3 = "hidden" + EVENT_KEY$9;
  var EVENT_SHOW$3 = "show" + EVENT_KEY$9;
  var EVENT_SHOWN$3 = "shown" + EVENT_KEY$9;
  var EVENT_CLICK_DATA_API$6 = "click" + EVENT_KEY$9 + DATA_API_KEY$7;
  var CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';
  var CLASS_NAME_ACTIVE$3 = 'active';
  var CLASS_NAME_DISABLED$1 = 'disabled';
  var CLASS_NAME_FADE$4 = 'fade';
  var CLASS_NAME_SHOW$6 = 'show';
  var SELECTOR_DROPDOWN$1 = '.dropdown';
  var SELECTOR_NAV_LIST_GROUP$1 = '.nav, .list-group';
  var SELECTOR_ACTIVE$2 = '.active';
  var SELECTOR_ACTIVE_UL = '> li > .active';
  var SELECTOR_DATA_TOGGLE$4 = '[data-toggle="tab"], [data-toggle="pill"], [data-toggle="list"]';
  var SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';
  var SELECTOR_DROPDOWN_ACTIVE_CHILD = '> .dropdown-menu .active';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Tab = /*#__PURE__*/function () {
    function Tab(element) {
      this._element = element;
    } // Getters


    var _proto = Tab.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $__default['default'](this._element).hasClass(CLASS_NAME_ACTIVE$3) || $__default['default'](this._element).hasClass(CLASS_NAME_DISABLED$1)) {
        return;
      }

      var target;
      var previous;
      var listElement = $__default['default'](this._element).closest(SELECTOR_NAV_LIST_GROUP$1)[0];
      var selector = Util.getSelectorFromElement(this._element);

      if (listElement) {
        var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE$2;
        previous = $__default['default'].makeArray($__default['default'](listElement).find(itemSelector));
        previous = previous[previous.length - 1];
      }

      var hideEvent = $__default['default'].Event(EVENT_HIDE$3, {
        relatedTarget: this._element
      });
      var showEvent = $__default['default'].Event(EVENT_SHOW$3, {
        relatedTarget: previous
      });

      if (previous) {
        $__default['default'](previous).trigger(hideEvent);
      }

      $__default['default'](this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {
        return;
      }

      if (selector) {
        target = document.querySelector(selector);
      }

      this._activate(this._element, listElement);

      var complete = function complete() {
        var hiddenEvent = $__default['default'].Event(EVENT_HIDDEN$3, {
          relatedTarget: _this._element
        });
        var shownEvent = $__default['default'].Event(EVENT_SHOWN$3, {
          relatedTarget: previous
        });
        $__default['default'](previous).trigger(hiddenEvent);
        $__default['default'](_this._element).trigger(shownEvent);
      };

      if (target) {
        this._activate(target, target.parentNode, complete);
      } else {
        complete();
      }
    };

    _proto.dispose = function dispose() {
      $__default['default'].removeData(this._element, DATA_KEY$9);
      this._element = null;
    } // Private
    ;

    _proto._activate = function _activate(element, container, callback) {
      var _this2 = this;

      var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $__default['default'](container).find(SELECTOR_ACTIVE_UL) : $__default['default'](container).children(SELECTOR_ACTIVE$2);
      var active = activeElements[0];
      var isTransitioning = callback && active && $__default['default'](active).hasClass(CLASS_NAME_FADE$4);

      var complete = function complete() {
        return _this2._transitionComplete(element, active, callback);
      };

      if (active && isTransitioning) {
        var transitionDuration = Util.getTransitionDurationFromElement(active);
        $__default['default'](active).removeClass(CLASS_NAME_SHOW$6).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._transitionComplete = function _transitionComplete(element, active, callback) {
      if (active) {
        $__default['default'](active).removeClass(CLASS_NAME_ACTIVE$3);
        var dropdownChild = $__default['default'](active.parentNode).find(SELECTOR_DROPDOWN_ACTIVE_CHILD)[0];

        if (dropdownChild) {
          $__default['default'](dropdownChild).removeClass(CLASS_NAME_ACTIVE$3);
        }

        if (active.getAttribute('role') === 'tab') {
          active.setAttribute('aria-selected', false);
        }
      }

      $__default['default'](element).addClass(CLASS_NAME_ACTIVE$3);

      if (element.getAttribute('role') === 'tab') {
        element.setAttribute('aria-selected', true);
      }

      Util.reflow(element);

      if (element.classList.contains(CLASS_NAME_FADE$4)) {
        element.classList.add(CLASS_NAME_SHOW$6);
      }

      if (element.parentNode && $__default['default'](element.parentNode).hasClass(CLASS_NAME_DROPDOWN_MENU)) {
        var dropdownElement = $__default['default'](element).closest(SELECTOR_DROPDOWN$1)[0];

        if (dropdownElement) {
          var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(SELECTOR_DROPDOWN_TOGGLE$1));
          $__default['default'](dropdownToggleList).addClass(CLASS_NAME_ACTIVE$3);
        }

        element.setAttribute('aria-expanded', true);
      }

      if (callback) {
        callback();
      }
    } // Static
    ;

    Tab._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $__default['default'](this);
        var data = $this.data(DATA_KEY$9);

        if (!data) {
          data = new Tab(this);
          $this.data(DATA_KEY$9, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Tab, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$9;
      }
    }]);

    return Tab;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $__default['default'](document).on(EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$4, function (event) {
    event.preventDefault();

    Tab._jQueryInterface.call($__default['default'](this), 'show');
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $__default['default'].fn[NAME$9] = Tab._jQueryInterface;
  $__default['default'].fn[NAME$9].Constructor = Tab;

  $__default['default'].fn[NAME$9].noConflict = function () {
    $__default['default'].fn[NAME$9] = JQUERY_NO_CONFLICT$9;
    return Tab._jQueryInterface;
  };

  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */

  var NAME$a = 'toast';
  var VERSION$a = '4.5.3';
  var DATA_KEY$a = 'bs.toast';
  var EVENT_KEY$a = "." + DATA_KEY$a;
  var JQUERY_NO_CONFLICT$a = $__default['default'].fn[NAME$a];
  var EVENT_CLICK_DISMISS$1 = "click.dismiss" + EVENT_KEY$a;
  var EVENT_HIDE$4 = "hide" + EVENT_KEY$a;
  var EVENT_HIDDEN$4 = "hidden" + EVENT_KEY$a;
  var EVENT_SHOW$4 = "show" + EVENT_KEY$a;
  var EVENT_SHOWN$4 = "shown" + EVENT_KEY$a;
  var CLASS_NAME_FADE$5 = 'fade';
  var CLASS_NAME_HIDE = 'hide';
  var CLASS_NAME_SHOW$7 = 'show';
  var CLASS_NAME_SHOWING = 'showing';
  var DefaultType$7 = {
    animation: 'boolean',
    autohide: 'boolean',
    delay: 'number'
  };
  var Default$7 = {
    animation: true,
    autohide: true,
    delay: 500
  };
  var SELECTOR_DATA_DISMISS$1 = '[data-dismiss="toast"]';
  /**
   * ------------------------------------------------------------------------
   * Class Definition
   * ------------------------------------------------------------------------
   */

  var Toast = /*#__PURE__*/function () {
    function Toast(element, config) {
      this._element = element;
      this._config = this._getConfig(config);
      this._timeout = null;

      this._setListeners();
    } // Getters


    var _proto = Toast.prototype;

    // Public
    _proto.show = function show() {
      var _this = this;

      var showEvent = $__default['default'].Event(EVENT_SHOW$4);
      $__default['default'](this._element).trigger(showEvent);

      if (showEvent.isDefaultPrevented()) {
        return;
      }

      this._clearTimeout();

      if (this._config.animation) {
        this._element.classList.add(CLASS_NAME_FADE$5);
      }

      var complete = function complete() {
        _this._element.classList.remove(CLASS_NAME_SHOWING);

        _this._element.classList.add(CLASS_NAME_SHOW$7);

        $__default['default'](_this._element).trigger(EVENT_SHOWN$4);

        if (_this._config.autohide) {
          _this._timeout = setTimeout(function () {
            _this.hide();
          }, _this._config.delay);
        }
      };

      this._element.classList.remove(CLASS_NAME_HIDE);

      Util.reflow(this._element);

      this._element.classList.add(CLASS_NAME_SHOWING);

      if (this._config.animation) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto.hide = function hide() {
      if (!this._element.classList.contains(CLASS_NAME_SHOW$7)) {
        return;
      }

      var hideEvent = $__default['default'].Event(EVENT_HIDE$4);
      $__default['default'](this._element).trigger(hideEvent);

      if (hideEvent.isDefaultPrevented()) {
        return;
      }

      this._close();
    };

    _proto.dispose = function dispose() {
      this._clearTimeout();

      if (this._element.classList.contains(CLASS_NAME_SHOW$7)) {
        this._element.classList.remove(CLASS_NAME_SHOW$7);
      }

      $__default['default'](this._element).off(EVENT_CLICK_DISMISS$1);
      $__default['default'].removeData(this._element, DATA_KEY$a);
      this._element = null;
      this._config = null;
    } // Private
    ;

    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default$7, $__default['default'](this._element).data(), typeof config === 'object' && config ? config : {});
      Util.typeCheckConfig(NAME$a, config, this.constructor.DefaultType);
      return config;
    };

    _proto._setListeners = function _setListeners() {
      var _this2 = this;

      $__default['default'](this._element).on(EVENT_CLICK_DISMISS$1, SELECTOR_DATA_DISMISS$1, function () {
        return _this2.hide();
      });
    };

    _proto._close = function _close() {
      var _this3 = this;

      var complete = function complete() {
        _this3._element.classList.add(CLASS_NAME_HIDE);

        $__default['default'](_this3._element).trigger(EVENT_HIDDEN$4);
      };

      this._element.classList.remove(CLASS_NAME_SHOW$7);

      if (this._config.animation) {
        var transitionDuration = Util.getTransitionDurationFromElement(this._element);
        $__default['default'](this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);
      } else {
        complete();
      }
    };

    _proto._clearTimeout = function _clearTimeout() {
      clearTimeout(this._timeout);
      this._timeout = null;
    } // Static
    ;

    Toast._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $element = $__default['default'](this);
        var data = $element.data(DATA_KEY$a);

        var _config = typeof config === 'object' && config;

        if (!data) {
          data = new Toast(this, _config);
          $element.data(DATA_KEY$a, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config](this);
        }
      });
    };

    _createClass(Toast, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION$a;
      }
    }, {
      key: "DefaultType",
      get: function get() {
        return DefaultType$7;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default$7;
      }
    }]);

    return Toast;
  }();
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */


  $__default['default'].fn[NAME$a] = Toast._jQueryInterface;
  $__default['default'].fn[NAME$a].Constructor = Toast;

  $__default['default'].fn[NAME$a].noConflict = function () {
    $__default['default'].fn[NAME$a] = JQUERY_NO_CONFLICT$a;
    return Toast._jQueryInterface;
  };

  exports.Alert = Alert;
  exports.Button = Button;
  exports.Carousel = Carousel;
  exports.Collapse = Collapse;
  exports.Dropdown = Dropdown;
  exports.Modal = Modal;
  exports.Popover = Popover;
  exports.Scrollspy = ScrollSpy;
  exports.Tab = Tab;
  exports.Toast = Toast;
  exports.Tooltip = Tooltip;
  exports.Util = Util;

  Object.defineProperty(exports, '__esModule', { value: true });

})));


},{"jquery":"../node_modules/jquery/dist/jquery.js","popper.js":"../node_modules/popper.js/dist/esm/popper.js"}],"ts/commonJquery.ts":[function(require,module,exports) {
"use strict"; // Common Jquery related code

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.setB11State = exports.setSpoilersState = exports.resetButtonGroup = exports.setActiveButtonGroupButton = exports.refreshSelectpicker = exports.registerDisableAutocomplete = exports.getSpoilersState = exports.getSelectedButtonId = exports.getB11State = exports.enableBotInfoItemPopovers = exports.createHeader = void 0;

const common_1 = require("./common");

const commonTypes_1 = require("./commonTypes");

const jQuery = __importStar(require("jquery"));

require("bootstrap");

const $ = jQuery.noConflict();
const headerLookup = {
  About: {
    name: "About",
    pageName: "about.html",
    helpText: undefined,
    spoilers: false,
    beta11Check: false
  },
  Bots: {
    name: "Bots",
    pageName: "bots.html",
    helpText: "A robot reference. This page contains a (should be) complete reference of " + "known bot information (parts, resistances, and other special stats) along with some basic search " + "filters. Bot names can be clicked to display bot information in a popup, and part names inside " + "of those popups can be clicked to display another part info popup.",
    spoilers: true,
    beta11Check: true
  },
  Build: {
    name: "Build",
    pageName: "build.html",
    helpText: "A build creator/planner. Allows for creating a build loadout and view some detailed stats " + "like the ones that are shown in-game. Some overall build summary stats are always shown up at " + 'the top, while more individual part stats are available through the "Part Info" buttons. ' + "All stats are updated whenever any part is added, removed, or modified.",
    spoilers: true,
    beta11Check: true
  },
  Hacks: {
    name: "Hacks",
    pageName: "hacks.html",
    helpText: "A machine hacking reference. Lists all available hacks for each type of machine as well " + "as their success rates. Entering hackware bonuses or other modifiers will update the odds " + "of each hack.",
    spoilers: true,
    beta11Check: false
  },
  Parts: {
    name: "Parts",
    pageName: "parts.html",
    helpText: "A parts reference. This page lists the stats of all known parts in Cogmind. Most parts " + "come directly from the in-game gallery export, and the remainder (usually enemy-unique " + "unequippable parts) are manually entered. There are many ways to sort and filter the parts, " + "as well as three ways to view and compare the parts (info popup, part-to-part comparison, " + "and spreadsheet).",
    spoilers: true,
    beta11Check: true
  },
  Simulator: {
    name: "Simulator",
    pageName: "simulator.html",
    helpText: "A combat simulator. This page allows simulating a 1-on-1 combat with any bot in the game " + "with a given offensive loadout. Select an enemy, weapons, and any number of other various " + "combat-related utilities/stats, and then hit the Simulate button to kick off the simulator. " + "once complete, a graph of the number of volleys to kill is shown. Multiple simulations can be " + 'compared by giving each dataset a name and clicking the "Add to comparison" button.',
    spoilers: true,
    beta11Check: true
  }
}; // Creates the header for a given page

function createHeader(page, headerContainer) {
  const info = headerLookup[page];
  const buttonsHtml = commonTypes_1.pageTypes.map(pageType => {
    const info = headerLookup[pageType];

    if (page === pageType) {
      return `<a href="${info.pageName}" class="btn btn-current-page">${info.name}</a>`;
    } else {
      return `<a href="${info.pageName}" class="btn">${info.name}</a>`;
    }
  }).join("");
  let spoilerHtml;

  if (info.spoilers) {
    spoilerHtml = `
<div class="d-flex align-self-center justify-content-center">
    <div class="spoilers-group btn-group">
        <div class="input-group-prepend" data-toggle="tooltip" title="What spoiler content to show.">
            <span class="input-group-text">Spoilers</span>
        </div>
        <button id="spoilers" class="btn btn-flex dropdown-toggle" type="button" data-toggle="dropdown">
            None
        </button>
        <div id="spoilersDropdown" class="dropdown-menu">
            <button class="dropdown-item" data-toggle="tooltip"
                title="No spoilers: Factory or higher depth branch content is hidden.">None</button>
            <button class="dropdown-item" data-toggle="tooltip"
                title="Moderate spoilers: Normal Factory and Research branch content is shown.">Spoilers</button>
            <button class="dropdown-item" data-toggle="tooltip"
                title="Full spoilers: All game content is shown.">Redacted</button>
        </div>
    </div>`; // Reinstate for beta 12
    // if (info.beta11Check) {

    if (false) {
      spoilerHtml += `
    <label class="align-self-center ml-2" style="margin-bottom: 0;" data-toggle="tooltip"
        title="Enable or disable experimental Beta 11 part changes.">
        <input id="beta11Checkbox" type="checkbox">Beta 11</input>
    </label>
        `;
    }

    spoilerHtml += `
</div>`;
  } else {
    spoilerHtml = "<div></div>";
  }

  const helpLabel = info.helpText === undefined ? "" : `<span class="input-group-text-block display-5" data-toggle="tooltip" title="${common_1.escapeHtml(info.helpText)}">?</span>`;
  headerContainer.append(`
<div class="title-grid mt-2">
    <div class="header d-flex align-items-center justify-content-center">
        <span class="display-5">Cog-Minder</span>
    </div>
    <h1 class="display-4 text-center title">${info.name} ${helpLabel}</h1>
    ${spoilerHtml}
</div>
<div class="mb-2 menu-buttons-grid">
    ${buttonsHtml}
</div>
    `);

  if (info.spoilers) {
    // Load spoilers saved state
    $("#spoilers").text(getSpoilersState());
  }

  headerContainer.find('[data-toggle="popover"]').popover();
}

exports.createHeader = createHeader;
const nameRegex = /\[([\w. '"\-/]*) \(\d/;
const optionNameRegex = /([\w. '"\-/]*) \(\d/; // Enables nested bot info popovers given a selector to the root bot popover

function enableBotInfoItemPopovers(selector) {
  selector.on("shown.bs.popover", e => {
    // Set up popovers for items on bots
    const body = $(`#${$(e.target).attr("aria-describedby")}`).children(".popover-body");
    const items = body.find(".popover-part");
    items.each((_, element) => {
      const selector = $(element);
      const result = nameRegex.exec(selector.text());

      if (result === null || !(result[1] in common_1.itemData)) {
        // Not a valid item
        return;
      } // Set up popover attributes


      const weapon = common_1.getItem(result[1]);
      selector.data("html", true);
      selector.data("content", common_1.createItemDataContent(weapon));
      selector.data("toggle", "popover");
      selector.addClass("bot-popover-item");
      selector.popover(); // Show/hide surrounding brackets to indicate selection

      selector.on("mouseenter", () => {
        selector.children("span").removeClass("bot-popover-item-bracket-invisible");
      });
      selector.on("mouseleave", () => {
        selector.children("span").addClass("bot-popover-item-bracket-invisible");
      });
      selector.data("toggle", "popover");
    });
    const optionItems = body.find(".popover-option").parent();
    optionItems.each((_, element) => {
      const selector = $(element);
      const result = optionNameRegex.exec(selector.find("span:nth-child(3)").text());

      if (result === null || !(result[1] in common_1.itemData)) {
        // Not a valid item
        return;
      } // Set up popover attributes


      const weapon = common_1.getItem(result[1]);
      selector.data("html", true);
      selector.data("content", common_1.createItemDataContent(weapon));
      selector.data("toggle", "popover");
      selector.addClass("bot-popover-item");
      selector.popover(); // Show/hide surrounding brackets to indicate selection

      selector.on("mouseenter", () => {
        selector.children(".bot-popover-item-bracket").removeClass("bot-popover-item-bracket-invisible");
      });
      selector.on("mouseleave", () => {
        selector.children(".bot-popover-item-bracket").addClass("bot-popover-item-bracket-invisible");
      });
      selector.data("toggle", "popover");
    });
  });
  selector.on("hide.bs.popover", e => {
    // Dispose nested popovers when the base popover is closed
    const body = $(`#${$(e.target).attr("aria-describedby")}`).children(".popover-body");
    const items = body.find(".bot-popover-item");
    items.popover("dispose");
  });
}

exports.enableBotInfoItemPopovers = enableBotInfoItemPopovers; // Gets the stored boolean state

function getB11State() {
  // return window.localStorage.getItem("b11") === "true";
  // Reinstate for beta 12
  return false;
}

exports.getB11State = getB11State; // Gets the ID of the selected button in a button group

function getSelectedButtonId(selector) {
  return selector.children(".active").attr("id");
}

exports.getSelectedButtonId = getSelectedButtonId; // Gets the stored spoilers state

function getSpoilersState() {
  let value = common_1.valueOrDefault(window.localStorage.getItem("spoilers"), "None");

  if (typeof value != "string" || value != "None" && value != "Spoilers" && value != "Redacted") {
    value = "None";
  }

  return value;
}

exports.getSpoilersState = getSpoilersState; // Registers a function on the document to disable autocomplete for all inputs

function registerDisableAutocomplete(document) {
  document.on("focus", ":input", e => {
    $(e.target).attr("autocomplete", "off");
  });
}

exports.registerDisableAutocomplete = registerDisableAutocomplete;

function refreshSelectpicker(selector) {
  selector.selectpicker("refresh"); // Minor hack, the btn-light class is auto-added to dropdowns with search
  // but it doesn't really fit with everything else

  selector.next().removeClass("btn-light");
}

exports.refreshSelectpicker = refreshSelectpicker; // Clears a button group's state and sets the item at the selected index to be active

function setActiveButtonGroupButton(group, index) {
  group.children().removeClass("active");
  group.find("input").prop("checked", false);
  group.children(`label:nth-of-type(${index})`).addClass("active");
  group.children(`label:nth-of-type(${index}) > input`).prop("checked", true);
}

exports.setActiveButtonGroupButton = setActiveButtonGroupButton; // Clears a button group's state and sets the first item to be active

function resetButtonGroup(group) {
  group.children().removeClass("active");
  group.find("input").prop("checked", false);
  group.children("label:first-of-type").addClass("active");
  group.children("label:first-of-type > input").prop("checked", true);
}

exports.resetButtonGroup = resetButtonGroup; // Gets the stored spoilers state

function setSpoilersState(state) {
  window.localStorage.setItem("spoilers", state);
}

exports.setSpoilersState = setSpoilersState; // Gets the stored boolean state

function setB11State(state) {
  return window.localStorage.setItem("b11", state.toString());
}

exports.setB11State = setB11State;
},{"./common":"ts/common.ts","./commonTypes":"ts/commonTypes.ts","jquery":"../node_modules/jquery/dist/jquery.js","bootstrap":"../node_modules/bootstrap/dist/js/bootstrap.js"}],"../node_modules/bootstrap-select/dist/js/bootstrap-select.js":[function(require,module,exports) {
var define;
/*!
 * Bootstrap-select v1.13.18 (https://developer.snapappointments.com/bootstrap-select)
 *
 * Copyright 2012-2020 SnapAppointments, LLC
 * Licensed under MIT (https://github.com/snapappointments/bootstrap-select/blob/master/LICENSE)
 */
(function (root, factory) {
  if (root === undefined && window !== undefined) root = window;

  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    define(["jquery"], function (a0) {
      return factory(a0);
    });
  } else if (typeof module === 'object' && module.exports) {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory(require("jquery"));
  } else {
    factory(root["jQuery"]);
  }
})(this, function (jQuery) {
  (function ($) {
    'use strict';

    var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];
    var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];
    var ARIA_ATTRIBUTE_PATTERN = /^aria-[\w-]*$/i;
    var DefaultWhitelist = {
      // Global attributes allowed on any supplied element below.
      '*': ['class', 'dir', 'id', 'lang', 'role', 'tabindex', 'style', ARIA_ATTRIBUTE_PATTERN],
      a: ['target', 'href', 'title', 'rel'],
      area: [],
      b: [],
      br: [],
      col: [],
      code: [],
      div: [],
      em: [],
      hr: [],
      h1: [],
      h2: [],
      h3: [],
      h4: [],
      h5: [],
      h6: [],
      i: [],
      img: ['src', 'alt', 'title', 'width', 'height'],
      li: [],
      ol: [],
      p: [],
      pre: [],
      s: [],
      small: [],
      span: [],
      sub: [],
      sup: [],
      strong: [],
      u: [],
      ul: []
    };
    /**
     * A pattern that recognizes a commonly useful subset of URLs that are safe.
     *
     * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
     */

    var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;
    /**
     * A pattern that matches safe data URLs. Only matches image, video and audio types.
     *
     * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts
     */

    var DATA_URL_PATTERN = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+/]+=*$/i;

    function allowedAttribute(attr, allowedAttributeList) {
      var attrName = attr.nodeName.toLowerCase();

      if ($.inArray(attrName, allowedAttributeList) !== -1) {
        if ($.inArray(attrName, uriAttrs) !== -1) {
          return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));
        }

        return true;
      }

      var regExp = $(allowedAttributeList).filter(function (index, value) {
        return value instanceof RegExp;
      }); // Check if a regular expression validates the attribute.

      for (var i = 0, l = regExp.length; i < l; i++) {
        if (attrName.match(regExp[i])) {
          return true;
        }
      }

      return false;
    }

    function sanitizeHtml(unsafeElements, whiteList, sanitizeFn) {
      if (sanitizeFn && typeof sanitizeFn === 'function') {
        return sanitizeFn(unsafeElements);
      }

      var whitelistKeys = Object.keys(whiteList);

      for (var i = 0, len = unsafeElements.length; i < len; i++) {
        var elements = unsafeElements[i].querySelectorAll('*');

        for (var j = 0, len2 = elements.length; j < len2; j++) {
          var el = elements[j];
          var elName = el.nodeName.toLowerCase();

          if (whitelistKeys.indexOf(elName) === -1) {
            el.parentNode.removeChild(el);
            continue;
          }

          var attributeList = [].slice.call(el.attributes);
          var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);

          for (var k = 0, len3 = attributeList.length; k < len3; k++) {
            var attr = attributeList[k];

            if (!allowedAttribute(attr, whitelistedAttributes)) {
              el.removeAttribute(attr.nodeName);
            }
          }
        }
      }
    } // Polyfill for browsers with no classList support
    // Remove in v2


    if (!('classList' in document.createElement('_'))) {
      (function (view) {
        if (!('Element' in view)) return;

        var classListProp = 'classList',
            protoProp = 'prototype',
            elemCtrProto = view.Element[protoProp],
            objCtr = Object,
            classListGetter = function () {
          var $elem = $(this);
          return {
            add: function (classes) {
              classes = Array.prototype.slice.call(arguments).join(' ');
              return $elem.addClass(classes);
            },
            remove: function (classes) {
              classes = Array.prototype.slice.call(arguments).join(' ');
              return $elem.removeClass(classes);
            },
            toggle: function (classes, force) {
              return $elem.toggleClass(classes, force);
            },
            contains: function (classes) {
              return $elem.hasClass(classes);
            }
          };
        };

        if (objCtr.defineProperty) {
          var classListPropDesc = {
            get: classListGetter,
            enumerable: true,
            configurable: true
          };

          try {
            objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
          } catch (ex) {
            // IE 8 doesn't support enumerable:true
            // adding undefined to fight this issue https://github.com/eligrey/classList.js/issues/36
            // modernie IE8-MSW7 machine has IE8 8.0.6001.18702 and is affected
            if (ex.number === undefined || ex.number === -0x7FF5EC54) {
              classListPropDesc.enumerable = false;
              objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);
            }
          }
        } else if (objCtr[protoProp].__defineGetter__) {
          elemCtrProto.__defineGetter__(classListProp, classListGetter);
        }
      })(window);
    }

    var testElement = document.createElement('_');
    testElement.classList.add('c1', 'c2');

    if (!testElement.classList.contains('c2')) {
      var _add = DOMTokenList.prototype.add,
          _remove = DOMTokenList.prototype.remove;

      DOMTokenList.prototype.add = function () {
        Array.prototype.forEach.call(arguments, _add.bind(this));
      };

      DOMTokenList.prototype.remove = function () {
        Array.prototype.forEach.call(arguments, _remove.bind(this));
      };
    }

    testElement.classList.toggle('c3', false); // Polyfill for IE 10 and Firefox <24, where classList.toggle does not
    // support the second argument.

    if (testElement.classList.contains('c3')) {
      var _toggle = DOMTokenList.prototype.toggle;

      DOMTokenList.prototype.toggle = function (token, force) {
        if (1 in arguments && !this.contains(token) === !force) {
          return force;
        } else {
          return _toggle.call(this, token);
        }
      };
    }

    testElement = null; // shallow array comparison

    function isEqual(array1, array2) {
      return array1.length === array2.length && array1.every(function (element, index) {
        return element === array2[index];
      });
    }

    ; // <editor-fold desc="Shims">

    if (!String.prototype.startsWith) {
      (function () {
        'use strict'; // needed to support `apply`/`call` with `undefined`/`null`

        var defineProperty = function () {
          // IE 8 only supports `Object.defineProperty` on DOM elements
          try {
            var object = {};
            var $defineProperty = Object.defineProperty;
            var result = $defineProperty(object, object, object) && $defineProperty;
          } catch (error) {}

          return result;
        }();

        var toString = {}.toString;

        var startsWith = function (search) {
          if (this == null) {
            throw new TypeError();
          }

          var string = String(this);

          if (search && toString.call(search) == '[object RegExp]') {
            throw new TypeError();
          }

          var stringLength = string.length;
          var searchString = String(search);
          var searchLength = searchString.length;
          var position = arguments.length > 1 ? arguments[1] : undefined; // `ToInteger`

          var pos = position ? Number(position) : 0;

          if (pos != pos) {
            // better `isNaN`
            pos = 0;
          }

          var start = Math.min(Math.max(pos, 0), stringLength); // Avoid the `indexOf` call if no match is possible

          if (searchLength + start > stringLength) {
            return false;
          }

          var index = -1;

          while (++index < searchLength) {
            if (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {
              return false;
            }
          }

          return true;
        };

        if (defineProperty) {
          defineProperty(String.prototype, 'startsWith', {
            'value': startsWith,
            'configurable': true,
            'writable': true
          });
        } else {
          String.prototype.startsWith = startsWith;
        }
      })();
    }

    if (!Object.keys) {
      Object.keys = function (o, // object
      k, // key
      r // result array
      ) {
        // initialize object and result
        r = []; // iterate over object keys

        for (k in o) {
          // fill result array with non-prototypical keys
          r.hasOwnProperty.call(o, k) && r.push(k);
        } // return result


        return r;
      };
    }

    if (HTMLSelectElement && !HTMLSelectElement.prototype.hasOwnProperty('selectedOptions')) {
      Object.defineProperty(HTMLSelectElement.prototype, 'selectedOptions', {
        get: function () {
          return this.querySelectorAll(':checked');
        }
      });
    }

    function getSelectedOptions(select, ignoreDisabled) {
      var selectedOptions = select.selectedOptions,
          options = [],
          opt;

      if (ignoreDisabled) {
        for (var i = 0, len = selectedOptions.length; i < len; i++) {
          opt = selectedOptions[i];

          if (!(opt.disabled || opt.parentNode.tagName === 'OPTGROUP' && opt.parentNode.disabled)) {
            options.push(opt);
          }
        }

        return options;
      }

      return selectedOptions;
    } // much faster than $.val()


    function getSelectValues(select, selectedOptions) {
      var value = [],
          options = selectedOptions || select.selectedOptions,
          opt;

      for (var i = 0, len = options.length; i < len; i++) {
        opt = options[i];

        if (!(opt.disabled || opt.parentNode.tagName === 'OPTGROUP' && opt.parentNode.disabled)) {
          value.push(opt.value);
        }
      }

      if (!select.multiple) {
        return !value.length ? null : value[0];
      }

      return value;
    } // set data-selected on select element if the value has been programmatically selected
    // prior to initialization of bootstrap-select
    // * consider removing or replacing an alternative method *


    var valHooks = {
      useDefault: false,
      _set: $.valHooks.select.set
    };

    $.valHooks.select.set = function (elem, value) {
      if (value && !valHooks.useDefault) $(elem).data('selected', true);
      return valHooks._set.apply(this, arguments);
    };

    var changedArguments = null;

    var EventIsSupported = function () {
      try {
        new Event('change');
        return true;
      } catch (e) {
        return false;
      }
    }();

    $.fn.triggerNative = function (eventName) {
      var el = this[0],
          event;

      if (el.dispatchEvent) {
        // for modern browsers & IE9+
        if (EventIsSupported) {
          // For modern browsers
          event = new Event(eventName, {
            bubbles: true
          });
        } else {
          // For IE since it doesn't support Event constructor
          event = document.createEvent('Event');
          event.initEvent(eventName, true, false);
        }

        el.dispatchEvent(event);
      } else if (el.fireEvent) {
        // for IE8
        event = document.createEventObject();
        event.eventType = eventName;
        el.fireEvent('on' + eventName, event);
      } else {
        // fall back to jQuery.trigger
        this.trigger(eventName);
      }
    }; // </editor-fold>


    function stringSearch(li, searchString, method, normalize) {
      var stringTypes = ['display', 'subtext', 'tokens'],
          searchSuccess = false;

      for (var i = 0; i < stringTypes.length; i++) {
        var stringType = stringTypes[i],
            string = li[stringType];

        if (string) {
          string = string.toString(); // Strip HTML tags. This isn't perfect, but it's much faster than any other method

          if (stringType === 'display') {
            string = string.replace(/<[^>]+>/g, '');
          }

          if (normalize) string = normalizeToBase(string);
          string = string.toUpperCase();

          if (method === 'contains') {
            searchSuccess = string.indexOf(searchString) >= 0;
          } else {
            searchSuccess = string.startsWith(searchString);
          }

          if (searchSuccess) break;
        }
      }

      return searchSuccess;
    }

    function toInteger(value) {
      return parseInt(value, 10) || 0;
    } // Borrowed from Lodash (_.deburr)

    /** Used to map Latin Unicode letters to basic Latin letters. */


    var deburredLetters = {
      // Latin-1 Supplement block.
      '\xc0': 'A',
      '\xc1': 'A',
      '\xc2': 'A',
      '\xc3': 'A',
      '\xc4': 'A',
      '\xc5': 'A',
      '\xe0': 'a',
      '\xe1': 'a',
      '\xe2': 'a',
      '\xe3': 'a',
      '\xe4': 'a',
      '\xe5': 'a',
      '\xc7': 'C',
      '\xe7': 'c',
      '\xd0': 'D',
      '\xf0': 'd',
      '\xc8': 'E',
      '\xc9': 'E',
      '\xca': 'E',
      '\xcb': 'E',
      '\xe8': 'e',
      '\xe9': 'e',
      '\xea': 'e',
      '\xeb': 'e',
      '\xcc': 'I',
      '\xcd': 'I',
      '\xce': 'I',
      '\xcf': 'I',
      '\xec': 'i',
      '\xed': 'i',
      '\xee': 'i',
      '\xef': 'i',
      '\xd1': 'N',
      '\xf1': 'n',
      '\xd2': 'O',
      '\xd3': 'O',
      '\xd4': 'O',
      '\xd5': 'O',
      '\xd6': 'O',
      '\xd8': 'O',
      '\xf2': 'o',
      '\xf3': 'o',
      '\xf4': 'o',
      '\xf5': 'o',
      '\xf6': 'o',
      '\xf8': 'o',
      '\xd9': 'U',
      '\xda': 'U',
      '\xdb': 'U',
      '\xdc': 'U',
      '\xf9': 'u',
      '\xfa': 'u',
      '\xfb': 'u',
      '\xfc': 'u',
      '\xdd': 'Y',
      '\xfd': 'y',
      '\xff': 'y',
      '\xc6': 'Ae',
      '\xe6': 'ae',
      '\xde': 'Th',
      '\xfe': 'th',
      '\xdf': 'ss',
      // Latin Extended-A block.
      '\u0100': 'A',
      '\u0102': 'A',
      '\u0104': 'A',
      '\u0101': 'a',
      '\u0103': 'a',
      '\u0105': 'a',
      '\u0106': 'C',
      '\u0108': 'C',
      '\u010a': 'C',
      '\u010c': 'C',
      '\u0107': 'c',
      '\u0109': 'c',
      '\u010b': 'c',
      '\u010d': 'c',
      '\u010e': 'D',
      '\u0110': 'D',
      '\u010f': 'd',
      '\u0111': 'd',
      '\u0112': 'E',
      '\u0114': 'E',
      '\u0116': 'E',
      '\u0118': 'E',
      '\u011a': 'E',
      '\u0113': 'e',
      '\u0115': 'e',
      '\u0117': 'e',
      '\u0119': 'e',
      '\u011b': 'e',
      '\u011c': 'G',
      '\u011e': 'G',
      '\u0120': 'G',
      '\u0122': 'G',
      '\u011d': 'g',
      '\u011f': 'g',
      '\u0121': 'g',
      '\u0123': 'g',
      '\u0124': 'H',
      '\u0126': 'H',
      '\u0125': 'h',
      '\u0127': 'h',
      '\u0128': 'I',
      '\u012a': 'I',
      '\u012c': 'I',
      '\u012e': 'I',
      '\u0130': 'I',
      '\u0129': 'i',
      '\u012b': 'i',
      '\u012d': 'i',
      '\u012f': 'i',
      '\u0131': 'i',
      '\u0134': 'J',
      '\u0135': 'j',
      '\u0136': 'K',
      '\u0137': 'k',
      '\u0138': 'k',
      '\u0139': 'L',
      '\u013b': 'L',
      '\u013d': 'L',
      '\u013f': 'L',
      '\u0141': 'L',
      '\u013a': 'l',
      '\u013c': 'l',
      '\u013e': 'l',
      '\u0140': 'l',
      '\u0142': 'l',
      '\u0143': 'N',
      '\u0145': 'N',
      '\u0147': 'N',
      '\u014a': 'N',
      '\u0144': 'n',
      '\u0146': 'n',
      '\u0148': 'n',
      '\u014b': 'n',
      '\u014c': 'O',
      '\u014e': 'O',
      '\u0150': 'O',
      '\u014d': 'o',
      '\u014f': 'o',
      '\u0151': 'o',
      '\u0154': 'R',
      '\u0156': 'R',
      '\u0158': 'R',
      '\u0155': 'r',
      '\u0157': 'r',
      '\u0159': 'r',
      '\u015a': 'S',
      '\u015c': 'S',
      '\u015e': 'S',
      '\u0160': 'S',
      '\u015b': 's',
      '\u015d': 's',
      '\u015f': 's',
      '\u0161': 's',
      '\u0162': 'T',
      '\u0164': 'T',
      '\u0166': 'T',
      '\u0163': 't',
      '\u0165': 't',
      '\u0167': 't',
      '\u0168': 'U',
      '\u016a': 'U',
      '\u016c': 'U',
      '\u016e': 'U',
      '\u0170': 'U',
      '\u0172': 'U',
      '\u0169': 'u',
      '\u016b': 'u',
      '\u016d': 'u',
      '\u016f': 'u',
      '\u0171': 'u',
      '\u0173': 'u',
      '\u0174': 'W',
      '\u0175': 'w',
      '\u0176': 'Y',
      '\u0177': 'y',
      '\u0178': 'Y',
      '\u0179': 'Z',
      '\u017b': 'Z',
      '\u017d': 'Z',
      '\u017a': 'z',
      '\u017c': 'z',
      '\u017e': 'z',
      '\u0132': 'IJ',
      '\u0133': 'ij',
      '\u0152': 'Oe',
      '\u0153': 'oe',
      '\u0149': "'n",
      '\u017f': 's'
    };
    /** Used to match Latin Unicode letters (excluding mathematical operators). */

    var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;
    /** Used to compose unicode character classes. */

    var rsComboMarksRange = '\\u0300-\\u036f',
        reComboHalfMarksRange = '\\ufe20-\\ufe2f',
        rsComboSymbolsRange = '\\u20d0-\\u20ff',
        rsComboMarksExtendedRange = '\\u1ab0-\\u1aff',
        rsComboMarksSupplementRange = '\\u1dc0-\\u1dff',
        rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange + rsComboMarksExtendedRange + rsComboMarksSupplementRange;
    /** Used to compose unicode capture groups. */

    var rsCombo = '[' + rsComboRange + ']';
    /**
     * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
     * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
     */

    var reComboMark = RegExp(rsCombo, 'g');

    function deburrLetter(key) {
      return deburredLetters[key];
    }

    ;

    function normalizeToBase(string) {
      string = string.toString();
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    } // List of HTML entities for escaping.


    var escapeMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      "'": '&#x27;',
      '`': '&#x60;'
    }; // Functions for escaping and unescaping strings to/from HTML interpolation.

    var createEscaper = function (map) {
      var escaper = function (match) {
        return map[match];
      }; // Regexes for identifying a key that needs to be escaped.


      var source = '(?:' + Object.keys(map).join('|') + ')';
      var testRegexp = RegExp(source);
      var replaceRegexp = RegExp(source, 'g');
      return function (string) {
        string = string == null ? '' : '' + string;
        return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
      };
    };

    var htmlEscape = createEscaper(escapeMap);
    /**
     * ------------------------------------------------------------------------
     * Constants
     * ------------------------------------------------------------------------
     */

    var keyCodeMap = {
      32: ' ',
      48: '0',
      49: '1',
      50: '2',
      51: '3',
      52: '4',
      53: '5',
      54: '6',
      55: '7',
      56: '8',
      57: '9',
      59: ';',
      65: 'A',
      66: 'B',
      67: 'C',
      68: 'D',
      69: 'E',
      70: 'F',
      71: 'G',
      72: 'H',
      73: 'I',
      74: 'J',
      75: 'K',
      76: 'L',
      77: 'M',
      78: 'N',
      79: 'O',
      80: 'P',
      81: 'Q',
      82: 'R',
      83: 'S',
      84: 'T',
      85: 'U',
      86: 'V',
      87: 'W',
      88: 'X',
      89: 'Y',
      90: 'Z',
      96: '0',
      97: '1',
      98: '2',
      99: '3',
      100: '4',
      101: '5',
      102: '6',
      103: '7',
      104: '8',
      105: '9'
    };
    var keyCodes = {
      ESCAPE: 27,
      // KeyboardEvent.which value for Escape (Esc) key
      ENTER: 13,
      // KeyboardEvent.which value for Enter key
      SPACE: 32,
      // KeyboardEvent.which value for space key
      TAB: 9,
      // KeyboardEvent.which value for tab key
      ARROW_UP: 38,
      // KeyboardEvent.which value for up arrow key
      ARROW_DOWN: 40 // KeyboardEvent.which value for down arrow key

    };
    var version = {
      success: false,
      major: '3'
    };

    try {
      version.full = ($.fn.dropdown.Constructor.VERSION || '').split(' ')[0].split('.');
      version.major = version.full[0];
      version.success = true;
    } catch (err) {// do nothing
    }

    var selectId = 0;
    var EVENT_KEY = '.bs.select';
    var classNames = {
      DISABLED: 'disabled',
      DIVIDER: 'divider',
      SHOW: 'open',
      DROPUP: 'dropup',
      MENU: 'dropdown-menu',
      MENURIGHT: 'dropdown-menu-right',
      MENULEFT: 'dropdown-menu-left',
      // to-do: replace with more advanced template/customization options
      BUTTONCLASS: 'btn-default',
      POPOVERHEADER: 'popover-title',
      ICONBASE: 'glyphicon',
      TICKICON: 'glyphicon-ok'
    };
    var Selector = {
      MENU: '.' + classNames.MENU
    };
    var elementTemplates = {
      div: document.createElement('div'),
      span: document.createElement('span'),
      i: document.createElement('i'),
      subtext: document.createElement('small'),
      a: document.createElement('a'),
      li: document.createElement('li'),
      whitespace: document.createTextNode('\u00A0'),
      fragment: document.createDocumentFragment()
    };
    elementTemplates.noResults = elementTemplates.li.cloneNode(false);
    elementTemplates.noResults.className = 'no-results';
    elementTemplates.a.setAttribute('role', 'option');
    elementTemplates.a.className = 'dropdown-item';
    elementTemplates.subtext.className = 'text-muted';
    elementTemplates.text = elementTemplates.span.cloneNode(false);
    elementTemplates.text.className = 'text';
    elementTemplates.checkMark = elementTemplates.span.cloneNode(false);
    var REGEXP_ARROW = new RegExp(keyCodes.ARROW_UP + '|' + keyCodes.ARROW_DOWN);
    var REGEXP_TAB_OR_ESCAPE = new RegExp('^' + keyCodes.TAB + '$|' + keyCodes.ESCAPE);
    var generateOption = {
      li: function (content, classes, optgroup) {
        var li = elementTemplates.li.cloneNode(false);

        if (content) {
          if (content.nodeType === 1 || content.nodeType === 11) {
            li.appendChild(content);
          } else {
            li.innerHTML = content;
          }
        }

        if (typeof classes !== 'undefined' && classes !== '') li.className = classes;
        if (typeof optgroup !== 'undefined' && optgroup !== null) li.classList.add('optgroup-' + optgroup);
        return li;
      },
      a: function (text, classes, inline) {
        var a = elementTemplates.a.cloneNode(true);

        if (text) {
          if (text.nodeType === 11) {
            a.appendChild(text);
          } else {
            a.insertAdjacentHTML('beforeend', text);
          }
        }

        if (typeof classes !== 'undefined' && classes !== '') a.classList.add.apply(a.classList, classes.split(/\s+/));
        if (inline) a.setAttribute('style', inline);
        return a;
      },
      text: function (options, useFragment) {
        var textElement = elementTemplates.text.cloneNode(false),
            subtextElement,
            iconElement;

        if (options.content) {
          textElement.innerHTML = options.content;
        } else {
          textElement.textContent = options.text;

          if (options.icon) {
            var whitespace = elementTemplates.whitespace.cloneNode(false); // need to use <i> for icons in the button to prevent a breaking change
            // note: switch to span in next major release

            iconElement = (useFragment === true ? elementTemplates.i : elementTemplates.span).cloneNode(false);
            iconElement.className = this.options.iconBase + ' ' + options.icon;
            elementTemplates.fragment.appendChild(iconElement);
            elementTemplates.fragment.appendChild(whitespace);
          }

          if (options.subtext) {
            subtextElement = elementTemplates.subtext.cloneNode(false);
            subtextElement.textContent = options.subtext;
            textElement.appendChild(subtextElement);
          }
        }

        if (useFragment === true) {
          while (textElement.childNodes.length > 0) {
            elementTemplates.fragment.appendChild(textElement.childNodes[0]);
          }
        } else {
          elementTemplates.fragment.appendChild(textElement);
        }

        return elementTemplates.fragment;
      },
      label: function (options) {
        var textElement = elementTemplates.text.cloneNode(false),
            subtextElement,
            iconElement;
        textElement.innerHTML = options.display;

        if (options.icon) {
          var whitespace = elementTemplates.whitespace.cloneNode(false);
          iconElement = elementTemplates.span.cloneNode(false);
          iconElement.className = this.options.iconBase + ' ' + options.icon;
          elementTemplates.fragment.appendChild(iconElement);
          elementTemplates.fragment.appendChild(whitespace);
        }

        if (options.subtext) {
          subtextElement = elementTemplates.subtext.cloneNode(false);
          subtextElement.textContent = options.subtext;
          textElement.appendChild(subtextElement);
        }

        elementTemplates.fragment.appendChild(textElement);
        return elementTemplates.fragment;
      }
    };

    function showNoResults(searchMatch, searchValue) {
      if (!searchMatch.length) {
        elementTemplates.noResults.innerHTML = this.options.noneResultsText.replace('{0}', '"' + htmlEscape(searchValue) + '"');
        this.$menuInner[0].firstChild.appendChild(elementTemplates.noResults);
      }
    }

    var Selectpicker = function (element, options) {
      var that = this; // bootstrap-select has been initialized - revert valHooks.select.set back to its original function

      if (!valHooks.useDefault) {
        $.valHooks.select.set = valHooks._set;
        valHooks.useDefault = true;
      }

      this.$element = $(element);
      this.$newElement = null;
      this.$button = null;
      this.$menu = null;
      this.options = options;
      this.selectpicker = {
        main: {},
        search: {},
        current: {},
        // current changes if a search is in progress
        view: {},
        isSearching: false,
        keydown: {
          keyHistory: '',
          resetKeyHistory: {
            start: function () {
              return setTimeout(function () {
                that.selectpicker.keydown.keyHistory = '';
              }, 800);
            }
          }
        }
      };
      this.sizeInfo = {}; // If we have no title yet, try to pull it from the html title attribute (jQuery doesnt' pick it up as it's not a
      // data-attribute)

      if (this.options.title === null) {
        this.options.title = this.$element.attr('title');
      } // Format window padding


      var winPad = this.options.windowPadding;

      if (typeof winPad === 'number') {
        this.options.windowPadding = [winPad, winPad, winPad, winPad];
      } // Expose public methods


      this.val = Selectpicker.prototype.val;
      this.render = Selectpicker.prototype.render;
      this.refresh = Selectpicker.prototype.refresh;
      this.setStyle = Selectpicker.prototype.setStyle;
      this.selectAll = Selectpicker.prototype.selectAll;
      this.deselectAll = Selectpicker.prototype.deselectAll;
      this.destroy = Selectpicker.prototype.destroy;
      this.remove = Selectpicker.prototype.remove;
      this.show = Selectpicker.prototype.show;
      this.hide = Selectpicker.prototype.hide;
      this.init();
    };

    Selectpicker.VERSION = '1.13.18'; // part of this is duplicated in i18n/defaults-en_US.js. Make sure to update both.

    Selectpicker.DEFAULTS = {
      noneSelectedText: 'Nothing selected',
      noneResultsText: 'No results matched {0}',
      countSelectedText: function (numSelected, numTotal) {
        return numSelected == 1 ? '{0} item selected' : '{0} items selected';
      },
      maxOptionsText: function (numAll, numGroup) {
        return [numAll == 1 ? 'Limit reached ({n} item max)' : 'Limit reached ({n} items max)', numGroup == 1 ? 'Group limit reached ({n} item max)' : 'Group limit reached ({n} items max)'];
      },
      selectAllText: 'Select All',
      deselectAllText: 'Deselect All',
      doneButton: false,
      doneButtonText: 'Close',
      multipleSeparator: ', ',
      styleBase: 'btn',
      style: classNames.BUTTONCLASS,
      size: 'auto',
      title: null,
      selectedTextFormat: 'values',
      width: false,
      container: false,
      hideDisabled: false,
      showSubtext: false,
      showIcon: true,
      showContent: true,
      dropupAuto: true,
      header: false,
      liveSearch: false,
      liveSearchPlaceholder: null,
      liveSearchNormalize: false,
      liveSearchStyle: 'contains',
      actionsBox: false,
      iconBase: classNames.ICONBASE,
      tickIcon: classNames.TICKICON,
      showTick: false,
      template: {
        caret: '<span class="caret"></span>'
      },
      maxOptions: false,
      mobile: false,
      selectOnTab: false,
      dropdownAlignRight: false,
      windowPadding: 0,
      virtualScroll: 600,
      display: false,
      sanitize: true,
      sanitizeFn: null,
      whiteList: DefaultWhitelist
    };
    Selectpicker.prototype = {
      constructor: Selectpicker,
      init: function () {
        var that = this,
            id = this.$element.attr('id'),
            element = this.$element[0],
            form = element.form;
        selectId++;
        this.selectId = 'bs-select-' + selectId;
        element.classList.add('bs-select-hidden');
        this.multiple = this.$element.prop('multiple');
        this.autofocus = this.$element.prop('autofocus');

        if (element.classList.contains('show-tick')) {
          this.options.showTick = true;
        }

        this.$newElement = this.createDropdown();
        this.buildData();
        this.$element.after(this.$newElement).prependTo(this.$newElement); // ensure select is associated with form element if it got unlinked after moving it inside newElement

        if (form && element.form === null) {
          if (!form.id) form.id = 'form-' + this.selectId;
          element.setAttribute('form', form.id);
        }

        this.$button = this.$newElement.children('button');
        this.$menu = this.$newElement.children(Selector.MENU);
        this.$menuInner = this.$menu.children('.inner');
        this.$searchbox = this.$menu.find('input');
        element.classList.remove('bs-select-hidden');
        if (this.options.dropdownAlignRight === true) this.$menu[0].classList.add(classNames.MENURIGHT);

        if (typeof id !== 'undefined') {
          this.$button.attr('data-id', id);
        }

        this.checkDisabled();
        this.clickListener();

        if (this.options.liveSearch) {
          this.liveSearchListener();
          this.focusedParent = this.$searchbox[0];
        } else {
          this.focusedParent = this.$menuInner[0];
        }

        this.setStyle();
        this.render();
        this.setWidth();

        if (this.options.container) {
          this.selectPosition();
        } else {
          this.$element.on('hide' + EVENT_KEY, function () {
            if (that.isVirtual()) {
              // empty menu on close
              var menuInner = that.$menuInner[0],
                  emptyMenu = menuInner.firstChild.cloneNode(false); // replace the existing UL with an empty one - this is faster than $.empty() or innerHTML = ''

              menuInner.replaceChild(emptyMenu, menuInner.firstChild);
              menuInner.scrollTop = 0;
            }
          });
        }

        this.$menu.data('this', this);
        this.$newElement.data('this', this);
        if (this.options.mobile) this.mobile();
        this.$newElement.on({
          'hide.bs.dropdown': function (e) {
            that.$element.trigger('hide' + EVENT_KEY, e);
          },
          'hidden.bs.dropdown': function (e) {
            that.$element.trigger('hidden' + EVENT_KEY, e);
          },
          'show.bs.dropdown': function (e) {
            that.$element.trigger('show' + EVENT_KEY, e);
          },
          'shown.bs.dropdown': function (e) {
            that.$element.trigger('shown' + EVENT_KEY, e);
          }
        });

        if (element.hasAttribute('required')) {
          this.$element.on('invalid' + EVENT_KEY, function () {
            that.$button[0].classList.add('bs-invalid');
            that.$element.on('shown' + EVENT_KEY + '.invalid', function () {
              that.$element.val(that.$element.val()) // set the value to hide the validation message in Chrome when menu is opened
              .off('shown' + EVENT_KEY + '.invalid');
            }).on('rendered' + EVENT_KEY, function () {
              // if select is no longer invalid, remove the bs-invalid class
              if (this.validity.valid) that.$button[0].classList.remove('bs-invalid');
              that.$element.off('rendered' + EVENT_KEY);
            });
            that.$button.on('blur' + EVENT_KEY, function () {
              that.$element.trigger('focus').trigger('blur');
              that.$button.off('blur' + EVENT_KEY);
            });
          });
        }

        setTimeout(function () {
          that.buildList();
          that.$element.trigger('loaded' + EVENT_KEY);
        });
      },
      createDropdown: function () {
        // Options
        // If we are multiple or showTick option is set, then add the show-tick class
        var showTick = this.multiple || this.options.showTick ? ' show-tick' : '',
            multiselectable = this.multiple ? ' aria-multiselectable="true"' : '',
            inputGroup = '',
            autofocus = this.autofocus ? ' autofocus' : '';

        if (version.major < 4 && this.$element.parent().hasClass('input-group')) {
          inputGroup = ' input-group-btn';
        } // Elements


        var drop,
            header = '',
            searchbox = '',
            actionsbox = '',
            donebutton = '';

        if (this.options.header) {
          header = '<div class="' + classNames.POPOVERHEADER + '">' + '<button type="button" class="close" aria-hidden="true">&times;</button>' + this.options.header + '</div>';
        }

        if (this.options.liveSearch) {
          searchbox = '<div class="bs-searchbox">' + '<input type="search" class="form-control" autocomplete="off"' + (this.options.liveSearchPlaceholder === null ? '' : ' placeholder="' + htmlEscape(this.options.liveSearchPlaceholder) + '"') + ' role="combobox" aria-label="Search" aria-controls="' + this.selectId + '" aria-autocomplete="list">' + '</div>';
        }

        if (this.multiple && this.options.actionsBox) {
          actionsbox = '<div class="bs-actionsbox">' + '<div class="btn-group btn-group-sm btn-block">' + '<button type="button" class="actions-btn bs-select-all btn ' + classNames.BUTTONCLASS + '">' + this.options.selectAllText + '</button>' + '<button type="button" class="actions-btn bs-deselect-all btn ' + classNames.BUTTONCLASS + '">' + this.options.deselectAllText + '</button>' + '</div>' + '</div>';
        }

        if (this.multiple && this.options.doneButton) {
          donebutton = '<div class="bs-donebutton">' + '<div class="btn-group btn-block">' + '<button type="button" class="btn btn-sm ' + classNames.BUTTONCLASS + '">' + this.options.doneButtonText + '</button>' + '</div>' + '</div>';
        }

        drop = '<div class="dropdown bootstrap-select' + showTick + inputGroup + '">' + '<button type="button" tabindex="-1" class="' + this.options.styleBase + ' dropdown-toggle" ' + (this.options.display === 'static' ? 'data-display="static"' : '') + 'data-toggle="dropdown"' + autofocus + ' role="combobox" aria-owns="' + this.selectId + '" aria-haspopup="listbox" aria-expanded="false">' + '<div class="filter-option">' + '<div class="filter-option-inner">' + '<div class="filter-option-inner-inner"></div>' + '</div> ' + '</div>' + (version.major === '4' ? '' : '<span class="bs-caret">' + this.options.template.caret + '</span>') + '</button>' + '<div class="' + classNames.MENU + ' ' + (version.major === '4' ? '' : classNames.SHOW) + '">' + header + searchbox + actionsbox + '<div class="inner ' + classNames.SHOW + '" role="listbox" id="' + this.selectId + '" tabindex="-1" ' + multiselectable + '>' + '<ul class="' + classNames.MENU + ' inner ' + (version.major === '4' ? classNames.SHOW : '') + '" role="presentation">' + '</ul>' + '</div>' + donebutton + '</div>' + '</div>';
        return $(drop);
      },
      setPositionData: function () {
        this.selectpicker.view.canHighlight = [];
        this.selectpicker.view.size = 0;
        this.selectpicker.view.firstHighlightIndex = false;

        for (var i = 0; i < this.selectpicker.current.data.length; i++) {
          var li = this.selectpicker.current.data[i],
              canHighlight = true;

          if (li.type === 'divider') {
            canHighlight = false;
            li.height = this.sizeInfo.dividerHeight;
          } else if (li.type === 'optgroup-label') {
            canHighlight = false;
            li.height = this.sizeInfo.dropdownHeaderHeight;
          } else {
            li.height = this.sizeInfo.liHeight;
          }

          if (li.disabled) canHighlight = false;
          this.selectpicker.view.canHighlight.push(canHighlight);

          if (canHighlight) {
            this.selectpicker.view.size++;
            li.posinset = this.selectpicker.view.size;
            if (this.selectpicker.view.firstHighlightIndex === false) this.selectpicker.view.firstHighlightIndex = i;
          }

          li.position = (i === 0 ? 0 : this.selectpicker.current.data[i - 1].position) + li.height;
        }
      },
      isVirtual: function () {
        return this.options.virtualScroll !== false && this.selectpicker.main.elements.length >= this.options.virtualScroll || this.options.virtualScroll === true;
      },
      createView: function (isSearching, setSize, refresh) {
        var that = this,
            scrollTop = 0,
            active = [],
            selected,
            prevActive;
        this.selectpicker.isSearching = isSearching;
        this.selectpicker.current = isSearching ? this.selectpicker.search : this.selectpicker.main;
        this.setPositionData();

        if (setSize) {
          if (refresh) {
            scrollTop = this.$menuInner[0].scrollTop;
          } else if (!that.multiple) {
            var element = that.$element[0],
                selectedIndex = (element.options[element.selectedIndex] || {}).liIndex;

            if (typeof selectedIndex === 'number' && that.options.size !== false) {
              var selectedData = that.selectpicker.main.data[selectedIndex],
                  position = selectedData && selectedData.position;

              if (position) {
                scrollTop = position - (that.sizeInfo.menuInnerHeight + that.sizeInfo.liHeight) / 2;
              }
            }
          }
        }

        scroll(scrollTop, true);
        this.$menuInner.off('scroll.createView').on('scroll.createView', function (e, updateValue) {
          if (!that.noScroll) scroll(this.scrollTop, updateValue);
          that.noScroll = false;
        });

        function scroll(scrollTop, init) {
          var size = that.selectpicker.current.elements.length,
              chunks = [],
              chunkSize,
              chunkCount,
              firstChunk,
              lastChunk,
              currentChunk,
              prevPositions,
              positionIsDifferent,
              previousElements,
              menuIsDifferent = true,
              isVirtual = that.isVirtual();
          that.selectpicker.view.scrollTop = scrollTop;
          chunkSize = Math.ceil(that.sizeInfo.menuInnerHeight / that.sizeInfo.liHeight * 1.5); // number of options in a chunk

          chunkCount = Math.round(size / chunkSize) || 1; // number of chunks

          for (var i = 0; i < chunkCount; i++) {
            var endOfChunk = (i + 1) * chunkSize;

            if (i === chunkCount - 1) {
              endOfChunk = size;
            }

            chunks[i] = [i * chunkSize + (!i ? 0 : 1), endOfChunk];
            if (!size) break;

            if (currentChunk === undefined && scrollTop - 1 <= that.selectpicker.current.data[endOfChunk - 1].position - that.sizeInfo.menuInnerHeight) {
              currentChunk = i;
            }
          }

          if (currentChunk === undefined) currentChunk = 0;
          prevPositions = [that.selectpicker.view.position0, that.selectpicker.view.position1]; // always display previous, current, and next chunks

          firstChunk = Math.max(0, currentChunk - 1);
          lastChunk = Math.min(chunkCount - 1, currentChunk + 1);
          that.selectpicker.view.position0 = isVirtual === false ? 0 : Math.max(0, chunks[firstChunk][0]) || 0;
          that.selectpicker.view.position1 = isVirtual === false ? size : Math.min(size, chunks[lastChunk][1]) || 0;
          positionIsDifferent = prevPositions[0] !== that.selectpicker.view.position0 || prevPositions[1] !== that.selectpicker.view.position1;

          if (that.activeIndex !== undefined) {
            prevActive = that.selectpicker.main.elements[that.prevActiveIndex];
            active = that.selectpicker.main.elements[that.activeIndex];
            selected = that.selectpicker.main.elements[that.selectedIndex];

            if (init) {
              if (that.activeIndex !== that.selectedIndex) {
                that.defocusItem(active);
              }

              that.activeIndex = undefined;
            }

            if (that.activeIndex && that.activeIndex !== that.selectedIndex) {
              that.defocusItem(selected);
            }
          }

          if (that.prevActiveIndex !== undefined && that.prevActiveIndex !== that.activeIndex && that.prevActiveIndex !== that.selectedIndex) {
            that.defocusItem(prevActive);
          }

          if (init || positionIsDifferent) {
            previousElements = that.selectpicker.view.visibleElements ? that.selectpicker.view.visibleElements.slice() : [];

            if (isVirtual === false) {
              that.selectpicker.view.visibleElements = that.selectpicker.current.elements;
            } else {
              that.selectpicker.view.visibleElements = that.selectpicker.current.elements.slice(that.selectpicker.view.position0, that.selectpicker.view.position1);
            }

            that.setOptionStatus(); // if searching, check to make sure the list has actually been updated before updating DOM
            // this prevents unnecessary repaints

            if (isSearching || isVirtual === false && init) menuIsDifferent = !isEqual(previousElements, that.selectpicker.view.visibleElements); // if virtual scroll is disabled and not searching,
            // menu should never need to be updated more than once

            if ((init || isVirtual === true) && menuIsDifferent) {
              var menuInner = that.$menuInner[0],
                  menuFragment = document.createDocumentFragment(),
                  emptyMenu = menuInner.firstChild.cloneNode(false),
                  marginTop,
                  marginBottom,
                  elements = that.selectpicker.view.visibleElements,
                  toSanitize = []; // replace the existing UL with an empty one - this is faster than $.empty()

              menuInner.replaceChild(emptyMenu, menuInner.firstChild);

              for (var i = 0, visibleElementsLen = elements.length; i < visibleElementsLen; i++) {
                var element = elements[i],
                    elText,
                    elementData;

                if (that.options.sanitize) {
                  elText = element.lastChild;

                  if (elText) {
                    elementData = that.selectpicker.current.data[i + that.selectpicker.view.position0];

                    if (elementData && elementData.content && !elementData.sanitized) {
                      toSanitize.push(elText);
                      elementData.sanitized = true;
                    }
                  }
                }

                menuFragment.appendChild(element);
              }

              if (that.options.sanitize && toSanitize.length) {
                sanitizeHtml(toSanitize, that.options.whiteList, that.options.sanitizeFn);
              }

              if (isVirtual === true) {
                marginTop = that.selectpicker.view.position0 === 0 ? 0 : that.selectpicker.current.data[that.selectpicker.view.position0 - 1].position;
                marginBottom = that.selectpicker.view.position1 > size - 1 ? 0 : that.selectpicker.current.data[size - 1].position - that.selectpicker.current.data[that.selectpicker.view.position1 - 1].position;
                menuInner.firstChild.style.marginTop = marginTop + 'px';
                menuInner.firstChild.style.marginBottom = marginBottom + 'px';
              } else {
                menuInner.firstChild.style.marginTop = 0;
                menuInner.firstChild.style.marginBottom = 0;
              }

              menuInner.firstChild.appendChild(menuFragment); // if an option is encountered that is wider than the current menu width, update the menu width accordingly
              // switch to ResizeObserver with increased browser support

              if (isVirtual === true && that.sizeInfo.hasScrollBar) {
                var menuInnerInnerWidth = menuInner.firstChild.offsetWidth;

                if (init && menuInnerInnerWidth < that.sizeInfo.menuInnerInnerWidth && that.sizeInfo.totalMenuWidth > that.sizeInfo.selectWidth) {
                  menuInner.firstChild.style.minWidth = that.sizeInfo.menuInnerInnerWidth + 'px';
                } else if (menuInnerInnerWidth > that.sizeInfo.menuInnerInnerWidth) {
                  // set to 0 to get actual width of menu
                  that.$menu[0].style.minWidth = 0;
                  var actualMenuWidth = menuInner.firstChild.offsetWidth;

                  if (actualMenuWidth > that.sizeInfo.menuInnerInnerWidth) {
                    that.sizeInfo.menuInnerInnerWidth = actualMenuWidth;
                    menuInner.firstChild.style.minWidth = that.sizeInfo.menuInnerInnerWidth + 'px';
                  } // reset to default CSS styling


                  that.$menu[0].style.minWidth = '';
                }
              }
            }
          }

          that.prevActiveIndex = that.activeIndex;

          if (!that.options.liveSearch) {
            that.$menuInner.trigger('focus');
          } else if (isSearching && init) {
            var index = 0,
                newActive;

            if (!that.selectpicker.view.canHighlight[index]) {
              index = 1 + that.selectpicker.view.canHighlight.slice(1).indexOf(true);
            }

            newActive = that.selectpicker.view.visibleElements[index];
            that.defocusItem(that.selectpicker.view.currentActive);
            that.activeIndex = (that.selectpicker.current.data[index] || {}).index;
            that.focusItem(newActive);
          }
        }

        $(window).off('resize' + EVENT_KEY + '.' + this.selectId + '.createView').on('resize' + EVENT_KEY + '.' + this.selectId + '.createView', function () {
          var isActive = that.$newElement.hasClass(classNames.SHOW);
          if (isActive) scroll(that.$menuInner[0].scrollTop);
        });
      },
      focusItem: function (li, liData, noStyle) {
        if (li) {
          liData = liData || this.selectpicker.main.data[this.activeIndex];
          var a = li.firstChild;

          if (a) {
            a.setAttribute('aria-setsize', this.selectpicker.view.size);
            a.setAttribute('aria-posinset', liData.posinset);

            if (noStyle !== true) {
              this.focusedParent.setAttribute('aria-activedescendant', a.id);
              li.classList.add('active');
              a.classList.add('active');
            }
          }
        }
      },
      defocusItem: function (li) {
        if (li) {
          li.classList.remove('active');
          if (li.firstChild) li.firstChild.classList.remove('active');
        }
      },
      setPlaceholder: function () {
        var that = this,
            updateIndex = false;

        if (this.options.title && !this.multiple) {
          if (!this.selectpicker.view.titleOption) this.selectpicker.view.titleOption = document.createElement('option'); // this option doesn't create a new <li> element, but does add a new option at the start,
          // so startIndex should increase to prevent having to check every option for the bs-title-option class

          updateIndex = true;
          var element = this.$element[0],
              selectTitleOption = false,
              titleNotAppended = !this.selectpicker.view.titleOption.parentNode,
              selectedIndex = element.selectedIndex,
              selectedOption = element.options[selectedIndex],
              navigation = window.performance && window.performance.getEntriesByType('navigation'),
              // Safari doesn't support getEntriesByType('navigation') - fall back to performance.navigation
          isNotBackForward = navigation && navigation.length ? navigation[0].type !== 'back_forward' : window.performance.navigation.type !== 2;

          if (titleNotAppended) {
            // Use native JS to prepend option (faster)
            this.selectpicker.view.titleOption.className = 'bs-title-option';
            this.selectpicker.view.titleOption.value = ''; // Check if selected or data-selected attribute is already set on an option. If not, select the titleOption option.
            // the selected item may have been changed by user or programmatically before the bootstrap select plugin runs,
            // if so, the select will have the data-selected attribute

            selectTitleOption = !selectedOption || selectedIndex === 0 && selectedOption.defaultSelected === false && this.$element.data('selected') === undefined;
          }

          if (titleNotAppended || this.selectpicker.view.titleOption.index !== 0) {
            element.insertBefore(this.selectpicker.view.titleOption, element.firstChild);
          } // Set selected *after* appending to select,
          // otherwise the option doesn't get selected in IE
          // set using selectedIndex, as setting the selected attr to true here doesn't work in IE11


          if (selectTitleOption && isNotBackForward) {
            element.selectedIndex = 0;
          } else if (document.readyState !== 'complete') {
            // if navigation type is back_forward, there's a chance the select will have its value set by BFCache
            // wait for that value to be set, then run render again
            window.addEventListener('pageshow', function () {
              if (that.selectpicker.view.displayedValue !== element.value) that.render();
            });
          }
        }

        return updateIndex;
      },
      buildData: function () {
        var optionSelector = ':not([hidden]):not([data-hidden="true"])',
            mainData = [],
            optID = 0,
            startIndex = this.setPlaceholder() ? 1 : 0; // append the titleOption if necessary and skip the first option in the loop

        if (this.options.hideDisabled) optionSelector += ':not(:disabled)';
        var selectOptions = this.$element[0].querySelectorAll('select > *' + optionSelector);

        function addDivider(config) {
          var previousData = mainData[mainData.length - 1]; // ensure optgroup doesn't create back-to-back dividers

          if (previousData && previousData.type === 'divider' && (previousData.optID || config.optID)) {
            return;
          }

          config = config || {};
          config.type = 'divider';
          mainData.push(config);
        }

        function addOption(option, config) {
          config = config || {};
          config.divider = option.getAttribute('data-divider') === 'true';

          if (config.divider) {
            addDivider({
              optID: config.optID
            });
          } else {
            var liIndex = mainData.length,
                cssText = option.style.cssText,
                inlineStyle = cssText ? htmlEscape(cssText) : '',
                optionClass = (option.className || '') + (config.optgroupClass || '');
            if (config.optID) optionClass = 'opt ' + optionClass;
            config.optionClass = optionClass.trim();
            config.inlineStyle = inlineStyle;
            config.text = option.textContent;
            config.content = option.getAttribute('data-content');
            config.tokens = option.getAttribute('data-tokens');
            config.subtext = option.getAttribute('data-subtext');
            config.icon = option.getAttribute('data-icon');
            option.liIndex = liIndex;
            config.display = config.content || config.text;
            config.type = 'option';
            config.index = liIndex;
            config.option = option;
            config.selected = !!option.selected;
            config.disabled = config.disabled || !!option.disabled;
            mainData.push(config);
          }
        }

        function addOptgroup(index, selectOptions) {
          var optgroup = selectOptions[index],
              // skip placeholder option
          previous = index - 1 < startIndex ? false : selectOptions[index - 1],
              next = selectOptions[index + 1],
              options = optgroup.querySelectorAll('option' + optionSelector);
          if (!options.length) return;
          var config = {
            display: htmlEscape(optgroup.label),
            subtext: optgroup.getAttribute('data-subtext'),
            icon: optgroup.getAttribute('data-icon'),
            type: 'optgroup-label',
            optgroupClass: ' ' + (optgroup.className || '')
          },
              headerIndex,
              lastIndex;
          optID++;

          if (previous) {
            addDivider({
              optID: optID
            });
          }

          config.optID = optID;
          mainData.push(config);

          for (var j = 0, len = options.length; j < len; j++) {
            var option = options[j];

            if (j === 0) {
              headerIndex = mainData.length - 1;
              lastIndex = headerIndex + len;
            }

            addOption(option, {
              headerIndex: headerIndex,
              lastIndex: lastIndex,
              optID: config.optID,
              optgroupClass: config.optgroupClass,
              disabled: optgroup.disabled
            });
          }

          if (next) {
            addDivider({
              optID: optID
            });
          }
        }

        for (var len = selectOptions.length, i = startIndex; i < len; i++) {
          var item = selectOptions[i];

          if (item.tagName !== 'OPTGROUP') {
            addOption(item, {});
          } else {
            addOptgroup(i, selectOptions);
          }
        }

        this.selectpicker.main.data = this.selectpicker.current.data = mainData;
      },
      buildList: function () {
        var that = this,
            selectData = this.selectpicker.main.data,
            mainElements = [],
            widestOptionLength = 0;

        if ((that.options.showTick || that.multiple) && !elementTemplates.checkMark.parentNode) {
          elementTemplates.checkMark.className = this.options.iconBase + ' ' + that.options.tickIcon + ' check-mark';
          elementTemplates.a.appendChild(elementTemplates.checkMark);
        }

        function buildElement(item) {
          var liElement,
              combinedLength = 0;

          switch (item.type) {
            case 'divider':
              liElement = generateOption.li(false, classNames.DIVIDER, item.optID ? item.optID + 'div' : undefined);
              break;

            case 'option':
              liElement = generateOption.li(generateOption.a(generateOption.text.call(that, item), item.optionClass, item.inlineStyle), '', item.optID);

              if (liElement.firstChild) {
                liElement.firstChild.id = that.selectId + '-' + item.index;
              }

              break;

            case 'optgroup-label':
              liElement = generateOption.li(generateOption.label.call(that, item), 'dropdown-header' + item.optgroupClass, item.optID);
              break;
          }

          item.element = liElement;
          mainElements.push(liElement); // count the number of characters in the option - not perfect, but should work in most cases

          if (item.display) combinedLength += item.display.length;
          if (item.subtext) combinedLength += item.subtext.length; // if there is an icon, ensure this option's width is checked

          if (item.icon) combinedLength += 1;

          if (combinedLength > widestOptionLength) {
            widestOptionLength = combinedLength; // guess which option is the widest
            // use this when calculating menu width
            // not perfect, but it's fast, and the width will be updating accordingly when scrolling

            that.selectpicker.view.widestOption = mainElements[mainElements.length - 1];
          }
        }

        for (var len = selectData.length, i = 0; i < len; i++) {
          var item = selectData[i];
          buildElement(item);
        }

        this.selectpicker.main.elements = this.selectpicker.current.elements = mainElements;
      },
      findLis: function () {
        return this.$menuInner.find('.inner > li');
      },
      render: function () {
        var that = this,
            element = this.$element[0],
            // ensure titleOption is appended and selected (if necessary) before getting selectedOptions
        placeholderSelected = this.setPlaceholder() && element.selectedIndex === 0,
            selectedOptions = getSelectedOptions(element, this.options.hideDisabled),
            selectedCount = selectedOptions.length,
            button = this.$button[0],
            buttonInner = button.querySelector('.filter-option-inner-inner'),
            multipleSeparator = document.createTextNode(this.options.multipleSeparator),
            titleFragment = elementTemplates.fragment.cloneNode(false),
            showCount,
            countMax,
            hasContent = false;
        button.classList.toggle('bs-placeholder', that.multiple ? !selectedCount : !getSelectValues(element, selectedOptions));

        if (!that.multiple && selectedOptions.length === 1) {
          that.selectpicker.view.displayedValue = getSelectValues(element, selectedOptions);
        }

        if (this.options.selectedTextFormat === 'static') {
          titleFragment = generateOption.text.call(this, {
            text: this.options.title
          }, true);
        } else {
          showCount = this.multiple && this.options.selectedTextFormat.indexOf('count') !== -1 && selectedCount > 1; // determine if the number of selected options will be shown (showCount === true)

          if (showCount) {
            countMax = this.options.selectedTextFormat.split('>');
            showCount = countMax.length > 1 && selectedCount > countMax[1] || countMax.length === 1 && selectedCount >= 2;
          } // only loop through all selected options if the count won't be shown


          if (showCount === false) {
            if (!placeholderSelected) {
              for (var selectedIndex = 0; selectedIndex < selectedCount; selectedIndex++) {
                if (selectedIndex < 50) {
                  var option = selectedOptions[selectedIndex],
                      thisData = this.selectpicker.main.data[option.liIndex],
                      titleOptions = {};

                  if (this.multiple && selectedIndex > 0) {
                    titleFragment.appendChild(multipleSeparator.cloneNode(false));
                  }

                  if (option.title) {
                    titleOptions.text = option.title;
                  } else if (thisData) {
                    if (thisData.content && that.options.showContent) {
                      titleOptions.content = thisData.content.toString();
                      hasContent = true;
                    } else {
                      if (that.options.showIcon) {
                        titleOptions.icon = thisData.icon;
                      }

                      if (that.options.showSubtext && !that.multiple && thisData.subtext) titleOptions.subtext = ' ' + thisData.subtext;
                      titleOptions.text = option.textContent.trim();
                    }
                  }

                  titleFragment.appendChild(generateOption.text.call(this, titleOptions, true));
                } else {
                  break;
                }
              } // add ellipsis


              if (selectedCount > 49) {
                titleFragment.appendChild(document.createTextNode('...'));
              }
            }
          } else {
            var optionSelector = ':not([hidden]):not([data-hidden="true"]):not([data-divider="true"])';
            if (this.options.hideDisabled) optionSelector += ':not(:disabled)'; // If this is a multiselect, and selectedTextFormat is count, then show 1 of 2 selected, etc.

            var totalCount = this.$element[0].querySelectorAll('select > option' + optionSelector + ', optgroup' + optionSelector + ' option' + optionSelector).length,
                tr8nText = typeof this.options.countSelectedText === 'function' ? this.options.countSelectedText(selectedCount, totalCount) : this.options.countSelectedText;
            titleFragment = generateOption.text.call(this, {
              text: tr8nText.replace('{0}', selectedCount.toString()).replace('{1}', totalCount.toString())
            }, true);
          }
        }

        if (this.options.title == undefined) {
          // use .attr to ensure undefined is returned if title attribute is not set
          this.options.title = this.$element.attr('title');
        } // If the select doesn't have a title, then use the default, or if nothing is set at all, use noneSelectedText


        if (!titleFragment.childNodes.length) {
          titleFragment = generateOption.text.call(this, {
            text: typeof this.options.title !== 'undefined' ? this.options.title : this.options.noneSelectedText
          }, true);
        } // strip all HTML tags and trim the result, then unescape any escaped tags


        button.title = titleFragment.textContent.replace(/<[^>]*>?/g, '').trim();

        if (this.options.sanitize && hasContent) {
          sanitizeHtml([titleFragment], that.options.whiteList, that.options.sanitizeFn);
        }

        buttonInner.innerHTML = '';
        buttonInner.appendChild(titleFragment);

        if (version.major < 4 && this.$newElement[0].classList.contains('bs3-has-addon')) {
          var filterExpand = button.querySelector('.filter-expand'),
              clone = buttonInner.cloneNode(true);
          clone.className = 'filter-expand';

          if (filterExpand) {
            button.replaceChild(clone, filterExpand);
          } else {
            button.appendChild(clone);
          }
        }

        this.$element.trigger('rendered' + EVENT_KEY);
      },

      /**
       * @param [style]
       * @param [status]
       */
      setStyle: function (newStyle, status) {
        var button = this.$button[0],
            newElement = this.$newElement[0],
            style = this.options.style.trim(),
            buttonClass;

        if (this.$element.attr('class')) {
          this.$newElement.addClass(this.$element.attr('class').replace(/selectpicker|mobile-device|bs-select-hidden|validate\[.*\]/gi, ''));
        }

        if (version.major < 4) {
          newElement.classList.add('bs3');

          if (newElement.parentNode.classList && newElement.parentNode.classList.contains('input-group') && (newElement.previousElementSibling || newElement.nextElementSibling) && (newElement.previousElementSibling || newElement.nextElementSibling).classList.contains('input-group-addon')) {
            newElement.classList.add('bs3-has-addon');
          }
        }

        if (newStyle) {
          buttonClass = newStyle.trim();
        } else {
          buttonClass = style;
        }

        if (status == 'add') {
          if (buttonClass) button.classList.add.apply(button.classList, buttonClass.split(' '));
        } else if (status == 'remove') {
          if (buttonClass) button.classList.remove.apply(button.classList, buttonClass.split(' '));
        } else {
          if (style) button.classList.remove.apply(button.classList, style.split(' '));
          if (buttonClass) button.classList.add.apply(button.classList, buttonClass.split(' '));
        }
      },
      liHeight: function (refresh) {
        if (!refresh && (this.options.size === false || Object.keys(this.sizeInfo).length)) return;
        var newElement = elementTemplates.div.cloneNode(false),
            menu = elementTemplates.div.cloneNode(false),
            menuInner = elementTemplates.div.cloneNode(false),
            menuInnerInner = document.createElement('ul'),
            divider = elementTemplates.li.cloneNode(false),
            dropdownHeader = elementTemplates.li.cloneNode(false),
            li,
            a = elementTemplates.a.cloneNode(false),
            text = elementTemplates.span.cloneNode(false),
            header = this.options.header && this.$menu.find('.' + classNames.POPOVERHEADER).length > 0 ? this.$menu.find('.' + classNames.POPOVERHEADER)[0].cloneNode(true) : null,
            search = this.options.liveSearch ? elementTemplates.div.cloneNode(false) : null,
            actions = this.options.actionsBox && this.multiple && this.$menu.find('.bs-actionsbox').length > 0 ? this.$menu.find('.bs-actionsbox')[0].cloneNode(true) : null,
            doneButton = this.options.doneButton && this.multiple && this.$menu.find('.bs-donebutton').length > 0 ? this.$menu.find('.bs-donebutton')[0].cloneNode(true) : null,
            firstOption = this.$element.find('option')[0];
        this.sizeInfo.selectWidth = this.$newElement[0].offsetWidth;
        text.className = 'text';
        a.className = 'dropdown-item ' + (firstOption ? firstOption.className : '');
        newElement.className = this.$menu[0].parentNode.className + ' ' + classNames.SHOW;
        newElement.style.width = 0; // ensure button width doesn't affect natural width of menu when calculating

        if (this.options.width === 'auto') menu.style.minWidth = 0;
        menu.className = classNames.MENU + ' ' + classNames.SHOW;
        menuInner.className = 'inner ' + classNames.SHOW;
        menuInnerInner.className = classNames.MENU + ' inner ' + (version.major === '4' ? classNames.SHOW : '');
        divider.className = classNames.DIVIDER;
        dropdownHeader.className = 'dropdown-header';
        text.appendChild(document.createTextNode('\u200b'));

        if (this.selectpicker.current.data.length) {
          for (var i = 0; i < this.selectpicker.current.data.length; i++) {
            var data = this.selectpicker.current.data[i];

            if (data.type === 'option') {
              li = data.element;
              break;
            }
          }
        } else {
          li = elementTemplates.li.cloneNode(false);
          a.appendChild(text);
          li.appendChild(a);
        }

        dropdownHeader.appendChild(text.cloneNode(true));

        if (this.selectpicker.view.widestOption) {
          menuInnerInner.appendChild(this.selectpicker.view.widestOption.cloneNode(true));
        }

        menuInnerInner.appendChild(li);
        menuInnerInner.appendChild(divider);
        menuInnerInner.appendChild(dropdownHeader);
        if (header) menu.appendChild(header);

        if (search) {
          var input = document.createElement('input');
          search.className = 'bs-searchbox';
          input.className = 'form-control';
          search.appendChild(input);
          menu.appendChild(search);
        }

        if (actions) menu.appendChild(actions);
        menuInner.appendChild(menuInnerInner);
        menu.appendChild(menuInner);
        if (doneButton) menu.appendChild(doneButton);
        newElement.appendChild(menu);
        document.body.appendChild(newElement);
        var liHeight = li.offsetHeight,
            dropdownHeaderHeight = dropdownHeader ? dropdownHeader.offsetHeight : 0,
            headerHeight = header ? header.offsetHeight : 0,
            searchHeight = search ? search.offsetHeight : 0,
            actionsHeight = actions ? actions.offsetHeight : 0,
            doneButtonHeight = doneButton ? doneButton.offsetHeight : 0,
            dividerHeight = $(divider).outerHeight(true),
            // fall back to jQuery if getComputedStyle is not supported
        menuStyle = window.getComputedStyle ? window.getComputedStyle(menu) : false,
            menuWidth = menu.offsetWidth,
            $menu = menuStyle ? null : $(menu),
            menuPadding = {
          vert: toInteger(menuStyle ? menuStyle.paddingTop : $menu.css('paddingTop')) + toInteger(menuStyle ? menuStyle.paddingBottom : $menu.css('paddingBottom')) + toInteger(menuStyle ? menuStyle.borderTopWidth : $menu.css('borderTopWidth')) + toInteger(menuStyle ? menuStyle.borderBottomWidth : $menu.css('borderBottomWidth')),
          horiz: toInteger(menuStyle ? menuStyle.paddingLeft : $menu.css('paddingLeft')) + toInteger(menuStyle ? menuStyle.paddingRight : $menu.css('paddingRight')) + toInteger(menuStyle ? menuStyle.borderLeftWidth : $menu.css('borderLeftWidth')) + toInteger(menuStyle ? menuStyle.borderRightWidth : $menu.css('borderRightWidth'))
        },
            menuExtras = {
          vert: menuPadding.vert + toInteger(menuStyle ? menuStyle.marginTop : $menu.css('marginTop')) + toInteger(menuStyle ? menuStyle.marginBottom : $menu.css('marginBottom')) + 2,
          horiz: menuPadding.horiz + toInteger(menuStyle ? menuStyle.marginLeft : $menu.css('marginLeft')) + toInteger(menuStyle ? menuStyle.marginRight : $menu.css('marginRight')) + 2
        },
            scrollBarWidth;
        menuInner.style.overflowY = 'scroll';
        scrollBarWidth = menu.offsetWidth - menuWidth;
        document.body.removeChild(newElement);
        this.sizeInfo.liHeight = liHeight;
        this.sizeInfo.dropdownHeaderHeight = dropdownHeaderHeight;
        this.sizeInfo.headerHeight = headerHeight;
        this.sizeInfo.searchHeight = searchHeight;
        this.sizeInfo.actionsHeight = actionsHeight;
        this.sizeInfo.doneButtonHeight = doneButtonHeight;
        this.sizeInfo.dividerHeight = dividerHeight;
        this.sizeInfo.menuPadding = menuPadding;
        this.sizeInfo.menuExtras = menuExtras;
        this.sizeInfo.menuWidth = menuWidth;
        this.sizeInfo.menuInnerInnerWidth = menuWidth - menuPadding.horiz;
        this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth;
        this.sizeInfo.scrollBarWidth = scrollBarWidth;
        this.sizeInfo.selectHeight = this.$newElement[0].offsetHeight;
        this.setPositionData();
      },
      getSelectPosition: function () {
        var that = this,
            $window = $(window),
            pos = that.$newElement.offset(),
            $container = $(that.options.container),
            containerPos;

        if (that.options.container && $container.length && !$container.is('body')) {
          containerPos = $container.offset();
          containerPos.top += parseInt($container.css('borderTopWidth'));
          containerPos.left += parseInt($container.css('borderLeftWidth'));
        } else {
          containerPos = {
            top: 0,
            left: 0
          };
        }

        var winPad = that.options.windowPadding;
        this.sizeInfo.selectOffsetTop = pos.top - containerPos.top - $window.scrollTop();
        this.sizeInfo.selectOffsetBot = $window.height() - this.sizeInfo.selectOffsetTop - this.sizeInfo.selectHeight - containerPos.top - winPad[2];
        this.sizeInfo.selectOffsetLeft = pos.left - containerPos.left - $window.scrollLeft();
        this.sizeInfo.selectOffsetRight = $window.width() - this.sizeInfo.selectOffsetLeft - this.sizeInfo.selectWidth - containerPos.left - winPad[1];
        this.sizeInfo.selectOffsetTop -= winPad[0];
        this.sizeInfo.selectOffsetLeft -= winPad[3];
      },
      setMenuSize: function (isAuto) {
        this.getSelectPosition();

        var selectWidth = this.sizeInfo.selectWidth,
            liHeight = this.sizeInfo.liHeight,
            headerHeight = this.sizeInfo.headerHeight,
            searchHeight = this.sizeInfo.searchHeight,
            actionsHeight = this.sizeInfo.actionsHeight,
            doneButtonHeight = this.sizeInfo.doneButtonHeight,
            divHeight = this.sizeInfo.dividerHeight,
            menuPadding = this.sizeInfo.menuPadding,
            menuInnerHeight,
            menuHeight,
            divLength = 0,
            minHeight,
            _minHeight,
            maxHeight,
            menuInnerMinHeight,
            estimate,
            isDropup;

        if (this.options.dropupAuto) {
          // Get the estimated height of the menu without scrollbars.
          // This is useful for smaller menus, where there might be plenty of room
          // below the button without setting dropup, but we can't know
          // the exact height of the menu until createView is called later
          estimate = liHeight * this.selectpicker.current.elements.length + menuPadding.vert;
          isDropup = this.sizeInfo.selectOffsetTop - this.sizeInfo.selectOffsetBot > this.sizeInfo.menuExtras.vert && estimate + this.sizeInfo.menuExtras.vert + 50 > this.sizeInfo.selectOffsetBot; // ensure dropup doesn't change while searching (so menu doesn't bounce back and forth)

          if (this.selectpicker.isSearching === true) {
            isDropup = this.selectpicker.dropup;
          }

          this.$newElement.toggleClass(classNames.DROPUP, isDropup);
          this.selectpicker.dropup = isDropup;
        }

        if (this.options.size === 'auto') {
          _minHeight = this.selectpicker.current.elements.length > 3 ? this.sizeInfo.liHeight * 3 + this.sizeInfo.menuExtras.vert - 2 : 0;
          menuHeight = this.sizeInfo.selectOffsetBot - this.sizeInfo.menuExtras.vert;
          minHeight = _minHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight;
          menuInnerMinHeight = Math.max(_minHeight - menuPadding.vert, 0);

          if (this.$newElement.hasClass(classNames.DROPUP)) {
            menuHeight = this.sizeInfo.selectOffsetTop - this.sizeInfo.menuExtras.vert;
          }

          maxHeight = menuHeight;
          menuInnerHeight = menuHeight - headerHeight - searchHeight - actionsHeight - doneButtonHeight - menuPadding.vert;
        } else if (this.options.size && this.options.size != 'auto' && this.selectpicker.current.elements.length > this.options.size) {
          for (var i = 0; i < this.options.size; i++) {
            if (this.selectpicker.current.data[i].type === 'divider') divLength++;
          }

          menuHeight = liHeight * this.options.size + divLength * divHeight + menuPadding.vert;
          menuInnerHeight = menuHeight - menuPadding.vert;
          maxHeight = menuHeight + headerHeight + searchHeight + actionsHeight + doneButtonHeight;
          minHeight = menuInnerMinHeight = '';
        }

        this.$menu.css({
          'max-height': maxHeight + 'px',
          'overflow': 'hidden',
          'min-height': minHeight + 'px'
        });
        this.$menuInner.css({
          'max-height': menuInnerHeight + 'px',
          'overflow-y': 'auto',
          'min-height': menuInnerMinHeight + 'px'
        }); // ensure menuInnerHeight is always a positive number to prevent issues calculating chunkSize in createView

        this.sizeInfo.menuInnerHeight = Math.max(menuInnerHeight, 1);

        if (this.selectpicker.current.data.length && this.selectpicker.current.data[this.selectpicker.current.data.length - 1].position > this.sizeInfo.menuInnerHeight) {
          this.sizeInfo.hasScrollBar = true;
          this.sizeInfo.totalMenuWidth = this.sizeInfo.menuWidth + this.sizeInfo.scrollBarWidth;
        }

        if (this.options.dropdownAlignRight === 'auto') {
          this.$menu.toggleClass(classNames.MENURIGHT, this.sizeInfo.selectOffsetLeft > this.sizeInfo.selectOffsetRight && this.sizeInfo.selectOffsetRight < this.sizeInfo.totalMenuWidth - selectWidth);
        }

        if (this.dropdown && this.dropdown._popper) this.dropdown._popper.update();
      },
      setSize: function (refresh) {
        this.liHeight(refresh);
        if (this.options.header) this.$menu.css('padding-top', 0);

        if (this.options.size !== false) {
          var that = this,
              $window = $(window);
          this.setMenuSize();

          if (this.options.liveSearch) {
            this.$searchbox.off('input.setMenuSize propertychange.setMenuSize').on('input.setMenuSize propertychange.setMenuSize', function () {
              return that.setMenuSize();
            });
          }

          if (this.options.size === 'auto') {
            $window.off('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize').on('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize', function () {
              return that.setMenuSize();
            });
          } else if (this.options.size && this.options.size != 'auto' && this.selectpicker.current.elements.length > this.options.size) {
            $window.off('resize' + EVENT_KEY + '.' + this.selectId + '.setMenuSize' + ' scroll' + EVENT_KEY + '.' + this.selectId + '.setMenuSize');
          }
        }

        this.createView(false, true, refresh);
      },
      setWidth: function () {
        var that = this;

        if (this.options.width === 'auto') {
          requestAnimationFrame(function () {
            that.$menu.css('min-width', '0');
            that.$element.on('loaded' + EVENT_KEY, function () {
              that.liHeight();
              that.setMenuSize(); // Get correct width if element is hidden

              var $selectClone = that.$newElement.clone().appendTo('body'),
                  btnWidth = $selectClone.css('width', 'auto').children('button').outerWidth();
              $selectClone.remove(); // Set width to whatever's larger, button title or longest option

              that.sizeInfo.selectWidth = Math.max(that.sizeInfo.totalMenuWidth, btnWidth);
              that.$newElement.css('width', that.sizeInfo.selectWidth + 'px');
            });
          });
        } else if (this.options.width === 'fit') {
          // Remove inline min-width so width can be changed from 'auto'
          this.$menu.css('min-width', '');
          this.$newElement.css('width', '').addClass('fit-width');
        } else if (this.options.width) {
          // Remove inline min-width so width can be changed from 'auto'
          this.$menu.css('min-width', '');
          this.$newElement.css('width', this.options.width);
        } else {
          // Remove inline min-width/width so width can be changed
          this.$menu.css('min-width', '');
          this.$newElement.css('width', '');
        } // Remove fit-width class if width is changed programmatically


        if (this.$newElement.hasClass('fit-width') && this.options.width !== 'fit') {
          this.$newElement[0].classList.remove('fit-width');
        }
      },
      selectPosition: function () {
        this.$bsContainer = $('<div class="bs-container" />');

        var that = this,
            $container = $(this.options.container),
            pos,
            containerPos,
            actualHeight,
            getPlacement = function ($element) {
          var containerPosition = {},
              // fall back to dropdown's default display setting if display is not manually set
          display = that.options.display || ( // Bootstrap 3 doesn't have $.fn.dropdown.Constructor.Default
          $.fn.dropdown.Constructor.Default ? $.fn.dropdown.Constructor.Default.display : false);
          that.$bsContainer.addClass($element.attr('class').replace(/form-control|fit-width/gi, '')).toggleClass(classNames.DROPUP, $element.hasClass(classNames.DROPUP));
          pos = $element.offset();

          if (!$container.is('body')) {
            containerPos = $container.offset();
            containerPos.top += parseInt($container.css('borderTopWidth')) - $container.scrollTop();
            containerPos.left += parseInt($container.css('borderLeftWidth')) - $container.scrollLeft();
          } else {
            containerPos = {
              top: 0,
              left: 0
            };
          }

          actualHeight = $element.hasClass(classNames.DROPUP) ? 0 : $element[0].offsetHeight; // Bootstrap 4+ uses Popper for menu positioning

          if (version.major < 4 || display === 'static') {
            containerPosition.top = pos.top - containerPos.top + actualHeight;
            containerPosition.left = pos.left - containerPos.left;
          }

          containerPosition.width = $element[0].offsetWidth;
          that.$bsContainer.css(containerPosition);
        };

        this.$button.on('click.bs.dropdown.data-api', function () {
          if (that.isDisabled()) {
            return;
          }

          getPlacement(that.$newElement);
          that.$bsContainer.appendTo(that.options.container).toggleClass(classNames.SHOW, !that.$button.hasClass(classNames.SHOW)).append(that.$menu);
        });
        $(window).off('resize' + EVENT_KEY + '.' + this.selectId + ' scroll' + EVENT_KEY + '.' + this.selectId).on('resize' + EVENT_KEY + '.' + this.selectId + ' scroll' + EVENT_KEY + '.' + this.selectId, function () {
          var isActive = that.$newElement.hasClass(classNames.SHOW);
          if (isActive) getPlacement(that.$newElement);
        });
        this.$element.on('hide' + EVENT_KEY, function () {
          that.$menu.data('height', that.$menu.height());
          that.$bsContainer.detach();
        });
      },
      setOptionStatus: function (selectedOnly) {
        var that = this;
        that.noScroll = false;

        if (that.selectpicker.view.visibleElements && that.selectpicker.view.visibleElements.length) {
          for (var i = 0; i < that.selectpicker.view.visibleElements.length; i++) {
            var liData = that.selectpicker.current.data[i + that.selectpicker.view.position0],
                option = liData.option;

            if (option) {
              if (selectedOnly !== true) {
                that.setDisabled(liData.index, liData.disabled);
              }

              that.setSelected(liData.index, option.selected);
            }
          }
        }
      },

      /**
       * @param {number} index - the index of the option that is being changed
       * @param {boolean} selected - true if the option is being selected, false if being deselected
       */
      setSelected: function (index, selected) {
        var li = this.selectpicker.main.elements[index],
            liData = this.selectpicker.main.data[index],
            activeIndexIsSet = this.activeIndex !== undefined,
            thisIsActive = this.activeIndex === index,
            prevActive,
            a,
            // if current option is already active
        // OR
        // if the current option is being selected, it's NOT multiple, and
        // activeIndex is undefined:
        //  - when the menu is first being opened, OR
        //  - after a search has been performed, OR
        //  - when retainActive is false when selecting a new option (i.e. index of the newly selected option is not the same as the current activeIndex)
        keepActive = thisIsActive || selected && !this.multiple && !activeIndexIsSet;
        liData.selected = selected;
        a = li.firstChild;

        if (selected) {
          this.selectedIndex = index;
        }

        li.classList.toggle('selected', selected);

        if (keepActive) {
          this.focusItem(li, liData);
          this.selectpicker.view.currentActive = li;
          this.activeIndex = index;
        } else {
          this.defocusItem(li);
        }

        if (a) {
          a.classList.toggle('selected', selected);

          if (selected) {
            a.setAttribute('aria-selected', true);
          } else {
            if (this.multiple) {
              a.setAttribute('aria-selected', false);
            } else {
              a.removeAttribute('aria-selected');
            }
          }
        }

        if (!keepActive && !activeIndexIsSet && selected && this.prevActiveIndex !== undefined) {
          prevActive = this.selectpicker.main.elements[this.prevActiveIndex];
          this.defocusItem(prevActive);
        }
      },

      /**
       * @param {number} index - the index of the option that is being disabled
       * @param {boolean} disabled - true if the option is being disabled, false if being enabled
       */
      setDisabled: function (index, disabled) {
        var li = this.selectpicker.main.elements[index],
            a;
        this.selectpicker.main.data[index].disabled = disabled;
        a = li.firstChild;
        li.classList.toggle(classNames.DISABLED, disabled);

        if (a) {
          if (version.major === '4') a.classList.toggle(classNames.DISABLED, disabled);

          if (disabled) {
            a.setAttribute('aria-disabled', disabled);
            a.setAttribute('tabindex', -1);
          } else {
            a.removeAttribute('aria-disabled');
            a.setAttribute('tabindex', 0);
          }
        }
      },
      isDisabled: function () {
        return this.$element[0].disabled;
      },
      checkDisabled: function () {
        if (this.isDisabled()) {
          this.$newElement[0].classList.add(classNames.DISABLED);
          this.$button.addClass(classNames.DISABLED).attr('aria-disabled', true);
        } else {
          if (this.$button[0].classList.contains(classNames.DISABLED)) {
            this.$newElement[0].classList.remove(classNames.DISABLED);
            this.$button.removeClass(classNames.DISABLED).attr('aria-disabled', false);
          }
        }
      },
      clickListener: function () {
        var that = this,
            $document = $(document);
        $document.data('spaceSelect', false);
        this.$button.on('keyup', function (e) {
          if (/(32)/.test(e.keyCode.toString(10)) && $document.data('spaceSelect')) {
            e.preventDefault();
            $document.data('spaceSelect', false);
          }
        });
        this.$newElement.on('show.bs.dropdown', function () {
          if (version.major > 3 && !that.dropdown) {
            that.dropdown = that.$button.data('bs.dropdown');
            that.dropdown._menu = that.$menu[0];
          }
        });
        this.$button.on('click.bs.dropdown.data-api', function () {
          if (!that.$newElement.hasClass(classNames.SHOW)) {
            that.setSize();
          }
        });

        function setFocus() {
          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            that.$menuInner.trigger('focus');
          }
        }

        function checkPopperExists() {
          if (that.dropdown && that.dropdown._popper && that.dropdown._popper.state.isCreated) {
            setFocus();
          } else {
            requestAnimationFrame(checkPopperExists);
          }
        }

        this.$element.on('shown' + EVENT_KEY, function () {
          if (that.$menuInner[0].scrollTop !== that.selectpicker.view.scrollTop) {
            that.$menuInner[0].scrollTop = that.selectpicker.view.scrollTop;
          }

          if (version.major > 3) {
            requestAnimationFrame(checkPopperExists);
          } else {
            setFocus();
          }
        }); // ensure posinset and setsize are correct before selecting an option via a click

        this.$menuInner.on('mouseenter', 'li a', function (e) {
          var hoverLi = this.parentElement,
              position0 = that.isVirtual() ? that.selectpicker.view.position0 : 0,
              index = Array.prototype.indexOf.call(hoverLi.parentElement.children, hoverLi),
              hoverData = that.selectpicker.current.data[index + position0];
          that.focusItem(hoverLi, hoverData, true);
        });
        this.$menuInner.on('click', 'li a', function (e, retainActive) {
          var $this = $(this),
              element = that.$element[0],
              position0 = that.isVirtual() ? that.selectpicker.view.position0 : 0,
              clickedData = that.selectpicker.current.data[$this.parent().index() + position0],
              clickedIndex = clickedData.index,
              prevValue = getSelectValues(element),
              prevIndex = element.selectedIndex,
              prevOption = element.options[prevIndex],
              triggerChange = true; // Don't close on multi choice menu

          if (that.multiple && that.options.maxOptions !== 1) {
            e.stopPropagation();
          }

          e.preventDefault(); // Don't run if the select is disabled

          if (!that.isDisabled() && !$this.parent().hasClass(classNames.DISABLED)) {
            var option = clickedData.option,
                $option = $(option),
                state = option.selected,
                $optgroup = $option.parent('optgroup'),
                $optgroupOptions = $optgroup.find('option'),
                maxOptions = that.options.maxOptions,
                maxOptionsGrp = $optgroup.data('maxOptions') || false;
            if (clickedIndex === that.activeIndex) retainActive = true;

            if (!retainActive) {
              that.prevActiveIndex = that.activeIndex;
              that.activeIndex = undefined;
            }

            if (!that.multiple) {
              // Deselect all others if not multi select box
              if (prevOption) prevOption.selected = false;
              option.selected = true;
              that.setSelected(clickedIndex, true);
            } else {
              // Toggle the one we have chosen if we are multi select.
              option.selected = !state;
              that.setSelected(clickedIndex, !state);
              that.focusedParent.focus();

              if (maxOptions !== false || maxOptionsGrp !== false) {
                var maxReached = maxOptions < getSelectedOptions(element).length,
                    maxReachedGrp = maxOptionsGrp < $optgroup.find('option:selected').length;

                if (maxOptions && maxReached || maxOptionsGrp && maxReachedGrp) {
                  if (maxOptions && maxOptions == 1) {
                    element.selectedIndex = -1;
                    option.selected = true;
                    that.setOptionStatus(true);
                  } else if (maxOptionsGrp && maxOptionsGrp == 1) {
                    for (var i = 0; i < $optgroupOptions.length; i++) {
                      var _option = $optgroupOptions[i];
                      _option.selected = false;
                      that.setSelected(_option.liIndex, false);
                    }

                    option.selected = true;
                    that.setSelected(clickedIndex, true);
                  } else {
                    var maxOptionsText = typeof that.options.maxOptionsText === 'string' ? [that.options.maxOptionsText, that.options.maxOptionsText] : that.options.maxOptionsText,
                        maxOptionsArr = typeof maxOptionsText === 'function' ? maxOptionsText(maxOptions, maxOptionsGrp) : maxOptionsText,
                        maxTxt = maxOptionsArr[0].replace('{n}', maxOptions),
                        maxTxtGrp = maxOptionsArr[1].replace('{n}', maxOptionsGrp),
                        $notify = $('<div class="notify"></div>'); // If {var} is set in array, replace it

                    /** @deprecated */

                    if (maxOptionsArr[2]) {
                      maxTxt = maxTxt.replace('{var}', maxOptionsArr[2][maxOptions > 1 ? 0 : 1]);
                      maxTxtGrp = maxTxtGrp.replace('{var}', maxOptionsArr[2][maxOptionsGrp > 1 ? 0 : 1]);
                    }

                    option.selected = false;
                    that.$menu.append($notify);

                    if (maxOptions && maxReached) {
                      $notify.append($('<div>' + maxTxt + '</div>'));
                      triggerChange = false;
                      that.$element.trigger('maxReached' + EVENT_KEY);
                    }

                    if (maxOptionsGrp && maxReachedGrp) {
                      $notify.append($('<div>' + maxTxtGrp + '</div>'));
                      triggerChange = false;
                      that.$element.trigger('maxReachedGrp' + EVENT_KEY);
                    }

                    setTimeout(function () {
                      that.setSelected(clickedIndex, false);
                    }, 10);
                    $notify[0].classList.add('fadeOut');
                    setTimeout(function () {
                      $notify.remove();
                    }, 1050);
                  }
                }
              }
            }

            if (!that.multiple || that.multiple && that.options.maxOptions === 1) {
              that.$button.trigger('focus');
            } else if (that.options.liveSearch) {
              that.$searchbox.trigger('focus');
            } // Trigger select 'change'


            if (triggerChange) {
              if (that.multiple || prevIndex !== element.selectedIndex) {
                // $option.prop('selected') is current option state (selected/unselected). prevValue is the value of the select prior to being changed.
                changedArguments = [option.index, $option.prop('selected'), prevValue];
                that.$element.triggerNative('change');
              }
            }
          }
        });
        this.$menu.on('click', 'li.' + classNames.DISABLED + ' a, .' + classNames.POPOVERHEADER + ', .' + classNames.POPOVERHEADER + ' :not(.close)', function (e) {
          if (e.currentTarget == this) {
            e.preventDefault();
            e.stopPropagation();

            if (that.options.liveSearch && !$(e.target).hasClass('close')) {
              that.$searchbox.trigger('focus');
            } else {
              that.$button.trigger('focus');
            }
          }
        });
        this.$menuInner.on('click', '.divider, .dropdown-header', function (e) {
          e.preventDefault();
          e.stopPropagation();

          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            that.$button.trigger('focus');
          }
        });
        this.$menu.on('click', '.' + classNames.POPOVERHEADER + ' .close', function () {
          that.$button.trigger('click');
        });
        this.$searchbox.on('click', function (e) {
          e.stopPropagation();
        });
        this.$menu.on('click', '.actions-btn', function (e) {
          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            that.$button.trigger('focus');
          }

          e.preventDefault();
          e.stopPropagation();

          if ($(this).hasClass('bs-select-all')) {
            that.selectAll();
          } else {
            that.deselectAll();
          }
        });
        this.$button.on('focus' + EVENT_KEY, function (e) {
          var tabindex = that.$element[0].getAttribute('tabindex'); // only change when button is actually focused

          if (tabindex !== undefined && e.originalEvent && e.originalEvent.isTrusted) {
            // apply select element's tabindex to ensure correct order is followed when tabbing to the next element
            this.setAttribute('tabindex', tabindex); // set element's tabindex to -1 to allow for reverse tabbing

            that.$element[0].setAttribute('tabindex', -1);
            that.selectpicker.view.tabindex = tabindex;
          }
        }).on('blur' + EVENT_KEY, function (e) {
          // revert everything to original tabindex
          if (that.selectpicker.view.tabindex !== undefined && e.originalEvent && e.originalEvent.isTrusted) {
            that.$element[0].setAttribute('tabindex', that.selectpicker.view.tabindex);
            this.setAttribute('tabindex', -1);
            that.selectpicker.view.tabindex = undefined;
          }
        });
        this.$element.on('change' + EVENT_KEY, function () {
          that.render();
          that.$element.trigger('changed' + EVENT_KEY, changedArguments);
          changedArguments = null;
        }).on('focus' + EVENT_KEY, function () {
          if (!that.options.mobile) that.$button[0].focus();
        });
      },
      liveSearchListener: function () {
        var that = this;
        this.$button.on('click.bs.dropdown.data-api', function () {
          if (!!that.$searchbox.val()) {
            that.$searchbox.val('');
            that.selectpicker.search.previousValue = undefined;
          }
        });
        this.$searchbox.on('click.bs.dropdown.data-api focus.bs.dropdown.data-api touchend.bs.dropdown.data-api', function (e) {
          e.stopPropagation();
        });
        this.$searchbox.on('input propertychange', function () {
          var searchValue = that.$searchbox[0].value;
          that.selectpicker.search.elements = [];
          that.selectpicker.search.data = [];

          if (searchValue) {
            var i,
                searchMatch = [],
                q = searchValue.toUpperCase(),
                cache = {},
                cacheArr = [],
                searchStyle = that._searchStyle(),
                normalizeSearch = that.options.liveSearchNormalize;

            if (normalizeSearch) q = normalizeToBase(q);

            for (var i = 0; i < that.selectpicker.main.data.length; i++) {
              var li = that.selectpicker.main.data[i];

              if (!cache[i]) {
                cache[i] = stringSearch(li, q, searchStyle, normalizeSearch);
              }

              if (cache[i] && li.headerIndex !== undefined && cacheArr.indexOf(li.headerIndex) === -1) {
                if (li.headerIndex > 0) {
                  cache[li.headerIndex - 1] = true;
                  cacheArr.push(li.headerIndex - 1);
                }

                cache[li.headerIndex] = true;
                cacheArr.push(li.headerIndex);
                cache[li.lastIndex + 1] = true;
              }

              if (cache[i] && li.type !== 'optgroup-label') cacheArr.push(i);
            }

            for (var i = 0, cacheLen = cacheArr.length; i < cacheLen; i++) {
              var index = cacheArr[i],
                  prevIndex = cacheArr[i - 1],
                  li = that.selectpicker.main.data[index],
                  liPrev = that.selectpicker.main.data[prevIndex];

              if (li.type !== 'divider' || li.type === 'divider' && liPrev && liPrev.type !== 'divider' && cacheLen - 1 !== i) {
                that.selectpicker.search.data.push(li);
                searchMatch.push(that.selectpicker.main.elements[index]);
              }
            }

            that.activeIndex = undefined;
            that.noScroll = true;
            that.$menuInner.scrollTop(0);
            that.selectpicker.search.elements = searchMatch;
            that.createView(true);
            showNoResults.call(that, searchMatch, searchValue);
          } else if (that.selectpicker.search.previousValue) {
            // for IE11 (#2402)
            that.$menuInner.scrollTop(0);
            that.createView(false);
          }

          that.selectpicker.search.previousValue = searchValue;
        });
      },
      _searchStyle: function () {
        return this.options.liveSearchStyle || 'contains';
      },
      val: function (value) {
        var element = this.$element[0];

        if (typeof value !== 'undefined') {
          var prevValue = getSelectValues(element);
          changedArguments = [null, null, prevValue];
          this.$element.val(value).trigger('changed' + EVENT_KEY, changedArguments);

          if (this.$newElement.hasClass(classNames.SHOW)) {
            if (this.multiple) {
              this.setOptionStatus(true);
            } else {
              var liSelectedIndex = (element.options[element.selectedIndex] || {}).liIndex;

              if (typeof liSelectedIndex === 'number') {
                this.setSelected(this.selectedIndex, false);
                this.setSelected(liSelectedIndex, true);
              }
            }
          }

          this.render();
          changedArguments = null;
          return this.$element;
        } else {
          return this.$element.val();
        }
      },
      changeAll: function (status) {
        if (!this.multiple) return;
        if (typeof status === 'undefined') status = true;
        var element = this.$element[0],
            previousSelected = 0,
            currentSelected = 0,
            prevValue = getSelectValues(element);
        element.classList.add('bs-select-hidden');

        for (var i = 0, data = this.selectpicker.current.data, len = data.length; i < len; i++) {
          var liData = data[i],
              option = liData.option;

          if (option && !liData.disabled && liData.type !== 'divider') {
            if (liData.selected) previousSelected++;
            option.selected = status;
            if (status === true) currentSelected++;
          }
        }

        element.classList.remove('bs-select-hidden');
        if (previousSelected === currentSelected) return;
        this.setOptionStatus();
        changedArguments = [null, null, prevValue];
        this.$element.triggerNative('change');
      },
      selectAll: function () {
        return this.changeAll(true);
      },
      deselectAll: function () {
        return this.changeAll(false);
      },
      toggle: function (e) {
        e = e || window.event;
        if (e) e.stopPropagation();
        this.$button.trigger('click.bs.dropdown.data-api');
      },
      keydown: function (e) {
        var $this = $(this),
            isToggle = $this.hasClass('dropdown-toggle'),
            $parent = isToggle ? $this.closest('.dropdown') : $this.closest(Selector.MENU),
            that = $parent.data('this'),
            $items = that.findLis(),
            index,
            isActive,
            liActive,
            activeLi,
            offset,
            updateScroll = false,
            downOnTab = e.which === keyCodes.TAB && !isToggle && !that.options.selectOnTab,
            isArrowKey = REGEXP_ARROW.test(e.which) || downOnTab,
            scrollTop = that.$menuInner[0].scrollTop,
            isVirtual = that.isVirtual(),
            position0 = isVirtual === true ? that.selectpicker.view.position0 : 0; // do nothing if a function key is pressed

        if (e.which >= 112 && e.which <= 123) return;
        isActive = that.$newElement.hasClass(classNames.SHOW);

        if (!isActive && (isArrowKey || e.which >= 48 && e.which <= 57 || e.which >= 96 && e.which <= 105 || e.which >= 65 && e.which <= 90)) {
          that.$button.trigger('click.bs.dropdown.data-api');

          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
            return;
          }
        }

        if (e.which === keyCodes.ESCAPE && isActive) {
          e.preventDefault();
          that.$button.trigger('click.bs.dropdown.data-api').trigger('focus');
        }

        if (isArrowKey) {
          // if up or down
          if (!$items.length) return;
          liActive = that.selectpicker.main.elements[that.activeIndex];
          index = liActive ? Array.prototype.indexOf.call(liActive.parentElement.children, liActive) : -1;

          if (index !== -1) {
            that.defocusItem(liActive);
          }

          if (e.which === keyCodes.ARROW_UP) {
            // up
            if (index !== -1) index--;
            if (index + position0 < 0) index += $items.length;

            if (!that.selectpicker.view.canHighlight[index + position0]) {
              index = that.selectpicker.view.canHighlight.slice(0, index + position0).lastIndexOf(true) - position0;
              if (index === -1) index = $items.length - 1;
            }
          } else if (e.which === keyCodes.ARROW_DOWN || downOnTab) {
            // down
            index++;
            if (index + position0 >= that.selectpicker.view.canHighlight.length) index = that.selectpicker.view.firstHighlightIndex;

            if (!that.selectpicker.view.canHighlight[index + position0]) {
              index = index + 1 + that.selectpicker.view.canHighlight.slice(index + position0 + 1).indexOf(true);
            }
          }

          e.preventDefault();
          var liActiveIndex = position0 + index;

          if (e.which === keyCodes.ARROW_UP) {
            // up
            // scroll to bottom and highlight last option
            if (position0 === 0 && index === $items.length - 1) {
              that.$menuInner[0].scrollTop = that.$menuInner[0].scrollHeight;
              liActiveIndex = that.selectpicker.current.elements.length - 1;
            } else {
              activeLi = that.selectpicker.current.data[liActiveIndex];
              offset = activeLi.position - activeLi.height;
              updateScroll = offset < scrollTop;
            }
          } else if (e.which === keyCodes.ARROW_DOWN || downOnTab) {
            // down
            // scroll to top and highlight first option
            if (index === that.selectpicker.view.firstHighlightIndex) {
              that.$menuInner[0].scrollTop = 0;
              liActiveIndex = that.selectpicker.view.firstHighlightIndex;
            } else {
              activeLi = that.selectpicker.current.data[liActiveIndex];
              offset = activeLi.position - that.sizeInfo.menuInnerHeight;
              updateScroll = offset > scrollTop;
            }
          }

          liActive = that.selectpicker.current.elements[liActiveIndex];
          that.activeIndex = that.selectpicker.current.data[liActiveIndex].index;
          that.focusItem(liActive);
          that.selectpicker.view.currentActive = liActive;
          if (updateScroll) that.$menuInner[0].scrollTop = offset;

          if (that.options.liveSearch) {
            that.$searchbox.trigger('focus');
          } else {
            $this.trigger('focus');
          }
        } else if (!$this.is('input') && !REGEXP_TAB_OR_ESCAPE.test(e.which) || e.which === keyCodes.SPACE && that.selectpicker.keydown.keyHistory) {
          var searchMatch,
              matches = [],
              keyHistory;
          e.preventDefault();
          that.selectpicker.keydown.keyHistory += keyCodeMap[e.which];
          if (that.selectpicker.keydown.resetKeyHistory.cancel) clearTimeout(that.selectpicker.keydown.resetKeyHistory.cancel);
          that.selectpicker.keydown.resetKeyHistory.cancel = that.selectpicker.keydown.resetKeyHistory.start();
          keyHistory = that.selectpicker.keydown.keyHistory; // if all letters are the same, set keyHistory to just the first character when searching

          if (/^(.)\1+$/.test(keyHistory)) {
            keyHistory = keyHistory.charAt(0);
          } // find matches


          for (var i = 0; i < that.selectpicker.current.data.length; i++) {
            var li = that.selectpicker.current.data[i],
                hasMatch;
            hasMatch = stringSearch(li, keyHistory, 'startsWith', true);

            if (hasMatch && that.selectpicker.view.canHighlight[i]) {
              matches.push(li.index);
            }
          }

          if (matches.length) {
            var matchIndex = 0;
            $items.removeClass('active').find('a').removeClass('active'); // either only one key has been pressed or they are all the same key

            if (keyHistory.length === 1) {
              matchIndex = matches.indexOf(that.activeIndex);

              if (matchIndex === -1 || matchIndex === matches.length - 1) {
                matchIndex = 0;
              } else {
                matchIndex++;
              }
            }

            searchMatch = matches[matchIndex];
            activeLi = that.selectpicker.main.data[searchMatch];

            if (scrollTop - activeLi.position > 0) {
              offset = activeLi.position - activeLi.height;
              updateScroll = true;
            } else {
              offset = activeLi.position - that.sizeInfo.menuInnerHeight; // if the option is already visible at the current scroll position, just keep it the same

              updateScroll = activeLi.position > scrollTop + that.sizeInfo.menuInnerHeight;
            }

            liActive = that.selectpicker.main.elements[searchMatch];
            that.activeIndex = matches[matchIndex];
            that.focusItem(liActive);
            if (liActive) liActive.firstChild.focus();
            if (updateScroll) that.$menuInner[0].scrollTop = offset;
            $this.trigger('focus');
          }
        } // Select focused option if "Enter", "Spacebar" or "Tab" (when selectOnTab is true) are pressed inside the menu.


        if (isActive && (e.which === keyCodes.SPACE && !that.selectpicker.keydown.keyHistory || e.which === keyCodes.ENTER || e.which === keyCodes.TAB && that.options.selectOnTab)) {
          if (e.which !== keyCodes.SPACE) e.preventDefault();

          if (!that.options.liveSearch || e.which !== keyCodes.SPACE) {
            that.$menuInner.find('.active a').trigger('click', true); // retain active class

            $this.trigger('focus');

            if (!that.options.liveSearch) {
              // Prevent screen from scrolling if the user hits the spacebar
              e.preventDefault(); // Fixes spacebar selection of dropdown items in FF & IE

              $(document).data('spaceSelect', true);
            }
          }
        }
      },
      mobile: function () {
        // ensure mobile is set to true if mobile function is called after init
        this.options.mobile = true;
        this.$element[0].classList.add('mobile-device');
      },
      refresh: function () {
        // update options if data attributes have been changed
        var config = $.extend({}, this.options, this.$element.data());
        this.options = config;
        this.checkDisabled();
        this.buildData();
        this.setStyle();
        this.render();
        this.buildList();
        this.setWidth();
        this.setSize(true);
        this.$element.trigger('refreshed' + EVENT_KEY);
      },
      hide: function () {
        this.$newElement.hide();
      },
      show: function () {
        this.$newElement.show();
      },
      remove: function () {
        this.$newElement.remove();
        this.$element.remove();
      },
      destroy: function () {
        this.$newElement.before(this.$element).remove();

        if (this.$bsContainer) {
          this.$bsContainer.remove();
        } else {
          this.$menu.remove();
        }

        if (this.selectpicker.view.titleOption && this.selectpicker.view.titleOption.parentNode) {
          this.selectpicker.view.titleOption.parentNode.removeChild(this.selectpicker.view.titleOption);
        }

        this.$element.off(EVENT_KEY).removeData('selectpicker').removeClass('bs-select-hidden selectpicker');
        $(window).off(EVENT_KEY + '.' + this.selectId);
      }
    }; // SELECTPICKER PLUGIN DEFINITION
    // ==============================

    function Plugin(option) {
      // get the args of the outer function..
      var args = arguments; // The arguments of the function are explicitly re-defined from the argument list, because the shift causes them
      // to get lost/corrupted in android 2.3 and IE9 #715 #775

      var _option = option;
      [].shift.apply(args); // if the version was not set successfully

      if (!version.success) {
        // try to retreive it again
        try {
          version.full = ($.fn.dropdown.Constructor.VERSION || '').split(' ')[0].split('.');
        } catch (err) {
          // fall back to use BootstrapVersion if set
          if (Selectpicker.BootstrapVersion) {
            version.full = Selectpicker.BootstrapVersion.split(' ')[0].split('.');
          } else {
            version.full = [version.major, '0', '0'];
            console.warn('There was an issue retrieving Bootstrap\'s version. ' + 'Ensure Bootstrap is being loaded before bootstrap-select and there is no namespace collision. ' + 'If loading Bootstrap asynchronously, the version may need to be manually specified via $.fn.selectpicker.Constructor.BootstrapVersion.', err);
          }
        }

        version.major = version.full[0];
        version.success = true;
      }

      if (version.major === '4') {
        // some defaults need to be changed if using Bootstrap 4
        // check to see if they have already been manually changed before forcing them to update
        var toUpdate = [];
        if (Selectpicker.DEFAULTS.style === classNames.BUTTONCLASS) toUpdate.push({
          name: 'style',
          className: 'BUTTONCLASS'
        });
        if (Selectpicker.DEFAULTS.iconBase === classNames.ICONBASE) toUpdate.push({
          name: 'iconBase',
          className: 'ICONBASE'
        });
        if (Selectpicker.DEFAULTS.tickIcon === classNames.TICKICON) toUpdate.push({
          name: 'tickIcon',
          className: 'TICKICON'
        });
        classNames.DIVIDER = 'dropdown-divider';
        classNames.SHOW = 'show';
        classNames.BUTTONCLASS = 'btn-light';
        classNames.POPOVERHEADER = 'popover-header';
        classNames.ICONBASE = '';
        classNames.TICKICON = 'bs-ok-default';

        for (var i = 0; i < toUpdate.length; i++) {
          var option = toUpdate[i];
          Selectpicker.DEFAULTS[option.name] = classNames[option.className];
        }
      }

      var value;
      var chain = this.each(function () {
        var $this = $(this);

        if ($this.is('select')) {
          var data = $this.data('selectpicker'),
              options = typeof _option == 'object' && _option;

          if (!data) {
            var dataAttributes = $this.data();

            for (var dataAttr in dataAttributes) {
              if (Object.prototype.hasOwnProperty.call(dataAttributes, dataAttr) && $.inArray(dataAttr, DISALLOWED_ATTRIBUTES) !== -1) {
                delete dataAttributes[dataAttr];
              }
            }

            var config = $.extend({}, Selectpicker.DEFAULTS, $.fn.selectpicker.defaults || {}, dataAttributes, options);
            config.template = $.extend({}, Selectpicker.DEFAULTS.template, $.fn.selectpicker.defaults ? $.fn.selectpicker.defaults.template : {}, dataAttributes.template, options.template);
            $this.data('selectpicker', data = new Selectpicker(this, config));
          } else if (options) {
            for (var i in options) {
              if (Object.prototype.hasOwnProperty.call(options, i)) {
                data.options[i] = options[i];
              }
            }
          }

          if (typeof _option == 'string') {
            if (data[_option] instanceof Function) {
              value = data[_option].apply(data, args);
            } else {
              value = data.options[_option];
            }
          }
        }
      });

      if (typeof value !== 'undefined') {
        // noinspection JSUnusedAssignment
        return value;
      } else {
        return chain;
      }
    }

    var old = $.fn.selectpicker;
    $.fn.selectpicker = Plugin;
    $.fn.selectpicker.Constructor = Selectpicker; // SELECTPICKER NO CONFLICT
    // ========================

    $.fn.selectpicker.noConflict = function () {
      $.fn.selectpicker = old;
      return this;
    }; // get Bootstrap's keydown event handler for either Bootstrap 4 or Bootstrap 3


    function keydownHandler() {
      if ($.fn.dropdown) {
        // wait to define until function is called in case Bootstrap isn't loaded yet
        var bootstrapKeydown = $.fn.dropdown.Constructor._dataApiKeydownHandler || $.fn.dropdown.Constructor.prototype.keydown;
        return bootstrapKeydown.apply(this, arguments);
      }
    }

    $(document).off('keydown.bs.dropdown.data-api').on('keydown.bs.dropdown.data-api', ':not(.bootstrap-select) > [data-toggle="dropdown"]', keydownHandler).on('keydown.bs.dropdown.data-api', ':not(.bootstrap-select) > .dropdown-menu', keydownHandler).on('keydown' + EVENT_KEY, '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', Selectpicker.prototype.keydown).on('focusin.modal', '.bootstrap-select [data-toggle="dropdown"], .bootstrap-select [role="listbox"], .bootstrap-select .bs-searchbox input', function (e) {
      e.stopPropagation();
    }); // SELECTPICKER DATA-API
    // =====================

    $(window).on('load' + EVENT_KEY + '.data-api', function () {
      $('.selectpicker').each(function () {
        var $selectpicker = $(this);
        Plugin.call($selectpicker, $selectpicker.data());
      });
    });
  })(jQuery);
});
},{"jquery":"../node_modules/jquery/dist/jquery.js"}],"../node_modules/lz-string/libs/lz-string.js":[function(require,module,exports) {
var define;
// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>
// This work is free. You can redistribute it and/or modify it
// under the terms of the WTFPL, Version 2
// For more information see LICENSE.txt or http://www.wtfpl.net/
//
// For more information, the home page:
// http://pieroxy.net/blog/pages/lz-string/testing.html
//
// LZ-based compression algorithm, version 1.4.4
var LZString = (function() {

// private property
var f = String.fromCharCode;
var keyStrBase64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
var keyStrUriSafe = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$";
var baseReverseDic = {};

function getBaseValue(alphabet, character) {
  if (!baseReverseDic[alphabet]) {
    baseReverseDic[alphabet] = {};
    for (var i=0 ; i<alphabet.length ; i++) {
      baseReverseDic[alphabet][alphabet.charAt(i)] = i;
    }
  }
  return baseReverseDic[alphabet][character];
}

var LZString = {
  compressToBase64 : function (input) {
    if (input == null) return "";
    var res = LZString._compress(input, 6, function(a){return keyStrBase64.charAt(a);});
    switch (res.length % 4) { // To produce valid Base64
    default: // When could this happen ?
    case 0 : return res;
    case 1 : return res+"===";
    case 2 : return res+"==";
    case 3 : return res+"=";
    }
  },

  decompressFromBase64 : function (input) {
    if (input == null) return "";
    if (input == "") return null;
    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrBase64, input.charAt(index)); });
  },

  compressToUTF16 : function (input) {
    if (input == null) return "";
    return LZString._compress(input, 15, function(a){return f(a+32);}) + " ";
  },

  decompressFromUTF16: function (compressed) {
    if (compressed == null) return "";
    if (compressed == "") return null;
    return LZString._decompress(compressed.length, 16384, function(index) { return compressed.charCodeAt(index) - 32; });
  },

  //compress into uint8array (UCS-2 big endian format)
  compressToUint8Array: function (uncompressed) {
    var compressed = LZString.compress(uncompressed);
    var buf=new Uint8Array(compressed.length*2); // 2 bytes per character

    for (var i=0, TotalLen=compressed.length; i<TotalLen; i++) {
      var current_value = compressed.charCodeAt(i);
      buf[i*2] = current_value >>> 8;
      buf[i*2+1] = current_value % 256;
    }
    return buf;
  },

  //decompress from uint8array (UCS-2 big endian format)
  decompressFromUint8Array:function (compressed) {
    if (compressed===null || compressed===undefined){
        return LZString.decompress(compressed);
    } else {
        var buf=new Array(compressed.length/2); // 2 bytes per character
        for (var i=0, TotalLen=buf.length; i<TotalLen; i++) {
          buf[i]=compressed[i*2]*256+compressed[i*2+1];
        }

        var result = [];
        buf.forEach(function (c) {
          result.push(f(c));
        });
        return LZString.decompress(result.join(''));

    }

  },


  //compress into a string that is already URI encoded
  compressToEncodedURIComponent: function (input) {
    if (input == null) return "";
    return LZString._compress(input, 6, function(a){return keyStrUriSafe.charAt(a);});
  },

  //decompress from an output of compressToEncodedURIComponent
  decompressFromEncodedURIComponent:function (input) {
    if (input == null) return "";
    if (input == "") return null;
    input = input.replace(/ /g, "+");
    return LZString._decompress(input.length, 32, function(index) { return getBaseValue(keyStrUriSafe, input.charAt(index)); });
  },

  compress: function (uncompressed) {
    return LZString._compress(uncompressed, 16, function(a){return f(a);});
  },
  _compress: function (uncompressed, bitsPerChar, getCharFromInt) {
    if (uncompressed == null) return "";
    var i, value,
        context_dictionary= {},
        context_dictionaryToCreate= {},
        context_c="",
        context_wc="",
        context_w="",
        context_enlargeIn= 2, // Compensate for the first entry which should not count
        context_dictSize= 3,
        context_numBits= 2,
        context_data=[],
        context_data_val=0,
        context_data_position=0,
        ii;

    for (ii = 0; ii < uncompressed.length; ii += 1) {
      context_c = uncompressed.charAt(ii);
      if (!Object.prototype.hasOwnProperty.call(context_dictionary,context_c)) {
        context_dictionary[context_c] = context_dictSize++;
        context_dictionaryToCreate[context_c] = true;
      }

      context_wc = context_w + context_c;
      if (Object.prototype.hasOwnProperty.call(context_dictionary,context_wc)) {
        context_w = context_wc;
      } else {
        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
          if (context_w.charCodeAt(0)<256) {
            for (i=0 ; i<context_numBits ; i++) {
              context_data_val = (context_data_val << 1);
              if (context_data_position == bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
            }
            value = context_w.charCodeAt(0);
            for (i=0 ; i<8 ; i++) {
              context_data_val = (context_data_val << 1) | (value&1);
              if (context_data_position == bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
          } else {
            value = 1;
            for (i=0 ; i<context_numBits ; i++) {
              context_data_val = (context_data_val << 1) | value;
              if (context_data_position ==bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = 0;
            }
            value = context_w.charCodeAt(0);
            for (i=0 ; i<16 ; i++) {
              context_data_val = (context_data_val << 1) | (value&1);
              if (context_data_position == bitsPerChar-1) {
                context_data_position = 0;
                context_data.push(getCharFromInt(context_data_val));
                context_data_val = 0;
              } else {
                context_data_position++;
              }
              value = value >> 1;
            }
          }
          context_enlargeIn--;
          if (context_enlargeIn == 0) {
            context_enlargeIn = Math.pow(2, context_numBits);
            context_numBits++;
          }
          delete context_dictionaryToCreate[context_w];
        } else {
          value = context_dictionary[context_w];
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }


        }
        context_enlargeIn--;
        if (context_enlargeIn == 0) {
          context_enlargeIn = Math.pow(2, context_numBits);
          context_numBits++;
        }
        // Add wc to the dictionary.
        context_dictionary[context_wc] = context_dictSize++;
        context_w = String(context_c);
      }
    }

    // Output the code for w.
    if (context_w !== "") {
      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate,context_w)) {
        if (context_w.charCodeAt(0)<256) {
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
          }
          value = context_w.charCodeAt(0);
          for (i=0 ; i<8 ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
        } else {
          value = 1;
          for (i=0 ; i<context_numBits ; i++) {
            context_data_val = (context_data_val << 1) | value;
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = 0;
          }
          value = context_w.charCodeAt(0);
          for (i=0 ; i<16 ; i++) {
            context_data_val = (context_data_val << 1) | (value&1);
            if (context_data_position == bitsPerChar-1) {
              context_data_position = 0;
              context_data.push(getCharFromInt(context_data_val));
              context_data_val = 0;
            } else {
              context_data_position++;
            }
            value = value >> 1;
          }
        }
        context_enlargeIn--;
        if (context_enlargeIn == 0) {
          context_enlargeIn = Math.pow(2, context_numBits);
          context_numBits++;
        }
        delete context_dictionaryToCreate[context_w];
      } else {
        value = context_dictionary[context_w];
        for (i=0 ; i<context_numBits ; i++) {
          context_data_val = (context_data_val << 1) | (value&1);
          if (context_data_position == bitsPerChar-1) {
            context_data_position = 0;
            context_data.push(getCharFromInt(context_data_val));
            context_data_val = 0;
          } else {
            context_data_position++;
          }
          value = value >> 1;
        }


      }
      context_enlargeIn--;
      if (context_enlargeIn == 0) {
        context_enlargeIn = Math.pow(2, context_numBits);
        context_numBits++;
      }
    }

    // Mark the end of the stream
    value = 2;
    for (i=0 ; i<context_numBits ; i++) {
      context_data_val = (context_data_val << 1) | (value&1);
      if (context_data_position == bitsPerChar-1) {
        context_data_position = 0;
        context_data.push(getCharFromInt(context_data_val));
        context_data_val = 0;
      } else {
        context_data_position++;
      }
      value = value >> 1;
    }

    // Flush the last char
    while (true) {
      context_data_val = (context_data_val << 1);
      if (context_data_position == bitsPerChar-1) {
        context_data.push(getCharFromInt(context_data_val));
        break;
      }
      else context_data_position++;
    }
    return context_data.join('');
  },

  decompress: function (compressed) {
    if (compressed == null) return "";
    if (compressed == "") return null;
    return LZString._decompress(compressed.length, 32768, function(index) { return compressed.charCodeAt(index); });
  },

  _decompress: function (length, resetValue, getNextValue) {
    var dictionary = [],
        next,
        enlargeIn = 4,
        dictSize = 4,
        numBits = 3,
        entry = "",
        result = [],
        i,
        w,
        bits, resb, maxpower, power,
        c,
        data = {val:getNextValue(0), position:resetValue, index:1};

    for (i = 0; i < 3; i += 1) {
      dictionary[i] = i;
    }

    bits = 0;
    maxpower = Math.pow(2,2);
    power=1;
    while (power!=maxpower) {
      resb = data.val & data.position;
      data.position >>= 1;
      if (data.position == 0) {
        data.position = resetValue;
        data.val = getNextValue(data.index++);
      }
      bits |= (resb>0 ? 1 : 0) * power;
      power <<= 1;
    }

    switch (next = bits) {
      case 0:
          bits = 0;
          maxpower = Math.pow(2,8);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
        c = f(bits);
        break;
      case 1:
          bits = 0;
          maxpower = Math.pow(2,16);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
        c = f(bits);
        break;
      case 2:
        return "";
    }
    dictionary[3] = c;
    w = c;
    result.push(c);
    while (true) {
      if (data.index > length) {
        return "";
      }

      bits = 0;
      maxpower = Math.pow(2,numBits);
      power=1;
      while (power!=maxpower) {
        resb = data.val & data.position;
        data.position >>= 1;
        if (data.position == 0) {
          data.position = resetValue;
          data.val = getNextValue(data.index++);
        }
        bits |= (resb>0 ? 1 : 0) * power;
        power <<= 1;
      }

      switch (c = bits) {
        case 0:
          bits = 0;
          maxpower = Math.pow(2,8);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }

          dictionary[dictSize++] = f(bits);
          c = dictSize-1;
          enlargeIn--;
          break;
        case 1:
          bits = 0;
          maxpower = Math.pow(2,16);
          power=1;
          while (power!=maxpower) {
            resb = data.val & data.position;
            data.position >>= 1;
            if (data.position == 0) {
              data.position = resetValue;
              data.val = getNextValue(data.index++);
            }
            bits |= (resb>0 ? 1 : 0) * power;
            power <<= 1;
          }
          dictionary[dictSize++] = f(bits);
          c = dictSize-1;
          enlargeIn--;
          break;
        case 2:
          return result.join('');
      }

      if (enlargeIn == 0) {
        enlargeIn = Math.pow(2, numBits);
        numBits++;
      }

      if (dictionary[c]) {
        entry = dictionary[c];
      } else {
        if (c === dictSize) {
          entry = w + w.charAt(0);
        } else {
          return null;
        }
      }
      result.push(entry);

      // Add w+entry[0] to the dictionary.
      dictionary[dictSize++] = w + entry.charAt(0);
      enlargeIn--;

      w = entry;

      if (enlargeIn == 0) {
        enlargeIn = Math.pow(2, numBits);
        numBits++;
      }

    }
  }
};
  return LZString;
})();

if (typeof define === 'function' && define.amd) {
  define(function () { return LZString; });
} else if( typeof module !== 'undefined' && module != null ) {
  module.exports = LZString
}

},{}],"ts/botTypes.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BotSize = exports.BotImmunity = exports.BotCategory = void 0;
var BotCategory;

(function (BotCategory) {
  BotCategory["Alien"] = "Alien";
  BotCategory["Architect"] = "Architect";
  BotCategory["Derelict"] = "Derelict";
  BotCategory["Drone"] = "Drone";
  BotCategory["Exiles"] = "Exiles";
  BotCategory["Prototype"] = "Prototype";
  BotCategory["Redacted"] = "Redacted";
  BotCategory["Spoilers"] = "Spoilers";
  BotCategory["OB10"] = "0b10";
  BotCategory["Warlord"] = "Warlord";
  BotCategory["Zhirov"] = "Zhirov";
  BotCategory["Zionite"] = "Zionite";
})(BotCategory = exports.BotCategory || (exports.BotCategory = {}));

var BotImmunity;

(function (BotImmunity) {
  BotImmunity["Coring"] = "Coring";
  BotImmunity["Criticals"] = "Criticals";
  BotImmunity["Dismemberment"] = "Dismemberment";
  BotImmunity["Disruption"] = "Disruption";
  BotImmunity["Hacking"] = "Hacking";
  BotImmunity["Jamming"] = "Jamming";
  BotImmunity["Meltdown"] = "Meltdown";
})(BotImmunity = exports.BotImmunity || (exports.BotImmunity = {}));

var BotSize;

(function (BotSize) {
  BotSize["Huge"] = "Huge";
  BotSize["Large"] = "Large";
  BotSize["Medium"] = "Medium";
  BotSize["Small"] = "Small";
  BotSize["Tiny"] = "Tiny";
})(BotSize = exports.BotSize || (exports.BotSize = {}));
},{}],"ts/simulatorCalcs.ts":[function(require,module,exports) {
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.spectrumToNumber = exports.simulateCombat = exports.getRangedVolleyTime = exports.getRegen = exports.getRecoil = exports.getBotDefensiveState = exports.calculateResistDamage = exports.volleyTimeMap = exports.maxVolleys = void 0; // Battle simulation calculation functions/constants

const botTypes_1 = require("./botTypes");

const common_1 = require("./common");

const itemTypes_1 = require("./itemTypes");

const minAccuracy = 10;
const maxRangedAccuracy = 95;
const maxMeleeAccuracy = 100;
exports.maxVolleys = 100000; // Array of damage reducing parts to sort
// 11. Apply the first and only first defense applicable from the
// following list: phase wall, 75% personal shield (VFP etc),
// Force Field, Shield Generator, stasis bubble, active Stasis Trap,
// Remote Shield, 50% remote shield (Energy Mantle etc.), Hardlight Generator.

const damageReductionSortOrder = ["Phase Wall", "Vortex Field Projector", "7V-RTL'S Ultimate Field", "Force Field", "Imp. Force Field", "Adv. Force Field", "Exp. Force Field", "Shield Generator", "Imp. Shield Generator", "Adv. Shield Generator", "Exp. Shield Generator", "Stasis Bubble", "Stasis Trap", "Remote Shield", "Imp. Remote Shield", "Remote Force Field", "Imp. Remote Force Field", "Energy Mantle", "Imp. Energy Mantle", "AEGIS Remote Shield"];
const externalDamageReductionMap = {
  "Remote Shield": 0.75,
  "Stasis Trap": 0.75,
  "Phase Wall": 0.5,
  "Remote Force Field": 0.5,
  "Stasis Bubble": 0.5
}; // Array of force booster accuracy penalties

const forceBoosterAccuracyPenalty = [4, 6, 8]; // Array of melee analysis accuracy increases

const meleeAnalysisAccuracy = [5, 6, 8, 12]; // Map of spectrum values to engine explosion chance

const spectrumMap = {
  "Wide (10)": 10,
  "Intermediate (30)": 30,
  "Narrow (50)": 50,
  "Fine (100)": 100
};
const categoryAntimissile = 0;
const categoryAvoid = 1;
const categoryCorruptionIgnore = 2;
const categoryDamageReduction = 3;
const categoryResist = 4;
const categoryRangedAvoid = 5;
const categorySelfDamageReduction = 6;
const categoryShielding = 7;
const specialItems = {
  // Antimissile, chance to shoot down launcher projectiles per tile
  "Point Defense System": {
    category: categoryAntimissile,
    chance: 8
  },
  "Point Defense Array": {
    category: categoryAntimissile,
    chance: 16
  },
  "Antimissile System": {
    category: categoryAntimissile,
    chance: 24
  },
  // Avoid, - all weapon accuracy
  "Maneuvering Thrusters": {
    category: categoryAvoid,
    legs: 3,
    other: 6
  },
  "Imp. Maneuvering Thrusters": {
    category: categoryAvoid,
    legs: 5,
    other: 10
  },
  "Reaction Control System": {
    category: categoryAvoid,
    legs: 6,
    other: 12
  },
  "Adv. Reaction Control System": {
    category: categoryAvoid,
    legs: 7,
    other: 14
  },
  // Corruption ignore, % of ignoring corruption addition
  "Dynamic Insulation System": {
    category: categoryCorruptionIgnore,
    ignore: 50
  },
  "Imp. Dynamic Insulation System": {
    category: categoryCorruptionIgnore,
    ignore: 67
  },
  "Adv. Dynamic Insulation System": {
    category: categoryCorruptionIgnore,
    ignore: 75
  },
  // Damage reduction, (val * damage = reduced damage)
  "Adv. Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Exp. Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Imp. Remote Shield": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Imp. Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Remote Shield": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "Shield Generator": {
    category: categoryDamageReduction,
    reduction: 0.75
  },
  "AEGIS Remote Shield": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Adv. Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Exp. Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Energy Mantle": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Imp. Energy Mantle": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Imp. Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Imp. Remote Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "Remote Force Field": {
    category: categoryDamageReduction,
    reduction: 0.5
  },
  "7V-RTL's Ultimate Field": {
    category: categoryDamageReduction,
    reduction: 0.25
  },
  "Vortex Field Projector": {
    category: categoryDamageReduction,
    reduction: 0.25
  },
  // Resist, % of damage type resisted
  "Insulated Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 15
    }
  },
  "Med. Insulated Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 20
    }
  },
  "EM Shield": {
    category: categoryResist,
    resists: {
      electromagnetic: 25
    }
  },
  "Hvy. Insulated Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 30
    }
  },
  "EM Disruption": {
    category: categoryResist,
    resists: {
      electromagnetic: 50
    }
  },
  "EM Dispersion": {
    category: categoryResist,
    resists: {
      electromagnetic: 75
    }
  },
  "Damper Plating": {
    category: categoryResist,
    resists: {
      electromagnetic: 90
    }
  },
  "8R-AWN's Armor/EX": {
    category: categoryResist,
    resists: {
      explosive: 90
    }
  },
  "Shock Absorption System": {
    category: categoryResist,
    resists: {
      explosive: 25
    }
  },
  "Imp. Shock Absorption System": {
    category: categoryResist,
    resists: {
      explosive: 50
    }
  },
  "Exp. Shock Absorption System": {
    category: categoryResist,
    resists: {
      explosive: 75
    }
  },
  "Mak. Kinetic Plating": {
    category: categoryResist,
    resists: {
      kinetic: 20
    }
  },
  "Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 20
    }
  },
  "Reactive Plating": {
    category: categoryResist,
    resists: {
      kinetic: 20
    }
  },
  "Imp. Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 25
    }
  },
  "Adv. Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 30
    }
  },
  "Exp. Focal Shield": {
    category: categoryResist,
    resists: {
      kinetic: 30
    }
  },
  "Med. Reactive Plating": {
    category: categoryResist,
    resists: {
      kinetic: 30
    }
  },
  "Hvy. Reactive Plating": {
    category: categoryResist,
    resists: {
      kinetic: 40
    }
  },
  "8R-AWN's Armor/TH": {
    category: categoryResist,
    resists: {
      thermal: 90
    }
  },
  "Mak. Thermal Plating": {
    category: categoryResist,
    resists: {
      thermal: 10
    }
  },
  "Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 20
    }
  },
  "Reflective Plating": {
    category: categoryResist,
    resists: {
      thermal: 10
    }
  },
  "Med. Reflective Plating": {
    category: categoryResist,
    resists: {
      thermal: 15
    }
  },
  "Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 20
    }
  },
  "Imp. Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 25
    }
  },
  "Imp. Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 25
    }
  },
  "Hvy. Reflective Plating": {
    category: categoryResist,
    resists: {
      thermal: 25
    }
  },
  "Adv. Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Adv. Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Exp. Thermal Defense Suite": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Exp. Thermal Shield": {
    category: categoryResist,
    resists: {
      thermal: 30
    }
  },
  "Thermal Barrier": {
    category: categoryResist,
    resists: {
      thermal: 50
    }
  },
  "Beam Splitter": {
    category: categoryResist,
    resists: {
      thermal: 75
    }
  },
  "ME-RLN's Chromatic Screen": {
    category: categoryResist,
    resists: {
      electromagnetic: 20,
      explosive: 20,
      impact: 20,
      kinetic: 20,
      piercing: 20,
      slashing: 20,
      thermal: 20
    }
  },
  "Zio. Shade Carapace": {
    category: categoryResist,
    resists: {
      electromagnetic: 20,
      explosive: 20,
      impact: 20,
      kinetic: 20,
      piercing: 20,
      slashing: 20,
      thermal: 20
    }
  },
  "Zio. Shade Armor": {
    category: categoryResist,
    resists: {
      electromagnetic: 30,
      explosive: 30,
      impact: 30,
      kinetic: 30,
      piercing: 30,
      slashing: 30,
      thermal: 30
    }
  },
  // Ranged avoid, - ranged weapon accuracy
  "Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 5
  },
  "Imp. Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 10
  },
  "Adv. Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 15
  },
  "Exp. Phase Shifter": {
    category: categoryRangedAvoid,
    avoid: 20
  },
  // Self damage reduction, damage reduction (val * damage = reduced damage)
  "1C-UTU's Buckler": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Imp. Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Adv. Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  "Exp. Powered Armor": {
    category: categorySelfDamageReduction,
    reduction: 0.5
  },
  // Part shielding, contains slot and percent of damage blocked
  "Core Shielding": {
    category: categoryShielding,
    slot: "Core",
    percent: 0.2
  },
  "Imp. Core Shielding": {
    category: categoryShielding,
    slot: "Core",
    percent: 0.3
  },
  "Exp. Core Shielding": {
    category: categoryShielding,
    slot: "Core",
    percent: 0.4
  },
  "Power Shielding": {
    category: categoryShielding,
    slot: "Power",
    percent: 0.33
  },
  "Imp. Power Shielding": {
    category: categoryShielding,
    slot: "Power",
    percent: 0.66
  },
  "Exp. Power Shielding": {
    category: categoryShielding,
    slot: "Power",
    percent: 0.9
  },
  "Propulsion Shielding": {
    category: categoryShielding,
    slot: "Propulsion",
    percent: 0.33
  },
  "Imp. Propulsion Shielding": {
    category: categoryShielding,
    slot: "Propulsion",
    percent: 0.66
  },
  "Exp. Propulsion Shielding": {
    category: categoryShielding,
    slot: "Propulsion",
    percent: 0.9
  },
  "Utility Shielding": {
    category: categoryShielding,
    slot: "Utility",
    percent: 0.33
  },
  "Imp. Utility Shielding": {
    category: categoryShielding,
    slot: "Utility",
    percent: 0.66
  },
  "Exp. Utility Shielding": {
    category: categoryShielding,
    slot: "Utility",
    percent: 0.9
  },
  "Weapon Shielding": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 0.33
  },
  "Imp. Weapon Shielding": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 0.66
  },
  "Exp. Weapon Shielding": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 0.9
  },
  "Zio. Weapon Casing": {
    category: categoryShielding,
    slot: "Weapon",
    percent: 1.0
  }
}; // Weapon number to base volley time map

exports.volleyTimeMap = {
  1: 200,
  2: 300,
  3: 325,
  4: 350,
  5: 375,
  6: 400
}; // Applies a final calculated damage value to a bot, splitting into chunks if necessary

function applyDamage(state, botState, damage, critical, armorAnalyzed, coreAnalyzed, disruptChance, spectrum, canOverflow, damageType) {
  const chunks = []; // Split into chunks each containing originalDamage for other calcs (10)

  if (damageType === itemTypes_1.DamageType.Explosive) {
    if (critical !== undefined) {
      throw "Explosive damage can't be a crit";
    } // Split explosive damage randomly into 1-3 chunks (8)
    // EX damage can never crit, ignore armor, disrupt, explicitly
    // target core, or have a spectrum
    // Note: The remainder from the division is explicitly thrown out


    const numChunks = common_1.randomInt(1, 3);

    for (let i = 0; i < numChunks; i++) {
      chunks.push({
        armorAnalyzed: false,
        critical: undefined,
        coreBonus: 0,
        damageType: damageType,
        disruptChance: 0,
        forceCore: false,
        originalDamage: Math.trunc(damage / numChunks),
        realDamage: 0,
        spectrum: 0
      });
    }
  } else {
    // Non-EX damage is done in a single chunk
    chunks.push({
      armorAnalyzed: armorAnalyzed,
      coreBonus: state.offensiveState.coreAnalyzerChance,
      critical: critical,
      damageType: damageType,
      disruptChance: disruptChance,
      forceCore: false,
      originalDamage: damage,
      realDamage: 0,
      spectrum: spectrum
    });
  } // Apply any additional damage reduction (11)


  const part = getDefensiveStatePart(botState.defensiveState.damageReduction);
  const multiplier = part != undefined ? part.reduction : 1;
  chunks.forEach(chunk => {
    chunk.realDamage = Math.trunc(chunk.originalDamage * multiplier);
  });

  function applyEngineExplosion(part) {
    if (part.def.slot !== "Power") {
      return;
    }

    const engine = part.def;

    if (engine.explosionDamageMax > 0 && engine.explosionType !== undefined) {
      // Apply engine explosion randomly as either 1 or 2 chunks
      const baseDamage = common_1.randomInt(engine.explosionDamageMin, engine.explosionDamageMax);
      const chunks = common_1.randomInt(1, 2) === 1 ? [baseDamage] : [Math.trunc(baseDamage / 2), Math.trunc(baseDamage / 2)];
      chunks.forEach(damage => {
        applyDamageChunk(0, damage, engine.explosionType, undefined, false, false, engine.explosionDisruption, spectrumToNumber(engine.explosionSpectrum), false);
      });
    }
  }

  function applyDamageChunk(coreBonus, damage, damageType, critical, isOverflow, forceCore, disruptChance, spectrum, armorAnalyzed) {
    // Determine hit part (14)
    const {
      part,
      partIndex
    } = getHitPart(botState, coreBonus, damageType, isOverflow, forceCore, armorAnalyzed);
    applyDamageChunkToPart(damage, damageType, critical, disruptChance, spectrum, part, partIndex);
  }

  function applyDamageChunkToPart(damage, damageType, critical, disruptChance, spectrum, part, partIndex) {
    function doesCriticalDestroyPart(critical) {
      if (critical === itemTypes_1.Critical.Destroy || critical === itemTypes_1.Critical.Smash) {
        return true;
      }

      return false;
    }

    function destroyPart(partIndex, part, overflowDamage, critical, damageType) {
      botState.parts.splice(partIndex, 1);
      botState.armorAnalyzedCoverage -= part.armorAnalyzedCoverage;
      botState.totalCoverage -= part.coverage; // If the part was providing any damage resistances remove them now

      if (part.resistances !== undefined) {
        Object.keys(part.resistances).forEach(type => {
          if (type in botState.resistances) {
            botState.resistances[type] -= part.resistances[type];
          }
        });
      }

      if (overflowDamage > 0 && !part.protection && canOverflow) {
        // Handle overflow damage if excess damage was dealt
        // against a non-protection part (19)
        applyDamageChunk(0, overflowDamage, damageType, undefined, true, false, 0, 0, false);
      }

      if (damageType === itemTypes_1.DamageType.Impact) {
        // Apply 25-150% random corruption to the bot after
        // destroying a part (affected by EM resistance) (23)
        let corruption = common_1.randomInt(25, 150);
        corruption = calculateResistDamage(botState, corruption, itemTypes_1.DamageType.Electromagnetic);
        botState.corruption += corruption;
      }

      part.integrity = 0;
      updateWeaponsAccuracy(state);
    } // Remove all criticals from totally immune bots


    if (critical !== undefined) {
      if (botState.immunities.includes(botTypes_1.BotImmunity.Criticals)) {
        critical = undefined;
      }
    } // Apply meltdown as immediate death unless immune


    if (critical === itemTypes_1.Critical.Meltdown && !botState.immunities.includes(botTypes_1.BotImmunity.Meltdown)) {
      botState.coreIntegrity = 0;
      return;
    } // Apply intensify damage doubling here
    else if (critical === itemTypes_1.Critical.Intensify) {
        damage *= 2.0;
      } // Apply impale damage doubling and add delay of 1 turn
      else if (critical === itemTypes_1.Critical.Impale) {
          damage *= 2.0;
          state.tus += 100;
        } // Apply detonate crit
        else if (critical === itemTypes_1.Critical.Detonate) {
            let i;

            for (i = 0; i < botState.parts.length; i++) {
              if (botState.parts[i].def.slot === "Power") {
                break;
              }
            } // Destroy first engine found (if any)
            // TODO apply explosion damage


            if (i < botState.parts.length) {
              const engine = botState.parts[i];
              destroyPart(i, engine, 0, undefined, itemTypes_1.DamageType.Entropic);
              applyEngineExplosion(engine);

              if (i === partIndex) {
                // If detonate exploded power we were targeting just exit
                return;
              }
            }
          } // Remove sever/sunder crit if target bot is immune
          else if ((critical === itemTypes_1.Critical.Sever || critical === itemTypes_1.Critical.Sunder) && botState.immunities.includes(botTypes_1.BotImmunity.Dismemberment)) {
              critical = undefined;
            } // Remove phase crit if bot is coring immune or has core shielding
            else if (critical === itemTypes_1.Critical.Phase && (botState.immunities.includes(botTypes_1.BotImmunity.Coring) || getShieldingType(botState, "Core") === undefined)) {
                critical = undefined;
              } // Handle core hit


    if (part === undefined) {
      // Try to get shielding
      const shielding = getShieldingType(botState, "Core"); // Remove crit types that apply to the core if immunity or shielding (15)

      if ((critical === itemTypes_1.Critical.Destroy || critical == itemTypes_1.Critical.Phase || critical == itemTypes_1.Critical.Smash || critical == itemTypes_1.Critical.Sunder || critical == itemTypes_1.Critical.Sever) && (botState.immunities.includes(botTypes_1.BotImmunity.Coring) || shielding !== undefined)) {
        critical = undefined;
      }

      if (shielding != undefined) {
        // Handle core shielding reduction
        // Note: shielding may absorb more damage than integrity
        const shieldingDamage = Math.trunc(shielding.reduction * damage);
        shielding.part.integrity -= shieldingDamage;
        damage = damage - shieldingDamage;
      }

      if (critical === itemTypes_1.Critical.Destroy || critical === itemTypes_1.Critical.Smash) {
        botState.coreIntegrity = 0;
      } else {
        botState.coreIntegrity -= damage;
      }

      if (botState.coreIntegrity === 0) {
        return;
      } // Apply disruption (18)
      // Core disruption only has 50% of the usual chance


      if (!botState.immunities.includes(botTypes_1.BotImmunity.Disruption) && common_1.randomInt(0, 99) < disruptChance / 2) {
        botState.coreDisrupted = true;
      } // Apply relevant criticals not yet applied
      // Apply sever/sunder crits to other parts


      if (critical === itemTypes_1.Critical.Sever || critical === itemTypes_1.Critical.Sunder) {
        const numParts = critical === itemTypes_1.Critical.Sunder ? common_1.randomInt(1, 2) : 1;

        for (let i = 0; i < numParts; i++) {
          const {
            part,
            partIndex
          } = getRandomNonCorePart(botState, undefined);

          if (part === undefined || getShieldingType(botState, part.def.slot) !== undefined) {
            // Shielding protects against sever/sunder completely
            continue;
          }

          if (part.def.size > 1) {
            // Parts taking 2 or more slots can't be removed via sever/sunder
            // Technically sever does a very minor amount of damage to the part
            // Even if it isn't removed, but it isn't worth worrying about
            continue;
          }

          destroyPart(partIndex, part, 0, undefined, itemTypes_1.DamageType.Phasic);
        }

        return;
      } else if (critical === itemTypes_1.Critical.Blast) {
        const {
          part,
          partIndex
        } = getRandomNonCorePart(botState, undefined);

        if (part === undefined || getShieldingType(botState, part.def.slot) !== undefined) {
          // Shielding protects against blast completely
          return;
        }

        if (part.def.size === 1) {
          // Single-slot items get blasted off, treat as part destruction
          destroyPart(partIndex, part, 0, undefined, itemTypes_1.DamageType.Phasic);
        } else {
          // Multi-slot items don't get blasted off but still take damage
          applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, part, partIndex);
        }
      } else if (critical === itemTypes_1.Critical.Phase) {
        // Apply phasing damage to another random part
        const {
          part,
          partIndex
        } = getRandomNonCorePart(botState, undefined);
        applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, part, partIndex);
      }

      return;
    } // Handle non-core hit
    // Try to get shielding for non-protection parts


    const shielding = part.def.type === itemTypes_1.ItemType.Protection ? undefined : getShieldingType(botState, part.def.slot); // Check for crit immunity or shielding (15)

    if (shielding !== undefined && doesCriticalDestroyPart(critical)) {
      critical = undefined;
    } // Check for spectrum engine explosion (17)
    // TODO apply damage


    const engineExplosion = part.def.slot === "Power" && common_1.randomInt(0, 99) < spectrum; // Protection can't get instantly destroyed, only receives 20% more damage

    if (doesCriticalDestroyPart(critical) && part.protection) {
      critical = undefined;
      damage = Math.trunc(1.2 * damage);
    } // Reduce damage for powered armor/siege mode (18)
    // TODO enemy siege mode


    if (part.selfDamageReduction !== 0) {
      damage = damage * Math.trunc(part.selfDamageReduction);
    } // Apply disruption (18)
    // TODO


    if (shielding != undefined) {
      // Handle slot shielding reduction
      // Note: shielding may absorb more damage than integrity
      const shieldingDamage = Math.trunc(shielding.reduction * damage);
      shielding.part.integrity -= shieldingDamage;
      damage = damage - shieldingDamage;
    }

    let destroyed = part.integrity <= damage || doesCriticalDestroyPart(critical) || engineExplosion; // Apply sever/sunder to instantly-remove (not destroy) part if it's a single slot and unshielded
    // Applied differently than other part destruction since this can't affect multislot
    // parts but can affect protection

    if (!destroyed && (critical === itemTypes_1.Critical.Sever || critical === itemTypes_1.Critical.Sunder) && part.def.size === 1 && shielding === undefined) {
      destroyed = true;
    }

    if (destroyed) {
      // Part destroyed, remove part and update bot state
      // Smash critical destroys the part instantly and deals full overflow damage
      const overflowDamage = critical === itemTypes_1.Critical.Smash ? damage : damage - part.integrity;
      destroyPart(partIndex, part, overflowDamage, critical, damageType);
    } else {
      // Part not destroyed, just reduce integrity
      part.integrity -= damage;
    } // Apply relevant criticals not yet applied


    const oldIndex = partIndex;

    if (critical === itemTypes_1.Critical.Blast) {
      const {
        part,
        partIndex
      } = getRandomNonCorePart(botState, destroyed ? oldIndex : undefined);

      if (part === undefined || shielding !== undefined) {
        // Shielding protects against blast completely
        return;
      }

      if (part.def.size === 1) {
        // Single-slot items get blasted off, treat as part destruction
        destroyPart(partIndex, part, 0, undefined, itemTypes_1.DamageType.Phasic);
      } else {
        // Multi-slot items don't get blasted off but still take damage
        applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, part, partIndex);
      }
    } else if (critical === itemTypes_1.Critical.Phase) {
      // Apply phasing damage to the core
      applyDamageChunkToPart(damage, itemTypes_1.DamageType.Phasic, undefined, 0, 0, undefined, -1);
    }

    if (engineExplosion) {
      applyEngineExplosion(part);
    }
  } // Apply damage


  chunks.forEach(chunk => {
    applyDamageChunk(chunk.coreBonus, chunk.realDamage, chunk.damageType, chunk.critical, false, chunk.forceCore, chunk.disruptChance, chunk.spectrum, chunk.armorAnalyzed); // Apply corruption (23)

    if (damageType === itemTypes_1.DamageType.Electromagnetic) {
      // Check for corruption ignore chance
      const corruptionIgnorePart = getDefensiveStatePart(botState.defensiveState.corruptionIgnore);
      const corruptCritical = critical === itemTypes_1.Critical.Corrupt && !botState.immunities.includes(botTypes_1.BotImmunity.Criticals);

      if (corruptionIgnorePart === undefined || common_1.randomInt(0, 99) >= corruptionIgnorePart.chance) {
        // Corruption critical always applies maximum 1.5 critical modifier
        const corruptionPercent = corruptCritical ? 1.5 : common_1.randomInt(50, 150) / 100;
        const corruption = chunk.originalDamage * corruptionPercent;
        botState.corruption += corruption;
      }
    }
  });
} // Returns a clone of a bot state
// This is not a deep copy, any fields that can be modified are deep-copied
// but immutable fields are not.


function cloneBotState(botState) {
  const resistances = {};
  Object.keys(botState.resistances).forEach(type => resistances[type] = botState.resistances[type]);
  const newState = {
    armorAnalyzedCoverage: botState.armorAnalyzedCoverage,
    coreCoverage: botState.coreCoverage,
    coreDisrupted: botState.coreDisrupted,
    coreIntegrity: botState.coreIntegrity,
    corruption: botState.corruption,
    def: botState.def,
    defensiveState: undefined,
    externalDamageReduction: botState.externalDamageReduction,
    immunities: botState.immunities,
    initialCoreIntegrity: botState.initialCoreIntegrity,
    parts: botState.parts.map(p => {
      return {
        armorAnalyzedCoverage: p.armorAnalyzedCoverage,
        coverage: p.coverage,
        def: p.def,
        integrity: p.integrity,
        protection: p.protection,
        selfDamageReduction: p.selfDamageReduction
      };
    }),
    regen: botState.regen,
    resistances: resistances,
    totalCoverage: botState.totalCoverage
  };
  newState.defensiveState = getBotDefensiveState(newState.parts, newState.externalDamageReduction);
  return newState;
} // Calculates the resisted damage for a bot given the initial damage value


function calculateResistDamage(botState, damage, damageType) {
  if (damageType in botState.resistances) {
    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
    return Math.trunc(damage * (1 - botState.resistances[damageType] / 100));
  }

  return damage;
}

exports.calculateResistDamage = calculateResistDamage; // Returns a bot's defensive state based on parts, also adds new relevant
// properties to parts

function getBotDefensiveState(parts, externalDamageReduction) {
  const state = {
    antimissile: [],
    avoid: [],
    corruptionIgnore: [],
    damageReduction: [],
    rangedAvoid: [],
    shieldings: {
      Core: [],
      Power: [],
      Propulsion: [],
      Utility: [],
      Weapon: []
    }
  };
  parts.forEach(part => {
    const name = part.def.name;
    const specialItem = specialItems[name];

    if (specialItem === undefined) {
      return;
    }

    if (specialItem.category === categoryAntimissile) {
      // Antimissile System-like part
      state.antimissile.push({
        chance: specialItem.chance,
        part: part
      });
    } else if (specialItem.category === categoryAvoid) {
      // Reaction Control System-like part
      // Leg/hover/flight determination done at accuracy update time
      state.avoid.push({
        legs: specialItem.legs,
        other: specialItem.other,
        part: part
      });
    } else if (specialItem.category === categoryCorruptionIgnore) {
      // Dynamic Insulation System
      state.corruptionIgnore.push({
        chance: specialItem.ignore,
        part: part
      });
    } else if (specialItem.category === categoryDamageReduction) {
      // Force field-like part
      state.damageReduction.push({
        part: part,
        reduction: specialItem.reduction
      });
    } else if (specialItem.category === categoryResist) {
      // Damage type resist part
      part.resistances = specialItem.resists;
    } else if (specialItem.category === categoryRangedAvoid) {
      // Phase Shifters
      state.rangedAvoid.push({
        avoid: specialItem.avoid,
        part: part
      });
    } else if (specialItem.category === categorySelfDamageReduction) {
      // Powered armor-like part
      part.selfDamageReduction = specialItem.reduction;
    } else if (specialItem.category === categoryShielding) {
      // Core/slot shielding
      state.shieldings[specialItem.slot].push({
        part: part,
        reduction: specialItem.percent
      });
    }
  }); // Sort damage reduction (11)

  if (externalDamageReduction in externalDamageReductionMap) {
    const reduction = externalDamageReductionMap[externalDamageReduction];

    if (state.damageReduction.length === 0) {
      // If no other damage reduction no need to sort
      state.damageReduction.push({
        reduction: reduction,
        part: {
          armorAnalyzedCoverage: 0,
          coverage: 0,
          def: undefined,
          integrity: 1,
          protection: false,
          selfDamageReduction: 0
        }
      });
    } else {
      const existingIndex = damageReductionSortOrder.indexOf(state.damageReduction[0].part.def.name);
      const newIndex = damageReductionSortOrder.indexOf(externalDamageReduction); // Use sort order to decide to insert before or after

      if (newIndex < existingIndex) {
        state.damageReduction.unshift({
          reduction: reduction,
          part: {
            armorAnalyzedCoverage: 0,
            coverage: 0,
            def: undefined,
            integrity: 1,
            protection: false,
            selfDamageReduction: 0
          }
        });
      } else {
        state.damageReduction.push({
          reduction: reduction,
          part: {
            armorAnalyzedCoverage: 0,
            coverage: 0,
            def: undefined,
            integrity: 1,
            protection: false,
            selfDamageReduction: 0
          }
        });
      }
    }
  } // All other parts should technically be sorted as well.
  // However, in game no bot ever has duplicate mixed-level defenses,
  // some have multiples of the same level like 2 base weapon shieldings on
  // Warbot which, but that doesn't require sorting anyways.


  return state;
}

exports.getBotDefensiveState = getBotDefensiveState; // Tries to get a bot defensive state part from an array
// Parts will be removed from the array if their integrity has dropped below 0

function getDefensiveStatePart(array) {
  let part = undefined;

  while (array.length > 0) {
    if (array[0].part.integrity > 0) {
      // Found a good part, use it here
      part = array[0];
      break;
    } else {
      // Found destroyed part, remove from array
      array.shift();
    }
  }

  return part;
} // Determines the part that was hit by an attack


function getHitPart(botState, coreBonus, damageType, isOverflow, forceCore, armorAnalyzed) {
  let part = undefined;
  let partIndex = -1;

  if (forceCore) {
    return {
      part: part,
      partIndex: partIndex
    };
  }

  if (damageType === itemTypes_1.DamageType.Impact) {
    // Impact damage targets core and all parts with equal probability
    const coverageHit = common_1.randomInt(0, botState.parts.length);

    if (coverageHit < botState.parts.length) {
      partIndex = coverageHit;
      part = botState.parts[partIndex];
    } else {// Keep part undefined for core hit
    }
  } else if (isOverflow) {
    const protectionParts = botState.parts.filter(p => p.protection && p.coverage > 0);

    if (protectionParts.length > 0) {
      // Handle overflow damage specially when there's armor,
      // overflow into a random armor piece based on coverage (20)
      let coverageHit = common_1.randomInt(0, protectionParts.reduce((prev, part) => prev + part.coverage, 0));

      for (let i = 0; i < protectionParts.length; i++) {
        coverageHit -= protectionParts[i].coverage;

        if (coverageHit < 0) {
          part = protectionParts[i];
          break;
        } // If it's a core hit we'll run through all parts and exit
        // the loop with part still equal to undefined

      }

      partIndex = botState.parts.indexOf(part);
    } // If no protection parts fall into standard coverage behavior

  } // Check to avoid rerolling an impact core hit


  if (part === undefined && damageType !== itemTypes_1.DamageType.Impact) {
    let totalCoverage = armorAnalyzed ? botState.armorAnalyzedCoverage : botState.totalCoverage;

    if (damageType == itemTypes_1.DamageType.Piercing) {
      // Not ideal to force this here because it means the user has to account for half_stack manually
      // Makes the UI very cluttered if we want to make the user choose all the possible combinations though
      coreBonus += 8;
    }

    if (coreBonus > 0) {
      // Apply any core exposure % increases
      totalCoverage -= botState.coreCoverage; // Cap boosted coverage at 99.9% to avoid wrapping around to giving a negative core bonus

      const coreCoveragePercentage = Math.min(botState.coreCoverage / botState.totalCoverage + coreBonus / 100, 0.999);
      const boostedCoreCoverage = totalCoverage * coreCoveragePercentage / (1 - coreCoveragePercentage);
      totalCoverage += boostedCoreCoverage;
    }

    let coverageHit = common_1.randomInt(0, totalCoverage - 1);

    for (partIndex = 0; partIndex < botState.parts.length; partIndex++) {
      // Subtract part's coverage to see if we got a hit
      coverageHit -= armorAnalyzed ? botState.parts[partIndex].armorAnalyzedCoverage : botState.parts[partIndex].coverage;

      if (coverageHit < 0) {
        part = botState.parts[partIndex];
        break;
      } // If it's a core hit we'll run through all parts and exit
      // the loop with part still equal to undefined

    }
  }

  return {
    part: part,
    partIndex: partIndex
  };
} // Gets a random (i.e. coverage-ignoring) non-core part, used for some crit effects


function getRandomNonCorePart(botState, ignoreIndex) {
  // Randomly target all parts, possibly excluding another specific index
  let partHit = common_1.randomInt(0, botState.parts.length - 1 - (ignoreIndex === undefined ? 0 : 1));

  if (ignoreIndex !== undefined && ignoreIndex > 0 && partHit >= ignoreIndex) {
    // Adjust the coverage index based on the ignored part
    partHit += 1;
  }

  if (partHit >= botState.parts.length) {
    return {
      part: undefined,
      partIndex: -1
    };
  }

  const part = botState.parts[partHit];
  return {
    part: part,
    partIndex: partHit
  };
} // Calculates a weapon's recoil based on the number of treads and other recoil reduction


function getRecoil(weaponDef, numTreads, recoilReduction) {
  let recoil = 0; // Add recoil if siege mode not active

  if (weaponDef.recoil !== undefined) {
    recoil += weaponDef.recoil;
    recoil -= numTreads;
    recoil -= recoilReduction;
  } // Make sure we don't have negative recoil


  return Math.max(recoil, 0);
}

exports.getRecoil = getRecoil;
const regenRegex = /Core Regeneration \((\d*)\)/; // Gets the core regen value for a bot, otherwise 0

function getRegen(bot) {
  const traits = bot.traits;

  for (let i = 0; i < traits.length; i++) {
    const result = regenRegex.exec(traits[i]);

    if (result != null) {
      return parseInt(result[1]);
    }
  }

  return 0;
}

exports.getRegen = getRegen; // Gets the volley time given an array of ranged weapons

function getRangedVolleyTime(weapons, cyclerModifier) {
  let volleyTime;

  if (weapons.length in exports.volleyTimeMap) {
    volleyTime = exports.volleyTimeMap[weapons.length];
  } else {
    // No additional penalty past 6 weapons
    volleyTime = 400;
  }

  weapons.forEach(weapon => {
    var _a; // Apply individual delays


    volleyTime += (_a = weapon.delay) !== null && _a !== void 0 ? _a : 0;
  });
  volleyTime *= cyclerModifier; // Min time is capped at 25

  return Math.trunc(Math.max(25, volleyTime));
}

exports.getRangedVolleyTime = getRangedVolleyTime; // Tries to get a bot's first shielding for a specific slot
// Parts will be removed from the array if their integrity has dropped below 0

function getShieldingType(botState, slot) {
  return getDefensiveStatePart(botState.defensiveState.shieldings[slot]);
}

const simulationEndConditions = {
  Kill: function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100;
  },
  "Kill or Core Disrupt": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.coreDisrupted;
  },
  "Kill or No Power": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.parts.every(part => part.def.slot != "Power");
  },
  "Kill or No Weapons": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.parts.every(part => part.def.slot != "Weapon");
  },
  "Kill or No TNC": function (botState) {
    return botState.coreIntegrity <= 0 || botState.corruption >= 100 || botState.parts.every(part => part.def.name != "Transport Network Coupler");
  },
  "Architect Tele (80% integrity, 1 weapon, or 1 prop)": function (botState) {
    return botState.coreIntegrity <= botState.initialCoreIntegrity * 0.8 || botState.parts.filter(part => part.def.slot === "Weapon").length === 1 || botState.parts.filter(part => part.def.slot === "Propulsion").length === 1;
  }
}; // Fully simulates rounds of combat to a kill a bot from an initial state

function simulateCombat(state) {
  // Clone initial bot state
  const botState = cloneBotState(state.initialBotState);
  state.botState = botState;
  const offensiveState = state.offensiveState;
  let volleys = 0;
  let oldTus = 0;
  state.tus = 0; // Update initial accuracy

  updateWeaponsAccuracy(state);
  const endCondition = simulationEndConditions[state.endCondition]; // Update initial sneak attack state

  offensiveState.sneakAttack = offensiveState.sneakAttackStrategy === "All" || offensiveState.sneakAttackStrategy === "First Only"; // Update initial momentum

  offensiveState.momentum.current = offensiveState.momentum.bonus + offensiveState.momentum.initial;

  while (!endCondition(botState)) {
    // Apply core regen
    const lastCompletedTurns = Math.trunc(oldTus / 100);
    const newCompletedTurns = Math.trunc(state.tus / 100);
    const regenIntegrity = botState.regen * (newCompletedTurns - lastCompletedTurns);
    botState.coreIntegrity = Math.min(botState.initialCoreIntegrity, botState.coreIntegrity + regenIntegrity); // Process each volley

    volleys += 1;
    let volleyTime = offensiveState.volleyTime;

    if (offensiveState.melee) {
      // Always do primary attack
      simulateWeapon(state, state.weapons[0]); // Handle followups chances

      for (let i = 1; i < state.weapons.length; i++) {
        if (common_1.randomInt(0, 99) < offensiveState.followupChances[i - 1]) {
          simulateWeapon(state, state.weapons[i]); // Add followup delay, 50% of normal

          volleyTime += 0.5 * state.weapons[i].delay;
        }
      } // Apply volley modifier (actuators) here since the total time
      // can't be known ahead of time


      volleyTime *= offensiveState.volleyTimeModifier;

      if (volleys === 1) {
        // Disable sneak attack if active only for the first turn
        if (offensiveState.sneakAttackStrategy === "First Only") {
          offensiveState.sneakAttack = false;
        } // Remove initial momentum


        offensiveState.momentum.current = offensiveState.momentum.bonus;
      }
    } else {
      state.weapons.forEach(weapon => simulateWeapon(state, weapon));
    }

    if (volleys >= exports.maxVolleys) {
      // Exceeded max volleys and combat will likely never complete
      // Just bail here
      return false;
    }

    if (offensiveState.ramming) {
      // Ramming is always the slower of 100 TUs or the movement speed time
      volleyTime = Math.max(100, offensiveState.speed);
    } // Update TUs and time based changes


    oldTus = state.tus;
    state.tus += volleyTime; // Update accuracy when crossing siege mode activation

    if (!offensiveState.melee && oldTus < offensiveState.siegeBonus.tus && state.tus > offensiveState.siegeBonus.tus) {
      updateWeaponsAccuracy(state);
    }
  } // Update kill dictionaries


  if (volleys in state.killVolleys) {
    state.killVolleys[volleys] += 1;
  } else {
    state.killVolleys[volleys] = 1;
  }

  if (state.tus in state.killTus) {
    state.killTus[state.tus] += 1;
  } else {
    state.killTus[state.tus] = 1;
  }

  return true;
}

exports.simulateCombat = simulateCombat; // Simulates 1 weapon's damage in a volley

function simulateWeapon(state, weapon) {
  const botState = state.botState;
  const offensiveState = state.offensiveState;

  if (offensiveState.ramming) {
    // Apply ramming damage specially
    const speedPercent = 100 / state.offensiveState.speed * 100;
    let damageMax = ((10 + weapon.def.mass) / 5 + 1) * (speedPercent / 100) * Math.max(state.offensiveState.momentum.current, 1);
    damageMax = Math.min(100, damageMax);
    let damage = common_1.randomInt(0, damageMax);
    damage = calculateResistDamage(botState, damage, itemTypes_1.DamageType.Impact);

    if (damage > 0) {
      applyDamage(state, botState, damage, undefined, false, false, weapon.disruption, weapon.spectrum, weapon.overflow, itemTypes_1.DamageType.Impact);
    }

    return;
  }

  for (let i = 0; i < weapon.numProjectiles; i++) {
    // Check if the attack was a sneak attack or was a hit.
    // Technically sneak attacks can miss, but not under any realistic
    // scenario I could find. Sneak attacks force a base accuracy of 120%,
    // seemingly overriding other penalties like size or defensive
    // utilities like Reaction Control Systems. The most it seems to
    // take into account is -targeting, the lowest of which
    // (CR-A16's Pointy Stick) only has -20%, making this always a
    // guaranteed hit.
    let hit = offensiveState.melee && offensiveState.sneakAttack || common_1.randomInt(0, 99) < weapon.accuracy;

    if (hit && weapon.isMissile) {
      // Check for an antimissile intercept
      const part = getDefensiveStatePart(botState.defensiveState.antimissile);

      if (part != undefined) {
        const intercept = part.chance; // Check once per tile
        // Note: even though the utilities have a range of 3 there are
        // still 4 attempts at an intercept because the projectile can
        // be intercepted on the same tile as the bot is currently on
        // before the damage is applied.
        // See below, @ is cogmind, i is intercept bot,
        // . is empty space, and x is intercept roll
        // @ . . . i
        // @ x . . i
        // @ . x . i
        // @ . . x i
        // @ . . . x

        const numChanges = Math.min(4, offensiveState.distance);

        for (let i = 0; i < numChanges; i++) {
          if (common_1.randomInt(0, 99) < intercept) {
            hit = false;
            break;
          }
        }
      }
    }

    if (!hit) {
      continue;
    }

    if (weapon.damageType != undefined) {
      // Calculate base damage, then apply overloads, momentum,
      // and sneak attacks (2)
      let damage = common_1.randomInt(weapon.damageMin, weapon.damageMax); // Apply overload damage doubling + additional bonus

      if (weapon.overloaded) {
        damage = Math.trunc(damage * (2 + offensiveState.overloadBonus));
      } // Apply momentum bonus
      // ([momentum] * [speed%] / 1200) * 40)


      if (offensiveState.melee && offensiveState.momentum.current > 0) {
        const speedPercent = 100 / offensiveState.speed * 100;
        let momentumMultiplier = offensiveState.momentum.current * speedPercent / 1200 * 40; // Cap at 1-40

        momentumMultiplier = Math.trunc(momentumMultiplier);
        momentumMultiplier = Math.max(1, momentumMultiplier);
        momentumMultiplier = Math.min(40, momentumMultiplier);

        if (weapon.damageType === itemTypes_1.DamageType.Piercing) {
          // Piercing gets double bonus (not double cap)
          momentumMultiplier *= 2;
        }

        momentumMultiplier = momentumMultiplier / 100 + 1;
        damage = Math.trunc(momentumMultiplier * damage);
      } // Apply double damage sneak attack bonus


      if (offensiveState.melee && offensiveState.sneakAttack) {
        damage *= 2;
      } // Add analysis (3)


      if (offensiveState.analysis) {
        damage = Math.trunc(1.1 * damage);
      } // Add accelerator (5)


      if (weapon.accelerated) {
        damage = Math.trunc(offensiveState.chargerBonus * damage);
      } // Apply resistances (6)


      damage = calculateResistDamage(botState, damage, weapon.damageType); // Check for armor integrity analyzer

      const armorAnalyzed = common_1.randomInt(0, 99) < offensiveState.armorAnalyzerChance; // Check for core analyzer (8)

      const coreAnalyzed = common_1.randomInt(0, 99) < offensiveState.coreAnalyzerChance; // Check for crit (9)

      const didCritical = common_1.randomInt(0, 99) < weapon.criticalChance;

      if (damage > 0) {
        applyDamage(state, botState, damage, didCritical ? weapon.criticalType : undefined, armorAnalyzed, coreAnalyzed, weapon.disruption, weapon.spectrum, weapon.overflow, weapon.damageType);
      }
    }

    if (weapon.explosionType != undefined) {
      // Apply explosion damage (2)
      let damage = common_1.randomInt(weapon.explosionMin, weapon.explosionMax); // Apply resistances (6)

      damage = calculateResistDamage(botState, damage, weapon.explosionType);

      if (damage > 0) {
        applyDamage(state, botState, damage, undefined, false, false, weapon.disruption, weapon.explosionSpectrum, weapon.overflow, weapon.explosionType);
      }
    }
  }
} // Converts a spectrum value to a numeric value


function spectrumToNumber(spectrum) {
  if (spectrum === undefined) {
    return 0;
  }

  return spectrumMap[spectrum];
}

exports.spectrumToNumber = spectrumToNumber; // Updates all calculated weapon accuracies

function updateWeaponsAccuracy(state) {
  const offensiveState = state.offensiveState;
  const botState = state.botState;
  let perWeaponBonus = 0; // Flying/hovering enemy penalty
  // TODO handle bots becoming overweight

  const botDef = botState.def;
  const movement = botDef.movement;

  if (movement.includes("Hovering") || movement.includes("Flying")) {
    perWeaponBonus -= 10;
  } // Subtract always avoid util (reaction control system)


  const avoidPart = getDefensiveStatePart(botState.defensiveState.avoid);

  if (avoidPart != undefined) {
    if (movement.includes("Walking")) {
      perWeaponBonus -= avoidPart.legs;
    } else {
      // TODO - doesn't matter now but should make sure hover/flight is active here
      perWeaponBonus -= avoidPart.other;
    }
  }

  if (offensiveState.analysis) {
    perWeaponBonus += 5;
  }

  let siegeBonus = 0;

  if (offensiveState.melee) {
    // Add melee analysis bonuses
    for (let i = 0; i < meleeAnalysisAccuracy.length; i++) {
      perWeaponBonus += offensiveState.meleeAnalysis[i] * meleeAnalysisAccuracy[i];
    } // Subtract force booster penalty
    // Earlier code ensures that there are at most 2 boosters enabled in the array


    let numBoostersProcessed = 0;

    for (let i = offensiveState.forceBoosters.length - 1; i >= 0; i--) {
      if (offensiveState.forceBoosters[i] == 2) {
        perWeaponBonus -= 1.5 * forceBoosterAccuracyPenalty[i];
        numBoostersProcessed += 2;
      } else if (offensiveState.forceBoosters[i] == 1) {
        perWeaponBonus -= forceBoosterAccuracyPenalty[i] * numBoostersProcessed == 0 ? 1 : 0.5;
        numBoostersProcessed += 1;
      }
    }
  } else {
    // Add (low) distance bonus
    perWeaponBonus += offensiveState.distance < 6 ? (6 - offensiveState.distance) * 3 : 0; // Add siege bonus

    const siege = offensiveState.siegeBonus;

    if (state.tus >= siege.tus) {
      siegeBonus = siege.bonus;
    }

    perWeaponBonus += siegeBonus; // Subtract ranged avoid util (phase shifter)

    const rangedAvoidPart = getDefensiveStatePart(botState.defensiveState.rangedAvoid);

    if (rangedAvoidPart != undefined) {
      perWeaponBonus -= rangedAvoidPart.avoid;
    }
  }

  state.weapons.forEach(weapon => {
    if (weapon.def.waypoints !== undefined) {
      // Guided weapons always have 100% accuracy
      weapon.accuracy = 100;
      return;
    }

    let accuracy = weapon.baseAccuracy + perWeaponBonus;

    if (!offensiveState.melee && siegeBonus === 0) {
      // Subtract recoil if siege mode inactive
      accuracy -= offensiveState.recoil - getRecoil(weapon.def, offensiveState.numTreads, offensiveState.recoilReduction);
    } // Cap accuracy


    const max = offensiveState.melee ? maxMeleeAccuracy : maxRangedAccuracy;
    weapon.accuracy = Math.min(max, Math.max(accuracy, minAccuracy));
  });
}
},{"./botTypes":"ts/botTypes.ts","./common":"ts/common.ts","./itemTypes":"ts/itemTypes.ts"}],"ts/build.ts":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function () {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);

  __setModuleDefault(result, mod);

  return result;
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

const items = __importStar(require("../json/items.json"));

const common_1 = require("./common");

const commonJquery_1 = require("./commonJquery");

const itemTypes_1 = require("./itemTypes");

const jQuery = __importStar(require("jquery"));

require("bootstrap");

require("bootstrap-select");

require("lz-string");

const simulatorCalcs_1 = require("./simulatorCalcs");

const LZString = require("lz-string");

const jq = jQuery.noConflict();
jq(function ($) {
  $(() => init());
  const percentageColorLookup = {
    Default: "#162416",
    EnergyConsumption: "#000073",
    EnergyGen: "#004a4a",
    HeatDissipation: "#5b5b00",
    HeatGen: "#633200",
    MassSupport: "#5b5b00",
    Mass: "#493e2e",
    Vulnerability: "#d90000"
  };
  let partsState;
  let initialPageState;
  const partTypes = [{
    labelId: "powerLabel",
    id: "powerContainer",
    slot: "Power"
  }, {
    labelId: "propulsionLabel",
    id: "propulsionContainer",
    slot: "Propulsion"
  }, {
    labelId: "utilityLabel",
    id: "utilityContainer",
    slot: "Utility"
  }, {
    labelId: "weaponLabel",
    id: "weaponContainer",
    slot: "Weapon"
  }];
  const defaultParts = [[{
    name: "Ion Engine"
  }], [{
    name: "Aluminum Leg",
    number: 2
  }], [{
    name: "Sml. Storage Unit"
  }], [{
    name: "Assault Rifle"
  }, {
    name: "Med. Laser"
  }]];

  function addPartSelect(section, initialSelection) {
    const container = $("#" + section.id);
    const spoilersState = commonJquery_1.getSpoilersState(); // Get list of valid names

    const partNames = [];
    Object.keys(common_1.itemData).forEach(name => {
      const baseItem = common_1.itemData[name]; // Slot check

      if (baseItem.slot !== section.slot) {
        return;
      }

      if (!common_1.canShowPart(baseItem, spoilersState)) {
        return;
      }

      partNames.push(baseItem.name);
    }); // Sort and create options

    partNames.sort(common_1.gallerySort);
    const partOptions = partNames.map(w => `<option>${w}</option>`).join();
    const row = $('<div class="row mt-1 align-items-center"></div>');
    const partPickerColumn = $('<div class="col"></div>');
    const partPickerContainer = $('<div class="input-group"></div>');
    const infoColumn = $('<div class="col-3"></div>');
    const select = $(`<select class="selectpicker" data-live-search="true">${partOptions}</select>`);
    const helpButton = $('<button class="btn part-help-btn" data-html=true data-toggle="popover">?</button>');
    const numberLabelContainer = $('<div class="input-group-prepend ml-3" data-toggle="tooltip" title="How many of the part to equip"></div>');
    const numberLabel = $('<span class="input-group-text">Number</span>');
    const numberInput = $('<input type="text" class="form-control" placeholder="1"></input>');
    const activeContainer = $('<div class="btn-group btn-group-toggle ml-2" data-toggle="buttons"></div>');
    const activeLabelContainer = $('<div class="input-group-prepend" data-toggle="tooltip" title="Whether the part is active."></div>');
    const activeLabel = $('<span class="input-group-text">Active</span>');
    const yesLabel = $('<label class="btn"><input type="radio" name="options">Yes</input></label>');
    const noLabel = $('<label class="btn"><input type="radio" name="options">No</input></label>');
    const deleteButton = $('<button class="btn ml-2" data-toggle="tooltip" title="Removes the part.">X</button>'); // Add elements to DOM

    container.append(row[0]);
    row.append(partPickerColumn[0]);
    row.append(infoColumn[0]);
    partPickerColumn.append(partPickerContainer[0]);
    partPickerContainer.append(select[0]);
    partPickerContainer.append(helpButton[0]);
    partPickerContainer.append(numberLabelContainer[0]);
    numberLabelContainer.append(numberLabel[0]);
    partPickerContainer.append(numberInput[0]);
    partPickerContainer.append(activeContainer[0]);
    activeContainer.append(activeLabelContainer[0]);
    activeLabelContainer.append(activeLabel[0]);
    activeContainer.append(yesLabel[0]);
    activeContainer.append(noLabel[0]);
    partPickerContainer.append(deleteButton[0]);
    commonJquery_1.resetButtonGroup(activeContainer); // Add handlers

    deleteButton.on("click", () => {
      // Ensure the last dropdown is always empty
      if (row.next().length === 0) {
        addPartSelect(section, "");
      } // Remove the associated item


      select.selectpicker("destroy");
      deleteButton.tooltip("dispose");
      row.remove();
      updateAll();
    });
    activeContainer.find("input").on("change", () => {
      updateAll();
    });
    numberInput.on("input", () => {
      updateAll();
    });
    select.selectpicker("val", initialSelection);

    const updateContent = partName => {
      let part;

      if (partName in common_1.itemData) {
        part = common_1.itemData[partName];
        helpButton.attr("data-content", common_1.createItemDataContent(part));
        helpButton.popover();
        updateAll();
      }
    };

    updateContent(initialSelection); // Update content when the weapon selection changes

    select.on("changed.bs.select", () => {
      if (row.next().length === 0) {
        addPartSelect(section, "");
      }

      updateContent(select.selectpicker("val"));
    });
    select.parent().addClass("part-dropdown"); // Enable tooltips

    deleteButton.tooltip(); // Minor hack, the btn-light class is auto-added to dropdowns with search
    // but it doesn't really fit with everything else

    partPickerContainer.find(".btn-light").removeClass("btn-light");
  } // Appends a percentage bar to the specified element


  function addPercentageBar(selector, value, percentage, color) {
    addPercentageBarWithString(selector, value, percentage, percentage.toFixed(1) + "%", color);
  } // Appends a percentage bar to the specified element


  function addPercentageBarWithString(selector, value, percentage, percentageString, color) {
    const valueText = Number.isInteger(value) ? value.toString() : value.toFixed(1);
    const percentageText = value === 0 ? value : `${valueText} ${percentageString}`;
    const container = $('<div class="percentage-bar-container"></div>');
    const span = $(`<span class="percentage-bar-text ml-1">${percentageText}</span>`);
    const percentageBar = $(`<div class="percentage-bar-inner"></div>`);
    percentageBar.css("background-color", percentageColorLookup[color]);
    const percentageWidth = percentage > 100 ? "100.0" : percentage;
    percentageBar.width(`${percentageWidth}%`);
    container.append(span[0]);
    container.append(percentageBar[0]);
    selector.append(container[0]);
  } // Gets the current depth, enforcing range limits


  function getDepth() {
    const depth = Math.abs(common_1.parseIntOrDefault($("#depthInput").val(), 10));
    return Math.max(1, Math.min(10, depth));
  }

  function getTopTwoValues(values) {
    values = values.sort((a, b) => b - a).splice(0, 2);
    return [values[0] === undefined ? 0 : values[0], values[1] === undefined ? 0 : values[1]];
  }

  const idToInfoTypeMap = {
    partInfoCoverage: "Coverage",
    partInfoEnergyPerMove: "Energy/Move",
    partInfoEnergyPerTurn: "Energy/Turn",
    partInfoEnergyPerVolley: "Energy/Volley",
    partInfoHeatPerMove: "Heat/Move",
    partInfoHeatPerTurn: "Heat/Turn",
    partInfoHeatPerVolley: "Heat/Volley",
    partInfoIntegrity: "Integrity",
    partInfoMass: "Mass",
    partInfoVulnerability: "Vulnerability"
  }; // Gets the currently selected part info type

  function getInfoType() {
    let buttonId = commonJquery_1.getSelectedButtonId($("#infoTypeContainer"));

    if (buttonId === undefined || buttonId == "") {
      // Reset group if nothing is selected
      commonJquery_1.resetButtonGroup($("#infoTypeContainer"));
      buttonId = commonJquery_1.getSelectedButtonId($("#infoTypeContainer"));
    }

    return idToInfoTypeMap[buttonId];
  } // Gets a link to the build page with the parts encoded in the URL


  function getLinkAndCopy() {
    // Get the definitions of all parts
    const parts = [];
    partTypes.map(p => p.id).forEach(id => {
      const typeArray = [];
      $("#" + id).find(".input-group").each((_, element) => {
        const selector = $(element); // Check if the part is active and the number if defined

        const active = selector.find("label:first").hasClass("active");
        const number = Math.max(1, common_1.parseIntOrDefault(selector.children("input").val(), 1)); // Try to get the selected part

        const partName = selector.find("select").selectpicker("val");

        if (partName in common_1.itemData) {
          typeArray.push({
            active: active ? undefined : false,
            number: number === 1 ? undefined : number,
            name: partName
          });
        }
      });
      parts.push(typeArray);
    }); // Reinstate for beta 12
    // const b11 = $("#beta11Checkbox").prop("checked");

    const depth = $("#depthInput").val();
    const energyGen = $("#energyGenInput").val();
    const heatDissipation = $("#heatDissipationInput").val();
    const state = {
      b11: false,
      depth: common_1.parseIntOrDefault(depth, undefined),
      energyGen: common_1.parseIntOrDefault(energyGen, undefined),
      heatDissipation: common_1.parseIntOrDefault(heatDissipation, undefined),
      parts: parts
    };
    const partsString = JSON.stringify(state);
    const encodedString = LZString.compressToEncodedURIComponent(partsString);
    const url = window.location.origin + window.location.pathname + "#" + encodedString;
    navigator.clipboard.writeText(url);
  } // Initialize the page state


  function init() {
    commonJquery_1.createHeader("Build", $("#headerContainer"));
    commonJquery_1.registerDisableAutocomplete($(document));
    commonJquery_1.resetButtonGroup($("#infoTypeContainer"));
    loadStateFromHash();
    initFromState(); // Add handlers

    $("#spoilersDropdown > button").on("click", e => {
      const state = $(e.target).text();
      $("#spoilers").text(state);
      commonJquery_1.setSpoilersState(state);
      $("#spoilersDropdown > button").tooltip("hide");
      resetValues(defaultParts);
    });
    $("#reset").on("click", () => {
      $("#reset").tooltip("hide");
      resetValues(defaultParts);
    });
    $("#depthInput").on("input", updateAll);
    $("#energyGenInput").on("input", updateAll);
    $("#heatDissipationInput").on("input", updateAll);
    $("#infoTypeContainer > label > input").on("change", e => {
      // Tooltips on buttons need to be explicitly hidden on press
      $(e.target).parent().tooltip("hide");
      updateAllPartInfo();
    });
    $("#getLink").on("click", e => {
      getLinkAndCopy();
      const selector = $(e.target);
      selector.tooltip("hide"); // Set the text to copied temporarily

      selector.text("Copied");
      setTimeout(() => selector.text("Copy Build Link"), 2000);
    }); // Reinstate for beta 12
    // $("#beta11Checkbox").on("change", () => {
    //     const isB11 = $("#beta11Checkbox").prop("checked");
    //     setB11State(isB11);
    //     const newItems = items;
    //     initData(newItems as { [key: string]: JsonItem }, undefined);
    //     // Initialize page state
    //     resetValues(defaultParts);
    //     ($("#beta11Checkbox").parent() as any).tooltip("hide");
    // });

    $(window).on("click", e => {
      // If clicking outside of a popover close the current one
      const targetPopover = $(e.target).parents(".popover").length != 0;

      if (targetPopover) {
        $(e.target).trigger("blur");
      } else if (!targetPopover && $(".popover").length >= 1) {
        $('[data-toggle="popover"]').not(e.target).popover("hide");
      }
    });
    $(window).on("hashchange", () => {
      loadStateFromHash();
      resetPartSelects(initialPageState.parts);
    }); // Enable tooltips/popovers

    $('[data-toggle="tooltip"]').tooltip();
  } // Initialize overall page state from the initial page state


  function initFromState() {
    $("#beta11Checkbox").prop("checked", initialPageState.b11); // Reinstate for beta 12
    // const itemsToLoad = $("#beta11Checkbox").prop("checked") ? itemsB11 : items;

    const itemsToLoad = items;
    common_1.initData(itemsToLoad, undefined);
    initializePartsSelects();
    resetValues(initialPageState.parts, initialPageState.depth, initialPageState.energyGen, initialPageState.heatDissipation); // Set non-part inputs

    if (initialPageState.depth !== undefined) {
      $("#depthInput").val(initialPageState.depth);
    }

    if (initialPageState.energyGen !== undefined) {
      $("#energyGenInput").val(initialPageState.energyGen);
    }

    if (initialPageState.heatDissipation !== undefined) {
      $("#heatDissipationInput").val(initialPageState.heatDissipation);
    }
  } // Adds the initial empty part selects for each type


  function initializePartsSelects() {
    partTypes.forEach(type => {
      addPartSelect(type, "");
    });
  } // Loads the initial page state from the hash, using defaults if there is none


  function loadStateFromHash() {
    const hash = window.location.hash.substring(1);
    initialPageState = {
      b11: false,
      parts: defaultParts
    };

    if (hash.length === 0) {
      // No parts specified, use the defaults
      return;
    }

    const decodedString = LZString.decompressFromEncodedURIComponent(hash);

    if (decodedString === null) {
      // Failed to decode, use the defaults
      return;
    }

    const state = JSON.parse(decodedString);

    if (state === undefined || state.b11 === undefined || state.parts === undefined) {
      // Failed to decode, use the defaults
      return;
    } else {
      initialPageState = state;
    }
  } // Resets all part selects to their default values


  function resetPartSelects(defaults) {
    partTypes.forEach((type, i) => {
      const container = $("#" + type.id); // Remove old options by pressing each delete button

      container.find(".input-group > button:last-child").trigger("click");
      defaults[i].forEach((defaultPart, i) => {
        var _a, _b; // Set up the default parts and number


        container.find("select:last").selectpicker("val", defaultPart.name);
        container.children(`div:eq(${i})`).find(".form-control:last").val((_b = (_a = defaultPart.number) === null || _a === void 0 ? void 0 : _a.toString()) !== null && _b !== void 0 ? _b : "");

        if (defaultPart.active == false) {
          commonJquery_1.setActiveButtonGroupButton(container.find(`.btn-group-toggle:eq(${i})`), 2);
        }
      });
    });
  } // Resets all values on the page


  function resetValues(defaults, depth, energyGen, heatDissipation) {
    if (depth !== undefined) {
      $("#depthInput").val(depth);
    }

    if (energyGen !== undefined) {
      $("#energyGenInput").val(energyGen);
    }

    if (heatDissipation !== undefined) {
      $("#heatDissipationInput").val(heatDissipation);
    }

    resetPartSelects(defaults);
  } // Updates all calculated part info, then updates individual part info rows


  function updateAll() {
    updatePartsState();
    updateAllPartInfo();
    updateSummary();
  } // Updates the extra part info for all parts


  function updateAllPartInfo() {
    let index = 0;
    partTypes.map(p => p.id).forEach(id => {
      $("#" + id).children("div").each((_, element) => {
        const selector = $(element);
        const partName = selector.find("select").selectpicker("val");

        if (partName in common_1.itemData) {
          updatePartInfo(selector.children("div:last"), partsState.partsInfo[index]);
          index += 1;
        }
      });
    });
    partTypes.forEach(partType => {
      const slotCount = partsState.slotsPerType.get(partType.slot);
      $("#" + partType.labelId).text(`${partType.slot} x${slotCount}`);
    });
    updateCoreInfo();
  } // Updates the core info


  function updateCoreInfo() {
    const infoType = getInfoType();
    const infoContainer = $("#coreInfoContainer");
    infoContainer.empty();

    switch (infoType) {
      case "Coverage":
        addPercentageBar(infoContainer, 100, 10000 / partsState.totalCoverage, "Default");
        break;

      case "Energy/Move":
        {
          const energy = partsState.coreInfo.energyPerMove;
          const energyPercent = energy * 100 / partsState.totalEnergyGenPerMove;
          addPercentageBar(infoContainer, energy, energyPercent, "EnergyGen");
          break;
        }

      case "Energy/Turn":
        {
          const energy = partsState.coreInfo.energyPerTurn;
          const energyPercent = energy * 100 / partsState.totalEnergyGenPerTurn;
          addPercentageBar(infoContainer, energy, energyPercent, "EnergyGen");
          break;
        }

      case "Energy/Volley":
        {
          const energy = partsState.coreInfo.energyPerVolley;
          const energyPercent = energy * 100 / partsState.totalEnergyGenPerVolley;
          addPercentageBar(infoContainer, energy, energyPercent, "EnergyGen");
          break;
        }

      case "Heat/Move":
        {
          const heat = partsState.coreInfo.heatPerMove;
          const heatPercent = -heat * 100 / partsState.totalHeatDissipationPerMove;
          addPercentageBar(infoContainer, heat, heatPercent, "HeatDissipation");
          break;
        }

      case "Heat/Turn":
        {
          const heat = partsState.coreInfo.heatPerTurn;
          const heatPercent = -heat * 100 / partsState.totalHeatDissipationPerTurn;
          addPercentageBar(infoContainer, heat, heatPercent, "HeatDissipation");
          break;
        }

      case "Heat/Volley":
        {
          const heat = partsState.coreInfo.heatPerVolley;
          const heatPercent = -heat * 100 / partsState.totalHeatDissipationPerVolley;
          addPercentageBar(infoContainer, heat, heatPercent, "HeatDissipation");
          break;
        }

      case "Integrity":
        const integrity = partsState.coreInfo.integrity;
        const integrityPercent = integrity * 100 / partsState.totalIntegrity;
        addPercentageBar(infoContainer, integrity, integrityPercent, "Default");
        break;

      case "Mass":
        const support = partsState.coreInfo.mass;
        const supportPercent = -support * 100 / partsState.totalSupport;
        addPercentageBar(infoContainer, support, supportPercent, "MassSupport");
        break;

      case "Vulnerability":
        const vulnerability = partsState.coreInfo.vulnerability;
        const diffFromMin = vulnerability - partsState.highestVulnerability;
        const minMaxDiff = partsState.lowestVulnerability - partsState.highestVulnerability;
        const percentage = minMaxDiff === 0 ? 100.0 : 100.0 * (1.0 - diffFromMin / minMaxDiff);
        addPercentageBarWithString(infoContainer, Math.ceil(vulnerability), percentage, "", "Vulnerability");
        break;

      default:
        common_1.assertUnreachable(infoType);
    }
  } // Updates the additional part info based on the chosen info type


  function updatePartInfo(infoColumn, partInfo) {
    infoColumn.empty();
    const infoType = getInfoType();

    switch (infoType) {
      case "Coverage":
        {
          // Add coverage info and percentage bar
          const coverage = partInfo.coverage;
          const coveragePercent = coverage * 100 / partsState.totalCoverage;
          addPercentageBar(infoColumn, coverage, coveragePercent, "Default");
          break;
        }

      case "Energy/Move":
        {
          // Add energy/move info and percentage bar
          const energy = partInfo.energyPerMove;
          let energyPercent = 0;
          let color = "Default";

          if (energy > 0) {
            energyPercent = energy * 100 / partsState.totalEnergyGenPerMove;
            color = "EnergyGen";
          } else if (energy < 0) {
            energyPercent = -energy * 100 / partsState.totalEnergyUsePerMove;
            color = "EnergyConsumption";
          }

          addPercentageBar(infoColumn, energy, energyPercent, color);
          break;
        }

      case "Energy/Turn":
        {
          // Add energy/turn info and percentage bar
          const energy = partInfo.energyPerTurn;
          let energyPercent = 0;
          let color = "Default";

          if (energy > 0) {
            energyPercent = energy * 100 / partsState.totalEnergyGenPerTurn;
            color = "EnergyGen";
          } else if (energy < 0) {
            energyPercent = -energy * 100 / partsState.totalEnergyUsePerTurn;
            color = "EnergyConsumption";
          }

          addPercentageBar(infoColumn, energy, energyPercent, color);
          break;
        }

      case "Energy/Volley":
        {
          // Add energy/volley info and percentage bar
          const energy = partInfo.energyPerVolley;
          let energyPercent = 0;
          let color = "Default";

          if (energy > 0) {
            energyPercent = energy * 100 / partsState.totalEnergyGenPerVolley;
            color = "EnergyGen";
          } else if (energy < 0) {
            energyPercent = -energy * 100 / partsState.totalEnergyUsePerVolley;
            color = "EnergyConsumption";
          }

          addPercentageBar(infoColumn, energy, energyPercent, color);
          break;
        }

      case "Heat/Move":
        {
          // Add heat/move info and percentage bar
          const heat = partInfo.heatPerMove;
          let heatPercent = 0;
          let color;

          if (heat > 0) {
            heatPercent = heat * 100 / partsState.totalHeatGenPerMove;
            color = "HeatGen";
          } else {
            heatPercent = -heat * 100 / partsState.totalHeatDissipationPerMove;
            color = "HeatDissipation";
          }

          addPercentageBar(infoColumn, heat, heatPercent, color);
          break;
        }

      case "Heat/Turn":
        {
          // Add heat/turn info and percentage bar
          const heat = partInfo.heatPerTurn;
          let heatPercent = 0;
          let color;

          if (heat > 0) {
            heatPercent = heat * 100 / partsState.totalHeatGenPerTurn;
            color = "HeatGen";
          } else {
            heatPercent = -heat * 100 / partsState.totalHeatDissipationPerTurn;
            color = "HeatDissipation";
          }

          addPercentageBar(infoColumn, heat, heatPercent, color);
          break;
        }

      case "Heat/Volley":
        {
          // Add heat/volley info and percentage bar
          const heat = partInfo.heatPerVolley;
          let heatPercent = 0;
          let color;

          if (heat > 0) {
            heatPercent = heat * 100 / partsState.totalHeatGenPerVolley;
            color = "HeatGen";
          } else {
            heatPercent = -heat * 100 / partsState.totalHeatDissipationPerVolley;
            color = "HeatDissipation";
          }

          addPercentageBar(infoColumn, heat, heatPercent, color);
          break;
        }

      case "Integrity":
        {
          // Add integrity info and percentage bar
          const integrity = partInfo.integrity;
          const integrityPercent = integrity * 100 / partsState.totalIntegrity;
          addPercentageBar(infoColumn, integrity, integrityPercent, "Default");
          break;
        }

      case "Mass":
        {
          // Add mass info and percentage bar
          // If we're a propulsion item then show negative mass for support and the total support percent
          const mass = partInfo.mass;
          let massPercent = 0;
          let color;

          if (mass > 0) {
            massPercent = mass * 100 / partsState.totalMass;
            color = "Mass";
          } else {
            massPercent = -mass * 100 / partsState.totalSupport;
            color = "MassSupport";
          }

          addPercentageBar(infoColumn, mass, massPercent, color);
          break;
        }

      case "Vulnerability":
        const vulnerability = partInfo.vulnerability;
        const diffFromMin = vulnerability - partsState.highestVulnerability;
        const minMaxDiff = partsState.lowestVulnerability - partsState.highestVulnerability;
        const percentage = minMaxDiff === 0 ? 100.0 : 100.0 * (1.0 - diffFromMin / minMaxDiff);
        addPercentageBarWithString(infoColumn, Math.ceil(vulnerability), percentage, "", "Vulnerability");
        break;

      default:
        common_1.assertUnreachable(infoType);
    }
  } // Recalculates the total parts state based on all current items


  function updatePartsState() {
    var _a;

    function sum(a, b) {
      return a + b;
    }

    function getEnergyPerMove(p, powerAmplifierBonus, tusPerMove) {
      var _a;

      if (!p.active) {
        return 0;
      } // Return positive value for energy gen, negative for consumption


      if (p.part.slot === "Propulsion") {
        const energyPerTurn = getEnergyPerTurn(p, powerAmplifierBonus);
        return common_1.getValuePerTus(energyPerTurn, tusPerMove) - ((_a = p.part.energyPerMove) !== null && _a !== void 0 ? _a : 0);
      } else {
        return common_1.getValuePerTus(getEnergyPerTurn(p, powerAmplifierBonus), tusPerMove);
      }
    }

    function getEnergyPerTurn(p, powerAmplifierBonus) {
      var _a, _b; // Return positive value for energy gen, negative for consumption


      if (p.active && p.part.slot === "Power") {
        // Multiply only power-slot energy generation by the power amplifier bonus
        return ((_a = p.part.energyGeneration) !== null && _a !== void 0 ? _a : 0) * powerAmplifierBonus;
      } else if (common_1.hasActiveSpecialProperty(p.part, p.abilityActive, "FusionCompressor")) {
        // Fusion compressors convert matter to energy
        return p.part.specialProperty.trait.energyPerTurn;
      } else if (p.active && p.part.slot === "Propulsion" || p.part.slot === "Utility") {
        return -((_b = p.part.energyUpkeep) !== null && _b !== void 0 ? _b : 0);
      } else if (common_1.hasActiveSpecialProperty(p.part, p.abilityActive, "WeaponRegen")) {
        // Weapon regen ability turns energy into weapon integrity
        return -p.part.specialProperty.trait.energyPerTurn;
      }

      return 0;
    }

    function getEnergyPerVolley(p, energyFilterPercent, powerAmplifierBonus, tusPerVolley) {
      var _a;

      if (!p.active) {
        return 0;
      } // Return positive value for energy gen, negative for consumption


      if (p.part.slot === "Weapon") {
        return -((_a = p.part.shotEnergy) !== null && _a !== void 0 ? _a : 0) * energyFilterPercent;
      } else {
        return common_1.getValuePerTus(getEnergyPerTurn(p, powerAmplifierBonus), tusPerVolley);
      }
    }

    function getHeatPerMove(p, tusPerMove) {
      var _a; // Return negative value for heat dissipation, positive for generation


      if (p.active && p.part.slot === "Propulsion") {
        return common_1.getValuePerTus(getHeatPerTurn(p), tusPerMove) + ((_a = p.part.heatPerMove) !== null && _a !== void 0 ? _a : 0);
      } else {
        return common_1.getValuePerTus(getHeatPerTurn(p), tusPerMove);
      }
    }

    function getHeatPerTurn(p) {
      var _a; // Return negative value for heat dissipation, positive for generation


      if (common_1.hasActiveSpecialProperty(p.part, p.active, "HeatDissipation")) {
        return -p.part.specialProperty.trait.dissipation;
      } else if (p.active && (p.part.slot === "Power" || p.part.slot === "Propulsion" || p.part.slot === "Utility")) {
        return (_a = p.part.heatGeneration) !== null && _a !== void 0 ? _a : 0;
      }

      return 0;
    }

    function getHeatPerVolley(p, tusPerVolley) {
      var _a;

      if (!p.active) {
        return 0;
      } // Return negative values for heat dissipation, positive for generation


      if (p.part.slot === "Weapon") {
        return (_a = p.part.shotHeat) !== null && _a !== void 0 ? _a : 0;
      } else {
        return common_1.getValuePerTus(getHeatPerTurn(p), tusPerVolley);
      }
    }

    function getMass(p) {
      var _a; // Return negative value for support, positive for mass used


      if (p.active && p.part.slot === "Propulsion") {
        return -p.part.support;
      } else if (common_1.hasActiveSpecialProperty(p.part, p.active, "MassSupport")) {
        return -p.part.specialProperty.trait.support;
      } else {
        return (_a = p.part.mass) !== null && _a !== void 0 ? _a : 0;
      }
    }

    function getVulnerability(p, totalCoverage) {
      if (p.part.coverage === undefined) {
        return 0;
      }

      const multiplier = 1 / (p.part.coverage / totalCoverage);
      return multiplier * p.part.integrity;
    } // Get the definitions of all parts


    const parts = [];
    partTypes.map(p => p.id).forEach(id => {
      $("#" + id).find(".input-group").each((_, element) => {
        const selector = $(element); // Check if the part is active

        const active = selector.find("label:first").hasClass("active");
        const number = Math.max(1, common_1.parseIntOrDefault(selector.children("input").val(), 1)); // Try to get the selected part

        const partName = selector.find("select").selectpicker("val");

        if (partName in common_1.itemData) {
          parts.push({
            abilityActive: active,
            active: active,
            number: number,
            part: common_1.itemData[partName]
          });
        }
      });
    }); // Calculate propulsion-related stats

    const firstProp = parts.find(p => p.active && p.part.slot === "Propulsion");
    let propulsionType;
    let totalSupport;
    const totalMass = parts.map(p => {
      var _a;

      return ((_a = p.part.mass) !== null && _a !== void 0 ? _a : 0) * p.number;
    }).reduce(sum, 0);

    if (firstProp !== undefined) {
      propulsionType = firstProp.part.type;
    }

    const activeProp = [];
    parts.filter(p => p.active && p.part.type === propulsionType).forEach(p => {
      for (let i = 0; i < p.number; i++) {
        activeProp.push(p.part);
      }
    });
    activeProp.sort((a, b) => {
      var _a, _b;

      return ((_a = a.modPerExtra) !== null && _a !== void 0 ? _a : 0) - ((_b = b.modPerExtra) !== null && _b !== void 0 ? _b : 0);
    });

    if (activeProp.length === 0) {
      // Core hover has 3 support
      totalSupport = 3;
    } else {
      // Sum support of all active prop
      totalSupport = activeProp.map(p => p.support).reduce(sum, 0);
    } // Add mass support utils


    totalSupport += parts.filter(p => common_1.hasActiveSpecialProperty(p.part, p.active, "MassSupport")).map(p => p.part.specialProperty.trait.support).reduce(sum, 0); // Set irrelevant prop types to inactive

    parts.forEach(p => {
      if (p.part.slot === "Propulsion" && !activeProp.includes(p.part)) {
        p.active = false;
      }
    });
    let tusPerMove;
    let overweightPenalty;

    if (activeProp.length === 0) {
      // If no active prop then use core hover speed initially...
      tusPerMove = 50;
      overweightPenalty = 50;
    } else {
      // First calculate the average speed of all parts...
      tusPerMove = Math.trunc(activeProp.map(p => p.timePerMove).reduce(sum, 0) / activeProp.length); // Then calculate average penalty of all parts...

      overweightPenalty = Math.trunc(activeProp.map(p => p.penalty).reduce(sum, 0) / activeProp.length); // Then apply per/move mods...

      tusPerMove += activeProp.filter((_, i) => i !== 0).map(p => {
        var _a;

        return (_a = p.modPerExtra) !== null && _a !== void 0 ? _a : 0;
      }).reduce(sum, 0); // Then apply overload mods...
      // TODO
    } // Then apply speed doubling like metafield before penalties...


    if (parts.find(p => common_1.hasActiveSpecialProperty(p.part, p.active, "AirborneSpeedDoubling")) !== undefined && (activeProp.length === 0 || activeProp[0].type === itemTypes_1.ItemType.HoverUnit || activeProp[0].type === itemTypes_1.ItemType.FlightUnit)) {
      tusPerMove /= 2;
    } // Then apply overweight penalties...


    tusPerMove += Math.trunc(Math.max(0, totalMass - 1) / totalSupport) * overweightPenalty; // Then apply drag penalties if airborne...

    if (propulsionType === itemTypes_1.ItemType.FlightUnit || propulsionType === itemTypes_1.ItemType.HoverUnit) {
      tusPerMove += parts.filter(p => p.part.slot === "Propulsion").map(p => {
        var _a;

        return (_a = p.part.drag) !== null && _a !== void 0 ? _a : 0;
      }).reduce(sum, 0);
    } // Also apply a cap of 20 for hover or 10 for flight


    if (propulsionType === itemTypes_1.ItemType.FlightUnit) {
      tusPerMove = Math.max(tusPerMove, 10);
    } else if (propulsionType === itemTypes_1.ItemType.HoverUnit) {
      tusPerMove = Math.max(tusPerMove, 10);
    } // Apply metafiber after penalties


    if (parts.find(p => common_1.hasActiveSpecialProperty(p.part, p.active, "Metafiber")) !== undefined && activeProp.length > 0 && activeProp[0].type === itemTypes_1.ItemType.Leg) {
      tusPerMove *= 0.8;
    } // Calculate weapon-related stats


    const firstWeapon = parts.find(p => p.active && p.part.slot === "Weapon");
    const isMelee = firstWeapon !== undefined && common_1.isPartMelee(firstWeapon.part); // Set irrelevant weapon types to inactive

    const activeWeapons = [];
    parts.forEach(p => {
      if (p.part.slot !== "Weapon") {
        return;
      }

      if (isMelee && !common_1.isPartMelee(p.part) || !isMelee && common_1.isPartMelee(p.part)) {
        p.active = false;
      } else if (p.active) {
        for (let i = 0; i < p.number; i++) {
          activeWeapons.push(p.part);

          if (isMelee) {
            break;
          }
        }
      }
    });
    let tusPerVolley;

    if (isMelee) {
      // Assumes that all actuators stack up to 50%
      const actuatorParts = parts.filter(p => common_1.hasActiveSpecialProperty(p.part, p.active, "Actuator"));
      let actuatorModifier = 0;
      actuatorParts.forEach(p => actuatorModifier += p.part.specialProperty.trait.amount * p.number);
      actuatorModifier = 1 - Math.min(0.5, actuatorModifier);
      tusPerVolley = actuatorModifier * (((_a = activeWeapons[0].delay) !== null && _a !== void 0 ? _a : 0) + simulatorCalcs_1.volleyTimeMap[1]);
    } else {
      const cyclerParts = parts.filter(p => common_1.hasActiveSpecialProperty(p.part, p.active, "RangedWeaponCycling"));
      let cyclerModifier = 0; // Semi-hacky, assumes that 50% cyclers are no-stack and all others stack up to 30%

      if (cyclerParts.find(p => p.part.specialProperty.trait.amount === 50) !== undefined) {
        cyclerModifier = 0.5;
      } else {
        let cycleModifier = 0;
        cyclerParts.forEach(p => cycleModifier += p.part.specialProperty.trait.amount);
        cycleModifier = 1 - Math.min(0.5, cycleModifier);
      }

      tusPerVolley = simulatorCalcs_1.getRangedVolleyTime(activeWeapons, cyclerModifier);
    }

    const depth = getDepth();
    const innateEnergyGen = common_1.parseIntOrDefault($("#energyGenInput").val(), 0);
    const innateHeatDissipation = common_1.parseIntOrDefault($("#heatDissipationInput").val(), 0); // Core is additional 100 coverage

    const totalCoverage = parts.map(p => {
      var _a;

      return ((_a = p.part.coverage) !== null && _a !== void 0 ? _a : 0) * p.number;
    }).reduce(sum, 0) + 100; // Calculate core info

    const coreInfo = {
      coverage: 100,
      energyPerMove: activeProp.length > 0 ? common_1.getValuePerTus(5, tusPerMove) : common_1.getValuePerTus(5, tusPerMove) - 1,
      energyPerTurn: 5,
      energyPerVolley: activeProp.length > 0 ? common_1.getValuePerTus(5, tusPerVolley) : common_1.getValuePerTus(5, tusPerVolley) - 1,
      heatPerMove: -common_1.getValuePerTus(55 - 3 * depth + innateHeatDissipation, tusPerMove),
      heatPerTurn: -(55 - 3 * depth + innateHeatDissipation),
      heatPerVolley: -common_1.getValuePerTus(55 - 3 * depth + innateHeatDissipation, tusPerVolley),
      integrity: 1750 - 150 * depth,
      mass: activeProp.length > 0 ? 0 : -3,
      size: 0,
      slot: "N/A",
      vulnerability: totalCoverage / 100 * (1750 - 150 * depth)
    }; // Get energy bonuses

    let powerAmplifierBonus = 1;
    parts.forEach(p => {
      if (common_1.hasActiveSpecialProperty(p.part, p.active, "PowerAmplifier")) {
        powerAmplifierBonus += p.part.specialProperty.trait.percent * p.number;
      }
    });
    const filterValues = [];
    parts.forEach(p => {
      if (common_1.hasActiveSpecialProperty(p.part, p.active, "EnergyFilter")) {
        for (let i = 0; i < p.number; i++) {
          filterValues.push(p.part.specialProperty.trait.percent);
        }
      }
    });
    const [topFilter, secondFilter] = getTopTwoValues(filterValues);
    const energyFilterPercent = 1 - (topFilter + 0.5 * secondFilter); // Calculate info for each part

    const partsInfo = parts.map(p => {
      var _a;

      let activeMultiplierNumber = p.number;

      if (isMelee && common_1.isPartMelee(p.part) && p.active) {
        // In case multiple melee weapons are selected, only count the first
        activeMultiplierNumber = 1;
      }

      return {
        coverage: ((_a = p.part.coverage) !== null && _a !== void 0 ? _a : 0) * p.number,
        energyPerMove: getEnergyPerMove(p, powerAmplifierBonus, tusPerMove) * activeMultiplierNumber,
        energyPerTurn: getEnergyPerTurn(p, powerAmplifierBonus) * activeMultiplierNumber,
        energyPerVolley: getEnergyPerVolley(p, energyFilterPercent, powerAmplifierBonus, tusPerVolley) * activeMultiplierNumber,
        heatPerMove: getHeatPerMove(p, tusPerMove) * activeMultiplierNumber,
        heatPerTurn: getHeatPerTurn(p) * activeMultiplierNumber,
        heatPerVolley: getHeatPerVolley(p, tusPerVolley) * activeMultiplierNumber,
        integrity: p.part.integrity * p.number,
        mass: getMass(p) * p.number,
        slot: p.part.slot,
        size: p.part.size * p.number,
        vulnerability: getVulnerability(p, totalCoverage)
      };
    }); // Calculate totals

    const allPartInfo = partsInfo.concat(coreInfo);
    const totalEnergyGenPerTurn = innateEnergyGen + allPartInfo.map(p => p.energyPerTurn > 0 ? p.energyPerTurn : 0).reduce(sum, 0);
    const totalEnergyUsePerTurn = allPartInfo.map(p => p.energyPerTurn < 0 ? -p.energyPerTurn : 0).reduce(sum, 0);
    const totalHeatDissipationPerTurn = allPartInfo.map(p => p.heatPerTurn < 0 ? -p.heatPerTurn : 0).reduce(sum, 0);
    const totalHeatGenPerTurn = allPartInfo.map(p => p.heatPerTurn > 0 ? p.heatPerTurn : 0).reduce(sum, 0);
    const totalIntegrity = allPartInfo.map(p => p.integrity).reduce(sum, 0);
    let energyPerMove = activeProp.map(p => {
      var _a;

      return (_a = p.energyPerMove) !== null && _a !== void 0 ? _a : 0;
    }).reduce(sum, 0);

    if (energyPerMove === 0) {
      // Core hover has 1 energy per move cost
      energyPerMove = 1;
    }

    const heatPerMove = activeProp.map(p => {
      var _a;

      return (_a = p.heatPerMove) !== null && _a !== void 0 ? _a : 0;
    }).reduce(sum, 0);
    const totalEnergyGenPerMove = common_1.getValuePerTus(totalEnergyGenPerTurn, tusPerMove);
    const totalEnergyUsePerMove = common_1.getValuePerTus(totalEnergyUsePerTurn, tusPerMove) + energyPerMove;
    const totalHeatDissipationPerMove = common_1.getValuePerTus(totalHeatDissipationPerTurn, tusPerMove);
    const totalHeatGenPerMove = common_1.getValuePerTus(totalHeatGenPerTurn, tusPerMove) + heatPerMove;
    const energyPerVolley = activeWeapons.map(p => {
      var _a;

      return ((_a = p.shotEnergy) !== null && _a !== void 0 ? _a : 0) * energyFilterPercent;
    }).reduce(sum, 0);
    const heatPerVolley = activeWeapons.map(p => {
      var _a;

      return (_a = p.shotHeat) !== null && _a !== void 0 ? _a : 0;
    }).reduce(sum, 0);
    const totalEnergyGenPerVolley = common_1.getValuePerTus(totalEnergyGenPerTurn, tusPerVolley);
    const totalEnergyUsePerVolley = common_1.getValuePerTus(totalEnergyUsePerTurn, tusPerVolley) + energyPerVolley;
    const totalHeatDissipationPerVolley = common_1.getValuePerTus(totalHeatDissipationPerTurn, tusPerVolley);
    const totalHeatGenPerVolley = common_1.getValuePerTus(totalHeatGenPerTurn, tusPerVolley) + heatPerVolley;
    const vulnerabilities = allPartInfo.map(p => p.vulnerability).filter(v => v !== 0);
    const lowestVulnerability = Math.max(...vulnerabilities, coreInfo.vulnerability) / 0.9;
    const highestVulnerability = Math.min(...vulnerabilities, coreInfo.vulnerability) * 0.9;
    const energyStorage = 100 + parts.map(p => {
      var _a;

      if (common_1.hasActiveSpecialProperty(p.part, p.active, "EnergyStorage")) {
        return p.part.specialProperty.trait.storage;
      } else if (p.active && p.part.slot === "Power") {
        return (_a = p.part.energyStorage) !== null && _a !== void 0 ? _a : 0;
      } else {
        return 0;
      }
    }).reduce(sum, 0);
    const slotsPerType = new Map([["N/A", 0], ["Power", 0], ["Propulsion", 0], ["Utility", 0], ["Weapon", 0]]);
    allPartInfo.forEach(p => {
      slotsPerType.set(p.slot, slotsPerType.get(p.slot) + p.size);
    });
    partsState = {
      activePropulsionType: propulsionType,
      coreInfo: coreInfo,
      isMelee: isMelee,
      partsInfo: partsInfo,
      energyStorage: energyStorage,
      energyUsePerMove: energyPerMove,
      energyUsePerVolley: energyPerVolley,
      heatGenPerMove: heatPerMove,
      heatGenPerVolley: heatPerVolley,
      lowestVulnerability: lowestVulnerability,
      highestVulnerability: highestVulnerability,
      slotsPerType: slotsPerType,
      totalCoverage: totalCoverage,
      totalEnergyGenPerMove: totalEnergyGenPerMove,
      totalEnergyGenPerTurn: totalEnergyGenPerTurn,
      totalEnergyGenPerVolley: totalEnergyGenPerVolley,
      totalEnergyUsePerMove: totalEnergyUsePerMove,
      totalEnergyUsePerTurn: totalEnergyUsePerTurn,
      totalEnergyUsePerVolley: totalEnergyUsePerVolley,
      totalHeatDissipationPerMove: totalHeatDissipationPerMove,
      totalHeatDissipationPerTurn: totalHeatDissipationPerTurn,
      totalHeatDissipationPerVolley: totalHeatDissipationPerVolley,
      totalHeatGenPerTurn: totalHeatGenPerTurn,
      totalHeatGenPerMove: totalHeatGenPerMove,
      totalHeatGenPerVolley: totalHeatGenPerVolley,
      totalIntegrity: totalIntegrity,
      totalMass: totalMass,
      totalSupport: totalSupport,
      tusPerMove: tusPerMove,
      tusPerVolley: tusPerVolley
    };
  } // Updates all of the summary information based on the current state


  function updateSummary() {
    const summaryContainer = $("#summaryContainer");

    function addInfo(name, value, description) {
      if (typeof value === "number" && !Number.isInteger(value)) {
        // If a number then round to 10ths place
        value = value.toFixed(1);
      }

      const newElement = $(`<div class="input-group-prepend mr-1 mt-1" data-toggle="tooltip"
                title="${description}">
                <span class="input-group-text">${name}: ${value}</span>
            </div>`);
      summaryContainer.append(newElement[0]);
      newElement.tooltip();
    } // Remove old summary items


    summaryContainer.children().tooltip("dispose");
    summaryContainer.empty();
    const overweightText = partsState.totalSupport >= partsState.totalMass ? "" : " 0x" + Math.trunc(partsState.totalMass / partsState.totalSupport);
    addInfo("Support", `${partsState.totalMass}/${partsState.totalSupport}${overweightText}`, "Total mass / total support, including overweight multiplier if applicable.");
    addInfo("Movement", `${common_1.getMovementText(partsState.activePropulsionType)} (${partsState.tusPerMove})`, "Movement type and speed.");
    addInfo("Total Integrity", partsState.totalIntegrity, "Total integrity of all parts and core.");
    addInfo("Total Coverage", partsState.totalCoverage, "Total coverage of all parts and core.");
    addInfo("Energy Storage", partsState.energyStorage, "Total energy storage of all equipped parts");
    addInfo("Net Energy/Turn", partsState.totalEnergyGenPerTurn - partsState.totalEnergyUsePerTurn, "The amount of energy gained (or lost) per turn by waiting.");
    addInfo("Net Heat/Turn", partsState.totalHeatGenPerTurn - partsState.totalHeatDissipationPerTurn, "The amount of heat gained (or lost) per turn by waiting.");
    addInfo("Net Energy/Move", partsState.totalEnergyGenPerMove - partsState.totalEnergyUsePerMove, "The amount of energy gained (or lost) per single tile move.");
    addInfo("Net Heat/Move", partsState.totalHeatGenPerMove - partsState.totalHeatDissipationPerMove, "The amount of heat gained (or lost) per single tile move.");
    addInfo("Volley Time", partsState.tusPerVolley, "The amount of TUs per volley. For melee this assumes no followups.");
    addInfo("Net Energy/Volley", partsState.totalEnergyGenPerVolley - partsState.totalEnergyUsePerVolley, "The amount of energy gained (or lost) per full volley. For melee this assumes no followups.");
    addInfo("Net Heat/Volley", partsState.totalHeatGenPerVolley - partsState.totalHeatDissipationPerVolley, "The amount of heat gained (or lost) per full volley. For melee this assumes no followups.");
  }
});
},{"../json/items.json":"json/items.json","./common":"ts/common.ts","./commonJquery":"ts/commonJquery.ts","./itemTypes":"ts/itemTypes.ts","jquery":"../node_modules/jquery/dist/jquery.js","bootstrap":"../node_modules/bootstrap/dist/js/bootstrap.js","bootstrap-select":"../node_modules/bootstrap-select/dist/js/bootstrap-select.js","lz-string":"../node_modules/lz-string/libs/lz-string.js","./simulatorCalcs":"ts/simulatorCalcs.ts"}],"../node_modules/parcel-bundler/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "36551" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else if (location.reload) {
        // `location` global exists in a web worker context but lacks `.reload()` function.
        location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../node_modules/parcel-bundler/src/builtins/hmr-runtime.js","ts/build.ts"], null)
//# sourceMappingURL=/build.b6b414fa.js.map